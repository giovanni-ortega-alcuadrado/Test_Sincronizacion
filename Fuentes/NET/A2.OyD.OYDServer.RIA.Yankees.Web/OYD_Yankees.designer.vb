'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYDPlus")>
Partial Public Class OYD_YankeesDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub DeletetblLiquidaciones_YANKEE(instance As OyDYankees.tblLiquidaciones_YANKEE)
    End Sub
    Partial Private Sub InsertLiquidaciones_Yankee_Admon(instance As OyDYankees.Liquidaciones_Yankee_Admon)
    End Sub
    Partial Private Sub UpdateLiquidaciones_Yankee_Admon(instance As OyDYankees.Liquidaciones_Yankee_Admon)
    End Sub
    Partial Private Sub DeleteLiquidaciones_Yankee_Admon(instance As OyDYankees.Liquidaciones_Yankee_Admon)
    End Sub
    Partial Private Sub DeleteFacturaYankees(instance As OyDYankees.FacturaYankees)
    End Sub
    Partial Private Sub DeleteNotasYankees(instance As OyDYankees.NotasYankees)
    End Sub
    Partial Private Sub DeleteNotasYankeesDetalle(instance As OyDYankees.NotasYankeesDetalle)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property tblLiquidaciones_YANKEEs() As System.Data.Linq.Table(Of OyDYankees.tblLiquidaciones_YANKEE)
        Get
            Return Me.GetTable(Of OyDYankees.tblLiquidaciones_YANKEE)
        End Get
    End Property

    Public ReadOnly Property tblDetalleLiquida_YANKEEs() As System.Data.Linq.Table(Of OyDYankees.tblDetalleLiquida_YANKEE)
        Get
            Return Me.GetTable(Of OyDYankees.tblDetalleLiquida_YANKEE)
        End Get
    End Property

    Public ReadOnly Property ReceptoresYankees() As System.Data.Linq.Table(Of OyDYankees.ReceptoresYankees)
        Get
            Return Me.GetTable(Of OyDYankees.ReceptoresYankees)
        End Get
    End Property

    Public ReadOnly Property Liquidaciones_Yankee_Admons() As System.Data.Linq.Table(Of OyDYankees.Liquidaciones_Yankee_Admon)
        Get
            Return Me.GetTable(Of OyDYankees.Liquidaciones_Yankee_Admon)
        End Get
    End Property

    Public ReadOnly Property FacturasYankees() As System.Data.Linq.Table(Of OyDYankees.FacturaYankees)
        Get
            Return Me.GetTable(Of OyDYankees.FacturaYankees)
        End Get
    End Property

    Public ReadOnly Property NotasYankees() As System.Data.Linq.Table(Of OyDYankees.NotasYankees)
        Get
            Return Me.GetTable(Of OyDYankees.NotasYankees)
        End Get
    End Property

    Public ReadOnly Property NotasYankeesDetalle() As System.Data.Linq.Table(Of OyDYankees.NotasYankeesDetalle)
        Get
            Return Me.GetTable(Of OyDYankees.NotasYankeesDetalle)
        End Get
    End Property

    Private Sub InserttblLiquidaciones_YANKEE(ByVal obj As OyDYankees.tblLiquidaciones_YANKEE)
        Dim p1 As System.Nullable(Of Integer) = obj.IDY
        Dim p2 As Integer = obj.IDLiquidaciones_Yankees
        Me.spInsLiquidacionYankees_OyDNet(p1, CType(obj.dtmRegistro, System.Nullable(Of Date)), obj.strTipoOperacion, CType(obj.dtmCumplimiento, System.Nullable(Of Date)), obj.strPrefijo, CType(obj.lngIDFactura, System.Nullable(Of Integer)), obj.strFacturada, obj.strIDEspecie, obj.strIsin, CType(obj.dtmEmision, System.Nullable(Of Date)), CType(obj.dtmVencimiento, System.Nullable(Of Date)), obj.strModalidadTitulo, CType(obj.dblTasaCupon, System.Nullable(Of Double)), CType(obj.dblPrecioLimpio, System.Nullable(Of Double)), CType(obj.dblAcumuladoInteres, System.Nullable(Of Double)), CType(obj.dblPrecioSucio, System.Nullable(Of Double)), CType(obj.dblValorNominal, System.Nullable(Of Double)), CType(obj.dblValorTotal, System.Nullable(Of Double)), CType(obj.dblTasaConversion, System.Nullable(Of Double)), CType(obj.dblValorUSD, System.Nullable(Of Double)), CType(obj.dblTasaSpot, System.Nullable(Of Double)), CType(obj.dblValorPesos, System.Nullable(Of Double)), CType(obj.dblComision, System.Nullable(Of Double)), obj.strTipoCliente, obj.lngIDClienteExterno, obj.lngIDComitente, obj.lngIDOrdenante, CType(obj.lngIDCertcus, System.Nullable(Of Integer)), CType(obj.lngIDNroCustodia, System.Nullable(Of Integer)), obj.strInstruccion, obj.strCusip, obj.strEstado, CType(obj.dtmEstado, System.Nullable(Of Date)), obj.strUsuario, CType(obj.dblTir, System.Nullable(Of Double)), CType(obj.lngIDDepositoExtranjero, System.Nullable(Of Integer)), CType(obj.intDiasIntereses, System.Nullable(Of Integer)), CType(obj.dtmFechaUltPagoCupon, System.Nullable(Of Date)), CType(obj.dblValorIntAcumulados, System.Nullable(Of Double)), p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDY = p1.GetValueOrDefault
        obj.IDLiquidaciones_Yankees = p2
    End Sub

    Private Sub UpdatetblLiquidaciones_YANKEE(ByVal obj As OyDYankees.tblLiquidaciones_YANKEE)
        Dim p1 As System.Nullable(Of Integer) = obj.IDY
        Dim p2 As Integer = obj.IDLiquidaciones_Yankees
        Me.spInsLiquidacionYankees_OyDNet(p1, CType(obj.dtmRegistro, System.Nullable(Of Date)), obj.strTipoOperacion, CType(obj.dtmCumplimiento, System.Nullable(Of Date)), obj.strPrefijo, CType(obj.lngIDFactura, System.Nullable(Of Integer)), obj.strFacturada, obj.strIDEspecie, obj.strIsin, CType(obj.dtmEmision, System.Nullable(Of Date)), CType(obj.dtmVencimiento, System.Nullable(Of Date)), obj.strModalidadTitulo, CType(obj.dblTasaCupon, System.Nullable(Of Double)), CType(obj.dblPrecioLimpio, System.Nullable(Of Double)), CType(obj.dblAcumuladoInteres, System.Nullable(Of Double)), CType(obj.dblPrecioSucio, System.Nullable(Of Double)), CType(obj.dblValorNominal, System.Nullable(Of Double)), CType(obj.dblValorTotal, System.Nullable(Of Double)), CType(obj.dblTasaConversion, System.Nullable(Of Double)), CType(obj.dblValorUSD, System.Nullable(Of Double)), CType(obj.dblTasaSpot, System.Nullable(Of Double)), CType(obj.dblValorPesos, System.Nullable(Of Double)), CType(obj.dblComision, System.Nullable(Of Double)), obj.strTipoCliente, obj.lngIDClienteExterno, obj.lngIDComitente, obj.lngIDOrdenante, CType(obj.lngIDCertcus, System.Nullable(Of Integer)), CType(obj.lngIDNroCustodia, System.Nullable(Of Integer)), obj.strInstruccion, obj.strCusip, obj.strEstado, CType(obj.dtmEstado, System.Nullable(Of Date)), obj.strUsuario, CType(obj.dblTir, System.Nullable(Of Double)), CType(obj.lngIDDepositoExtranjero, System.Nullable(Of Integer)), CType(obj.intDiasIntereses, System.Nullable(Of Integer)), CType(obj.dtmFechaUltPagoCupon, System.Nullable(Of Date)), CType(obj.dblValorIntAcumulados, System.Nullable(Of Double)), p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDY = p1.GetValueOrDefault
        obj.IDLiquidaciones_Yankees = p2
    End Sub

    Private Sub InserttblDetalleLiquida_YANKEE(ByVal obj As OyDYankees.tblDetalleLiquida_YANKEE)
        Dim p1 As Integer = obj.IDDetalleLiquida_Yankees
        Me.spInsDetalleLiquidaYankees_OyDNet(CType(obj.lngIDSecuencia, System.Nullable(Of Integer)), CType(obj.IDY, System.Nullable(Of Integer)), CType(Nothing, System.Nullable(Of Date)), obj.strTipoOperacion, CType(Nothing, System.Nullable(Of Date)), obj.strPrefijo, CType(obj.lngIDFactura, System.Nullable(Of Integer)), obj.strFacturada, CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, String), CType(Nothing, System.Nullable(Of Double)), CType(obj.dblPrecioLimpio, System.Nullable(Of Double)), CType(Nothing, System.Nullable(Of Double)), CType(obj.dblPrecioSucio, System.Nullable(Of Double)), CType(obj.dblValorNominal, System.Nullable(Of Double)), CType(obj.dblValorTotal, System.Nullable(Of Double)), CType(obj.dblValorUSD, System.Nullable(Of Double)), CType(obj.dblTasaSpot, System.Nullable(Of Double)), CType(obj.dblValorPesos, System.Nullable(Of Double)), CType(obj.dblComision, System.Nullable(Of Double)), CType(obj.dblTIR, System.Nullable(Of Double)), obj.strTipoCliente, obj.lngIDClienteExterno, obj.lngIDComitente, obj.lngIDOrdenante, CType(obj.lngIDCertcus, System.Nullable(Of Integer)), CType(obj.logTrasladoComision, System.Nullable(Of Boolean)), CType(obj.dblTrasladoComision, System.Nullable(Of Double)), CType(Nothing, String), CType(Nothing, String), obj.strUsuario, CType(obj.lngIDDepositoExtranjero, System.Nullable(Of Integer)), CType(obj.dblTasaConversion, System.Nullable(Of Double)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), p1)
        obj.IDDetalleLiquida_Yankees = p1
    End Sub

    Private Sub UpdatetblDetalleLiquida_YANKEE(ByVal obj As OyDYankees.tblDetalleLiquida_YANKEE)
        Dim p1 As Integer = obj.IDDetalleLiquida_Yankees
        Me.spInsDetalleLiquidaYankees_OyDNet(CType(obj.lngIDSecuencia, System.Nullable(Of Integer)), CType(obj.IDY, System.Nullable(Of Integer)), CType(Nothing, System.Nullable(Of Date)), obj.strTipoOperacion, CType(Nothing, System.Nullable(Of Date)), obj.strPrefijo, CType(obj.lngIDFactura, System.Nullable(Of Integer)), obj.strFacturada, CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, String), CType(Nothing, System.Nullable(Of Double)), CType(obj.dblPrecioLimpio, System.Nullable(Of Double)), CType(Nothing, System.Nullable(Of Double)), CType(obj.dblPrecioSucio, System.Nullable(Of Double)), CType(obj.dblValorNominal, System.Nullable(Of Double)), CType(obj.dblValorTotal, System.Nullable(Of Double)), CType(obj.dblValorUSD, System.Nullable(Of Double)), CType(obj.dblTasaSpot, System.Nullable(Of Double)), CType(obj.dblValorPesos, System.Nullable(Of Double)), CType(obj.dblComision, System.Nullable(Of Double)), CType(obj.dblTIR, System.Nullable(Of Double)), obj.strTipoCliente, obj.lngIDClienteExterno, obj.lngIDComitente, obj.lngIDOrdenante, CType(obj.lngIDCertcus, System.Nullable(Of Integer)), CType(obj.logTrasladoComision, System.Nullable(Of Boolean)), CType(obj.dblTrasladoComision, System.Nullable(Of Double)), CType(Nothing, String), CType(Nothing, String), obj.strUsuario, CType(obj.lngIDDepositoExtranjero, System.Nullable(Of Integer)), CType(obj.dblTasaConversion, System.Nullable(Of Double)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), p1)
        obj.IDDetalleLiquida_Yankees = p1
    End Sub

    Private Sub DeletetblDetalleLiquida_YANKEE(ByVal obj As OyDYankees.tblDetalleLiquida_YANKEE)
        Me.uspOyDNet_Contraparte_Eliminar(obj.IDDetalleLiquida_Yankees, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertReceptoresYankees(ByVal obj As OyDYankees.ReceptoresYankees)
        Dim p1 As Integer = obj.IDReceptoresYankees
        Me.uspOyDNet_ReceptoresYankees_Actualizar(CType(obj.IDY, System.Nullable(Of Integer)), obj.IDReceptor, CType(obj.Lider, System.Nullable(Of Boolean)), CType(obj.Porcentaje, System.Nullable(Of Double)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDReceptoresYankees = p1
    End Sub

    Private Sub UpdateReceptoresYankees(ByVal obj As OyDYankees.ReceptoresYankees)
        Dim p1 As Integer = obj.IDReceptoresYankees
        Me.uspOyDNet_ReceptoresYankees_Actualizar(CType(obj.IDY, System.Nullable(Of Integer)), obj.IDReceptor, CType(obj.Lider, System.Nullable(Of Boolean)), CType(obj.Porcentaje, System.Nullable(Of Double)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDReceptoresYankees = p1
    End Sub

    Private Sub DeleteReceptoresYankees(ByVal obj As OyDYankees.ReceptoresYankees)
        Me.uspOyDNet_ReceptoresYankees_Eliminar(obj.IDReceptoresYankees, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertFacturaYankees(ByVal obj As OyDYankees.FacturaYankees)
        Dim p1 As Integer = obj.IDfacturasYankees
        Me.uspOyDNet_Maestros_FacturasYankees_Actualizar(obj.Prefijo, obj.Numero, obj.Comitente, CType(obj.Fecha_Documento, System.Nullable(Of Date)), obj.Estado, CType(obj.Fecha_Estado, System.Nullable(Of Date)), obj.Impresiones, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDfacturasYankees = p1
    End Sub

    Private Sub UpdateFacturaYankees(ByVal obj As OyDYankees.FacturaYankees)
        Dim p1 As Integer = obj.IDfacturasYankees
        Me.uspOyDNet_Maestros_FacturasYankees_Actualizar(obj.Prefijo, obj.Numero, obj.Comitente, CType(obj.Fecha_Documento, System.Nullable(Of Date)), obj.Estado, CType(obj.Fecha_Estado, System.Nullable(Of Date)), obj.Impresiones, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDfacturasYankees = p1
    End Sub

    Private Sub InsertNotasYankees(ByVal obj As OyDYankees.NotasYankees)
        Me.ActualizarNotas(CType(Nothing, String))
    End Sub

    Private Sub UpdateNotasYankees(ByVal obj As OyDYankees.NotasYankees)
        Me.ActualizarNotas(CType(Nothing, String))
    End Sub

    Private Sub InsertNotasYankeesDetalle(ByVal obj As OyDYankees.NotasYankeesDetalle)
        Me.ActualizarNotas(CType(Nothing, String))
    End Sub

    Private Sub UpdateNotasYankeesDetalle(ByVal obj As OyDYankees.NotasYankeesDetalle)
        Me.ActualizarNotas(CType(Nothing, String))
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spInsLiquidacionYankees_OyDNet")>
    Public Function spInsLiquidacionYankees_OyDNet(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef plngID As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmRegistro As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimiento As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal pstrPrefijo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDFactura As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrFacturada As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(12)")> ByVal pstrIsin As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrModalidadTitulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaCupon As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioLimpio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblAcumuladoInteres As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioSucio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorNominal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorTotal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaConversion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorUSD As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaSpot As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorPesos As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoCliente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDClienteExterno As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDOrdenante As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDCertcus As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDNroCustodia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal pstrInstruccion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrCusip As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEstado As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTir As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pDepositoExtranjero As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasIntereses As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaUltPagoCupon As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorIntAcumulados As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDLiquidaciones_Yankees As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pdtmRegistro, pstrTipoOperacion, pdtmCumplimiento, pstrPrefijo, plngIDFactura, pstrFacturada, pstrIDEspecie, pstrIsin, pdtmEmision, pdtmVencimiento, pstrModalidadTitulo, pdblTasaCupon, pdblPrecioLimpio, pdblAcumuladoInteres, pdblPrecioSucio, pdblValorNominal, pdblValorTotal, pdblTasaConversion, pdblValorUSD, pdblTasaSpot, pdblValorPesos, pdblComision, pstrTipoCliente, plngIDClienteExterno, plngIDComitente, plngIDOrdenante, plngIDCertcus, plngIDNroCustodia, pstrInstruccion, pstrCusip, pstrEstado, pdtmEstado, pstrUsuario, pdblTir, pDepositoExtranjero, pintDiasIntereses, pdtmFechaUltPagoCupon, pdblValorIntAcumulados, pintIDLiquidaciones_Yankees, infosesion, pintErrorPersonalizado)
        plngID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        pintIDLiquidaciones_Yankees = CType(result.GetParameterValue(39), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ConsultarLiquidacionesYankees")>
    Public Function uspOyDNet_ConsultarLiquidacionesYankees(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmRegistro As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.tblLiquidaciones_YANKEE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pdtmRegistro, pdtmCumplimiento, plngIDComitente, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.tblLiquidaciones_YANKEE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FiltrarLiquidacionesYankees")>
    Public Function uspOyDNet_FiltrarLiquidacionesYankees(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.tblLiquidaciones_YANKEE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.tblLiquidaciones_YANKEE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ConsultarLiquidacionesYankeesContraparte")>
    Public Function uspOyDNet_ConsultarLiquidacionesYankeesContraparte(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.tblDetalleLiquida_YANKEE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.tblDetalleLiquida_YANKEE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ReceptoresYankees_Actualizar")>
    Public Function uspOyDNet_ReceptoresYankees_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOperacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLider As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentaje As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDReceptoresYankees As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDOperacion, pstrIDReceptor, plogLider, pdblPorcentaje, pstrUsuario, pintIDReceptoresYankees, infosesion, pintErrorPersonalizado)
        pintIDReceptoresYankees = CType(result.GetParameterValue(5), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ReceptoresYankees_Eliminar")>
    Public Function uspOyDNet_ReceptoresYankees_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDReceptoresYankees As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDReceptoresYankees, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_LiquidacionesReceYankees")>
    Public Function uspOyDNet_LiquidacionesReceYankees(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOperacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.ReceptoresYankees)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDOperacion, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.ReceptoresYankees))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Usp_ConsBaseCalculoEspecies_LiquidacionesYankees_OyDNet")>
    Public Function Usp_ConsBaseCalculoEspecies_LiquidacionesYankees_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String) As ISingleResult(Of OyDYankees.Usp_ConsBaseCalculoEspecies_LiquidacionesYankees_OyDNetResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDEspecie)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.Usp_ConsBaseCalculoEspecies_LiquidacionesYankees_OyDNetResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesEnviarAdmon_OyDNet")>
    Public Function spLiquidacionesEnviarAdmon_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimientoInicia As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimientoFinal As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.Liquidaciones_Yankee_Admon)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmCumplimientoInicia, pdtmCumplimientoFinal, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.Liquidaciones_Yankee_Admon))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spInsCustodiasOyDNet")>
    Public Function spInsCustodiasOyDNet(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdRecibo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoIdentificacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Numeric")> ByVal plngNroDocumento As System.Nullable(Of Decimal),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNombre As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrTelefono1 As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrDireccion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmRecibo As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEstado As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrConceptoAnulacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal pstrNotas As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmActualizacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIdRecibo, plngIDComitente, pstrTipoIdentificacion, plngNroDocumento, pstrNombre, pstrTelefono1, pstrDireccion, pdtmRecibo, pstrEstado, pdtmEstado, pstrConceptoAnulacion, pstrNotas, pdtmActualizacion, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spInsDetalleLiquidaYankees_OyDNet")>
    Public Function spInsDetalleLiquidaYankees_OyDNet(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PlngIDSecuencia", DbType:="Int")> ByVal plngIDSecuencia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmRegistro As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimiento As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal pstrPrefijo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDFactura As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrFacturada As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(12)")> ByVal pstrIsin As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrModalidadTitulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaCupon As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioLimpio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblAcumuladoInteres As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioSucio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorNominal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorTotal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorUSD As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaSpot As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorPesos As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PdblTIR", DbType:="Float")> ByVal pdblTIR As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoCliente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDClienteExterno As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDOrdenante As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDCertcus As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PlogTrasladoComision", DbType:="Bit")> ByVal plogTrasladoComision As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PdblTrasladoComision", DbType:="Float")> ByVal pdblTrasladoComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal pstrInstruccion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngidDepositoExtranjero As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaConversion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDDetalleLiquida_Yankees As Integer) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDSecuencia, plngID, pdtmRegistro, pstrTipoOperacion, pdtmCumplimiento, pstrPrefijo, plngIDFactura, pstrFacturada, pstrIDEspecie, pstrIsin, pdtmEmision, pdtmVencimiento, pstrModalidadTitulo, pdblTasaCupon, pdblPrecioLimpio, pdblAcumuladoInteres, pdblPrecioSucio, pdblValorNominal, pdblValorTotal, pdblValorUSD, pdblTasaSpot, pdblValorPesos, pdblComision, pdblTIR, pstrTipoCliente, plngIDClienteExterno, plngIDComitente, plngIDOrdenante, plngIDCertcus, plogTrasladoComision, pdblTrasladoComision, pstrInstruccion, pstrEstado, pstrUsuario, plngidDepositoExtranjero, pdblTasaConversion, infosesion, pintErrorPersonalizado, pintIDDetalleLiquida_Yankees)
        pintIDDetalleLiquida_Yankees = CType(result.GetParameterValue(38), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Contraparte_Eliminar")>
    Public Function uspOyDNet_Contraparte_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDetalleLiquida_Yankees As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDDetalleLiquida_Yankees, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spInsDetalleCustodiasOyDNet")>
    Public Function spInsDetalleCustodiasOyDNet(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdRecibo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngSecuencia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrNroTitulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogRentaVariable As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIndicadorEconomico As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPuntosIndicador As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngDiasVencimiento As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrFondo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaInteres As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrNroRefFondo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmRetencion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaRetencion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorRetencion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcRendimiento As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdAgenteRetenedor As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstadoActual As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogObjVenta As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogObjCobroIntDiv As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogObjRenovReinv As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogObjSuscripcion As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogObjCancelacion As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNotas As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmActualizacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmSellado As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdCuentaDeceval As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(12)")> ByVal pstrISIN As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngFungible As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipoValor As System.Nullable(Of Char),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(120)")> ByVal pstrFechasPagoRendimientos As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDDepositoExtranjero As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDCustodio As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrTitularCustodio As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrReinversion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDLiquidacion As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal dtmLiquidacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurTotalLiq As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaCompraVende As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimientoTitulo As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaDescuento As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIdRecibo, plngSecuencia, plngIdComitente, pstrIdEspecie, pstrNroTitulo, plogRentaVariable, pstrIndicadorEconomico, pdblPuntosIndicador, plngDiasVencimiento, pstrModalidad, pdtmEmision, pdtmVencimiento, pdblCantidad, pstrFondo, pdblTasaInteres, pstrNroRefFondo, pdtmRetencion, pdblTasaRetencion, pdblValorRetencion, pdblPorcRendimiento, plngIdAgenteRetenedor, pstrEstadoActual, plogObjVenta, plogObjCobroIntDiv, plogObjRenovReinv, plogObjSuscripcion, plogObjCancelacion, pstrNotas, pdtmActualizacion, pstrUsuario, pdtmSellado, plngIdCuentaDeceval, pstrISIN, plngFungible, pstrTipoValor, pstrFechasPagoRendimientos, plngIDDepositoExtranjero, plngIDCustodio, pstrTitularCustodio, pstrReinversion, plngIDLiquidacion, plngParcial, pstrClase, pstrTipo, dtmLiquidacion, pcurTotalLiq, pdblTasaCompraVende, pdtmCumplimientoTitulo, pdblTasaDescuento, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.UspConfirmacionOperacion")>
    Public Function UspConfirmacionOperacion(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDInicial", DbType:="int")> ByVal lngIDInicial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDFinal", DbType:="int")> ByVal lngIDFinal As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaIni", DbType:="Datetime")> ByVal dtmFechaIni As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaFin", DbType:="Datetime")> ByVal dtmFechaFin As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(120000)")> ByRef pstrHTMLPlantillaYankees As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDInicial, lngIDFinal, dtmFechaIni, dtmFechaFin, pstrTipoOperacion, pstrUsuario, infosesion, pintErrorPersonalizado, pstrHTMLPlantillaYankees)
        pstrHTMLPlantillaYankees = CType(result.GetParameterValue(8), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Custodia_Beneficiario_Yankee")>
    Public Function uspOyDNet_Custodia_Beneficiario_Yankee(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSecuencia As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDNroCustodia As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComitente As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDSecuencia, plngIDNroCustodia, plngID, plngIDComitente, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_FacturasYankees_Actualizar")>
    Public Function uspOyDNet_Maestros_FacturasYankees_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmDocumento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEstado As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngImpresiones As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDfacturasYankees As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrPrefijo, plngID, plngIDComitente, pdtmDocumento, pstrEstado, pdtmEstado, plngImpresiones, pstrUsuario, pintIDfacturasYankees, infosesion, pintErrorPersonalizado)
        pintIDfacturasYankees = CType(result.GetParameterValue(8), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FacturasYankees_Consultar")>
    Public Function uspOyDNet_FacturasYankees_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmDocumento", DbType:="DateTime")> ByVal dtmDocumento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreComitente", DbType:="Varchar(50)")> ByVal strNombreComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.FacturaYankees)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngID, lngIDComitente, dtmDocumento, strNombreComitente, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.FacturaYankees))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FacturasYankees_Filtrar")>
    Public Function uspOyDNet_FacturasYankees_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.FacturaYankees)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.FacturaYankees))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Liquidaciones_FacturaYankees_Consultar")>
    Public Function uspOyDNet_Liquidaciones_FacturaYankees_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDFactura As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.tblLiquidaciones_YANKEE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDFactura, pstrPrefijo, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.tblLiquidaciones_YANKEE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FacturaYankees_TotalFactura")>
    Public Function uspOyDNet_FacturaYankees_TotalFactura(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDFactura As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal strPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef curTotalFactura As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDFactura, strPrefijo, curTotalFactura, infosesion, pintErrorPersonalizado)
        curTotalFactura = CType(result.GetParameterValue(2), System.Nullable(Of Double))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FacturasYankees_Eliminar")>
    Public Function uspOyDNet_FacturasYankees_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDfacturasYankees As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDfacturasYankees, lngID, pstrPrefijo, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CertificadoCustodiaYankees")>
    Public Function uspOyDNet_CertificadoCustodiaYankees(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDInicial", DbType:="int")> ByVal lngIDInicial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDFinal", DbType:="int")> ByVal lngIDFinal As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaIni", DbType:="Datetime")> ByVal dtmFechaIni As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaFin", DbType:="Datetime")> ByVal dtmFechaFin As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(120000)")> ByRef pstrHTMLPlantillaYankees As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDInicial, lngIDFinal, dtmFechaIni, dtmFechaFin, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrHTMLPlantillaYankees)
        pstrHTMLPlantillaYankees = CType(result.GetParameterValue(7), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NotasYankees_Filtrar")>
    Public Function uspOyDNet_NotasYankees_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.NotasYankees)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.NotasYankees))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NotasYankeesDetalle_Filtrar")>
    Public Function uspOyDNet_NotasYankeesDetalle_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT")> ByVal plngIDDocumento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.NotasYankeesDetalle)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNombreConsecutivo, plngIDDocumento, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.NotasYankeesDetalle))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NotasYankees_Actualizar")>
    Public Function uspOyDNet_NotasYankees_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDocumento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmDocumento As Date, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrOpcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrRegistros As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDDocumento, pstrNombreConsecutivo, pdtmDocumento, pstrEstado, pstrOpcion, pstrRegistros, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function ActualizarNotas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NotasYankees_Eliminar")>
    Public Function uspOyDNet_NotasYankees_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDocumento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDDocumento, pstrNombreConsecutivo, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NotasYankees_Consultar")>
    Public Function uspOyDNet_NotasYankees_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDocumento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmDocumento As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.NotasYankees)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDDocumento, pdtmDocumento, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.NotasYankees))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_TesoreriaYankees_VerificarEstadoImpresion")>
    Public Function uspOyDNet_TesoreriaYankees_VerificarEstadoImpresion(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDocumento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDDocumento, pstrNombreConsecutivo, pstrTipo, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_ReceptoresCliente_Consultar")>
    Public Function uspOyDNet_Ordenes_ReceptoresCliente_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDYankees.ReceptoresYankees)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClaseOrden, pstrTipoOrden, pstrIDComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDYankees.ReceptoresYankees))
    End Function
End Class

Namespace OyDYankees

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidaciones_YANKEES")>
    Partial Public Class tblLiquidaciones_YANKEE
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDY As Integer

        Private _strTipoOperacion As String

        Private _dtmRegistro As System.Nullable(Of Date)

        Private _dtmCumplimiento As System.Nullable(Of Date)

        Private _strPrefijo As String

        Private _lngIDFactura As System.Nullable(Of Integer)

        Private _strFacturada As String

        Private _strIDEspecie As String

        Private _strIsin As String

        Private _strCusip As String

        Private _dtmEmision As System.Nullable(Of Date)

        Private _dtmVencimiento As System.Nullable(Of Date)

        Private _strModalidadTitulo As String

        Private _dblTasaCupon As System.Nullable(Of Double)

        Private _dblPrecioLimpio As System.Nullable(Of Double)

        Private _dblAcumuladoInteres As System.Nullable(Of Double)

        Private _dblPrecioSucio As System.Nullable(Of Double)

        Private _dblValorNominal As System.Nullable(Of Double)

        Private _dblValorTotal As System.Nullable(Of Double)

        Private _dblTasaConversion As System.Nullable(Of Double)

        Private _dblValorUSD As System.Nullable(Of Double)

        Private _dblTasaSpot As System.Nullable(Of Double)

        Private _dblValorPesos As System.Nullable(Of Double)

        Private _dblComision As System.Nullable(Of Double)

        Private _dblTir As System.Nullable(Of Double)

        Private _strTipoCliente As String

        Private _lngIDClienteExterno As String

        Private _lngIDComitente As String

        Private _lngIDOrdenante As String

        Private _lngIDCertcus As System.Nullable(Of Integer)

        Private _lngIDNroCustodia As System.Nullable(Of Integer)

        Private _strInstruccion As String

        Private _strEstado As String

        Private _intNroLote As System.Nullable(Of Integer)

        Private _lngIDDepositoExtranjero As System.Nullable(Of Integer)

        Private _dtmActualizacion As System.Nullable(Of Date)

        Private _strUsuario As String

        Private _intDiasIntereses As System.Nullable(Of Integer)

        Private _dtmFechaUltPagoCupon As System.Nullable(Of Date)

        Private _dblValorIntAcumulados As System.Nullable(Of Double)

        Private _dtmEstado As System.Nullable(Of Date)

        Private _InfoSesion As String

        Private _IDLiquidaciones_Yankees As Integer

        Private _strVendedor As String

        Private _strClienteExterno As String

        Private _strNumeroCuenta As String

        Private _strNombreTitular As String

        Private _strOrdenante As String

        Private _strComitente As String

        Private _strNombreEspecie As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

        Private _tblDetalleLiquida_YANKEEs As EntitySet(Of tblDetalleLiquida_YANKEE)

        Private _ReceptoresYankees As EntitySet(Of ReceptoresYankees)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDYChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDYChanged()
        End Sub
        Partial Private Sub OnstrTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoOperacionChanged()
        End Sub
        Partial Private Sub OndtmRegistroChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmRegistroChanged()
        End Sub
        Partial Private Sub OndtmCumplimientoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmCumplimientoChanged()
        End Sub
        Partial Private Sub OnstrPrefijoChanging(value As String)
        End Sub
        Partial Private Sub OnstrPrefijoChanged()
        End Sub
        Partial Private Sub OnlngIDFacturaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDFacturaChanged()
        End Sub
        Partial Private Sub OnstrFacturadaChanging(value As String)
        End Sub
        Partial Private Sub OnstrFacturadaChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OnstrIsinChanging(value As String)
        End Sub
        Partial Private Sub OnstrIsinChanged()
        End Sub
        Partial Private Sub OnstrCusipChanging(value As String)
        End Sub
        Partial Private Sub OnstrCusipChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OnstrModalidadTituloChanging(value As String)
        End Sub
        Partial Private Sub OnstrModalidadTituloChanged()
        End Sub
        Partial Private Sub OndblTasaCuponChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaCuponChanged()
        End Sub
        Partial Private Sub OndblPrecioLimpioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPrecioLimpioChanged()
        End Sub
        Partial Private Sub OndblAcumuladoInteresChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblAcumuladoInteresChanged()
        End Sub
        Partial Private Sub OndblPrecioSucioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPrecioSucioChanged()
        End Sub
        Partial Private Sub OndblValorNominalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorNominalChanged()
        End Sub
        Partial Private Sub OndblValorTotalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorTotalChanged()
        End Sub
        Partial Private Sub OndblTasaConversionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaConversionChanged()
        End Sub
        Partial Private Sub OndblValorUSDChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorUSDChanged()
        End Sub
        Partial Private Sub OndblTasaSpotChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaSpotChanged()
        End Sub
        Partial Private Sub OndblValorPesosChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorPesosChanged()
        End Sub
        Partial Private Sub OndblComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblComisionChanged()
        End Sub
        Partial Private Sub OndblTirChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTirChanged()
        End Sub
        Partial Private Sub OnstrTipoClienteChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoClienteChanged()
        End Sub
        Partial Private Sub OnlngIDClienteExternoChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDClienteExternoChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnlngIDOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDOrdenanteChanged()
        End Sub
        Partial Private Sub OnlngIDCertcusChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDCertcusChanged()
        End Sub
        Partial Private Sub OnlngIDNroCustodiaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDNroCustodiaChanged()
        End Sub
        Partial Private Sub OnstrInstruccionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInstruccionChanged()
        End Sub
        Partial Private Sub OnstrEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoChanged()
        End Sub
        Partial Private Sub OnintNroLoteChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintNroLoteChanged()
        End Sub
        Partial Private Sub OnlngIDDepositoExtranjeroChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDDepositoExtranjeroChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnintDiasInteresesChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintDiasInteresesChanged()
        End Sub
        Partial Private Sub OndtmFechaUltPagoCuponChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmFechaUltPagoCuponChanged()
        End Sub
        Partial Private Sub OndblValorIntAcumuladosChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorIntAcumuladosChanged()
        End Sub
        Partial Private Sub OndtmEstadoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmEstadoChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnIDLiquidaciones_YankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDLiquidaciones_YankeesChanged()
        End Sub
        Partial Private Sub OnstrVendedorChanging(value As String)
        End Sub
        Partial Private Sub OnstrVendedorChanged()
        End Sub
        Partial Private Sub OnstrClienteExternoChanging(value As String)
        End Sub
        Partial Private Sub OnstrClienteExternoChanged()
        End Sub
        Partial Private Sub OnstrNumeroCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnstrNumeroCuentaChanged()
        End Sub
        Partial Private Sub OnstrNombreTitularChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreTitularChanged()
        End Sub
        Partial Private Sub OnstrOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnstrOrdenanteChanged()
        End Sub
        Partial Private Sub OnstrComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnstrComitenteChanged()
        End Sub
        Partial Private Sub OnstrNombreEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreEspecieChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            Me._tblDetalleLiquida_YANKEEs = New EntitySet(Of tblDetalleLiquida_YANKEE)(AddressOf Me.attach_tblDetalleLiquida_YANKEEs, AddressOf Me.detach_tblDetalleLiquida_YANKEEs)
            Me._ReceptoresYankees = New EntitySet(Of ReceptoresYankees)(AddressOf Me.attach_ReceptoresYankees, AddressOf Me.detach_ReceptoresYankees)
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDY", DbType:="Int NOT NULL")>
        Public Property IDY() As Integer
            Get
                Return Me._IDY
            End Get
            Set
                If ((Me._IDY = Value) _
                            = False) Then
                    Me.OnIDYChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDY = Value
                    Me.SendPropertyChanged("IDY")
                    Me.OnIDYChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoOperacion", DbType:="VarChar(1) NOT NULL")>
        Public Property strTipoOperacion() As String
            Get
                Return Me._strTipoOperacion
            End Get
            Set
                If (String.Equals(Me._strTipoOperacion, Value) = False) Then
                    Me.OnstrTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoOperacion = Value
                    Me.SendPropertyChanged("strTipoOperacion")
                    Me.OnstrTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmRegistro", DbType:="DateTime NOT NULL")>
        Public Property dtmRegistro() As System.Nullable(Of Date)
            Get
                Return Me._dtmRegistro
            End Get
            Set
                If (Me._dtmRegistro.Equals(Value) = False) Then
                    Me.OndtmRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmRegistro = Value
                    Me.SendPropertyChanged("dtmRegistro")
                    Me.OndtmRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmCumplimiento", DbType:="DateTime NOT NULL")>
        Public Property dtmCumplimiento() As System.Nullable(Of Date)
            Get
                Return Me._dtmCumplimiento
            End Get
            Set
                If (Me._dtmCumplimiento.Equals(Value) = False) Then
                    Me.OndtmCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmCumplimiento = Value
                    Me.SendPropertyChanged("dtmCumplimiento")
                    Me.OndtmCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPrefijo", DbType:="VarChar(5)")>
        Public Property strPrefijo() As String
            Get
                Return Me._strPrefijo
            End Get
            Set
                If (String.Equals(Me._strPrefijo, Value) = False) Then
                    Me.OnstrPrefijoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strPrefijo = Value
                    Me.SendPropertyChanged("strPrefijo")
                    Me.OnstrPrefijoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDFactura", DbType:="Int")>
        Public Property lngIDFactura() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDFactura
            End Get
            Set
                If (Me._lngIDFactura.Equals(Value) = False) Then
                    Me.OnlngIDFacturaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDFactura = Value
                    Me.SendPropertyChanged("lngIDFactura")
                    Me.OnlngIDFacturaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFacturada", DbType:="VarChar(1)")>
        Public Property strFacturada() As String
            Get
                Return Me._strFacturada
            End Get
            Set
                If (String.Equals(Me._strFacturada, Value) = False) Then
                    Me.OnstrFacturadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strFacturada = Value
                    Me.SendPropertyChanged("strFacturada")
                    Me.OnstrFacturadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="VarChar(15) NOT NULL")>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIsin", DbType:="VarChar(12) NOT NULL")>
        Public Property strIsin() As String
            Get
                Return Me._strIsin
            End Get
            Set
                If (String.Equals(Me._strIsin, Value) = False) Then
                    Me.OnstrIsinChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIsin = Value
                    Me.SendPropertyChanged("strIsin")
                    Me.OnstrIsinChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCusip", DbType:="VarChar(10)")>
        Public Property strCusip() As String
            Get
                Return Me._strCusip
            End Get
            Set
                If (String.Equals(Me._strCusip, Value) = False) Then
                    Me.OnstrCusipChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCusip = Value
                    Me.SendPropertyChanged("strCusip")
                    Me.OnstrCusipChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="DateTime")>
        Public Property dtmEmision() As System.Nullable(Of Date)
            Get
                Return Me._dtmEmision
            End Get
            Set
                If (Me._dtmEmision.Equals(Value) = False) Then
                    Me.OndtmEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = Value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="DateTime")>
        Public Property dtmVencimiento() As System.Nullable(Of Date)
            Get
                Return Me._dtmVencimiento
            End Get
            Set
                If (Me._dtmVencimiento.Equals(Value) = False) Then
                    Me.OndtmVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = Value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModalidadTitulo", DbType:="VarChar(2)")>
        Public Property strModalidadTitulo() As String
            Get
                Return Me._strModalidadTitulo
            End Get
            Set
                If (String.Equals(Me._strModalidadTitulo, Value) = False) Then
                    Me.OnstrModalidadTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModalidadTitulo = Value
                    Me.SendPropertyChanged("strModalidadTitulo")
                    Me.OnstrModalidadTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaCupon", DbType:="Float")>
        Public Property dblTasaCupon() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaCupon
            End Get
            Set
                If (Me._dblTasaCupon.Equals(Value) = False) Then
                    Me.OndblTasaCuponChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaCupon = Value
                    Me.SendPropertyChanged("dblTasaCupon")
                    Me.OndblTasaCuponChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioLimpio", DbType:="Float")>
        Public Property dblPrecioLimpio() As System.Nullable(Of Double)
            Get
                Return Me._dblPrecioLimpio
            End Get
            Set
                If (Me._dblPrecioLimpio.Equals(Value) = False) Then
                    Me.OndblPrecioLimpioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioLimpio = Value
                    Me.SendPropertyChanged("dblPrecioLimpio")
                    Me.OndblPrecioLimpioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblAcumuladoInteres", DbType:="Float")>
        Public Property dblAcumuladoInteres() As System.Nullable(Of Double)
            Get
                Return Me._dblAcumuladoInteres
            End Get
            Set
                If (Me._dblAcumuladoInteres.Equals(Value) = False) Then
                    Me.OndblAcumuladoInteresChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblAcumuladoInteres = Value
                    Me.SendPropertyChanged("dblAcumuladoInteres")
                    Me.OndblAcumuladoInteresChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioSucio", DbType:="Float")>
        Public Property dblPrecioSucio() As System.Nullable(Of Double)
            Get
                Return Me._dblPrecioSucio
            End Get
            Set
                If (Me._dblPrecioSucio.Equals(Value) = False) Then
                    Me.OndblPrecioSucioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioSucio = Value
                    Me.SendPropertyChanged("dblPrecioSucio")
                    Me.OndblPrecioSucioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorNominal", DbType:="Float")>
        Public Property dblValorNominal() As System.Nullable(Of Double)
            Get
                Return Me._dblValorNominal
            End Get
            Set
                If (Me._dblValorNominal.Equals(Value) = False) Then
                    Me.OndblValorNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorNominal = Value
                    Me.SendPropertyChanged("dblValorNominal")
                    Me.OndblValorNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorTotal", DbType:="Float")>
        Public Property dblValorTotal() As System.Nullable(Of Double)
            Get
                Return Me._dblValorTotal
            End Get
            Set
                If (Me._dblValorTotal.Equals(Value) = False) Then
                    Me.OndblValorTotalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorTotal = Value
                    Me.SendPropertyChanged("dblValorTotal")
                    Me.OndblValorTotalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaConversion", DbType:="Float")>
        Public Property dblTasaConversion() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaConversion
            End Get
            Set
                If (Me._dblTasaConversion.Equals(Value) = False) Then
                    Me.OndblTasaConversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaConversion = Value
                    Me.SendPropertyChanged("dblTasaConversion")
                    Me.OndblTasaConversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorUSD", DbType:="Float")>
        Public Property dblValorUSD() As System.Nullable(Of Double)
            Get
                Return Me._dblValorUSD
            End Get
            Set
                If (Me._dblValorUSD.Equals(Value) = False) Then
                    Me.OndblValorUSDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorUSD = Value
                    Me.SendPropertyChanged("dblValorUSD")
                    Me.OndblValorUSDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaSpot", DbType:="Float")>
        Public Property dblTasaSpot() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaSpot
            End Get
            Set
                If (Me._dblTasaSpot.Equals(Value) = False) Then
                    Me.OndblTasaSpotChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaSpot = Value
                    Me.SendPropertyChanged("dblTasaSpot")
                    Me.OndblTasaSpotChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorPesos", DbType:="Float")>
        Public Property dblValorPesos() As System.Nullable(Of Double)
            Get
                Return Me._dblValorPesos
            End Get
            Set
                If (Me._dblValorPesos.Equals(Value) = False) Then
                    Me.OndblValorPesosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorPesos = Value
                    Me.SendPropertyChanged("dblValorPesos")
                    Me.OndblValorPesosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblComision", DbType:="Float")>
        Public Property dblComision() As System.Nullable(Of Double)
            Get
                Return Me._dblComision
            End Get
            Set
                If (Me._dblComision.Equals(Value) = False) Then
                    Me.OndblComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblComision = Value
                    Me.SendPropertyChanged("dblComision")
                    Me.OndblComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTir", DbType:="Float")>
        Public Property dblTir() As System.Nullable(Of Double)
            Get
                Return Me._dblTir
            End Get
            Set
                If (Me._dblTir.Equals(Value) = False) Then
                    Me.OndblTirChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTir = Value
                    Me.SendPropertyChanged("dblTir")
                    Me.OndblTirChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCliente", DbType:="VarChar(1)")>
        Public Property strTipoCliente() As String
            Get
                Return Me._strTipoCliente
            End Get
            Set
                If (String.Equals(Me._strTipoCliente, Value) = False) Then
                    Me.OnstrTipoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoCliente = Value
                    Me.SendPropertyChanged("strTipoCliente")
                    Me.OnstrTipoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDClienteExterno", DbType:="VarChar(17)")>
        Public Property lngIDClienteExterno() As String
            Get
                Return Me._lngIDClienteExterno
            End Get
            Set
                If (String.Equals(Me._lngIDClienteExterno, Value) = False) Then
                    Me.OnlngIDClienteExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDClienteExterno = Value
                    Me.SendPropertyChanged("lngIDClienteExterno")
                    Me.OnlngIDClienteExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="VarChar(17)")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDOrdenante", DbType:="VarChar(17)")>
        Public Property lngIDOrdenante() As String
            Get
                Return Me._lngIDOrdenante
            End Get
            Set
                If (String.Equals(Me._lngIDOrdenante, Value) = False) Then
                    Me.OnlngIDOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDOrdenante = Value
                    Me.SendPropertyChanged("lngIDOrdenante")
                    Me.OnlngIDOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDCertcus", DbType:="Int")>
        Public Property lngIDCertcus() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDCertcus
            End Get
            Set
                If (Me._lngIDCertcus.Equals(Value) = False) Then
                    Me.OnlngIDCertcusChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDCertcus = Value
                    Me.SendPropertyChanged("lngIDCertcus")
                    Me.OnlngIDCertcusChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDNroCustodia", DbType:="Int")>
        Public Property lngIDNroCustodia() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDNroCustodia
            End Get
            Set
                If (Me._lngIDNroCustodia.Equals(Value) = False) Then
                    Me.OnlngIDNroCustodiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDNroCustodia = Value
                    Me.SendPropertyChanged("lngIDNroCustodia")
                    Me.OnlngIDNroCustodiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInstruccion", DbType:="VarChar(255)")>
        Public Property strInstruccion() As String
            Get
                Return Me._strInstruccion
            End Get
            Set
                If (String.Equals(Me._strInstruccion, Value) = False) Then
                    Me.OnstrInstruccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInstruccion = Value
                    Me.SendPropertyChanged("strInstruccion")
                    Me.OnstrInstruccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstado", DbType:="VarChar(1)")>
        Public Property strEstado() As String
            Get
                Return Me._strEstado
            End Get
            Set
                If (String.Equals(Me._strEstado, Value) = False) Then
                    Me.OnstrEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstado = Value
                    Me.SendPropertyChanged("strEstado")
                    Me.OnstrEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intNroLote", DbType:="Int NOT NULL")>
        Public Property intNroLote() As System.Nullable(Of Integer)
            Get
                Return Me._intNroLote
            End Get
            Set
                If (Me._intNroLote.Equals(Value) = False) Then
                    Me.OnintNroLoteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intNroLote = Value
                    Me.SendPropertyChanged("intNroLote")
                    Me.OnintNroLoteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDDepositoExtranjero", DbType:="Int")>
        Public Property lngIDDepositoExtranjero() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDDepositoExtranjero
            End Get
            Set
                If (Me._lngIDDepositoExtranjero.Equals(Value) = False) Then
                    Me.OnlngIDDepositoExtranjeroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDDepositoExtranjero = Value
                    Me.SendPropertyChanged("lngIDDepositoExtranjero")
                    Me.OnlngIDDepositoExtranjeroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="DateTime NOT NULL")>
        Public Property dtmActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If (Me._dtmActualizacion.Equals(Value) = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VarChar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intDiasIntereses", DbType:="Int")>
        Public Property intDiasIntereses() As System.Nullable(Of Integer)
            Get
                Return Me._intDiasIntereses
            End Get
            Set
                If (Me._intDiasIntereses.Equals(Value) = False) Then
                    Me.OnintDiasInteresesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intDiasIntereses = Value
                    Me.SendPropertyChanged("intDiasIntereses")
                    Me.OnintDiasInteresesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaUltPagoCupon", DbType:="DateTime")>
        Public Property dtmFechaUltPagoCupon() As System.Nullable(Of Date)
            Get
                Return Me._dtmFechaUltPagoCupon
            End Get
            Set
                If (Me._dtmFechaUltPagoCupon.Equals(Value) = False) Then
                    Me.OndtmFechaUltPagoCuponChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaUltPagoCupon = Value
                    Me.SendPropertyChanged("dtmFechaUltPagoCupon")
                    Me.OndtmFechaUltPagoCuponChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorIntAcumulados", DbType:="Float")>
        Public Property dblValorIntAcumulados() As System.Nullable(Of Double)
            Get
                Return Me._dblValorIntAcumulados
            End Get
            Set
                If (Me._dblValorIntAcumulados.Equals(Value) = False) Then
                    Me.OndblValorIntAcumuladosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorIntAcumulados = Value
                    Me.SendPropertyChanged("dblValorIntAcumulados")
                    Me.OndblValorIntAcumuladosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEstado", DbType:="DateTime")>
        Public Property dtmEstado() As System.Nullable(Of Date)
            Get
                Return Me._dtmEstado
            End Get
            Set
                If (Me._dtmEstado.Equals(Value) = False) Then
                    Me.OndtmEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEstado = Value
                    Me.SendPropertyChanged("dtmEstado")
                    Me.OndtmEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidaciones_Yankees", Storage:="_IDLiquidaciones_Yankees", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDLiquidaciones_Yankees() As Integer
            Get
                Return Me._IDLiquidaciones_Yankees
            End Get
            Set
                If (Object.Equals(Me._IDLiquidaciones_Yankees, Value) = False) Then
                    Me.OnIDLiquidaciones_YankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDLiquidaciones_Yankees = Value
                    Me.SendPropertyChanged("IDLiquidaciones_Yankees")
                    Me.OnIDLiquidaciones_YankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strVendedor", DbType:="VarChar(30)")>
        Public Property strVendedor() As String
            Get
                Return Me._strVendedor
            End Get
            Set
                If (String.Equals(Me._strVendedor, Value) = False) Then
                    Me.OnstrVendedorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strVendedor = Value
                    Me.SendPropertyChanged("strVendedor")
                    Me.OnstrVendedorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClienteExterno", DbType:="VarChar(50)")>
        Public Property strClienteExterno() As String
            Get
                Return Me._strClienteExterno
            End Get
            Set
                If (String.Equals(Me._strClienteExterno, Value) = False) Then
                    Me.OnstrClienteExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClienteExterno = Value
                    Me.SendPropertyChanged("strClienteExterno")
                    Me.OnstrClienteExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNumeroCuenta", DbType:="VarChar(20)")>
        Public Property strNumeroCuenta() As String
            Get
                Return Me._strNumeroCuenta
            End Get
            Set
                If (String.Equals(Me._strNumeroCuenta, Value) = False) Then
                    Me.OnstrNumeroCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNumeroCuenta = Value
                    Me.SendPropertyChanged("strNumeroCuenta")
                    Me.OnstrNumeroCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreTitular", DbType:="VarChar(50)")>
        Public Property strNombreTitular() As String
            Get
                Return Me._strNombreTitular
            End Get
            Set
                If (String.Equals(Me._strNombreTitular, Value) = False) Then
                    Me.OnstrNombreTitularChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreTitular = Value
                    Me.SendPropertyChanged("strNombreTitular")
                    Me.OnstrNombreTitularChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOrdenante", DbType:="VarChar(50)")>
        Public Property strOrdenante() As String
            Get
                Return Me._strOrdenante
            End Get
            Set
                If (String.Equals(Me._strOrdenante, Value) = False) Then
                    Me.OnstrOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strOrdenante = Value
                    Me.SendPropertyChanged("strOrdenante")
                    Me.OnstrOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strComitente", DbType:="VarChar(50)")>
        Public Property strComitente() As String
            Get
                Return Me._strComitente
            End Get
            Set
                If (String.Equals(Me._strComitente, Value) = False) Then
                    Me.OnstrComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strComitente = Value
                    Me.SendPropertyChanged("strComitente")
                    Me.OnstrComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreEspecie", DbType:="VarChar(50)")>
        Public Property strNombreEspecie() As String
            Get
                Return Me._strNombreEspecie
            End Get
            Set
                If (String.Equals(Me._strNombreEspecie, Value) = False) Then
                    Me.OnstrNombreEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreEspecie = Value
                    Me.SendPropertyChanged("strNombreEspecie")
                    Me.OnstrNombreEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblLiquidaciones_YANKEE_tblDetalleLiquida_YANKEE", Storage:="_tblDetalleLiquida_YANKEEs", ThisKey:="IDY", OtherKey:="IDY")>
        Public Property tblDetalleLiquida_YANKEEs() As EntitySet(Of tblDetalleLiquida_YANKEE)
            Get
                Return Me._tblDetalleLiquida_YANKEEs
            End Get
            Set
                Me._tblDetalleLiquida_YANKEEs.Assign(Value)
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblLiquidaciones_YANKEE_ReceptoresYankees", Storage:="_ReceptoresYankees", ThisKey:="IDY", OtherKey:="IDY")>
        Public Property ReceptoresYankees() As EntitySet(Of ReceptoresYankees)
            Get
                Return Me._ReceptoresYankees
            End Get
            Set
                Me._ReceptoresYankees.Assign(Value)
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub

        Private Sub attach_tblDetalleLiquida_YANKEEs(ByVal entity As tblDetalleLiquida_YANKEE)
            Me.SendPropertyChanging()
            entity.tblLiquidaciones_YANKEE = Me
        End Sub

        Private Sub detach_tblDetalleLiquida_YANKEEs(ByVal entity As tblDetalleLiquida_YANKEE)
            Me.SendPropertyChanging()
            entity.tblLiquidaciones_YANKEE = Nothing
        End Sub

        Private Sub attach_ReceptoresYankees(ByVal entity As ReceptoresYankees)
            Me.SendPropertyChanging()
            entity.tblLiquidaciones_YANKEE = Me
        End Sub

        Private Sub detach_ReceptoresYankees(ByVal entity As ReceptoresYankees)
            Me.SendPropertyChanging()
            entity.tblLiquidaciones_YANKEE = Nothing
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDetalleLiquida_YANKEES")>
    Partial Public Class tblDetalleLiquida_YANKEE
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _lngIDComisionista As Integer

        Private _lngIDSucComisionista As Integer

        Private _lngIDSecuencia As Integer

        Private _IDY As Integer

        Private _strTipoCliente As String

        Private _strTipoOperacion As String

        Private _lngIDClienteExterno As String

        Private _lngIDComitente As String

        Private _lngIDOrdenante As String

        Private _strPrefijo As String

        Private _lngIDFactura As System.Nullable(Of Integer)

        Private _strFacturada As String

        Private _lngIDCertcus As System.Nullable(Of Integer)

        Private _dblValorNominal As Double

        Private _dblPrecioLimpio As Double

        Private _dblPrecioSucio As Double

        Private _dblValorTotal As Double

        Private _dblValorUSD As System.Nullable(Of Double)

        Private _dblTIR As System.Nullable(Of Double)

        Private _dblTasaSpot As Double

        Private _dblValorPesos As Double

        Private _logTrasladoComision As System.Nullable(Of Boolean)

        Private _dblTrasladoComision As Double

        Private _dblComision As Double

        Private _strInstruccion As String

        Private _lngIDNroCustodia As System.Nullable(Of Integer)

        Private _lngIDDepositoExtranjero As System.Nullable(Of Integer)

        Private _dtmActualizacion As Date

        Private _strUsuario As String

        Private _dblTasaConversion As System.Nullable(Of Double)

        Private _InfoSesion As String

        Private _IDDetalleLiquida_Yankees As Integer

        Private _strVendedor As String

        Private _strClienteExterno As String

        Private _strNumeroCuenta As String

        Private _strNombreTitular As String

        Private _strOrdenante As String

        Private _strComitente As String

        Private _strNombreEspecie As String

        Private _DescripcionDeposito As String

        Private _TipoClienteOyD As Boolean

        Private _TipoClienteExterno As Boolean

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

        Private _tblLiquidaciones_YANKEE As EntityRef(Of tblLiquidaciones_YANKEE)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnlngIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDComisionistaChanged()
        End Sub
        Partial Private Sub OnlngIDSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDSucComisionistaChanged()
        End Sub
        Partial Private Sub OnlngIDSecuenciaChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDSecuenciaChanged()
        End Sub
        Partial Private Sub OnIDYChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDYChanged()
        End Sub
        Partial Private Sub OnstrTipoClienteChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoClienteChanged()
        End Sub
        Partial Private Sub OnstrTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoOperacionChanged()
        End Sub
        Partial Private Sub OnlngIDClienteExternoChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDClienteExternoChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnlngIDOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDOrdenanteChanged()
        End Sub
        Partial Private Sub OnstrPrefijoChanging(value As String)
        End Sub
        Partial Private Sub OnstrPrefijoChanged()
        End Sub
        Partial Private Sub OnlngIDFacturaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDFacturaChanged()
        End Sub
        Partial Private Sub OnstrFacturadaChanging(value As String)
        End Sub
        Partial Private Sub OnstrFacturadaChanged()
        End Sub
        Partial Private Sub OnlngIDCertcusChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDCertcusChanged()
        End Sub
        Partial Private Sub OndblValorNominalChanging(value As Double)
        End Sub
        Partial Private Sub OndblValorNominalChanged()
        End Sub
        Partial Private Sub OndblPrecioLimpioChanging(value As Double)
        End Sub
        Partial Private Sub OndblPrecioLimpioChanged()
        End Sub
        Partial Private Sub OndblPrecioSucioChanging(value As Double)
        End Sub
        Partial Private Sub OndblPrecioSucioChanged()
        End Sub
        Partial Private Sub OndblValorTotalChanging(value As Double)
        End Sub
        Partial Private Sub OndblValorTotalChanged()
        End Sub
        Partial Private Sub OndblValorUSDChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorUSDChanged()
        End Sub
        Partial Private Sub OndblTIRChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTIRChanged()
        End Sub
        Partial Private Sub OndblTasaSpotChanging(value As Double)
        End Sub
        Partial Private Sub OndblTasaSpotChanged()
        End Sub
        Partial Private Sub OndblValorPesosChanging(value As Double)
        End Sub
        Partial Private Sub OndblValorPesosChanged()
        End Sub
        Partial Private Sub OnlogTrasladoComisionChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogTrasladoComisionChanged()
        End Sub
        Partial Private Sub OndblTrasladoComisionChanging(value As Double)
        End Sub
        Partial Private Sub OndblTrasladoComisionChanged()
        End Sub
        Partial Private Sub OndblComisionChanging(value As Double)
        End Sub
        Partial Private Sub OndblComisionChanged()
        End Sub
        Partial Private Sub OnstrInstruccionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInstruccionChanged()
        End Sub
        Partial Private Sub OnlngIDNroCustodiaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDNroCustodiaChanged()
        End Sub
        Partial Private Sub OnlngIDDepositoExtranjeroChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDDepositoExtranjeroChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OndblTasaConversionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaConversionChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnIDDetalleLiquida_YankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDDetalleLiquida_YankeesChanged()
        End Sub
        Partial Private Sub OnstrVendedorChanging(value As String)
        End Sub
        Partial Private Sub OnstrVendedorChanged()
        End Sub
        Partial Private Sub OnstrClienteExternoChanging(value As String)
        End Sub
        Partial Private Sub OnstrClienteExternoChanged()
        End Sub
        Partial Private Sub OnstrNumeroCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnstrNumeroCuentaChanged()
        End Sub
        Partial Private Sub OnstrNombreTitularChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreTitularChanged()
        End Sub
        Partial Private Sub OnstrOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnstrOrdenanteChanged()
        End Sub
        Partial Private Sub OnstrComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnstrComitenteChanged()
        End Sub
        Partial Private Sub OnstrNombreEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreEspecieChanged()
        End Sub
        Partial Private Sub OnDescripcionDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionDepositoChanged()
        End Sub
        Partial Private Sub OnTipoClienteOyDChanging(value As Boolean)
        End Sub
        Partial Private Sub OnTipoClienteOyDChanged()
        End Sub
        Partial Private Sub OnTipoClienteExternoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnTipoClienteExternoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            Me._tblLiquidaciones_YANKEE = CType(Nothing, EntityRef(Of tblLiquidaciones_YANKEE))
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComisionista", DbType:="Int NOT NULL")>
        Public Property lngIDComisionista() As Integer
            Get
                Return Me._lngIDComisionista
            End Get
            Set
                If ((Me._lngIDComisionista = Value) _
                            = False) Then
                    Me.OnlngIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComisionista = Value
                    Me.SendPropertyChanged("lngIDComisionista")
                    Me.OnlngIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDSucComisionista", DbType:="Int NOT NULL")>
        Public Property lngIDSucComisionista() As Integer
            Get
                Return Me._lngIDSucComisionista
            End Get
            Set
                If ((Me._lngIDSucComisionista = Value) _
                            = False) Then
                    Me.OnlngIDSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDSucComisionista = Value
                    Me.SendPropertyChanged("lngIDSucComisionista")
                    Me.OnlngIDSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDSecuencia", DbType:="Int NOT NULL")>
        Public Property lngIDSecuencia() As Integer
            Get
                Return Me._lngIDSecuencia
            End Get
            Set
                If ((Me._lngIDSecuencia = Value) _
                            = False) Then
                    Me.OnlngIDSecuenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDSecuencia = Value
                    Me.SendPropertyChanged("lngIDSecuencia")
                    Me.OnlngIDSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDY", DbType:="Int NOT NULL")>
        Public Property IDY() As Integer
            Get
                Return Me._IDY
            End Get
            Set
                If ((Me._IDY = Value) _
                            = False) Then
                    Me.OnIDYChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDY = Value
                    Me.SendPropertyChanged("IDY")
                    Me.OnIDYChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCliente", DbType:="VarChar(1)")>
        Public Property strTipoCliente() As String
            Get
                Return Me._strTipoCliente
            End Get
            Set
                If (String.Equals(Me._strTipoCliente, Value) = False) Then
                    Me.OnstrTipoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoCliente = Value
                    Me.SendPropertyChanged("strTipoCliente")
                    Me.OnstrTipoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoOperacion", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
        Public Property strTipoOperacion() As String
            Get
                Return Me._strTipoOperacion
            End Get
            Set
                If (String.Equals(Me._strTipoOperacion, Value) = False) Then
                    Me.OnstrTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoOperacion = Value
                    Me.SendPropertyChanged("strTipoOperacion")
                    Me.OnstrTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDClienteExterno", DbType:="VarChar(17)")>
        Public Property lngIDClienteExterno() As String
            Get
                Return Me._lngIDClienteExterno
            End Get
            Set
                If (String.Equals(Me._lngIDClienteExterno, Value) = False) Then
                    Me.OnlngIDClienteExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDClienteExterno = Value
                    Me.SendPropertyChanged("lngIDClienteExterno")
                    Me.OnlngIDClienteExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="VarChar(17)")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDOrdenante", DbType:="VarChar(17)")>
        Public Property lngIDOrdenante() As String
            Get
                Return Me._lngIDOrdenante
            End Get
            Set
                If (String.Equals(Me._lngIDOrdenante, Value) = False) Then
                    Me.OnlngIDOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDOrdenante = Value
                    Me.SendPropertyChanged("lngIDOrdenante")
                    Me.OnlngIDOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPrefijo", DbType:="VarChar(5)")>
        Public Property strPrefijo() As String
            Get
                Return Me._strPrefijo
            End Get
            Set
                If (String.Equals(Me._strPrefijo, Value) = False) Then
                    Me.OnstrPrefijoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strPrefijo = Value
                    Me.SendPropertyChanged("strPrefijo")
                    Me.OnstrPrefijoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDFactura", DbType:="Int")>
        Public Property lngIDFactura() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDFactura
            End Get
            Set
                If (Me._lngIDFactura.Equals(Value) = False) Then
                    Me.OnlngIDFacturaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDFactura = Value
                    Me.SendPropertyChanged("lngIDFactura")
                    Me.OnlngIDFacturaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFacturada", DbType:="VarChar(1)")>
        Public Property strFacturada() As String
            Get
                Return Me._strFacturada
            End Get
            Set
                If (String.Equals(Me._strFacturada, Value) = False) Then
                    Me.OnstrFacturadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strFacturada = Value
                    Me.SendPropertyChanged("strFacturada")
                    Me.OnstrFacturadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDCertcus", DbType:="Int")>
        Public Property lngIDCertcus() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDCertcus
            End Get
            Set
                If (Me._lngIDCertcus.Equals(Value) = False) Then
                    Me.OnlngIDCertcusChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDCertcus = Value
                    Me.SendPropertyChanged("lngIDCertcus")
                    Me.OnlngIDCertcusChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorNominal", DbType:="Float NOT NULL")>
        Public Property dblValorNominal() As Double
            Get
                Return Me._dblValorNominal
            End Get
            Set
                If ((Me._dblValorNominal = Value) _
                            = False) Then
                    Me.OndblValorNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorNominal = Value
                    Me.SendPropertyChanged("dblValorNominal")
                    Me.OndblValorNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioLimpio", DbType:="Float NOT NULL")>
        Public Property dblPrecioLimpio() As Double
            Get
                Return Me._dblPrecioLimpio
            End Get
            Set
                If ((Me._dblPrecioLimpio = Value) _
                            = False) Then
                    Me.OndblPrecioLimpioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioLimpio = Value
                    Me.SendPropertyChanged("dblPrecioLimpio")
                    Me.OndblPrecioLimpioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioSucio", DbType:="Float NOT NULL")>
        Public Property dblPrecioSucio() As Double
            Get
                Return Me._dblPrecioSucio
            End Get
            Set
                If ((Me._dblPrecioSucio = Value) _
                            = False) Then
                    Me.OndblPrecioSucioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioSucio = Value
                    Me.SendPropertyChanged("dblPrecioSucio")
                    Me.OndblPrecioSucioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorTotal", DbType:="Float NOT NULL")>
        Public Property dblValorTotal() As Double
            Get
                Return Me._dblValorTotal
            End Get
            Set
                If ((Me._dblValorTotal = Value) _
                            = False) Then
                    Me.OndblValorTotalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorTotal = Value
                    Me.SendPropertyChanged("dblValorTotal")
                    Me.OndblValorTotalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorUSD", DbType:="Float")>
        Public Property dblValorUSD() As System.Nullable(Of Double)
            Get
                Return Me._dblValorUSD
            End Get
            Set
                If (Me._dblValorUSD.Equals(Value) = False) Then
                    Me.OndblValorUSDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorUSD = Value
                    Me.SendPropertyChanged("dblValorUSD")
                    Me.OndblValorUSDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTIR", DbType:="Float")>
        Public Property dblTIR() As System.Nullable(Of Double)
            Get
                Return Me._dblTIR
            End Get
            Set
                If (Me._dblTIR.Equals(Value) = False) Then
                    Me.OndblTIRChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTIR = Value
                    Me.SendPropertyChanged("dblTIR")
                    Me.OndblTIRChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaSpot", DbType:="Float NOT NULL")>
        Public Property dblTasaSpot() As Double
            Get
                Return Me._dblTasaSpot
            End Get
            Set
                If ((Me._dblTasaSpot = Value) _
                            = False) Then
                    Me.OndblTasaSpotChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaSpot = Value
                    Me.SendPropertyChanged("dblTasaSpot")
                    Me.OndblTasaSpotChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorPesos", DbType:="Float NOT NULL")>
        Public Property dblValorPesos() As Double
            Get
                Return Me._dblValorPesos
            End Get
            Set
                If ((Me._dblValorPesos = Value) _
                            = False) Then
                    Me.OndblValorPesosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorPesos = Value
                    Me.SendPropertyChanged("dblValorPesos")
                    Me.OndblValorPesosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logTrasladoComision", DbType:="Bit")>
        Public Property logTrasladoComision() As System.Nullable(Of Boolean)
            Get
                Return Me._logTrasladoComision
            End Get
            Set
                If (Me._logTrasladoComision.Equals(Value) = False) Then
                    Me.OnlogTrasladoComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logTrasladoComision = Value
                    Me.SendPropertyChanged("logTrasladoComision")
                    Me.OnlogTrasladoComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTrasladoComision", DbType:="Float NOT NULL")>
        Public Property dblTrasladoComision() As Double
            Get
                Return Me._dblTrasladoComision
            End Get
            Set
                If ((Me._dblTrasladoComision = Value) _
                            = False) Then
                    Me.OndblTrasladoComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTrasladoComision = Value
                    Me.SendPropertyChanged("dblTrasladoComision")
                    Me.OndblTrasladoComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblComision", DbType:="Float NOT NULL")>
        Public Property dblComision() As Double
            Get
                Return Me._dblComision
            End Get
            Set
                If ((Me._dblComision = Value) _
                            = False) Then
                    Me.OndblComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblComision = Value
                    Me.SendPropertyChanged("dblComision")
                    Me.OndblComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInstruccion", DbType:="VarChar(255)")>
        Public Property strInstruccion() As String
            Get
                Return Me._strInstruccion
            End Get
            Set
                If (String.Equals(Me._strInstruccion, Value) = False) Then
                    Me.OnstrInstruccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInstruccion = Value
                    Me.SendPropertyChanged("strInstruccion")
                    Me.OnstrInstruccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDNroCustodia", DbType:="Int")>
        Public Property lngIDNroCustodia() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDNroCustodia
            End Get
            Set
                If (Me._lngIDNroCustodia.Equals(Value) = False) Then
                    Me.OnlngIDNroCustodiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDNroCustodia = Value
                    Me.SendPropertyChanged("lngIDNroCustodia")
                    Me.OnlngIDNroCustodiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDDepositoExtranjero", DbType:="Int")>
        Public Property lngIDDepositoExtranjero() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDDepositoExtranjero
            End Get
            Set
                If (Me._lngIDDepositoExtranjero.Equals(Value) = False) Then
                    Me.OnlngIDDepositoExtranjeroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDDepositoExtranjero = Value
                    Me.SendPropertyChanged("lngIDDepositoExtranjero")
                    Me.OnlngIDDepositoExtranjeroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="DateTime NOT NULL")>
        Public Property dtmActualizacion() As Date
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If ((Me._dtmActualizacion = Value) _
                            = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=False)>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaConversion", DbType:="Float")>
        Public Property dblTasaConversion() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaConversion
            End Get
            Set
                If (Me._dblTasaConversion.Equals(Value) = False) Then
                    Me.OndblTasaConversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaConversion = Value
                    Me.SendPropertyChanged("dblTasaConversion")
                    Me.OndblTasaConversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDetalleLiquida_Yankees", Storage:="_IDDetalleLiquida_Yankees", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDDetalleLiquida_Yankees() As Integer
            Get
                Return Me._IDDetalleLiquida_Yankees
            End Get
            Set
                If (Object.Equals(Me._IDDetalleLiquida_Yankees, Value) = False) Then
                    Me.OnIDDetalleLiquida_YankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDDetalleLiquida_Yankees = Value
                    Me.SendPropertyChanged("IDDetalleLiquida_Yankees")
                    Me.OnIDDetalleLiquida_YankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strVendedor", DbType:="VarChar(30)")>
        Public Property strVendedor() As String
            Get
                Return Me._strVendedor
            End Get
            Set
                If (String.Equals(Me._strVendedor, Value) = False) Then
                    Me.OnstrVendedorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strVendedor = Value
                    Me.SendPropertyChanged("strVendedor")
                    Me.OnstrVendedorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClienteExterno", DbType:="VarChar(50)")>
        Public Property strClienteExterno() As String
            Get
                Return Me._strClienteExterno
            End Get
            Set
                If (String.Equals(Me._strClienteExterno, Value) = False) Then
                    Me.OnstrClienteExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClienteExterno = Value
                    Me.SendPropertyChanged("strClienteExterno")
                    Me.OnstrClienteExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNumeroCuenta", DbType:="VarChar(20)")>
        Public Property strNumeroCuenta() As String
            Get
                Return Me._strNumeroCuenta
            End Get
            Set
                If (String.Equals(Me._strNumeroCuenta, Value) = False) Then
                    Me.OnstrNumeroCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNumeroCuenta = Value
                    Me.SendPropertyChanged("strNumeroCuenta")
                    Me.OnstrNumeroCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreTitular", DbType:="VarChar(50)")>
        Public Property strNombreTitular() As String
            Get
                Return Me._strNombreTitular
            End Get
            Set
                If (String.Equals(Me._strNombreTitular, Value) = False) Then
                    Me.OnstrNombreTitularChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreTitular = Value
                    Me.SendPropertyChanged("strNombreTitular")
                    Me.OnstrNombreTitularChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOrdenante", DbType:="VarChar(50)")>
        Public Property strOrdenante() As String
            Get
                Return Me._strOrdenante
            End Get
            Set
                If (String.Equals(Me._strOrdenante, Value) = False) Then
                    Me.OnstrOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strOrdenante = Value
                    Me.SendPropertyChanged("strOrdenante")
                    Me.OnstrOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strComitente", DbType:="VarChar(50)")>
        Public Property strComitente() As String
            Get
                Return Me._strComitente
            End Get
            Set
                If (String.Equals(Me._strComitente, Value) = False) Then
                    Me.OnstrComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strComitente = Value
                    Me.SendPropertyChanged("strComitente")
                    Me.OnstrComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreEspecie", DbType:="VarChar(50)")>
        Public Property strNombreEspecie() As String
            Get
                Return Me._strNombreEspecie
            End Get
            Set
                If (String.Equals(Me._strNombreEspecie, Value) = False) Then
                    Me.OnstrNombreEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreEspecie = Value
                    Me.SendPropertyChanged("strNombreEspecie")
                    Me.OnstrNombreEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionDeposito", DbType:="VarChar(50)")>
        Public Property DescripcionDeposito() As String
            Get
                Return Me._DescripcionDeposito
            End Get
            Set
                If (String.Equals(Me._DescripcionDeposito, Value) = False) Then
                    Me.OnDescripcionDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionDeposito = Value
                    Me.SendPropertyChanged("DescripcionDeposito")
                    Me.OnDescripcionDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoClienteOyD", DbType:="Bit NOT NULL")>
        Public Property TipoClienteOyD() As Boolean
            Get
                Return Me._TipoClienteOyD
            End Get
            Set
                If ((Me._TipoClienteOyD = Value) _
                            = False) Then
                    Me.OnTipoClienteOyDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoClienteOyD = Value
                    Me.SendPropertyChanged("TipoClienteOyD")
                    Me.OnTipoClienteOyDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoClienteExterno", DbType:="Bit NOT NULL")>
        Public Property TipoClienteExterno() As Boolean
            Get
                Return Me._TipoClienteExterno
            End Get
            Set
                If ((Me._TipoClienteExterno = Value) _
                            = False) Then
                    Me.OnTipoClienteExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoClienteExterno = Value
                    Me.SendPropertyChanged("TipoClienteExterno")
                    Me.OnTipoClienteExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblLiquidaciones_YANKEE_tblDetalleLiquida_YANKEE", Storage:="_tblLiquidaciones_YANKEE", ThisKey:="IDY", OtherKey:="IDY", IsForeignKey:=True)>
        Public Property tblLiquidaciones_YANKEE() As tblLiquidaciones_YANKEE
            Get
                Return Me._tblLiquidaciones_YANKEE.Entity
            End Get
            Set
                Dim previousValue As tblLiquidaciones_YANKEE = Me._tblLiquidaciones_YANKEE.Entity
                If ((Object.Equals(previousValue, Value) = False) _
                            OrElse (Me._tblLiquidaciones_YANKEE.HasLoadedOrAssignedValue = False)) Then
                    Me.SendPropertyChanging()

                    If ((previousValue Is Nothing) _
                                = False) Then
                        Me._tblLiquidaciones_YANKEE.Entity = Nothing
                        previousValue.tblDetalleLiquida_YANKEEs.Remove(Me)
                    End If
                    Me._tblLiquidaciones_YANKEE.Entity = Value
                    If ((Value Is Nothing) _
                                = False) Then
                        Value.tblDetalleLiquida_YANKEEs.Add(Me)
                        Me._IDY = Value.IDY
                    Else
                        Me._IDY = CType(Nothing, Integer)
                    End If
                    Me.SendPropertyChanged("tblLiquidaciones_YANKEE")
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresYankees")>
    Partial Public Class ReceptoresYankees
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDY As Integer

        Private _IDReceptor As String

        Private _Lider As Boolean

        Private _Porcentaje As Double

        Private _Usuario As String

        Private _IDReceptoresYankees As Integer

        Private _InfoSesion As String

        Private _Nombre As String

        Private _IDReceptorOrden As System.Nullable(Of System.Int32)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

        Private _tblLiquidaciones_YANKEE As EntityRef(Of tblLiquidaciones_YANKEE)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDYChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDYChanged()
        End Sub
        Partial Private Sub OnIDReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnIDReceptorChanged()
        End Sub
        Partial Private Sub OnLiderChanging(value As Boolean)
        End Sub
        Partial Private Sub OnLiderChanged()
        End Sub
        Partial Private Sub OnPorcentajeChanging(value As Double)
        End Sub
        Partial Private Sub OnPorcentajeChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnIDReceptoresYankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDReceptoresYankeesChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnIDReceptorOrdenChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDReceptorOrdenChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            Me._tblLiquidaciones_YANKEE = CType(Nothing, EntityRef(Of tblLiquidaciones_YANKEE))
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOperacion", Storage:="_IDY", DbType:="Int NOT NULL")>
        Public Property IDY() As Integer
            Get
                Return Me._IDY
            End Get
            Set
                If ((Me._IDY = Value) _
                            = False) Then
                    Me.OnIDYChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDY = Value
                    Me.SendPropertyChanged("IDY")
                    Me.OnIDYChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NOT NULL")>
        Public Property IDReceptor() As String
            Get
                Return Me._IDReceptor
            End Get
            Set
                If (String.Equals(Me._IDReceptor, Value) = False) Then
                    Me.OnIDReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptor = Value
                    Me.SendPropertyChanged("IDReceptor")
                    Me.OnIDReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>
        Public Property Lider() As Boolean
            Get
                Return Me._Lider
            End Get
            Set
                If ((Me._Lider = Value) _
                            = False) Then
                    Me.OnLiderChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Lider = Value
                    Me.SendPropertyChanged("Lider")
                    Me.OnLiderChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentaje", Storage:="_Porcentaje", DbType:="Float NOT NULL")>
        Public Property Porcentaje() As Double
            Get
                Return Me._Porcentaje
            End Get
            Set
                If ((Me._Porcentaje = Value) _
                            = False) Then
                    Me.OnPorcentajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Porcentaje = Value
                    Me.SendPropertyChanged("Porcentaje")
                    Me.OnPorcentajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptoresYankees", Storage:="_IDReceptoresYankees", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDReceptoresYankees() As Integer
            Get
                Return Me._IDReceptoresYankees
            End Get
            Set
                If (Object.Equals(Me._IDReceptoresYankees, Value) = False) Then
                    Me.OnIDReceptoresYankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptoresYankees = Value
                    Me.SendPropertyChanged("IDReceptoresYankees")
                    Me.OnIDReceptoresYankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)")>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptorOrden", Storage:="_IDReceptorOrden", DbType:="Int", CanBeNull:=True)>
        Public Property IDReceptorOrden() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDReceptorOrden
            End Get
            Set
                If (Object.Equals(Me._IDReceptorOrden, Value) = False) Then
                    Me.OnIDReceptorOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptorOrden = Value
                    Me.SendPropertyChanged("IDReceptorOrden")
                    Me.OnIDReceptorOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblLiquidaciones_YANKEE_ReceptoresYankees", Storage:="_tblLiquidaciones_YANKEE", ThisKey:="IDY", OtherKey:="IDY", IsForeignKey:=True)>
        Public Property tblLiquidaciones_YANKEE() As tblLiquidaciones_YANKEE
            Get
                Return Me._tblLiquidaciones_YANKEE.Entity
            End Get
            Set
                Dim previousValue As tblLiquidaciones_YANKEE = Me._tblLiquidaciones_YANKEE.Entity
                If ((Object.Equals(previousValue, Value) = False) _
                            OrElse (Me._tblLiquidaciones_YANKEE.HasLoadedOrAssignedValue = False)) Then
                    Me.SendPropertyChanging()

                    If ((previousValue Is Nothing) _
                                = False) Then
                        Me._tblLiquidaciones_YANKEE.Entity = Nothing
                        previousValue.ReceptoresYankees.Remove(Me)
                    End If
                    Me._tblLiquidaciones_YANKEE.Entity = Value
                    If ((Value Is Nothing) _
                                = False) Then
                        Value.ReceptoresYankees.Add(Me)
                        Me._IDY = Value.IDY
                    Else
                        Me._IDY = CType(Nothing, Integer)
                    End If
                    Me.SendPropertyChanged("tblLiquidaciones_YANKEE")
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmpLiquidaciones_Yankees")>
    Partial Public Class Liquidaciones_Yankee_Admon
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDLiquidaciones_Yankees As Integer

        Private _lngID As Integer

        Private _lngIDComitente As String

        Private _strComitente As String

        Private _strTipoIdentificacion As System.Nullable(Of Char)

        Private _lngNroDocumento As System.Nullable(Of Decimal)

        Private _strDireccion As String

        Private _strTelefono1 As String

        Private _dtmRegistro As Date

        Private _dtmCumplimiento As Date

        Private _strIsin As String

        Private _strIDEspecie As String

        Private _dtmEmision As System.Nullable(Of Date)

        Private _dtmVencimiento As System.Nullable(Of Date)

        Private _strModalidadTitulo As String

        Private _lngIDCertcus As System.Nullable(Of Integer)

        Private _lngIDNroCustodia As System.Nullable(Of Integer)

        Private _dblValorNominal As System.Nullable(Of Double)

        Private _dblValorTotal As System.Nullable(Of Double)

        Private _lngIDSecuencia As Integer

        Private _lngIDDepositoExtranjero As System.Nullable(Of Integer)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDLiquidaciones_YankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDLiquidaciones_YankeesChanged()
        End Sub
        Partial Private Sub OnlngIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnstrComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnstrComitenteChanged()
        End Sub
        Partial Private Sub OnstrTipoIdentificacionChanging(value As System.Nullable(Of Char))
        End Sub
        Partial Private Sub OnstrTipoIdentificacionChanged()
        End Sub
        Partial Private Sub OnlngNroDocumentoChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnlngNroDocumentoChanged()
        End Sub
        Partial Private Sub OnstrDireccionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDireccionChanged()
        End Sub
        Partial Private Sub OnstrTelefono1Changing(value As String)
        End Sub
        Partial Private Sub OnstrTelefono1Changed()
        End Sub
        Partial Private Sub OndtmRegistroChanging(value As Date)
        End Sub
        Partial Private Sub OndtmRegistroChanged()
        End Sub
        Partial Private Sub OndtmCumplimientoChanging(value As Date)
        End Sub
        Partial Private Sub OndtmCumplimientoChanged()
        End Sub
        Partial Private Sub OnstrIsinChanging(value As String)
        End Sub
        Partial Private Sub OnstrIsinChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OnstrModalidadTituloChanging(value As String)
        End Sub
        Partial Private Sub OnstrModalidadTituloChanged()
        End Sub
        Partial Private Sub OnlngIDCertcusChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDCertcusChanged()
        End Sub
        Partial Private Sub OnlngIDNroCustodiaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDNroCustodiaChanged()
        End Sub
        Partial Private Sub OndblValorNominalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorNominalChanged()
        End Sub
        Partial Private Sub OndblValorTotalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblValorTotalChanged()
        End Sub
        Partial Private Sub OnlngIDSecuenciaChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDSecuenciaChanged()
        End Sub
        Partial Private Sub OnlngIDDepositoExtranjeroChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDDepositoExtranjeroChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDLiquidaciones_Yankees", DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property intIDLiquidaciones_Yankees() As Integer
            Get
                Return Me._intIDLiquidaciones_Yankees
            End Get
            Set
                If (Object.Equals(Me._intIDLiquidaciones_Yankees, Value) = False) Then
                    Me.OnintIDLiquidaciones_YankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDLiquidaciones_Yankees = Value
                    Me.SendPropertyChanged("intIDLiquidaciones_Yankees")
                    Me.OnintIDLiquidaciones_YankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngID", DbType:="Int NOT NULL")>
        Public Property lngID() As Integer
            Get
                Return Me._lngID
            End Get
            Set
                If ((Me._lngID = Value) _
                            = False) Then
                    Me.OnlngIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngID = Value
                    Me.SendPropertyChanged("lngID")
                    Me.OnlngIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="VarChar(17)")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strComitente", DbType:="VarChar(50)")>
        Public Property strComitente() As String
            Get
                Return Me._strComitente
            End Get
            Set
                If (String.Equals(Me._strComitente, Value) = False) Then
                    Me.OnstrComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strComitente = Value
                    Me.SendPropertyChanged("strComitente")
                    Me.OnstrComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoIdentificacion", DbType:="Char(1)")>
        Public Property strTipoIdentificacion() As System.Nullable(Of Char)
            Get
                Return Me._strTipoIdentificacion
            End Get
            Set
                If (Me._strTipoIdentificacion.Equals(Value) = False) Then
                    Me.OnstrTipoIdentificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoIdentificacion = Value
                    Me.SendPropertyChanged("strTipoIdentificacion")
                    Me.OnstrTipoIdentificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngNroDocumento", DbType:="Decimal(15,0)")>
        Public Property lngNroDocumento() As System.Nullable(Of Decimal)
            Get
                Return Me._lngNroDocumento
            End Get
            Set
                If (Me._lngNroDocumento.Equals(Value) = False) Then
                    Me.OnlngNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngNroDocumento = Value
                    Me.SendPropertyChanged("lngNroDocumento")
                    Me.OnlngNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDireccion", DbType:="VarChar(50)")>
        Public Property strDireccion() As String
            Get
                Return Me._strDireccion
            End Get
            Set
                If (String.Equals(Me._strDireccion, Value) = False) Then
                    Me.OnstrDireccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDireccion = Value
                    Me.SendPropertyChanged("strDireccion")
                    Me.OnstrDireccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTelefono1", DbType:="VarChar(25)")>
        Public Property strTelefono1() As String
            Get
                Return Me._strTelefono1
            End Get
            Set
                If (String.Equals(Me._strTelefono1, Value) = False) Then
                    Me.OnstrTelefono1Changing(Value)
                    Me.SendPropertyChanging()
                    Me._strTelefono1 = Value
                    Me.SendPropertyChanged("strTelefono1")
                    Me.OnstrTelefono1Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmRegistro", DbType:="DateTime NOT NULL")>
        Public Property dtmRegistro() As Date
            Get
                Return Me._dtmRegistro
            End Get
            Set
                If ((Me._dtmRegistro = Value) _
                            = False) Then
                    Me.OndtmRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmRegistro = Value
                    Me.SendPropertyChanged("dtmRegistro")
                    Me.OndtmRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmCumplimiento", DbType:="DateTime NOT NULL")>
        Public Property dtmCumplimiento() As Date
            Get
                Return Me._dtmCumplimiento
            End Get
            Set
                If ((Me._dtmCumplimiento = Value) _
                            = False) Then
                    Me.OndtmCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmCumplimiento = Value
                    Me.SendPropertyChanged("dtmCumplimiento")
                    Me.OndtmCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIsin", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
        Public Property strIsin() As String
            Get
                Return Me._strIsin
            End Get
            Set
                If (String.Equals(Me._strIsin, Value) = False) Then
                    Me.OnstrIsinChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIsin = Value
                    Me.SendPropertyChanged("strIsin")
                    Me.OnstrIsinChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="VarChar(15) NOT NULL", CanBeNull:=False)>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="DateTime")>
        Public Property dtmEmision() As System.Nullable(Of Date)
            Get
                Return Me._dtmEmision
            End Get
            Set
                If (Me._dtmEmision.Equals(Value) = False) Then
                    Me.OndtmEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = Value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="DateTime")>
        Public Property dtmVencimiento() As System.Nullable(Of Date)
            Get
                Return Me._dtmVencimiento
            End Get
            Set
                If (Me._dtmVencimiento.Equals(Value) = False) Then
                    Me.OndtmVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = Value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModalidadTitulo", DbType:="VarChar(2)")>
        Public Property strModalidadTitulo() As String
            Get
                Return Me._strModalidadTitulo
            End Get
            Set
                If (String.Equals(Me._strModalidadTitulo, Value) = False) Then
                    Me.OnstrModalidadTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModalidadTitulo = Value
                    Me.SendPropertyChanged("strModalidadTitulo")
                    Me.OnstrModalidadTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDCertcus", DbType:="Int")>
        Public Property lngIDCertcus() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDCertcus
            End Get
            Set
                If (Me._lngIDCertcus.Equals(Value) = False) Then
                    Me.OnlngIDCertcusChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDCertcus = Value
                    Me.SendPropertyChanged("lngIDCertcus")
                    Me.OnlngIDCertcusChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDNroCustodia", DbType:="Int")>
        Public Property lngIDNroCustodia() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDNroCustodia
            End Get
            Set
                If (Me._lngIDNroCustodia.Equals(Value) = False) Then
                    Me.OnlngIDNroCustodiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDNroCustodia = Value
                    Me.SendPropertyChanged("lngIDNroCustodia")
                    Me.OnlngIDNroCustodiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorNominal", DbType:="Float")>
        Public Property dblValorNominal() As System.Nullable(Of Double)
            Get
                Return Me._dblValorNominal
            End Get
            Set
                If (Me._dblValorNominal.Equals(Value) = False) Then
                    Me.OndblValorNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorNominal = Value
                    Me.SendPropertyChanged("dblValorNominal")
                    Me.OndblValorNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorTotal", DbType:="Float")>
        Public Property dblValorTotal() As System.Nullable(Of Double)
            Get
                Return Me._dblValorTotal
            End Get
            Set
                If (Me._dblValorTotal.Equals(Value) = False) Then
                    Me.OndblValorTotalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblValorTotal = Value
                    Me.SendPropertyChanged("dblValorTotal")
                    Me.OndblValorTotalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDSecuencia", DbType:="Int NOT NULL")>
        Public Property lngIDSecuencia() As Integer
            Get
                Return Me._lngIDSecuencia
            End Get
            Set
                If ((Me._lngIDSecuencia = Value) _
                            = False) Then
                    Me.OnlngIDSecuenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDSecuencia = Value
                    Me.SendPropertyChanged("lngIDSecuencia")
                    Me.OnlngIDSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDDepositoExtranjero", DbType:="Int")>
        Public Property lngIDDepositoExtranjero() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDDepositoExtranjero
            End Get
            Set
                If (Me._lngIDDepositoExtranjero.Equals(Value) = False) Then
                    Me.OnlngIDDepositoExtranjeroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDDepositoExtranjero = Value
                    Me.SendPropertyChanged("lngIDDepositoExtranjero")
                    Me.OnlngIDDepositoExtranjeroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblFacturasYankees")>
    Partial Public Class FacturaYankees
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDComisionista As Integer

        Private _IDSucComisionista As Integer

        Private _Prefijo As String

        Private _Numero As Integer

        Private _Prefijo_Numero As String

        Private _Comitente As String

        Private _Nombre As String

        Private _Fecha_Documento As Date

        Private _Estado As String

        Private _Fecha_Estado As Date

        Private _Impresiones As Integer

        Private _Actualizacion As Date

        Private _Usuario As String

        Private _IDfacturasYankees As Integer

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDComisionistaChanged()
        End Sub
        Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDSucComisionistaChanged()
        End Sub
        Partial Private Sub OnPrefijoChanging(value As String)
        End Sub
        Partial Private Sub OnPrefijoChanged()
        End Sub
        Partial Private Sub OnNumeroChanging(value As Integer)
        End Sub
        Partial Private Sub OnNumeroChanged()
        End Sub
        Partial Private Sub OnPrefijo_NumeroChanging(value As String)
        End Sub
        Partial Private Sub OnPrefijo_NumeroChanged()
        End Sub
        Partial Private Sub OnComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnComitenteChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnFecha_DocumentoChanging(value As Date)
        End Sub
        Partial Private Sub OnFecha_DocumentoChanged()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnFecha_EstadoChanging(value As Date)
        End Sub
        Partial Private Sub OnFecha_EstadoChanged()
        End Sub
        Partial Private Sub OnImpresionesChanging(value As Integer)
        End Sub
        Partial Private Sub OnImpresionesChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnIDfacturasYankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDfacturasYankeesChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDComisionista() As Integer
            Get
                Return Me._IDComisionista
            End Get
            Set
                If (Object.Equals(Me._IDComisionista, Value) = False) Then
                    Me.OnIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComisionista = Value
                    Me.SendPropertyChanged("IDComisionista")
                    Me.OnIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDSucComisionista() As Integer
            Get
                Return Me._IDSucComisionista
            End Get
            Set
                If (Object.Equals(Me._IDSucComisionista, Value) = False) Then
                    Me.OnIDSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucComisionista = Value
                    Me.SendPropertyChanged("IDSucComisionista")
                    Me.OnIDSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5) NOT NULL", CanBeNull:=False)>
        Public Property Prefijo() As String
            Get
                Return Me._Prefijo
            End Get
            Set
                If (String.Equals(Me._Prefijo, Value) = False) Then
                    Me.OnPrefijoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prefijo = Value
                    Me.SendPropertyChanged("Prefijo")
                    Me.OnPrefijoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Numero", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Numero() As Integer
            Get
                Return Me._Numero
            End Get
            Set
                If (Object.Equals(Me._Numero, Value) = False) Then
                    Me.OnNumeroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Numero = Value
                    Me.SendPropertyChanged("Numero")
                    Me.OnNumeroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefijo_Numero", DbType:="Varchar(30) NOT NULL")>
        Public Property Prefijo_Numero() As String
            Get
                Return Me._Prefijo_Numero
            End Get
            Set
                If (String.Equals(Me._Prefijo_Numero, Value) = False) Then
                    Me.OnPrefijo_NumeroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prefijo_Numero = Value
                    Me.SendPropertyChanged("Prefijo_Numero")
                    Me.OnPrefijo_NumeroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_Comitente", DbType:="Char(17) NOT NULL", CanBeNull:=False)>
        Public Property Comitente() As String
            Get
                Return Me._Comitente
            End Get
            Set
                If (String.Equals(Me._Comitente, Value) = False) Then
                    Me.OnComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Comitente = Value
                    Me.SendPropertyChanged("Comitente")
                    Me.OnComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(250) NOT NULL", CanBeNull:=False)>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmDocumento", Storage:="_Fecha_Documento", DbType:="Datetime NOT NULL")>
        Public Property Fecha_Documento() As Date
            Get
                Return Me._Fecha_Documento
            End Get
            Set
                If ((Me._Fecha_Documento = Value) _
                            = False) Then
                    Me.OnFecha_DocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha_Documento = Value
                    Me.SendPropertyChanged("Fecha_Documento")
                    Me.OnFecha_DocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1) NOT NULL", CanBeNull:=False)>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Fecha_Estado", DbType:="Datetime NOT NULL")>
        Public Property Fecha_Estado() As Date
            Get
                Return Me._Fecha_Estado
            End Get
            Set
                If ((Me._Fecha_Estado = Value) _
                            = False) Then
                    Me.OnFecha_EstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha_Estado = Value
                    Me.SendPropertyChanged("Fecha_Estado")
                    Me.OnFecha_EstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Impresiones() As Integer
            Get
                Return Me._Impresiones
            End Get
            Set
                If (Object.Equals(Me._Impresiones, Value) = False) Then
                    Me.OnImpresionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Impresiones = Value
                    Me.SendPropertyChanged("Impresiones")
                    Me.OnImpresionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>
        Public Property Actualizacion() As Date
            Get
                Return Me._Actualizacion
            End Get
            Set
                If ((Me._Actualizacion = Value) _
                            = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDfacturasYankees", Storage:="_IDfacturasYankees", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDfacturasYankees() As Integer
            Get
                Return Me._IDfacturasYankees
            End Get
            Set
                If (Object.Equals(Me._IDfacturasYankees, Value) = False) Then
                    Me.OnIDfacturasYankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDfacturasYankees = Value
                    Me.SendPropertyChanged("IDfacturasYankees")
                    Me.OnIDfacturasYankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblNotasYankees")>
    Partial Public Class NotasYankees
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDTesoreriaYankees As Integer

        Private _strNombreConsecutivo As String

        Private _lngIdDocumento As Integer

        Private _dtmDocumento As Date

        Private _strEstado As String

        Private _ValorEstado As String

        Private _dtmEstado As Date

        Private _lngImpresiones As Integer

        Private _strDescripcion As String

        Private _strOpcion As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDTesoreriaYankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDTesoreriaYankeesChanged()
        End Sub
        Partial Private Sub OnstrNombreConsecutivoChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreConsecutivoChanged()
        End Sub
        Partial Private Sub OnlngIdDocumentoChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIdDocumentoChanged()
        End Sub
        Partial Private Sub OndtmDocumentoChanging(value As Date)
        End Sub
        Partial Private Sub OndtmDocumentoChanged()
        End Sub
        Partial Private Sub OnstrEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoChanged()
        End Sub
        Partial Private Sub OnValorEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnValorEstadoChanged()
        End Sub
        Partial Private Sub OndtmEstadoChanging(value As Date)
        End Sub
        Partial Private Sub OndtmEstadoChanged()
        End Sub
        Partial Private Sub OnlngImpresionesChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngImpresionesChanged()
        End Sub
        Partial Private Sub OnstrDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionChanged()
        End Sub
        Partial Private Sub OnstrOpcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrOpcionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDTesoreriaYankees", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDTesoreriaYankees() As Integer
            Get
                Return Me._intIDTesoreriaYankees
            End Get
            Set
                If (Object.Equals(Me._intIDTesoreriaYankees, Value) = False) Then
                    Me.OnintIDTesoreriaYankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDTesoreriaYankees = Value
                    Me.SendPropertyChanged("intIDTesoreriaYankees")
                    Me.OnintIDTesoreriaYankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreConsecutivo", DbType:="Varchar(20) NULL")>
        Public Property strNombreConsecutivo() As String
            Get
                Return Me._strNombreConsecutivo
            End Get
            Set
                If (String.Equals(Me._strNombreConsecutivo, Value) = False) Then
                    Me.OnstrNombreConsecutivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreConsecutivo = Value
                    Me.SendPropertyChanged("strNombreConsecutivo")
                    Me.OnstrNombreConsecutivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdDocumento", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property lngIdDocumento() As Integer
            Get
                Return Me._lngIdDocumento
            End Get
            Set
                If (Object.Equals(Me._lngIdDocumento, Value) = False) Then
                    Me.OnlngIdDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdDocumento = Value
                    Me.SendPropertyChanged("lngIdDocumento")
                    Me.OnlngIdDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmDocumento", DbType:="datetime NOT NULL", CanBeNull:=True)>
        Public Property dtmDocumento() As Date
            Get
                Return Me._dtmDocumento
            End Get
            Set
                If (Object.Equals(Me._dtmDocumento, Value) = False) Then
                    Me.OndtmDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmDocumento = Value
                    Me.SendPropertyChanged("dtmDocumento")
                    Me.OndtmDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstado", DbType:="varchar(30) NOT NULL", CanBeNull:=False)>
        Public Property strEstado() As String
            Get
                Return Me._strEstado
            End Get
            Set
                If (String.Equals(Me._strEstado, Value) = False) Then
                    Me.OnstrEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstado = Value
                    Me.SendPropertyChanged("strEstado")
                    Me.OnstrEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorEstado", DbType:="varchar(2) NOT NULL", CanBeNull:=False)>
        Public Property ValorEstado() As String
            Get
                Return Me._ValorEstado
            End Get
            Set
                If (String.Equals(Me._ValorEstado, Value) = False) Then
                    Me.OnValorEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorEstado = Value
                    Me.SendPropertyChanged("ValorEstado")
                    Me.OnValorEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEstado", DbType:="datetime NOT NULL", CanBeNull:=True)>
        Public Property dtmEstado() As Date
            Get
                Return Me._dtmEstado
            End Get
            Set
                If (Object.Equals(Me._dtmEstado, Value) = False) Then
                    Me.OndtmEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEstado = Value
                    Me.SendPropertyChanged("dtmEstado")
                    Me.OndtmEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngImpresiones", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property lngImpresiones() As Integer
            Get
                Return Me._lngImpresiones
            End Get
            Set
                If (Object.Equals(Me._lngImpresiones, Value) = False) Then
                    Me.OnlngImpresionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngImpresiones = Value
                    Me.SendPropertyChanged("lngImpresiones")
                    Me.OnlngImpresionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="varchar(60) NULL")>
        Public Property strDescripcion() As String
            Get
                Return Me._strDescripcion
            End Get
            Set
                If (String.Equals(Me._strDescripcion, Value) = False) Then
                    Me.OnstrDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcion = Value
                    Me.SendPropertyChanged("strDescripcion")
                    Me.OnstrDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOpcion", DbType:="varchar(3)NOT NULL", CanBeNull:=False)>
        Public Property strOpcion() As String
            Get
                Return Me._strOpcion
            End Get
            Set
                If (String.Equals(Me._strOpcion, Value) = False) Then
                    Me.OnstrOpcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strOpcion = Value
                    Me.SendPropertyChanged("strOpcion")
                    Me.OnstrOpcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)  NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblNotasYankeesDetalle")>
    Partial Public Class NotasYankeesDetalle
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDDetalleTesoreriaYankees As Integer

        Private _strIdComitente As String

        Private _strNombre As String

        Private _strDetalle As String

        Private _strEstado As String

        Private _curValor As System.Nullable(Of Double)

        Private _curValorCredito As System.Nullable(Of Double)

        Private _curValorDebito As System.Nullable(Of Double)

        Private _strIDCuentaContable As String

        Private _strTipo As String

        Private _ValorTipo As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDDetalleTesoreriaYankeesChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDDetalleTesoreriaYankeesChanged()
        End Sub
        Partial Private Sub OnstrIdComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnstrIdComitenteChanged()
        End Sub
        Partial Private Sub OnstrNombreChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreChanged()
        End Sub
        Partial Private Sub OnstrDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnstrDetalleChanged()
        End Sub
        Partial Private Sub OnstrEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoChanged()
        End Sub
        Partial Private Sub OncurValorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurValorChanged()
        End Sub
        Partial Private Sub OncurValorCreditoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurValorCreditoChanged()
        End Sub
        Partial Private Sub OncurValorDebitoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurValorDebitoChanged()
        End Sub
        Partial Private Sub OnstrIDCuentaContableChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDCuentaContableChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnValorTipoChanging(value As String)
        End Sub
        Partial Private Sub OnValorTipoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDDetalleTesoreriaYankees", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDDetalleTesoreriaYankees() As Integer
            Get
                Return Me._intIDDetalleTesoreriaYankees
            End Get
            Set
                If (Object.Equals(Me._intIDDetalleTesoreriaYankees, Value) = False) Then
                    Me.OnintIDDetalleTesoreriaYankeesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDDetalleTesoreriaYankees = Value
                    Me.SendPropertyChanged("intIDDetalleTesoreriaYankees")
                    Me.OnintIDDetalleTesoreriaYankeesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIdComitente", DbType:="Char(17)")>
        Public Property strIdComitente() As String
            Get
                Return Me._strIdComitente
            End Get
            Set
                If (String.Equals(Me._strIdComitente, Value) = False) Then
                    Me.OnstrIdComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIdComitente = Value
                    Me.SendPropertyChanged("strIdComitente")
                    Me.OnstrIdComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="varchar(60) NULL")>
        Public Property strNombre() As String
            Get
                Return Me._strNombre
            End Get
            Set
                If (String.Equals(Me._strNombre, Value) = False) Then
                    Me.OnstrNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombre = Value
                    Me.SendPropertyChanged("strNombre")
                    Me.OnstrNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDetalle", DbType:="varchar(80)NOT NULL", CanBeNull:=False)>
        Public Property strDetalle() As String
            Get
                Return Me._strDetalle
            End Get
            Set
                If (String.Equals(Me._strDetalle, Value) = False) Then
                    Me.OnstrDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDetalle = Value
                    Me.SendPropertyChanged("strDetalle")
                    Me.OnstrDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstado", DbType:="varchar(30) NOT NULL", CanBeNull:=False)>
        Public Property strEstado() As String
            Get
                Return Me._strEstado
            End Get
            Set
                If (String.Equals(Me._strEstado, Value) = False) Then
                    Me.OnstrEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstado = Value
                    Me.SendPropertyChanged("strEstado")
                    Me.OnstrEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curValor", DbType:="money NOT NULL", CanBeNull:=False)>
        Public Property curValor() As System.Nullable(Of Double)
            Get
                Return Me._curValor
            End Get
            Set
                If (Object.Equals(Me._curValor, Value) = False) Then
                    Me.OncurValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curValor = Value
                    Me.SendPropertyChanged("curValor")
                    Me.OncurValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curValorCredito", DbType:="money NOT NULL", CanBeNull:=False)>
        Public Property curValorCredito() As System.Nullable(Of Double)
            Get
                Return Me._curValorCredito
            End Get
            Set
                If (Object.Equals(Me._curValorCredito, Value) = False) Then
                    Me.OncurValorCreditoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curValorCredito = Value
                    Me.SendPropertyChanged("curValorCredito")
                    Me.OncurValorCreditoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curValorDebito", DbType:="money NOT NULL", CanBeNull:=False)>
        Public Property curValorDebito() As System.Nullable(Of Double)
            Get
                Return Me._curValorDebito
            End Get
            Set
                If (Object.Equals(Me._curValorDebito, Value) = False) Then
                    Me.OncurValorDebitoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curValorDebito = Value
                    Me.SendPropertyChanged("curValorDebito")
                    Me.OncurValorDebitoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDCuentaContable", DbType:="varchar(15)")>
        Public Property strIDCuentaContable() As String
            Get
                Return Me._strIDCuentaContable
            End Get
            Set
                If (String.Equals(Me._strIDCuentaContable, Value) = False) Then
                    Me.OnstrIDCuentaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDCuentaContable = Value
                    Me.SendPropertyChanged("strIDCuentaContable")
                    Me.OnstrIDCuentaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="varchar(50)  NULL", CanBeNull:=True)>
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set
                If (Object.Equals(Me._strTipo, Value) = False) Then
                    Me.OnstrTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipo = Value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorTipo", DbType:="varchar(2) NOT NULL", CanBeNull:=False)>
        Public Property ValorTipo() As String
            Get
                Return Me._ValorTipo
            End Get
            Set
                If (Object.Equals(Me._ValorTipo, Value) = False) Then
                    Me.OnValorTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorTipo = Value
                    Me.SendPropertyChanged("ValorTipo")
                    Me.OnValorTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    Partial Public Class Usp_ConsBaseCalculoEspecies_LiquidacionesYankees_OyDNetResult

        Private _strDescripcion As String

        Public Sub New()
            MyBase.New
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="VarChar(30) NOT NULL", CanBeNull:=False)>
        Public Property strDescripcion() As String
            Get
                Return Me._strDescripcion
            End Get
            Set
                If (String.Equals(Me._strDescripcion, Value) = False) Then
                    Me._strDescripcion = Value
                End If
            End Set
        End Property
    End Class
End Namespace

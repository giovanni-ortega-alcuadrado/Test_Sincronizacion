'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYDPlus")>
Partial Public Class OyD_OTCDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub DeleteLiquidaciones_OT(instance As Liquidaciones_OT)
    End Sub
    Partial Private Sub InserttmpResultado(instance As tmpResultado)
    End Sub
    Partial Private Sub UpdatetmpResultado(instance As tmpResultado)
    End Sub
    Partial Private Sub DeletetmpResultado(instance As tmpResultado)
    End Sub
    Partial Private Sub InserttblImportacionLiqSEN(instance As tblImportacionLiqSEN)
    End Sub
    Partial Private Sub UpdatetblImportacionLiqSEN(instance As tblImportacionLiqSEN)
    End Sub
    Partial Private Sub DeletetblImportacionLiqSEN(instance As tblImportacionLiqSEN)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property Liquidaciones_OTC() As System.Data.Linq.Table(Of Liquidaciones_OT)
        Get
            Return Me.GetTable(Of Liquidaciones_OT)
        End Get
    End Property

    Public ReadOnly Property ReceptoresOTC() As System.Data.Linq.Table(Of ReceptoresOT)
        Get
            Return Me.GetTable(Of ReceptoresOT)
        End Get
    End Property

    Public ReadOnly Property Facturas_OTC() As System.Data.Linq.Table(Of Factura_OTC)
        Get
            Return Me.GetTable(Of Factura_OTC)
        End Get
    End Property

    Public ReadOnly Property tmpResultados() As System.Data.Linq.Table(Of tmpResultado)
        Get
            Return Me.GetTable(Of tmpResultado)
        End Get
    End Property

    Public ReadOnly Property tblImportacionLiqSENs() As System.Data.Linq.Table(Of tblImportacionLiqSEN)
        Get
            Return Me.GetTable(Of tblImportacionLiqSEN)
        End Get
    End Property

    Private Sub InsertLiquidaciones_OT(ByVal obj As Liquidaciones_OT)
        Dim p1 As Integer = obj.ID
        Dim p2 As Integer = obj.IdLiquidaciones_OTC
        Me.uspOyDNet_OTC_Liquidaciones_OTC_Actualizar(p1, obj.NOMBRESISTEMA, obj.NUMEROOPERACION, CType(obj.OPERACION, System.Nullable(Of Date)), obj.TIPOOPERACION, obj.Mercado, obj.TIPONEGOCIACION, obj.REGISTROOPERACION, obj.TIPOPAGOOPERACION, obj.IDESPECIE, CType(obj.CANTIDADNEGOCIADA, System.Nullable(Of Double)), CType(obj.EMISION, System.Nullable(Of Date)), CType(obj.CUMPLIMIENTO, System.Nullable(Of Date)), CType(obj.VENCIMIENTO, System.Nullable(Of Date)), obj.DIASALVENCIMIENTOTITULO, CType(obj.TASAINTERESNOMINAL, System.Nullable(Of Double)), obj.MODALIDADTASANOMINAL, CType(obj.TASAEFECTIVAANUAL, System.Nullable(Of Double)), CType(obj.PRECIO, System.Nullable(Of Double)), CType(obj.MONTO, System.Nullable(Of Double)), obj.IDREPRESENTANTELEGAL, obj.IDCOMITENTE, obj.NROTITULO, obj.INDICADOR, CType(obj.PUNTOSINDICADOR, System.Nullable(Of Single)), CType(obj.RENTAFIJA, System.Nullable(Of Boolean)), obj.PREFIJO, obj.IDFACTURA, obj.ESTADO, obj.USUARIO, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
        obj.IdLiquidaciones_OTC = p2
    End Sub

    Private Sub UpdateLiquidaciones_OT(ByVal obj As Liquidaciones_OT)
        Dim p1 As Integer = obj.ID
        Dim p2 As Integer = obj.IdLiquidaciones_OTC
        Me.uspOyDNet_OTC_Liquidaciones_OTC_Actualizar(p1, obj.NOMBRESISTEMA, obj.NUMEROOPERACION, CType(obj.OPERACION, System.Nullable(Of Date)), obj.TIPOOPERACION, obj.Mercado, obj.TIPONEGOCIACION, obj.REGISTROOPERACION, obj.TIPOPAGOOPERACION, obj.IDESPECIE, CType(obj.CANTIDADNEGOCIADA, System.Nullable(Of Double)), CType(obj.EMISION, System.Nullable(Of Date)), CType(obj.CUMPLIMIENTO, System.Nullable(Of Date)), CType(obj.VENCIMIENTO, System.Nullable(Of Date)), obj.DIASALVENCIMIENTOTITULO, CType(obj.TASAINTERESNOMINAL, System.Nullable(Of Double)), obj.MODALIDADTASANOMINAL, CType(obj.TASAEFECTIVAANUAL, System.Nullable(Of Double)), CType(obj.PRECIO, System.Nullable(Of Double)), CType(obj.MONTO, System.Nullable(Of Double)), obj.IDREPRESENTANTELEGAL, obj.IDCOMITENTE, obj.NROTITULO, obj.INDICADOR, CType(obj.PUNTOSINDICADOR, System.Nullable(Of Single)), CType(obj.RENTAFIJA, System.Nullable(Of Boolean)), obj.PREFIJO, obj.IDFACTURA, obj.ESTADO, obj.USUARIO, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
        obj.IdLiquidaciones_OTC = p2
    End Sub

    Private Sub InsertReceptoresOT(ByVal obj As ReceptoresOT)
        Dim p1 As System.Nullable(Of Integer) = obj.IDReceptoresOTC
        Me.uspOyDNet_OTC_ReceptoresOTC_Actualizar(p1, obj.Id, obj.IDReceptor, CType(obj.Lider, System.Nullable(Of Boolean)), CType(obj.Porcentaje, System.Nullable(Of Double)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDReceptoresOTC = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateReceptoresOT(ByVal obj As ReceptoresOT)
        Dim p1 As System.Nullable(Of Integer) = obj.IDReceptoresOTC
        Me.uspOyDNet_OTC_ReceptoresOTC_Actualizar(p1, obj.Id, obj.IDReceptor, CType(obj.Lider, System.Nullable(Of Boolean)), CType(obj.Porcentaje, System.Nullable(Of Double)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDReceptoresOTC = p1.GetValueOrDefault
    End Sub

    Private Sub DeleteReceptoresOT(ByVal obj As ReceptoresOT)
        Me.uspOyDNet_OTC_ReceptoresOTC_Eliminar(obj.Id, obj.IDReceptor, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertFactura_OTC(ByVal obj As Factura_OTC)
        Me.uspOyDNet_OTC_ReceptoresOTC_Eliminar(obj.Numero, CType(Nothing, String), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub UpdateFactura_OTC(ByVal obj As Factura_OTC)
        Me.uspOyDNet_OTC_ReceptoresOTC_Eliminar(obj.Numero, CType(Nothing, String), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub DeleteFactura_OTC(ByVal obj As Factura_OTC)
        Me.uspOyDNet_OTC_ReceptoresOTC_Eliminar(CType(Nothing, Integer), CType(Nothing, String), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_OTC_Actualizar")>
    Public Function uspOyDNet_OTC_Liquidaciones_OTC_Actualizar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pLNGID As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pSTRNOMBRESISTEMA As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGNUMEROOPERACION As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pDTMOPERACION As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pSTRTIPOOPERACION As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrMercado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pSTRTIPONEGOCIACION As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pSTRREGISTROOPERACION As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pSTRTIPOPAGOOPERACION As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pSTRIDESPECIE As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pDBLCANTIDADNEGOCIADA As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pDTMEMISION As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pDTMCUMPLIMIENTO As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pDTMVENCIMIENTO As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGDIASALVENCIMIENTOTITULO As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pDBLTASAINTERESNOMINAL As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pSTRMODALIDADTASANOMINAL As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pDBLTASAEFECTIVAANUAL As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pDBLPRECIO As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pDBLMONTO As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pSTRIDREPRESENTANTELEGAL As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pLNGIDCOMITENTE As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pSTRNROTITULO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pSTRINDICADOR As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="real")> ByVal pLNGPUNTOSINDICADOR As System.Nullable(Of Single),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pLOGRENTAFIJA As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pSTRPREFIJO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGIDFACTURA As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pSTRESTADO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pSTRUSUARIO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdLiquidaciones_OTC As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pLNGID, pSTRNOMBRESISTEMA, pLNGNUMEROOPERACION, pDTMOPERACION, pSTRTIPOOPERACION, pstrMercado, pSTRTIPONEGOCIACION, pSTRREGISTROOPERACION, pSTRTIPOPAGOOPERACION, pSTRIDESPECIE, pDBLCANTIDADNEGOCIADA, pDTMEMISION, pDTMCUMPLIMIENTO, pDTMVENCIMIENTO, pLNGDIASALVENCIMIENTOTITULO, pDBLTASAINTERESNOMINAL, pSTRMODALIDADTASANOMINAL, pDBLTASAEFECTIVAANUAL, pDBLPRECIO, pDBLMONTO, pSTRIDREPRESENTANTELEGAL, pLNGIDCOMITENTE, pSTRNROTITULO, pSTRINDICADOR, pLNGPUNTOSINDICADOR, pLOGRENTAFIJA, pSTRPREFIJO, pLNGIDFACTURA, pSTRESTADO, pSTRUSUARIO, pintIdLiquidaciones_OTC, infosesion, pintErrorPersonalizado)
        pLNGID = CType(result.GetParameterValue(0), Integer)
        pintIdLiquidaciones_OTC = CType(result.GetParameterValue(30), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_OTC_Eliminar")>
    Public Function uspOyDNet_OTC_Liquidaciones_OTC_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pSTRUSUARIO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pLNGID, pSTRUSUARIO, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_OTC_Consultar")>
    Public Function uspOyDNet_OTC_Liquidaciones_OTC_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGID As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGNUMEROOPERACION As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pDTMOPERACION As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pDTMCUMPLIMIENTO As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pLNGIDCOMITENTE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pSTRIDESPECIE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pSTRUSUARIO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Liquidaciones_OT)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pLNGID, pLNGNUMEROOPERACION, pDTMOPERACION, pDTMCUMPLIMIENTO, pLNGIDCOMITENTE, pSTRIDESPECIE, pSTRUSUARIO, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of Liquidaciones_OT))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_OTC_Filtrar")>
    Public Function uspOyDNet_OTC_Liquidaciones_OTC_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Liquidaciones_OT)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of Liquidaciones_OT))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_ReceptoresOTC_Actualizar")>
    Public Function uspOyDNet_OTC_ReceptoresOTC_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintIDReceptoresOTC As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLider As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentaje As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDReceptoresOTC, plngId, pstrIDReceptor, plogLider, pdblPorcentaje, pstrUsuario, infosesion, pintErrorPersonalizado)
        pintIDReceptoresOTC = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_ReceptoresOTC_Eliminar")>
    Public Function uspOyDNet_OTC_ReceptoresOTC_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngId, pstrIDReceptor, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_ReceptoresOTC_Consultar")>
    Public Function uspOyDNet_OTC_ReceptoresOTC_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ReceptoresOT)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngId, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of ReceptoresOT))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_tblFacturasOTC_Consultar")>
    Public Function uspOyDNet_OTC_tblFacturasOTC_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmDocumento", DbType:="DateTime")> ByVal dtmDocumento As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreComitente", DbType:="Varchar(50)")> ByVal strNombreComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Factura_OTC)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngID, lngIDComitente, dtmDocumento, strNombreComitente, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of Factura_OTC))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_FacturarOTC_Filtrar")>
    Public Function uspOyDNet_OTC_FacturarOTC_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Factura_OTC)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of Factura_OTC))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_tblFacturasOTC_TotalFactura")>
    Public Function uspOyDNet_OTC_tblFacturasOTC_TotalFactura(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDFactura As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal strPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef curTotalFactura As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDFactura, strPrefijo, curTotalFactura, infosesion, pintErrorPersonalizado)
        curTotalFactura = CType(result.GetParameterValue(2), System.Nullable(Of Double))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_OTC_Factura_Consultar")>
    Public Function uspOyDNet_OTC_Liquidaciones_OTC_Factura_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLNGIDFACTURA As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrPrefijo", DbType:="varchar(5)")> ByVal strPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pSTRUSUARIO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Liquidaciones_OT)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pLNGIDFACTURA, strPrefijo, pSTRUSUARIO, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of Liquidaciones_OT))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_FacturarOTC_Eliminar")>
    Public Function uspOyDNet_OTC_FacturarOTC_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDfacturas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDfacturas, lngID, pstrPrefijo, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_sprptConstanciaOperacionOTC")>
    Public Function uspOyDNet_OTC_sprptConstanciaOperacionOTC(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDInicial", DbType:="int")> ByVal lngIDInicial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDFinal", DbType:="int")> ByVal lngIDFinal As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaIni", DbType:="Datetime")> ByVal dtmFechaIni As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaFin", DbType:="Datetime")> ByVal dtmFechaFin As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Liquidaciones_OT)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDInicial, lngIDFinal, dtmFechaIni, dtmFechaFin, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of Liquidaciones_OT))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_rptPlantillaConstanciaOperacionOTC")>
    Public Function uspOyDNet_OTC_rptPlantillaConstanciaOperacionOTC(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDInicial", DbType:="int")> ByVal lngIDInicial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDFinal", DbType:="int")> ByVal lngIDFinal As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaIni", DbType:="Datetime")> ByVal dtmFechaIni As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmFechaFin", DbType:="Datetime")> ByVal dtmFechaFin As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(120000)")> ByRef pstrHTMLPlantillaOTC As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDInicial, lngIDFinal, dtmFechaIni, dtmFechaFin, pstrUsuario, infosesion, pintErrorPersonalizado, pstrHTMLPlantillaOTC)
        pstrHTMLPlantillaOTC = CType(result.GetParameterValue(7), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_sprptConstanciaOperacionReceptoresOTC")>
    Public Function uspOyDNet_OTC_sprptConstanciaOperacionReceptoresOTC(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOperacion", DbType:="int")> ByVal lngIDOperacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ReceptoresOT)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), lngIDOperacion, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of ReceptoresOT))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ufnOYDNet_Accion_Actualizar", IsComposable:=True)>
    Public Function ufnOYDNet_Accion_Actualizar() As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo)).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ufnOYDNet_Accion_Validar", IsComposable:=True)>
    Public Function ufnOYDNet_Accion_Validar() As String
        Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo)).ReturnValue, String)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_SEN_Importar")>
    Public Function uspOyDNet_OTC_Liquidaciones_SEN_Importar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrMetodo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaImportacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pdtmHoraImportacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDOperacion As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrTipo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngDiasVencimiento As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurEquivalente As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurTotal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurPrecio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaEmision As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVencimiento As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaLiquidacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrTipoNegociacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrISINTitulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidadGarantia As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrRueda As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of tmpResultado)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrMetodo, pstrUsuario, pdtmFechaImportacion, pdtmHoraImportacion, plngIDOperacion, plngIdComitente, pstrTipo, pstrEspecie, pdblCantidad, plngDiasVencimiento, pcurEquivalente, pcurTotal, pcurPrecio, pdtmFechaEmision, pdtmFechaVencimiento, pdtmFechaLiquidacion, pstrTipoNegociacion, pstrISINTitulo, pdblCantidadGarantia, pstrRueda, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of tmpResultado))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_OTC_Liquidaciones_SEN_ImportarMasivo")>
    Public Function uspOyDNet_OTC_Liquidaciones_SEN_ImportarMasivo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrMetodo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrRegistros As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of tmpResultado)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrMetodo, pstrRegistros, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of tmpResultado))
    End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidaciones_OTC")>
Partial Public Class Liquidaciones_OT
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer

    Private _VERSION As System.Nullable(Of System.Int32)

    Private _NOMBRESISTEMA As String

    Private _NUMEROOPERACION As System.Nullable(Of System.Int32)

    Private _OPERACION As System.Nullable(Of Date)

    Private _TIPOOPERACION As String

    Private _Mercado As String

    Private _TIPONEGOCIACION As String

    Private _REGISTROOPERACION As String

    Private _TIPOPAGOOPERACION As String

    Private _IDESPECIE As String

    Private _CANTIDADNEGOCIADA As System.Nullable(Of Double)

    Private _EMISION As System.Nullable(Of Date)

    Private _CUMPLIMIENTO As Date

    Private _VENCIMIENTO As System.Nullable(Of Date)

    Private _DIASALVENCIMIENTOTITULO As System.Nullable(Of System.Int32)

    Private _TASAINTERESNOMINAL As System.Nullable(Of Double)

    Private _MODALIDADTASANOMINAL As String

    Private _TASAEFECTIVAANUAL As System.Nullable(Of Double)

    Private _PRECIO As System.Nullable(Of Double)

    Private _MONTO As System.Nullable(Of Double)

    Private _IDREPRESENTANTELEGAL As String

    Private _IDCOMITENTE As String

    Private _NROTITULO As String

    Private _INDICADOR As String

    Private _PUNTOSINDICADOR As System.Nullable(Of Single)

    Private _RENTAFIJA As System.Nullable(Of Boolean)

    Private _PREFIJO As String

    Private _IDFACTURA As System.Nullable(Of System.Int32)

    Private _FACTURADA As String

    Private _NOMBRECLIENTE As String

    Private _NOMBREREPRESENTANTE As String

    Private _NOMBREESPECIE As String

    Private _FormaPago As String

    Private _ESTADO As String

    Private _NroLote As System.Nullable(Of System.Int32)

    Private _ACTUALIZACION As System.Nullable(Of Date)

    Private _USUARIO As String

    Private _NroLoteENC As System.Nullable(Of System.Int32)

    Private _ContabilidadENC As System.Nullable(Of Date)

    Private _ESPECIE_ESACCION As String

    Private _IdLiquidaciones_OTC As Integer

    Private _InfoSesion As String

    Private _Cargado As System.Nullable(Of System.Boolean)

    Private _pstrUsuarioConexion As String

    Private _pstrInfoConexion As String

    Private _ReceptoresOTs As EntitySet(Of ReceptoresOT)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnVERSIONChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnVERSIONChanged()
    End Sub
    Partial Private Sub OnNOMBRESISTEMAChanging(value As String)
    End Sub
    Partial Private Sub OnNOMBRESISTEMAChanged()
    End Sub
    Partial Private Sub OnNUMEROOPERACIONChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnNUMEROOPERACIONChanged()
    End Sub
    Partial Private Sub OnOPERACIONChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOPERACIONChanged()
    End Sub
    Partial Private Sub OnTIPOOPERACIONChanging(value As String)
    End Sub
    Partial Private Sub OnTIPOOPERACIONChanged()
    End Sub
    Partial Private Sub OnMercadoChanging(value As String)
    End Sub
    Partial Private Sub OnMercadoChanged()
    End Sub
    Partial Private Sub OnTIPONEGOCIACIONChanging(value As String)
    End Sub
    Partial Private Sub OnTIPONEGOCIACIONChanged()
    End Sub
    Partial Private Sub OnREGISTROOPERACIONChanging(value As String)
    End Sub
    Partial Private Sub OnREGISTROOPERACIONChanged()
    End Sub
    Partial Private Sub OnTIPOPAGOOPERACIONChanging(value As String)
    End Sub
    Partial Private Sub OnTIPOPAGOOPERACIONChanged()
    End Sub
    Partial Private Sub OnIDESPECIEChanging(value As String)
    End Sub
    Partial Private Sub OnIDESPECIEChanged()
    End Sub
    Partial Private Sub OnCANTIDADNEGOCIADAChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCANTIDADNEGOCIADAChanged()
    End Sub
    Partial Private Sub OnEMISIONChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEMISIONChanged()
    End Sub
    Partial Private Sub OnCUMPLIMIENTOChanging(value As Date)
    End Sub
    Partial Private Sub OnCUMPLIMIENTOChanged()
    End Sub
    Partial Private Sub OnVENCIMIENTOChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVENCIMIENTOChanged()
    End Sub
    Partial Private Sub OnDIASALVENCIMIENTOTITULOChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnDIASALVENCIMIENTOTITULOChanged()
    End Sub
    Partial Private Sub OnTASAINTERESNOMINALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTASAINTERESNOMINALChanged()
    End Sub
    Partial Private Sub OnMODALIDADTASANOMINALChanging(value As String)
    End Sub
    Partial Private Sub OnMODALIDADTASANOMINALChanged()
    End Sub
    Partial Private Sub OnTASAEFECTIVAANUALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTASAEFECTIVAANUALChanged()
    End Sub
    Partial Private Sub OnPRECIOChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRECIOChanged()
    End Sub
    Partial Private Sub OnMONTOChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMONTOChanged()
    End Sub
    Partial Private Sub OnIDREPRESENTANTELEGALChanging(value As String)
    End Sub
    Partial Private Sub OnIDREPRESENTANTELEGALChanged()
    End Sub
    Partial Private Sub OnIDCOMITENTEChanging(value As String)
    End Sub
    Partial Private Sub OnIDCOMITENTEChanged()
    End Sub
    Partial Private Sub OnNROTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnNROTITULOChanged()
    End Sub
    Partial Private Sub OnINDICADORChanging(value As String)
    End Sub
    Partial Private Sub OnINDICADORChanged()
    End Sub
    Partial Private Sub OnPUNTOSINDICADORChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnPUNTOSINDICADORChanged()
    End Sub
    Partial Private Sub OnRENTAFIJAChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRENTAFIJAChanged()
    End Sub
    Partial Private Sub OnPREFIJOChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIJOChanged()
    End Sub
    Partial Private Sub OnIDFACTURAChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnIDFACTURAChanged()
    End Sub
    Partial Private Sub OnFACTURADAChanging(value As String)
    End Sub
    Partial Private Sub OnFACTURADAChanged()
    End Sub
    Partial Private Sub OnNOMBRECLIENTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOMBRECLIENTEChanged()
    End Sub
    Partial Private Sub OnNOMBREREPRESENTANTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOMBREREPRESENTANTEChanged()
    End Sub
    Partial Private Sub OnNOMBREESPECIEChanging(value As String)
    End Sub
    Partial Private Sub OnNOMBREESPECIEChanged()
    End Sub
    Partial Private Sub OnFormaPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFormaPagoChanged()
    End Sub
    Partial Private Sub OnESTADOChanging(value As String)
    End Sub
    Partial Private Sub OnESTADOChanged()
    End Sub
    Partial Private Sub OnNroLoteChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnNroLoteChanged()
    End Sub
    Partial Private Sub OnACTUALIZACIONChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnACTUALIZACIONChanged()
    End Sub
    Partial Private Sub OnUSUARIOChanging(value As String)
    End Sub
    Partial Private Sub OnUSUARIOChanged()
    End Sub
    Partial Private Sub OnNroLoteENCChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnNroLoteENCChanged()
    End Sub
    Partial Private Sub OnContabilidadENCChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnContabilidadENCChanged()
    End Sub
    Partial Private Sub OnESPECIE_ESACCIONChanging(value As String)
    End Sub
    Partial Private Sub OnESPECIE_ESACCIONChanged()
    End Sub
    Partial Private Sub OnIdLiquidaciones_OTCChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdLiquidaciones_OTCChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnCargadoChanging(value As System.Nullable(Of System.Boolean))
    End Sub
    Partial Private Sub OnCargadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        Me._ReceptoresOTs = New EntitySet(Of ReceptoresOT)(AddressOf Me.attach_ReceptoresOTs, AddressOf Me.detach_ReceptoresOTs)
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGID", Storage:="_ID", DbType:="Int Not Null", CanBeNull:=False)>
    Public Property ID() As Integer
        Get
            Return Me._ID
        End Get
        Set
            If (Object.Equals(Me._ID, Value) = False) Then
                Me.OnIDChanging(Value)
                Me.SendPropertyChanging()
                Me._ID = Value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGVERSION", Storage:="_VERSION", DbType:="Int", CanBeNull:=True)>
    Public Property VERSION() As System.Nullable(Of System.Int32)
        Get
            Return Me._VERSION
        End Get
        Set
            If (Object.Equals(Me._VERSION, Value) = False) Then
                Me.OnVERSIONChanging(Value)
                Me.SendPropertyChanging()
                Me._VERSION = Value
                Me.SendPropertyChanged("VERSION")
                Me.OnVERSIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRNOMBRESISTEMA", Storage:="_NOMBRESISTEMA", DbType:="Varchar(15)")>
    Public Property NOMBRESISTEMA() As String
        Get
            Return Me._NOMBRESISTEMA
        End Get
        Set
            If (String.Equals(Me._NOMBRESISTEMA, Value) = False) Then
                Me.OnNOMBRESISTEMAChanging(Value)
                Me.SendPropertyChanging()
                Me._NOMBRESISTEMA = Value
                Me.SendPropertyChanged("NOMBRESISTEMA")
                Me.OnNOMBRESISTEMAChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGNUMEROOPERACION", Storage:="_NUMEROOPERACION", DbType:="Int", CanBeNull:=True)>
    Public Property NUMEROOPERACION() As System.Nullable(Of System.Int32)
        Get
            Return Me._NUMEROOPERACION
        End Get
        Set
            If (Object.Equals(Me._NUMEROOPERACION, Value) = False) Then
                Me.OnNUMEROOPERACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._NUMEROOPERACION = Value
                Me.SendPropertyChanged("NUMEROOPERACION")
                Me.OnNUMEROOPERACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMOPERACION", Storage:="_OPERACION", DbType:="Datetime")>
    Public Property OPERACION() As System.Nullable(Of Date)
        Get
            Return Me._OPERACION
        End Get
        Set
            If (Me._OPERACION.Equals(Value) = False) Then
                Me.OnOPERACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._OPERACION = Value
                Me.SendPropertyChanged("OPERACION")
                Me.OnOPERACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRTIPOOPERACION", Storage:="_TIPOOPERACION", DbType:="Varchar(1)")>
    Public Property TIPOOPERACION() As String
        Get
            Return Me._TIPOOPERACION
        End Get
        Set
            If (String.Equals(Me._TIPOOPERACION, Value) = False) Then
                Me.OnTIPOOPERACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._TIPOOPERACION = Value
                Me.SendPropertyChanged("TIPOOPERACION")
                Me.OnTIPOOPERACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_Mercado", DbType:="Varchar(1)")>
    Public Property Mercado() As String
        Get
            Return Me._Mercado
        End Get
        Set
            If (String.Equals(Me._Mercado, Value) = False) Then
                Me.OnMercadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Mercado = Value
                Me.SendPropertyChanged("Mercado")
                Me.OnMercadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRTIPONEGOCIACION", Storage:="_TIPONEGOCIACION", DbType:="Varchar(1)")>
    Public Property TIPONEGOCIACION() As String
        Get
            Return Me._TIPONEGOCIACION
        End Get
        Set
            If (String.Equals(Me._TIPONEGOCIACION, Value) = False) Then
                Me.OnTIPONEGOCIACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._TIPONEGOCIACION = Value
                Me.SendPropertyChanged("TIPONEGOCIACION")
                Me.OnTIPONEGOCIACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRREGISTROOPERACION", Storage:="_REGISTROOPERACION", DbType:="Varchar(1)")>
    Public Property REGISTROOPERACION() As String
        Get
            Return Me._REGISTROOPERACION
        End Get
        Set
            If (String.Equals(Me._REGISTROOPERACION, Value) = False) Then
                Me.OnREGISTROOPERACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._REGISTROOPERACION = Value
                Me.SendPropertyChanged("REGISTROOPERACION")
                Me.OnREGISTROOPERACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRTIPOPAGOOPERACION", Storage:="_TIPOPAGOOPERACION", DbType:="Varchar(2)")>
    Public Property TIPOPAGOOPERACION() As String
        Get
            Return Me._TIPOPAGOOPERACION
        End Get
        Set
            If (String.Equals(Me._TIPOPAGOOPERACION, Value) = False) Then
                Me.OnTIPOPAGOOPERACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._TIPOPAGOOPERACION = Value
                Me.SendPropertyChanged("TIPOPAGOOPERACION")
                Me.OnTIPOPAGOOPERACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRIDESPECIE", Storage:="_IDESPECIE", DbType:="Varchar(15)")>
    Public Property IDESPECIE() As String
        Get
            Return Me._IDESPECIE
        End Get
        Set
            If (String.Equals(Me._IDESPECIE, Value) = False) Then
                Me.OnIDESPECIEChanging(Value)
                Me.SendPropertyChanging()
                Me._IDESPECIE = Value
                Me.SendPropertyChanged("IDESPECIE")
                Me.OnIDESPECIEChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DBLCANTIDADNEGOCIADA", Storage:="_CANTIDADNEGOCIADA", DbType:="Float")>
    Public Property CANTIDADNEGOCIADA() As System.Nullable(Of Double)
        Get
            Return Me._CANTIDADNEGOCIADA
        End Get
        Set
            If (Me._CANTIDADNEGOCIADA.Equals(Value) = False) Then
                Me.OnCANTIDADNEGOCIADAChanging(Value)
                Me.SendPropertyChanging()
                Me._CANTIDADNEGOCIADA = Value
                Me.SendPropertyChanged("CANTIDADNEGOCIADA")
                Me.OnCANTIDADNEGOCIADAChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMEMISION", Storage:="_EMISION", DbType:="Datetime")>
    Public Property EMISION() As System.Nullable(Of Date)
        Get
            Return Me._EMISION
        End Get
        Set
            If (Me._EMISION.Equals(Value) = False) Then
                Me.OnEMISIONChanging(Value)
                Me.SendPropertyChanging()
                Me._EMISION = Value
                Me.SendPropertyChanged("EMISION")
                Me.OnEMISIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMCUMPLIMIENTO", Storage:="_CUMPLIMIENTO", DbType:="Datetime")>
    Public Property CUMPLIMIENTO() As Date
        Get
            Return Me._CUMPLIMIENTO
        End Get
        Set
            If ((Me._CUMPLIMIENTO = Value) _
                        = False) Then
                Me.OnCUMPLIMIENTOChanging(Value)
                Me.SendPropertyChanging()
                Me._CUMPLIMIENTO = Value
                Me.SendPropertyChanged("CUMPLIMIENTO")
                Me.OnCUMPLIMIENTOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMVENCIMIENTO", Storage:="_VENCIMIENTO", DbType:="Datetime")>
    Public Property VENCIMIENTO() As System.Nullable(Of Date)
        Get
            Return Me._VENCIMIENTO
        End Get
        Set
            If (Me._VENCIMIENTO.Equals(Value) = False) Then
                Me.OnVENCIMIENTOChanging(Value)
                Me.SendPropertyChanging()
                Me._VENCIMIENTO = Value
                Me.SendPropertyChanged("VENCIMIENTO")
                Me.OnVENCIMIENTOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGDIASALVENCIMIENTOTITULO", Storage:="_DIASALVENCIMIENTOTITULO", DbType:="Int", CanBeNull:=True)>
    Public Property DIASALVENCIMIENTOTITULO() As System.Nullable(Of System.Int32)
        Get
            Return Me._DIASALVENCIMIENTOTITULO
        End Get
        Set
            If (Object.Equals(Me._DIASALVENCIMIENTOTITULO, Value) = False) Then
                Me.OnDIASALVENCIMIENTOTITULOChanging(Value)
                Me.SendPropertyChanging()
                Me._DIASALVENCIMIENTOTITULO = Value
                Me.SendPropertyChanged("DIASALVENCIMIENTOTITULO")
                Me.OnDIASALVENCIMIENTOTITULOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DBLTASAINTERESNOMINAL", Storage:="_TASAINTERESNOMINAL", DbType:="Float")>
    Public Property TASAINTERESNOMINAL() As System.Nullable(Of Double)
        Get
            Return Me._TASAINTERESNOMINAL
        End Get
        Set
            If (Me._TASAINTERESNOMINAL.Equals(Value) = False) Then
                Me.OnTASAINTERESNOMINALChanging(Value)
                Me.SendPropertyChanging()
                Me._TASAINTERESNOMINAL = Value
                Me.SendPropertyChanged("TASAINTERESNOMINAL")
                Me.OnTASAINTERESNOMINALChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRMODALIDADTASANOMINAL", Storage:="_MODALIDADTASANOMINAL", DbType:="Varchar(2)")>
    Public Property MODALIDADTASANOMINAL() As String
        Get
            Return Me._MODALIDADTASANOMINAL
        End Get
        Set
            If (String.Equals(Me._MODALIDADTASANOMINAL, Value) = False) Then
                Me.OnMODALIDADTASANOMINALChanging(Value)
                Me.SendPropertyChanging()
                Me._MODALIDADTASANOMINAL = Value
                Me.SendPropertyChanged("MODALIDADTASANOMINAL")
                Me.OnMODALIDADTASANOMINALChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DBLTASAEFECTIVAANUAL", Storage:="_TASAEFECTIVAANUAL", DbType:="Float")>
    Public Property TASAEFECTIVAANUAL() As System.Nullable(Of Double)
        Get
            Return Me._TASAEFECTIVAANUAL
        End Get
        Set
            If (Me._TASAEFECTIVAANUAL.Equals(Value) = False) Then
                Me.OnTASAEFECTIVAANUALChanging(Value)
                Me.SendPropertyChanging()
                Me._TASAEFECTIVAANUAL = Value
                Me.SendPropertyChanged("TASAEFECTIVAANUAL")
                Me.OnTASAEFECTIVAANUALChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DBLPRECIO", Storage:="_PRECIO", DbType:="Float")>
    Public Property PRECIO() As System.Nullable(Of Double)
        Get
            Return Me._PRECIO
        End Get
        Set
            If (Me._PRECIO.Equals(Value) = False) Then
                Me.OnPRECIOChanging(Value)
                Me.SendPropertyChanging()
                Me._PRECIO = Value
                Me.SendPropertyChanged("PRECIO")
                Me.OnPRECIOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DBLMONTO", Storage:="_MONTO", DbType:="Float")>
    Public Property MONTO() As System.Nullable(Of Double)
        Get
            Return Me._MONTO
        End Get
        Set
            If (Me._MONTO.Equals(Value) = False) Then
                Me.OnMONTOChanging(Value)
                Me.SendPropertyChanging()
                Me._MONTO = Value
                Me.SendPropertyChanged("MONTO")
                Me.OnMONTOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRIDREPRESENTANTELEGAL", Storage:="_IDREPRESENTANTELEGAL", DbType:="Varchar(50)")>
    Public Property IDREPRESENTANTELEGAL() As String
        Get
            Return Me._IDREPRESENTANTELEGAL
        End Get
        Set
            If (String.Equals(Me._IDREPRESENTANTELEGAL, Value) = False) Then
                Me.OnIDREPRESENTANTELEGALChanging(Value)
                Me.SendPropertyChanging()
                Me._IDREPRESENTANTELEGAL = Value
                Me.SendPropertyChanged("IDREPRESENTANTELEGAL")
                Me.OnIDREPRESENTANTELEGALChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGIDCOMITENTE", Storage:="_IDCOMITENTE", DbType:="Char(17)")>
    Public Property IDCOMITENTE() As String
        Get
            Return Me._IDCOMITENTE
        End Get
        Set
            If (String.Equals(Me._IDCOMITENTE, Value) = False) Then
                Me.OnIDCOMITENTEChanging(Value)
                Me.SendPropertyChanging()
                Me._IDCOMITENTE = Value
                Me.SendPropertyChanged("IDCOMITENTE")
                Me.OnIDCOMITENTEChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRNROTITULO", Storage:="_NROTITULO", DbType:="Varchar(25)")>
    Public Property NROTITULO() As String
        Get
            Return Me._NROTITULO
        End Get
        Set
            If (String.Equals(Me._NROTITULO, Value) = False) Then
                Me.OnNROTITULOChanging(Value)
                Me.SendPropertyChanging()
                Me._NROTITULO = Value
                Me.SendPropertyChanged("NROTITULO")
                Me.OnNROTITULOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRINDICADOR", Storage:="_INDICADOR", DbType:="Varchar(10)")>
    Public Property INDICADOR() As String
        Get
            Return Me._INDICADOR
        End Get
        Set
            If (String.Equals(Me._INDICADOR, Value) = False) Then
                Me.OnINDICADORChanging(Value)
                Me.SendPropertyChanging()
                Me._INDICADOR = Value
                Me.SendPropertyChanged("INDICADOR")
                Me.OnINDICADORChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGPUNTOSINDICADOR", Storage:="_PUNTOSINDICADOR", DbType:="Real")>
    Public Property PUNTOSINDICADOR() As System.Nullable(Of Single)
        Get
            Return Me._PUNTOSINDICADOR
        End Get
        Set
            If (Me._PUNTOSINDICADOR.Equals(Value) = False) Then
                Me.OnPUNTOSINDICADORChanging(Value)
                Me.SendPropertyChanging()
                Me._PUNTOSINDICADOR = Value
                Me.SendPropertyChanged("PUNTOSINDICADOR")
                Me.OnPUNTOSINDICADORChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LOGRENTAFIJA", Storage:="_RENTAFIJA", DbType:="Bit")>
    Public Property RENTAFIJA() As System.Nullable(Of Boolean)
        Get
            Return Me._RENTAFIJA
        End Get
        Set
            If (Me._RENTAFIJA.Equals(Value) = False) Then
                Me.OnRENTAFIJAChanging(Value)
                Me.SendPropertyChanging()
                Me._RENTAFIJA = Value
                Me.SendPropertyChanged("RENTAFIJA")
                Me.OnRENTAFIJAChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRPREFIJO", Storage:="_PREFIJO", DbType:="Varchar(5)")>
    Public Property PREFIJO() As String
        Get
            Return Me._PREFIJO
        End Get
        Set
            If (String.Equals(Me._PREFIJO, Value) = False) Then
                Me.OnPREFIJOChanging(Value)
                Me.SendPropertyChanging()
                Me._PREFIJO = Value
                Me.SendPropertyChanged("PREFIJO")
                Me.OnPREFIJOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGIDFACTURA", Storage:="_IDFACTURA", DbType:="Int", CanBeNull:=True)>
    Public Property IDFACTURA() As System.Nullable(Of System.Int32)
        Get
            Return Me._IDFACTURA
        End Get
        Set
            If (Object.Equals(Me._IDFACTURA, Value) = False) Then
                Me.OnIDFACTURAChanging(Value)
                Me.SendPropertyChanging()
                Me._IDFACTURA = Value
                Me.SendPropertyChanged("IDFACTURA")
                Me.OnIDFACTURAChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRFACTURADA", Storage:="_FACTURADA", DbType:="Varchar(1)")>
    Public Property FACTURADA() As String
        Get
            Return Me._FACTURADA
        End Get
        Set
            If (String.Equals(Me._FACTURADA, Value) = False) Then
                Me.OnFACTURADAChanging(Value)
                Me.SendPropertyChanging()
                Me._FACTURADA = Value
                Me.SendPropertyChanged("FACTURADA")
                Me.OnFACTURADAChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRNOMBRECLIENTE", Storage:="_NOMBRECLIENTE", DbType:="Varchar(50)")>
    Public Property NOMBRECLIENTE() As String
        Get
            Return Me._NOMBRECLIENTE
        End Get
        Set
            If (String.Equals(Me._NOMBRECLIENTE, Value) = False) Then
                Me.OnNOMBRECLIENTEChanging(Value)
                Me.SendPropertyChanging()
                Me._NOMBRECLIENTE = Value
                Me.SendPropertyChanged("NOMBRECLIENTE")
                Me.OnNOMBRECLIENTEChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRNOMBREREPRESENTANTE", Storage:="_NOMBREREPRESENTANTE", DbType:="Varchar(50)")>
    Public Property NOMBREREPRESENTANTE() As String
        Get
            Return Me._NOMBREREPRESENTANTE
        End Get
        Set
            If (String.Equals(Me._NOMBREREPRESENTANTE, Value) = False) Then
                Me.OnNOMBREREPRESENTANTEChanging(Value)
                Me.SendPropertyChanging()
                Me._NOMBREREPRESENTANTE = Value
                Me.SendPropertyChanged("NOMBREREPRESENTANTE")
                Me.OnNOMBREREPRESENTANTEChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRNOMBREESPECIE", Storage:="_NOMBREESPECIE", DbType:="Varchar(50)")>
    Public Property NOMBREESPECIE() As String
        Get
            Return Me._NOMBREESPECIE
        End Get
        Set
            If (String.Equals(Me._NOMBREESPECIE, Value) = False) Then
                Me.OnNOMBREESPECIEChanging(Value)
                Me.SendPropertyChanging()
                Me._NOMBREESPECIE = Value
                Me.SendPropertyChanged("NOMBREESPECIE")
                Me.OnNOMBREESPECIEChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFormaPago", Storage:="_FormaPago", DbType:="Varchar(150)")>
    Public Property FormaPago() As String
        Get
            Return Me._FormaPago
        End Get
        Set
            If (String.Equals(Me._FormaPago, Value) = False) Then
                Me.OnFormaPagoChanging(Value)
                Me.SendPropertyChanging()
                Me._FormaPago = Value
                Me.SendPropertyChanged("FormaPago")
                Me.OnFormaPagoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRESTADO", Storage:="_ESTADO", DbType:="Varchar(1)")>
    Public Property ESTADO() As String
        Get
            Return Me._ESTADO
        End Get
        Set
            If (String.Equals(Me._ESTADO, Value) = False) Then
                Me.OnESTADOChanging(Value)
                Me.SendPropertyChanging()
                Me._ESTADO = Value
                Me.SendPropertyChanged("ESTADO")
                Me.OnESTADOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLote", Storage:="_NroLote", DbType:="Int", CanBeNull:=True)>
    Public Property NroLote() As System.Nullable(Of System.Int32)
        Get
            Return Me._NroLote
        End Get
        Set
            If (Object.Equals(Me._NroLote, Value) = False) Then
                Me.OnNroLoteChanging(Value)
                Me.SendPropertyChanging()
                Me._NroLote = Value
                Me.SendPropertyChanged("NroLote")
                Me.OnNroLoteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMACTUALIZACION", Storage:="_ACTUALIZACION", DbType:="Datetime")>
    Public Property ACTUALIZACION() As System.Nullable(Of Date)
        Get
            Return Me._ACTUALIZACION
        End Get
        Set
            If (Me._ACTUALIZACION.Equals(Value) = False) Then
                Me.OnACTUALIZACIONChanging(Value)
                Me.SendPropertyChanging()
                Me._ACTUALIZACION = Value
                Me.SendPropertyChanged("ACTUALIZACION")
                Me.OnACTUALIZACIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRUSUARIO", Storage:="_USUARIO", DbType:="Varchar(60)")>
    Public Property USUARIO() As String
        Get
            Return Me._USUARIO
        End Get
        Set
            If (String.Equals(Me._USUARIO, Value) = False) Then
                Me.OnUSUARIOChanging(Value)
                Me.SendPropertyChanging()
                Me._USUARIO = Value
                Me.SendPropertyChanged("USUARIO")
                Me.OnUSUARIOChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLoteENC", Storage:="_NroLoteENC", DbType:="Int", CanBeNull:=True)>
    Public Property NroLoteENC() As System.Nullable(Of System.Int32)
        Get
            Return Me._NroLoteENC
        End Get
        Set
            If (Object.Equals(Me._NroLoteENC, Value) = False) Then
                Me.OnNroLoteENCChanging(Value)
                Me.SendPropertyChanging()
                Me._NroLoteENC = Value
                Me.SendPropertyChanged("NroLoteENC")
                Me.OnNroLoteENCChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmContabilidadENC", Storage:="_ContabilidadENC", DbType:="Datetime")>
    Public Property ContabilidadENC() As System.Nullable(Of Date)
        Get
            Return Me._ContabilidadENC
        End Get
        Set
            If (Me._ContabilidadENC.Equals(Value) = False) Then
                Me.OnContabilidadENCChanging(Value)
                Me.SendPropertyChanging()
                Me._ContabilidadENC = Value
                Me.SendPropertyChanged("ContabilidadENC")
                Me.OnContabilidadENCChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESPECIE_ESACCION", DbType:="Varchar(1)")>
    Public Property ESPECIE_ESACCION() As String
        Get
            Return Me._ESPECIE_ESACCION
        End Get
        Set
            If (String.Equals(Me._ESPECIE_ESACCION, Value) = False) Then
                Me.OnESPECIE_ESACCIONChanging(Value)
                Me.SendPropertyChanging()
                Me._ESPECIE_ESACCION = Value
                Me.SendPropertyChanged("ESPECIE_ESACCION")
                Me.OnESPECIE_ESACCIONChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdLiquidaciones_OTC", Storage:="_IdLiquidaciones_OTC", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property IdLiquidaciones_OTC() As Integer
        Get
            Return Me._IdLiquidaciones_OTC
        End Get
        Set
            If (Object.Equals(Me._IdLiquidaciones_OTC, Value) = False) Then
                Me.OnIdLiquidaciones_OTCChanging(Value)
                Me.SendPropertyChanging()
                Me._IdLiquidaciones_OTC = Value
                Me.SendPropertyChanged("IdLiquidaciones_OTC")
                Me.OnIdLiquidaciones_OTCChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
    Public Property InfoSesion() As String
        Get
            Return Me._InfoSesion
        End Get
        Set
            If (String.Equals(Me._InfoSesion, Value) = False) Then
                Me.OnInfoSesionChanging(Value)
                Me.SendPropertyChanging()
                Me._InfoSesion = Value
                Me.SendPropertyChanged("InfoSesion")
                Me.OnInfoSesionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCargado", Storage:="_Cargado", DbType:="Bit NULL", CanBeNull:=True)>
    Public Property Cargado() As System.Nullable(Of System.Boolean)
        Get
            Return Me._Cargado
        End Get
        Set
            If (Object.Equals(Me._Cargado, Value) = False) Then
                Me.OnCargadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Cargado = Value
                Me.SendPropertyChanged("Cargado")
                Me.OnCargadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
    Public Property pstrUsuarioConexion() As String
        Get
            Return Me._pstrUsuarioConexion
        End Get
        Set
            If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                Me.OnpstrUsuarioConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrUsuarioConexion = Value
                Me.SendPropertyChanged("pstrUsuarioConexion")
                Me.OnpstrUsuarioConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
    Public Property pstrInfoConexion() As String
        Get
            Return Me._pstrInfoConexion
        End Get
        Set
            If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                Me.OnpstrInfoConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrInfoConexion = Value
                Me.SendPropertyChanged("pstrInfoConexion")
                Me.OnpstrInfoConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Liquidaciones_OT_ReceptoresOT", Storage:="_ReceptoresOTs", ThisKey:="ID", OtherKey:="Id")>
    Public Property ReceptoresOTs() As EntitySet(Of ReceptoresOT)
        Get
            Return Me._ReceptoresOTs
        End Get
        Set
            Me._ReceptoresOTs.Assign(Value)
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub

    Private Sub attach_ReceptoresOTs(ByVal entity As ReceptoresOT)
        Me.SendPropertyChanging()
        entity.Liquidaciones_OT = Me
    End Sub

    Private Sub detach_ReceptoresOTs(ByVal entity As ReceptoresOT)
        Me.SendPropertyChanging()
        entity.Liquidaciones_OT = Nothing
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresOTC")>
Partial Public Class ReceptoresOT
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _IDReceptoresOTC As Integer

    Private _Id As Integer

    Private _IDReceptor As String

    Private _Lider As Boolean

    Private _Porcentaje As Double

    Private _NombreReceptor As String

    Private _Actualizacion As Date

    Private _Usuario As String

    Private _InfoSesion As String

    Private _pstrUsuarioConexion As String

    Private _pstrInfoConexion As String

    Private _Liquidaciones_OT As EntityRef(Of Liquidaciones_OT)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDReceptoresOTCChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDReceptoresOTCChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorChanged()
    End Sub
    Partial Private Sub OnLiderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLiderChanged()
    End Sub
    Partial Private Sub OnPorcentajeChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeChanged()
    End Sub
    Partial Private Sub OnNombreReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnNombreReceptorChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        Me._Liquidaciones_OT = CType(Nothing, EntityRef(Of Liquidaciones_OT))
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptoresOTC", Storage:="_IDReceptoresOTC", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property IDReceptoresOTC() As Integer
        Get
            Return Me._IDReceptoresOTC
        End Get
        Set
            If ((Me._IDReceptoresOTC = Value) _
                        = False) Then
                Me.OnIDReceptoresOTCChanging(Value)
                Me.SendPropertyChanging()
                Me._IDReceptoresOTC = Value
                Me.SendPropertyChanged("IDReceptoresOTC")
                Me.OnIDReceptoresOTCChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_Id", DbType:="Int", CanBeNull:=True)>
    Public Property Id() As Integer
        Get
            Return Me._Id
        End Get
        Set
            If (Object.Equals(Me._Id, Value) = False) Then
                Me.OnIdChanging(Value)
                Me.SendPropertyChanging()
                Me._Id = Value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4)")>
    Public Property IDReceptor() As String
        Get
            Return Me._IDReceptor
        End Get
        Set
            If (String.Equals(Me._IDReceptor, Value) = False) Then
                Me.OnIDReceptorChanging(Value)
                Me.SendPropertyChanging()
                Me._IDReceptor = Value
                Me.SendPropertyChanged("IDReceptor")
                Me.OnIDReceptorChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>
    Public Property Lider() As Boolean
        Get
            Return Me._Lider
        End Get
        Set
            If ((Me._Lider = Value) _
                        = False) Then
                Me.OnLiderChanging(Value)
                Me.SendPropertyChanging()
                Me._Lider = Value
                Me.SendPropertyChanged("Lider")
                Me.OnLiderChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentaje", Storage:="_Porcentaje", DbType:="Float NOT NULL")>
    Public Property Porcentaje() As Double
        Get
            Return Me._Porcentaje
        End Get
        Set
            If ((Me._Porcentaje = Value) _
                        = False) Then
                Me.OnPorcentajeChanging(Value)
                Me.SendPropertyChanging()
                Me._Porcentaje = Value
                Me.SendPropertyChanged("Porcentaje")
                Me.OnPorcentajeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptor", Storage:="_NombreReceptor", DbType:="Varchar(50)")>
    Public Property NombreReceptor() As String
        Get
            Return Me._NombreReceptor
        End Get
        Set
            If (String.Equals(Me._NombreReceptor, Value) = False) Then
                Me.OnNombreReceptorChanging(Value)
                Me.SendPropertyChanging()
                Me._NombreReceptor = Value
                Me.SendPropertyChanged("NombreReceptor")
                Me.OnNombreReceptorChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>
    Public Property Actualizacion() As Date
        Get
            Return Me._Actualizacion
        End Get
        Set
            If ((Me._Actualizacion = Value) _
                        = False) Then
                Me.OnActualizacionChanging(Value)
                Me.SendPropertyChanging()
                Me._Actualizacion = Value
                Me.SendPropertyChanged("Actualizacion")
                Me.OnActualizacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, Value) = False) Then
                Me.OnUsuarioChanging(Value)
                Me.SendPropertyChanging()
                Me._Usuario = Value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
    Public Property InfoSesion() As String
        Get
            Return Me._InfoSesion
        End Get
        Set
            If (String.Equals(Me._InfoSesion, Value) = False) Then
                Me.OnInfoSesionChanging(Value)
                Me.SendPropertyChanging()
                Me._InfoSesion = Value
                Me.SendPropertyChanged("InfoSesion")
                Me.OnInfoSesionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
    Public Property pstrUsuarioConexion() As String
        Get
            Return Me._pstrUsuarioConexion
        End Get
        Set
            If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                Me.OnpstrUsuarioConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrUsuarioConexion = Value
                Me.SendPropertyChanged("pstrUsuarioConexion")
                Me.OnpstrUsuarioConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
    Public Property pstrInfoConexion() As String
        Get
            Return Me._pstrInfoConexion
        End Get
        Set
            If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                Me.OnpstrInfoConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrInfoConexion = Value
                Me.SendPropertyChanged("pstrInfoConexion")
                Me.OnpstrInfoConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Liquidaciones_OT_ReceptoresOT", Storage:="_Liquidaciones_OT", ThisKey:="Id", OtherKey:="ID", IsForeignKey:=True)>
    Public Property Liquidaciones_OT() As Liquidaciones_OT
        Get
            Return Me._Liquidaciones_OT.Entity
        End Get
        Set
            Dim previousValue As Liquidaciones_OT = Me._Liquidaciones_OT.Entity
            If ((Object.Equals(previousValue, Value) = False) _
                        OrElse (Me._Liquidaciones_OT.HasLoadedOrAssignedValue = False)) Then
                Me.SendPropertyChanging()

                If ((previousValue Is Nothing) _
                            = False) Then
                    Me._Liquidaciones_OT.Entity = Nothing
                    previousValue.ReceptoresOTs.Remove(Me)
                End If
                Me._Liquidaciones_OT.Entity = Value
                If ((Value Is Nothing) _
                            = False) Then
                    Value.ReceptoresOTs.Add(Me)
                    Me._Id = Value.ID
                Else
                    Me._Id = CType(Nothing, Integer)
                End If
                Me.SendPropertyChanged("Liquidaciones_OT")
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblFacturas_OTC")>
Partial Public Class Factura_OTC
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _IDComisionista As Integer

    Private _IDSucComisionista As Integer

    Private _Prefijo As String

    Private _Numero As Integer

    Private _Prefijo_Numero As String

    Private _Comitente As String

    Private _Nombre As String

    Private _Fecha_Documento As Date

    Private _Estado As String

    Private _Fecha_Estado As Date

    Private _Impresiones As Integer

    Private _Actualizacion As Date

    Private _Usuario As String

    Private _IDCodigoResolucion As Integer

    Private _IDfacturas As Integer

    Private _InfoSesion As String

    Private _pstrUsuarioConexion As String

    Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnPrefijo_NumeroChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijo_NumeroChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnFecha_DocumentoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_DocumentoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFecha_EstadoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_EstadoChanged()
    End Sub
    Partial Private Sub OnImpresionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnImpresionesChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanged()
    End Sub
    Partial Private Sub OnIDfacturasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDfacturasChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
    Public Property IDComisionista() As Integer
        Get
            Return Me._IDComisionista
        End Get
        Set
            If (Object.Equals(Me._IDComisionista, Value) = False) Then
                Me.OnIDComisionistaChanging(Value)
                Me.SendPropertyChanging()
                Me._IDComisionista = Value
                Me.SendPropertyChanged("IDComisionista")
                Me.OnIDComisionistaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
    Public Property IDSucComisionista() As Integer
        Get
            Return Me._IDSucComisionista
        End Get
        Set
            If (Object.Equals(Me._IDSucComisionista, Value) = False) Then
                Me.OnIDSucComisionistaChanging(Value)
                Me.SendPropertyChanging()
                Me._IDSucComisionista = Value
                Me.SendPropertyChanged("IDSucComisionista")
                Me.OnIDSucComisionistaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5) NOT NULL", CanBeNull:=False)>
    Public Property Prefijo() As String
        Get
            Return Me._Prefijo
        End Get
        Set
            If (String.Equals(Me._Prefijo, Value) = False) Then
                Me.OnPrefijoChanging(Value)
                Me.SendPropertyChanging()
                Me._Prefijo = Value
                Me.SendPropertyChanged("Prefijo")
                Me.OnPrefijoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Numero", DbType:="Int NOT NULL", CanBeNull:=False)>
    Public Property Numero() As Integer
        Get
            Return Me._Numero
        End Get
        Set
            If (Object.Equals(Me._Numero, Value) = False) Then
                Me.OnNumeroChanging(Value)
                Me.SendPropertyChanging()
                Me._Numero = Value
                Me.SendPropertyChanged("Numero")
                Me.OnNumeroChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefijo_Numero", DbType:="Varchar(30) NOT NULL")>
    Public Property Prefijo_Numero() As String
        Get
            Return Me._Prefijo_Numero
        End Get
        Set
            If (String.Equals(Me._Prefijo_Numero, Value) = False) Then
                Me.OnPrefijo_NumeroChanging(Value)
                Me.SendPropertyChanging()
                Me._Prefijo_Numero = Value
                Me.SendPropertyChanged("Prefijo_Numero")
                Me.OnPrefijo_NumeroChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_Comitente", DbType:="Char(17) NOT NULL", CanBeNull:=False)>
    Public Property Comitente() As String
        Get
            Return Me._Comitente
        End Get
        Set
            If (String.Equals(Me._Comitente, Value) = False) Then
                Me.OnComitenteChanging(Value)
                Me.SendPropertyChanging()
                Me._Comitente = Value
                Me.SendPropertyChanged("Comitente")
                Me.OnComitenteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(250) NOT NULL", CanBeNull:=False)>
    Public Property Nombre() As String
        Get
            Return Me._Nombre
        End Get
        Set
            If (String.Equals(Me._Nombre, Value) = False) Then
                Me.OnNombreChanging(Value)
                Me.SendPropertyChanging()
                Me._Nombre = Value
                Me.SendPropertyChanged("Nombre")
                Me.OnNombreChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmDocumento", Storage:="_Fecha_Documento", DbType:="Datetime NOT NULL")>
    Public Property Fecha_Documento() As Date
        Get
            Return Me._Fecha_Documento
        End Get
        Set
            If ((Me._Fecha_Documento = Value) _
                        = False) Then
                Me.OnFecha_DocumentoChanging(Value)
                Me.SendPropertyChanging()
                Me._Fecha_Documento = Value
                Me.SendPropertyChanged("Fecha_Documento")
                Me.OnFecha_DocumentoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, Value) = False) Then
                Me.OnEstadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Estado = Value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Fecha_Estado", DbType:="Datetime NOT NULL")>
    Public Property Fecha_Estado() As Date
        Get
            Return Me._Fecha_Estado
        End Get
        Set
            If ((Me._Fecha_Estado = Value) _
                        = False) Then
                Me.OnFecha_EstadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Fecha_Estado = Value
                Me.SendPropertyChanged("Fecha_Estado")
                Me.OnFecha_EstadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int NOT NULL", CanBeNull:=False)>
    Public Property Impresiones() As Integer
        Get
            Return Me._Impresiones
        End Get
        Set
            If (Object.Equals(Me._Impresiones, Value) = False) Then
                Me.OnImpresionesChanging(Value)
                Me.SendPropertyChanging()
                Me._Impresiones = Value
                Me.SendPropertyChanged("Impresiones")
                Me.OnImpresionesChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>
    Public Property Actualizacion() As Date
        Get
            Return Me._Actualizacion
        End Get
        Set
            If ((Me._Actualizacion = Value) _
                        = False) Then
                Me.OnActualizacionChanging(Value)
                Me.SendPropertyChanging()
                Me._Actualizacion = Value
                Me.SendPropertyChanged("Actualizacion")
                Me.OnActualizacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, Value) = False) Then
                Me.OnUsuarioChanging(Value)
                Me.SendPropertyChanging()
                Me._Usuario = Value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCodigoResolucion", Storage:="_IDCodigoResolucion", DbType:="Int", CanBeNull:=True)>
    Public Property IDCodigoResolucion() As Integer
        Get
            Return Me._IDCodigoResolucion
        End Get
        Set
            If (Object.Equals(Me._IDCodigoResolucion, Value) = False) Then
                Me.OnIDCodigoResolucionChanging(Value)
                Me.SendPropertyChanging()
                Me._IDCodigoResolucion = Value
                Me.SendPropertyChanged("IDCodigoResolucion")
                Me.OnIDCodigoResolucionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDfacturas", Storage:="_IDfacturas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property IDfacturas() As Integer
        Get
            Return Me._IDfacturas
        End Get
        Set
            If (Object.Equals(Me._IDfacturas, Value) = False) Then
                Me.OnIDfacturasChanging(Value)
                Me.SendPropertyChanging()
                Me._IDfacturas = Value
                Me.SendPropertyChanged("IDfacturas")
                Me.OnIDfacturasChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
    Public Property InfoSesion() As String
        Get
            Return Me._InfoSesion
        End Get
        Set
            If (String.Equals(Me._InfoSesion, Value) = False) Then
                Me.OnInfoSesionChanging(Value)
                Me.SendPropertyChanging()
                Me._InfoSesion = Value
                Me.SendPropertyChanged("InfoSesion")
                Me.OnInfoSesionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
    Public Property pstrUsuarioConexion() As String
        Get
            Return Me._pstrUsuarioConexion
        End Get
        Set
            If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                Me.OnpstrUsuarioConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrUsuarioConexion = Value
                Me.SendPropertyChanged("pstrUsuarioConexion")
                Me.OnpstrUsuarioConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
    Public Property pstrInfoConexion() As String
        Get
            Return Me._pstrInfoConexion
        End Get
        Set
            If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                Me.OnpstrInfoConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrInfoConexion = Value
                Me.SendPropertyChanged("pstrInfoConexion")
                Me.OnpstrInfoConexionChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmpResultado")>
Partial Public Class tmpResultado
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _lngID As Short

    Private _lngIDOperacion As System.Nullable(Of Integer)

    Private _intResultado As System.Nullable(Of Short)

    Private _strMensaje As String

    Private _pstrUsuarioConexion As String

    Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDChanging(value As Short)
    End Sub
    Partial Private Sub OnlngIDChanged()
    End Sub
    Partial Private Sub OnlngIDOperacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDOperacionChanged()
    End Sub
    Partial Private Sub OnintResultadoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnintResultadoChanged()
    End Sub
    Partial Private Sub OnstrMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnstrMensajeChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngID", AutoSync:=AutoSync.OnInsert, DbType:="SmallInt NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property lngID() As Short
        Get
            Return Me._lngID
        End Get
        Set
            If ((Me._lngID = Value) _
                        = False) Then
                Me.OnlngIDChanging(Value)
                Me.SendPropertyChanging()
                Me._lngID = Value
                Me.SendPropertyChanged("lngID")
                Me.OnlngIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDOperacion", DbType:="Int")>
    Public Property lngIDOperacion() As System.Nullable(Of Integer)
        Get
            Return Me._lngIDOperacion
        End Get
        Set
            If (Me._lngIDOperacion.Equals(Value) = False) Then
                Me.OnlngIDOperacionChanging(Value)
                Me.SendPropertyChanging()
                Me._lngIDOperacion = Value
                Me.SendPropertyChanged("lngIDOperacion")
                Me.OnlngIDOperacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intResultado", DbType:="SmallInt")>
    Public Property intResultado() As System.Nullable(Of Short)
        Get
            Return Me._intResultado
        End Get
        Set
            If (Me._intResultado.Equals(Value) = False) Then
                Me.OnintResultadoChanging(Value)
                Me.SendPropertyChanging()
                Me._intResultado = Value
                Me.SendPropertyChanged("intResultado")
                Me.OnintResultadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMensaje", DbType:="VarChar(8000)")>
    Public Property strMensaje() As String
        Get
            Return Me._strMensaje
        End Get
        Set
            If (String.Equals(Me._strMensaje, Value) = False) Then
                Me.OnstrMensajeChanging(Value)
                Me.SendPropertyChanging()
                Me._strMensaje = Value
                Me.SendPropertyChanged("strMensaje")
                Me.OnstrMensajeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
    Public Property pstrUsuarioConexion() As String
        Get
            Return Me._pstrUsuarioConexion
        End Get
        Set
            If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                Me.OnpstrUsuarioConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrUsuarioConexion = Value
                Me.SendPropertyChanged("pstrUsuarioConexion")
                Me.OnpstrUsuarioConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
    Public Property pstrInfoConexion() As String
        Get
            Return Me._pstrInfoConexion
        End Get
        Set
            If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                Me.OnpstrInfoConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrInfoConexion = Value
                Me.SendPropertyChanged("pstrInfoConexion")
                Me.OnpstrInfoConexionChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblImportacionLiqSEN")>
Partial Public Class tblImportacionLiqSEN
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _lngID As Integer

    Private _dtmFechaImportacion As System.Nullable(Of Date)

    Private _dtmHoraImportacion As String

    Private _lngIDOperacion As System.Nullable(Of Integer)

    Private _strTipo As String

    Private _strEspecie As String

    Private _dblCantidad As System.Nullable(Of Double)

    Private _lngDiasVencimiento As System.Nullable(Of Integer)

    Private _curEquivalente As System.Nullable(Of Double)

    Private _curTotal As System.Nullable(Of Double)

    Private _curPrecio As System.Nullable(Of Double)

    Private _dtmEmision As System.Nullable(Of Date)

    Private _dtmVencimiento As System.Nullable(Of Date)

    Private _dtmLiquidacion As System.Nullable(Of Date)

    Private _strTipoNegociacion As String

    Private _strISIN As String

    Private _strUsuario As String

    Private _dtmActualizacion As Date

    Private _intResultado As System.Nullable(Of Integer)

    Private _ListaComentario As String

    Private _lngIdComitente As String

    Private _dblCantidadGarantia As System.Nullable(Of Double)

    Private _strRueda As String

    Private _pstrUsuarioConexion As String

    Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDChanged()
    End Sub
    Partial Private Sub OndtmFechaImportacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmFechaImportacionChanged()
    End Sub
    Partial Private Sub OndtmHoraImportacionChanging(value As String)
    End Sub
    Partial Private Sub OndtmHoraImportacionChanged()
    End Sub
    Partial Private Sub OnlngIDOperacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDOperacionChanged()
    End Sub
    Partial Private Sub OnstrTipoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoChanged()
    End Sub
    Partial Private Sub OnstrEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrEspecieChanged()
    End Sub
    Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblCantidadChanged()
    End Sub
    Partial Private Sub OnlngDiasVencimientoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngDiasVencimientoChanged()
    End Sub
    Partial Private Sub OncurEquivalenteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OncurEquivalenteChanged()
    End Sub
    Partial Private Sub OncurTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OncurTotalChanged()
    End Sub
    Partial Private Sub OncurPrecioChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OncurPrecioChanged()
    End Sub
    Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmEmisionChanged()
    End Sub
    Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmVencimientoChanged()
    End Sub
    Partial Private Sub OndtmLiquidacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmLiquidacionChanged()
    End Sub
    Partial Private Sub OnstrTipoNegociacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoNegociacionChanged()
    End Sub
    Partial Private Sub OnstrISINChanging(value As String)
    End Sub
    Partial Private Sub OnstrISINChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnintResultadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintResultadoChanged()
    End Sub
    Partial Private Sub OnListaComentarioChanging(value As String)
    End Sub
    Partial Private Sub OnListaComentarioChanged()
    End Sub
    Partial Private Sub OnlngIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnlngIdComitenteChanged()
    End Sub
    Partial Private Sub OndblCantidadGarantiaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblCantidadGarantiaChanged()
    End Sub
    Partial Private Sub OnstrRuedaChanging(value As String)
    End Sub
    Partial Private Sub OnstrRuedaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngID", DbType:="Int NOT NULL", IsPrimaryKey:=True)>
    Public Property lngID() As Integer
        Get
            Return Me._lngID
        End Get
        Set
            If ((Me._lngID = Value) _
                        = False) Then
                Me.OnlngIDChanging(Value)
                Me.SendPropertyChanging()
                Me._lngID = Value
                Me.SendPropertyChanged("lngID")
                Me.OnlngIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaImportacion", DbType:="DateTime")>
    Public Property dtmFechaImportacion() As System.Nullable(Of Date)
        Get
            Return Me._dtmFechaImportacion
        End Get
        Set
            If (Me._dtmFechaImportacion.Equals(Value) = False) Then
                Me.OndtmFechaImportacionChanging(Value)
                Me.SendPropertyChanging()
                Me._dtmFechaImportacion = Value
                Me.SendPropertyChanged("dtmFechaImportacion")
                Me.OndtmFechaImportacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmHoraImportacion", DbType:="VarChar(10)")>
    Public Property dtmHoraImportacion() As String
        Get
            Return Me._dtmHoraImportacion
        End Get
        Set
            If (String.Equals(Me._dtmHoraImportacion, Value) = False) Then
                Me.OndtmHoraImportacionChanging(Value)
                Me.SendPropertyChanging()
                Me._dtmHoraImportacion = Value
                Me.SendPropertyChanged("dtmHoraImportacion")
                Me.OndtmHoraImportacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDOperacion", DbType:="Int")>
    Public Property lngIDOperacion() As System.Nullable(Of Integer)
        Get
            Return Me._lngIDOperacion
        End Get
        Set
            If (Me._lngIDOperacion.Equals(Value) = False) Then
                Me.OnlngIDOperacionChanging(Value)
                Me.SendPropertyChanging()
                Me._lngIDOperacion = Value
                Me.SendPropertyChanged("lngIDOperacion")
                Me.OnlngIDOperacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="VarChar(20)")>
    Public Property strTipo() As String
        Get
            Return Me._strTipo
        End Get
        Set
            If (String.Equals(Me._strTipo, Value) = False) Then
                Me.OnstrTipoChanging(Value)
                Me.SendPropertyChanging()
                Me._strTipo = Value
                Me.SendPropertyChanged("strTipo")
                Me.OnstrTipoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEspecie", DbType:="VarChar(20)")>
    Public Property strEspecie() As String
        Get
            Return Me._strEspecie
        End Get
        Set
            If (String.Equals(Me._strEspecie, Value) = False) Then
                Me.OnstrEspecieChanging(Value)
                Me.SendPropertyChanging()
                Me._strEspecie = Value
                Me.SendPropertyChanged("strEspecie")
                Me.OnstrEspecieChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float")>
    Public Property dblCantidad() As System.Nullable(Of Double)
        Get
            Return Me._dblCantidad
        End Get
        Set
            If (Me._dblCantidad.Equals(Value) = False) Then
                Me.OndblCantidadChanging(Value)
                Me.SendPropertyChanging()
                Me._dblCantidad = Value
                Me.SendPropertyChanged("dblCantidad")
                Me.OndblCantidadChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngDiasVencimiento", DbType:="Int")>
    Public Property lngDiasVencimiento() As System.Nullable(Of Integer)
        Get
            Return Me._lngDiasVencimiento
        End Get
        Set
            If (Me._lngDiasVencimiento.Equals(Value) = False) Then
                Me.OnlngDiasVencimientoChanging(Value)
                Me.SendPropertyChanging()
                Me._lngDiasVencimiento = Value
                Me.SendPropertyChanged("lngDiasVencimiento")
                Me.OnlngDiasVencimientoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curEquivalente", DbType:="Float")>
    Public Property curEquivalente() As System.Nullable(Of Double)
        Get
            Return Me._curEquivalente
        End Get
        Set
            If (Me._curEquivalente.Equals(Value) = False) Then
                Me.OncurEquivalenteChanging(Value)
                Me.SendPropertyChanging()
                Me._curEquivalente = Value
                Me.SendPropertyChanged("curEquivalente")
                Me.OncurEquivalenteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curTotal", DbType:="Float")>
    Public Property curTotal() As System.Nullable(Of Double)
        Get
            Return Me._curTotal
        End Get
        Set
            If (Me._curTotal.Equals(Value) = False) Then
                Me.OncurTotalChanging(Value)
                Me.SendPropertyChanging()
                Me._curTotal = Value
                Me.SendPropertyChanged("curTotal")
                Me.OncurTotalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curPrecio", DbType:="Float")>
    Public Property curPrecio() As System.Nullable(Of Double)
        Get
            Return Me._curPrecio
        End Get
        Set
            If (Me._curPrecio.Equals(Value) = False) Then
                Me.OncurPrecioChanging(Value)
                Me.SendPropertyChanging()
                Me._curPrecio = Value
                Me.SendPropertyChanged("curPrecio")
                Me.OncurPrecioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="DateTime")>
    Public Property dtmEmision() As System.Nullable(Of Date)
        Get
            Return Me._dtmEmision
        End Get
        Set
            If (Me._dtmEmision.Equals(Value) = False) Then
                Me.OndtmEmisionChanging(Value)
                Me.SendPropertyChanging()
                Me._dtmEmision = Value
                Me.SendPropertyChanged("dtmEmision")
                Me.OndtmEmisionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="DateTime")>
    Public Property dtmVencimiento() As System.Nullable(Of Date)
        Get
            Return Me._dtmVencimiento
        End Get
        Set
            If (Me._dtmVencimiento.Equals(Value) = False) Then
                Me.OndtmVencimientoChanging(Value)
                Me.SendPropertyChanging()
                Me._dtmVencimiento = Value
                Me.SendPropertyChanged("dtmVencimiento")
                Me.OndtmVencimientoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmLiquidacion", DbType:="DateTime")>
    Public Property dtmLiquidacion() As System.Nullable(Of Date)
        Get
            Return Me._dtmLiquidacion
        End Get
        Set
            If (Me._dtmLiquidacion.Equals(Value) = False) Then
                Me.OndtmLiquidacionChanging(Value)
                Me.SendPropertyChanging()
                Me._dtmLiquidacion = Value
                Me.SendPropertyChanged("dtmLiquidacion")
                Me.OndtmLiquidacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoNegociacion", DbType:="VarChar(50)")>
    Public Property strTipoNegociacion() As String
        Get
            Return Me._strTipoNegociacion
        End Get
        Set
            If (String.Equals(Me._strTipoNegociacion, Value) = False) Then
                Me.OnstrTipoNegociacionChanging(Value)
                Me.SendPropertyChanging()
                Me._strTipoNegociacion = Value
                Me.SendPropertyChanged("strTipoNegociacion")
                Me.OnstrTipoNegociacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strISIN", DbType:="VarChar(20)")>
    Public Property strISIN() As String
        Get
            Return Me._strISIN
        End Get
        Set
            If (String.Equals(Me._strISIN, Value) = False) Then
                Me.OnstrISINChanging(Value)
                Me.SendPropertyChanging()
                Me._strISIN = Value
                Me.SendPropertyChanged("strISIN")
                Me.OnstrISINChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=False)>
    Public Property strUsuario() As String
        Get
            Return Me._strUsuario
        End Get
        Set
            If (String.Equals(Me._strUsuario, Value) = False) Then
                Me.OnstrUsuarioChanging(Value)
                Me.SendPropertyChanging()
                Me._strUsuario = Value
                Me.SendPropertyChanged("strUsuario")
                Me.OnstrUsuarioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="DateTime NOT NULL")>
    Public Property dtmActualizacion() As Date
        Get
            Return Me._dtmActualizacion
        End Get
        Set
            If ((Me._dtmActualizacion = Value) _
                        = False) Then
                Me.OndtmActualizacionChanging(Value)
                Me.SendPropertyChanging()
                Me._dtmActualizacion = Value
                Me.SendPropertyChanged("dtmActualizacion")
                Me.OndtmActualizacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intResultado", DbType:="Int")>
    Public Property intResultado() As System.Nullable(Of Integer)
        Get
            Return Me._intResultado
        End Get
        Set
            If (Me._intResultado.Equals(Value) = False) Then
                Me.OnintResultadoChanging(Value)
                Me.SendPropertyChanging()
                Me._intResultado = Value
                Me.SendPropertyChanged("intResultado")
                Me.OnintResultadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ListaComentario", DbType:="VarChar(400)")>
    Public Property ListaComentario() As String
        Get
            Return Me._ListaComentario
        End Get
        Set
            If (String.Equals(Me._ListaComentario, Value) = False) Then
                Me.OnListaComentarioChanging(Value)
                Me.SendPropertyChanging()
                Me._ListaComentario = Value
                Me.SendPropertyChanged("ListaComentario")
                Me.OnListaComentarioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdComitente", DbType:="Char(17)")>
    Public Property lngIdComitente() As String
        Get
            Return Me._lngIdComitente
        End Get
        Set
            If (String.Equals(Me._lngIdComitente, Value) = False) Then
                Me.OnlngIdComitenteChanging(Value)
                Me.SendPropertyChanging()
                Me._lngIdComitente = Value
                Me.SendPropertyChanged("lngIdComitente")
                Me.OnlngIdComitenteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidadGarantia", DbType:="Float")>
    Public Property dblCantidadGarantia() As System.Nullable(Of Double)
        Get
            Return Me._dblCantidadGarantia
        End Get
        Set
            If (Me._dblCantidadGarantia.Equals(Value) = False) Then
                Me.OndblCantidadGarantiaChanging(Value)
                Me.SendPropertyChanging()
                Me._dblCantidadGarantia = Value
                Me.SendPropertyChanged("dblCantidadGarantia")
                Me.OndblCantidadGarantiaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strRueda", DbType:="VarChar(10)")>
    Public Property strRueda() As String
        Get
            Return Me._strRueda
        End Get
        Set
            If (String.Equals(Me._strRueda, Value) = False) Then
                Me.OnstrRuedaChanging(Value)
                Me.SendPropertyChanging()
                Me._strRueda = Value
                Me.SendPropertyChanged("strRueda")
                Me.OnstrRuedaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
    Public Property pstrUsuarioConexion() As String
        Get
            Return Me._pstrUsuarioConexion
        End Get
        Set
            If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                Me.OnpstrUsuarioConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrUsuarioConexion = Value
                Me.SendPropertyChanged("pstrUsuarioConexion")
                Me.OnpstrUsuarioConexionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
    Public Property pstrInfoConexion() As String
        Get
            Return Me._pstrInfoConexion
        End Get
        Set
            If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                Me.OnpstrInfoConexionChanging(Value)
                Me.SendPropertyChanging()
                Me._pstrInfoConexion = Value
                Me.SendPropertyChanged("pstrInfoConexion")
                Me.OnpstrInfoConexionChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

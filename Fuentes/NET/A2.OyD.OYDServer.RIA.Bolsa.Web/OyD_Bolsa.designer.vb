'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOyDCITI")>  _
Partial Public Class OyDBolsaDatacontext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub DeleteFactura(instance As OyDBolsa.Factura)
    End Sub
    Partial Private Sub InsertTmpFacturas_EnvioCadena(instance As OyDBolsa.TmpFacturas_EnvioCadena)
    End Sub
    Partial Private Sub UpdateTmpFacturas_EnvioCadena(instance As OyDBolsa.TmpFacturas_EnvioCadena)
    End Sub
    Partial Private Sub DeleteTmpFacturas_EnvioCadena(instance As OyDBolsa.TmpFacturas_EnvioCadena)
    End Sub
    Partial Private Sub InserttbltmpPlanoPapeletas(instance As OyDBolsa.tbltmpPlanoPapeletas)
    End Sub
    Partial Private Sub UpdatetbltmpPlanoPapeletas(instance As OyDBolsa.tbltmpPlanoPapeletas)
    End Sub
    Partial Private Sub DeletetbltmpPlanoPapeletas(instance As OyDBolsa.tbltmpPlanoPapeletas)
    End Sub
    Partial Private Sub InserttblPlanoPapeletasBolsa(instance As OyDBolsa.tblPlanoPapeletasBolsa)
    End Sub
    Partial Private Sub UpdatetblPlanoPapeletasBolsa(instance As OyDBolsa.tblPlanoPapeletasBolsa)
    End Sub
    Partial Private Sub DeletetblPlanoPapeletasBolsa(instance As OyDBolsa.tblPlanoPapeletasBolsa)
    End Sub
    Partial Private Sub InsertConfiguracionFacturas(instance As OyDBolsa.ConfiguracionFacturas)
    End Sub
    Partial Private Sub DeleteConfiguracionFacturas(instance As OyDBolsa.ConfiguracionFacturas)
    End Sub
    Partial Private Sub InsertConfiguracionMensajeriaCadena(instance As OyDBolsa.ConfiguracionMensajeriaCadena)
    End Sub
    Partial Private Sub DeleteConfiguracionMensajeriaCadena(instance As OyDBolsa.ConfiguracionMensajeriaCadena)
    End Sub
    Partial Private Sub InsertItemCombo(instance As OyDBolsa.ItemCombo)
    End Sub
    Partial Private Sub UpdateItemCombo(instance As OyDBolsa.ItemCombo)
    End Sub
    Partial Private Sub DeleteItemCombo(instance As OyDBolsa.ItemCombo)
    End Sub
    Partial Private Sub InsertBeneficiariosOrdene(instance As OyDBolsa.BeneficiariosOrdene)
    End Sub
    Partial Private Sub UpdateBeneficiariosOrdene(instance As OyDBolsa.BeneficiariosOrdene)
    End Sub
    Partial Private Sub DeleteBeneficiariosOrdene(instance As OyDBolsa.BeneficiariosOrdene)
    End Sub
    Partial Private Sub InsertEspeciesLiquidacione(instance As OyDBolsa.EspeciesLiquidacione)
    End Sub
    Partial Private Sub UpdateEspeciesLiquidacione(instance As OyDBolsa.EspeciesLiquidacione)
    End Sub
    Partial Private Sub DeleteEspeciesLiquidacione(instance As OyDBolsa.EspeciesLiquidacione)
    End Sub
    Partial Private Sub InsertAplazamientosLiquidacione(instance As OyDBolsa.AplazamientosLiquidacione)
    End Sub
    Partial Private Sub UpdateAplazamientosLiquidacione(instance As OyDBolsa.AplazamientosLiquidacione)
    End Sub
    Partial Private Sub DeleteAplazamientosLiquidacione(instance As OyDBolsa.AplazamientosLiquidacione)
    End Sub
    Partial Private Sub InsertCustodiasLiquidacione(instance As OyDBolsa.CustodiasLiquidacione)
    End Sub
    Partial Private Sub UpdateCustodiasLiquidacione(instance As OyDBolsa.CustodiasLiquidacione)
    End Sub
    Partial Private Sub DeleteCustodiasLiquidacione(instance As OyDBolsa.CustodiasLiquidacione)
    End Sub
    Partial Private Sub InsertComentario(instance As OyDBolsa.Comentario)
    End Sub
    Partial Private Sub UpdateComentario(instance As OyDBolsa.Comentario)
    End Sub
    Partial Private Sub DeleteComentario(instance As OyDBolsa.Comentario)
    End Sub
    Partial Private Sub InsertTituloArregloUbicacion(instance As OyDBolsa.TituloArregloUbicacion)
    End Sub
    Partial Private Sub UpdateTituloArregloUbicacion(instance As OyDBolsa.TituloArregloUbicacion)
    End Sub
    Partial Private Sub DeleteTituloArregloUbicacion(instance As OyDBolsa.TituloArregloUbicacion)
    End Sub
    Partial Private Sub InsertCuentasDepositoCliente(instance As OyDBolsa.CuentasDepositoCliente)
    End Sub
    Partial Private Sub UpdateCuentasDepositoCliente(instance As OyDBolsa.CuentasDepositoCliente)
    End Sub
    Partial Private Sub DeleteCuentasDepositoCliente(instance As OyDBolsa.CuentasDepositoCliente)
    End Sub
    Partial Private Sub InsertValidacionCustodiaLiq(instance As OyDBolsa.ValidacionCustodiaLiq)
    End Sub
    Partial Private Sub UpdateValidacionCustodiaLiq(instance As OyDBolsa.ValidacionCustodiaLiq)
    End Sub
    Partial Private Sub DeleteValidacionCustodiaLiq(instance As OyDBolsa.ValidacionCustodiaLiq)
    End Sub
    Partial Private Sub DeleteLiquidacionesGapOrdenes(instance As OyDBolsa.LiquidacionesGapOrdenes)
    End Sub
    Partial Private Sub InsertLiquidacionesConsultar(instance As OyDBolsa.LiquidacionesConsultar)
    End Sub
    Partial Private Sub UpdateLiquidacionesConsultar(instance As OyDBolsa.LiquidacionesConsultar)
    End Sub
    Partial Private Sub DeleteLiquidacionesConsultar(instance As OyDBolsa.LiquidacionesConsultar)
    End Sub
    Partial Private Sub Insertconsultarcantidad(instance As OyDBolsa.consultarcantidad)
    End Sub
    Partial Private Sub Updateconsultarcantidad(instance As OyDBolsa.consultarcantidad)
    End Sub
    Partial Private Sub Deleteconsultarcantidad(instance As OyDBolsa.consultarcantidad)
    End Sub
    Partial Private Sub InsertLiquidacionesOrdenes(instance As OyDBolsa.LiquidacionesOrdenes)
    End Sub
    Partial Private Sub UpdateLiquidacionesOrdenes(instance As OyDBolsa.LiquidacionesOrdenes)
    End Sub
    Partial Private Sub DeleteLiquidacionesOrdenes(instance As OyDBolsa.LiquidacionesOrdenes)
    End Sub
    Partial Private Sub DeleteLiquidaciones_BolsasDelExteriorEntidad(instance As OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
    End Sub
    Partial Private Sub InsertBeneficiariosOrdenesOF(instance As OyDBolsa.BeneficiariosOrdenesOF)
    End Sub
    Partial Private Sub UpdateBeneficiariosOrdenesOF(instance As OyDBolsa.BeneficiariosOrdenesOF)
    End Sub
    Partial Private Sub DeleteBeneficiariosOrdenesOF(instance As OyDBolsa.BeneficiariosOrdenesOF)
    End Sub
    Partial Private Sub InsertEspeciesLiquidacionesOF(instance As OyDBolsa.EspeciesLiquidacionesOF)
    End Sub
    Partial Private Sub UpdateEspeciesLiquidacionesOF(instance As OyDBolsa.EspeciesLiquidacionesOF)
    End Sub
    Partial Private Sub DeleteEspeciesLiquidacionesOF(instance As OyDBolsa.EspeciesLiquidacionesOF)
    End Sub
    Partial Private Sub InsertAplazamientosLiquidacionesOF(instance As OyDBolsa.AplazamientosLiquidacionesOF)
    End Sub
    Partial Private Sub UpdateAplazamientosLiquidacionesOF(instance As OyDBolsa.AplazamientosLiquidacionesOF)
    End Sub
    Partial Private Sub DeleteAplazamientosLiquidacionesOF(instance As OyDBolsa.AplazamientosLiquidacionesOF)
    End Sub
    Partial Private Sub InsertCustodiasLiquidacionesOF(instance As OyDBolsa.CustodiasLiquidacionesOF)
    End Sub
    Partial Private Sub UpdateCustodiasLiquidacionesOF(instance As OyDBolsa.CustodiasLiquidacionesOF)
    End Sub
    Partial Private Sub DeleteCustodiasLiquidacionesOF(instance As OyDBolsa.CustodiasLiquidacionesOF)
    End Sub
    Partial Private Sub InsertLiquidacionesOFConsultar(instance As OyDBolsa.LiquidacionesOFConsultar)
    End Sub
    Partial Private Sub UpdateLiquidacionesOFConsultar(instance As OyDBolsa.LiquidacionesOFConsultar)
    End Sub
    Partial Private Sub DeleteLiquidacionesOFConsultar(instance As OyDBolsa.LiquidacionesOFConsultar)
    End Sub
    Partial Private Sub InsertLiquidacionesOrdenesOF(instance As OyDBolsa.LiquidacionesOrdenesOF)
    End Sub
    Partial Private Sub UpdateLiquidacionesOrdenesOF(instance As OyDBolsa.LiquidacionesOrdenesOF)
    End Sub
    Partial Private Sub DeleteLiquidacionesOrdenesOF(instance As OyDBolsa.LiquidacionesOrdenesOF)
    End Sub
    Partial Private Sub InsertconsultarcantidadOF(instance As OyDBolsa.consultarcantidadOF)
    End Sub
    Partial Private Sub UpdateconsultarcantidadOF(instance As OyDBolsa.consultarcantidadOF)
    End Sub
    Partial Private Sub DeleteconsultarcantidadOF(instance As OyDBolsa.consultarcantidadOF)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Liquidaciones() As System.Data.Linq.Table(Of OyDBolsa.Liquidacione)
		Get
			Return Me.GetTable(Of OyDBolsa.Liquidacione)
		End Get
	End Property
	
	Public ReadOnly Property Facturas() As System.Data.Linq.Table(Of OyDBolsa.Factura)
		Get
			Return Me.GetTable(Of OyDBolsa.Factura)
		End Get
	End Property
	
	Public ReadOnly Property TmpFacturas_EnvioCadena() As System.Data.Linq.Table(Of OyDBolsa.TmpFacturas_EnvioCadena)
		Get
			Return Me.GetTable(Of OyDBolsa.TmpFacturas_EnvioCadena)
		End Get
	End Property
	
	Public ReadOnly Property tbltmpPlanoPapeletas() As System.Data.Linq.Table(Of OyDBolsa.tbltmpPlanoPapeletas)
		Get
			Return Me.GetTable(Of OyDBolsa.tbltmpPlanoPapeletas)
		End Get
	End Property
	
	Public ReadOnly Property tblPlanoPapeletasBolsa() As System.Data.Linq.Table(Of OyDBolsa.tblPlanoPapeletasBolsa)
		Get
			Return Me.GetTable(Of OyDBolsa.tblPlanoPapeletasBolsa)
		End Get
	End Property
	
	Public ReadOnly Property ConfiguracionFacturas() As System.Data.Linq.Table(Of OyDBolsa.ConfiguracionFacturas)
		Get
			Return Me.GetTable(Of OyDBolsa.ConfiguracionFacturas)
		End Get
	End Property
	
	Public ReadOnly Property ConfiguracionMensajeriaCadena() As System.Data.Linq.Table(Of OyDBolsa.ConfiguracionMensajeriaCadena)
		Get
			Return Me.GetTable(Of OyDBolsa.ConfiguracionMensajeriaCadena)
		End Get
	End Property
	
	Public ReadOnly Property ItemCombos() As System.Data.Linq.Table(Of OyDBolsa.ItemCombo)
		Get
			Return Me.GetTable(Of OyDBolsa.ItemCombo)
		End Get
	End Property
	
	Public ReadOnly Property ReceptoresOrdenes() As System.Data.Linq.Table(Of OyDBolsa.ReceptoresOrdene)
		Get
			Return Me.GetTable(Of OyDBolsa.ReceptoresOrdene)
		End Get
	End Property
	
	Public ReadOnly Property BeneficiariosOrdenes() As System.Data.Linq.Table(Of OyDBolsa.BeneficiariosOrdene)
		Get
			Return Me.GetTable(Of OyDBolsa.BeneficiariosOrdene)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesLiquidaciones() As System.Data.Linq.Table(Of OyDBolsa.EspeciesLiquidacione)
		Get
			Return Me.GetTable(Of OyDBolsa.EspeciesLiquidacione)
		End Get
	End Property
	
	Public ReadOnly Property AplazamientosLiquidaciones() As System.Data.Linq.Table(Of OyDBolsa.AplazamientosLiquidacione)
		Get
			Return Me.GetTable(Of OyDBolsa.AplazamientosLiquidacione)
		End Get
	End Property
	
	Public ReadOnly Property CustodiasLiquidaciones() As System.Data.Linq.Table(Of OyDBolsa.CustodiasLiquidacione)
		Get
			Return Me.GetTable(Of OyDBolsa.CustodiasLiquidacione)
		End Get
	End Property
	
	Public ReadOnly Property Comentarios() As System.Data.Linq.Table(Of OyDBolsa.Comentario)
		Get
			Return Me.GetTable(Of OyDBolsa.Comentario)
		End Get
	End Property
	
	Public ReadOnly Property TituloArregloUbicacion() As System.Data.Linq.Table(Of OyDBolsa.TituloArregloUbicacion)
		Get
			Return Me.GetTable(Of OyDBolsa.TituloArregloUbicacion)
		End Get
	End Property
	
	Public ReadOnly Property CuentasDepositoClientes() As System.Data.Linq.Table(Of OyDBolsa.CuentasDepositoCliente)
		Get
			Return Me.GetTable(Of OyDBolsa.CuentasDepositoCliente)
		End Get
	End Property
	
	Public ReadOnly Property ValidacionCustodiaLiqs() As System.Data.Linq.Table(Of OyDBolsa.ValidacionCustodiaLiq)
		Get
			Return Me.GetTable(Of OyDBolsa.ValidacionCustodiaLiq)
		End Get
	End Property
	
	Public ReadOnly Property FacturasBancaInv() As System.Data.Linq.Table(Of OyDBolsa.FacturasBancaIn)
		Get
			Return Me.GetTable(Of OyDBolsa.FacturasBancaIn)
		End Get
	End Property
	
	Public ReadOnly Property DetalleFacturasBancaInv() As System.Data.Linq.Table(Of OyDBolsa.DetalleFacturasBancaIn)
		Get
			Return Me.GetTable(Of OyDBolsa.DetalleFacturasBancaIn)
		End Get
	End Property
	
	Public ReadOnly Property LiquidacionesGapOrdenes() As System.Data.Linq.Table(Of OyDBolsa.LiquidacionesGapOrdenes)
		Get
			Return Me.GetTable(Of OyDBolsa.LiquidacionesGapOrdenes)
		End Get
	End Property
	
	Public ReadOnly Property LiquidacionesConsultar() As System.Data.Linq.Table(Of OyDBolsa.LiquidacionesConsultar)
		Get
			Return Me.GetTable(Of OyDBolsa.LiquidacionesConsultar)
		End Get
	End Property
	
	Public ReadOnly Property consultarcantidad() As System.Data.Linq.Table(Of OyDBolsa.consultarcantidad)
		Get
			Return Me.GetTable(Of OyDBolsa.consultarcantidad)
		End Get
	End Property
	
	Public ReadOnly Property LiquidacionesOrdenes() As System.Data.Linq.Table(Of OyDBolsa.LiquidacionesOrdenes)
		Get
			Return Me.GetTable(Of OyDBolsa.LiquidacionesOrdenes)
		End Get
	End Property
	
	Public ReadOnly Property PagosComisiones() As System.Data.Linq.Table(Of OyDBolsa.PagosComisiones)
		Get
			Return Me.GetTable(Of OyDBolsa.PagosComisiones)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesRelacionLocalExterior() As System.Data.Linq.Table(Of OyDBolsa.EspeciesRelacionLocalExterior)
		Get
			Return Me.GetTable(Of OyDBolsa.EspeciesRelacionLocalExterior)
		End Get
	End Property
	
	Public ReadOnly Property Liquidaciones_BolsasDelExteriorEntidad() As System.Data.Linq.Table(Of OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
		Get
			Return Me.GetTable(Of OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
		End Get
	End Property
	
	Public ReadOnly Property LiquidacionesOF() As System.Data.Linq.Table(Of OyDBolsa.LiquidacionesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.LiquidacionesOF)
		End Get
	End Property
	
	Public ReadOnly Property ReceptoresOrdenesOF() As System.Data.Linq.Table(Of OyDBolsa.ReceptoresOrdenesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.ReceptoresOrdenesOF)
		End Get
	End Property
	
	Public ReadOnly Property BeneficiariosOrdenesOF() As System.Data.Linq.Table(Of OyDBolsa.BeneficiariosOrdenesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.BeneficiariosOrdenesOF)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesLiquidacionesOF() As System.Data.Linq.Table(Of OyDBolsa.EspeciesLiquidacionesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.EspeciesLiquidacionesOF)
		End Get
	End Property
	
	Public ReadOnly Property AplazamientosLiquidacionesOF() As System.Data.Linq.Table(Of OyDBolsa.AplazamientosLiquidacionesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.AplazamientosLiquidacionesOF)
		End Get
	End Property
	
	Public ReadOnly Property CustodiasLiquidacionesOF() As System.Data.Linq.Table(Of OyDBolsa.CustodiasLiquidacionesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.CustodiasLiquidacionesOF)
		End Get
	End Property
	
	Public ReadOnly Property LiquidacionesOFConsultar() As System.Data.Linq.Table(Of OyDBolsa.LiquidacionesOFConsultar)
		Get
			Return Me.GetTable(Of OyDBolsa.LiquidacionesOFConsultar)
		End Get
	End Property
	
	Public ReadOnly Property LiquidacionesOrdenesOF() As System.Data.Linq.Table(Of OyDBolsa.LiquidacionesOrdenesOF)
		Get
			Return Me.GetTable(Of OyDBolsa.LiquidacionesOrdenesOF)
		End Get
	End Property
	
	Public ReadOnly Property consultarcantidadOF() As System.Data.Linq.Table(Of OyDBolsa.consultarcantidadOF)
		Get
			Return Me.GetTable(Of OyDBolsa.consultarcantidadOF)
		End Get
	End Property

    Public ReadOnly Property tblRespuestaValidacionesTraslado() As System.Data.Linq.Table(Of OyDBolsa.tblRespuestaValidacionesTraslado)
        Get
            Return Me.GetTable(Of OyDBolsa.tblRespuestaValidacionesTraslado)
        End Get
    End Property

    Private Sub UpdateLiquidacione(ByVal obj As OyDBolsa.Liquidacione)
		Dim p1 As Integer = obj.IDLiquidaciones
		Me.uspOyDNet_Liquidaciones_Actualizar(obj.ID, obj.Parcial, obj.Tipo, obj.ClaseOrden, obj.IDEspecie, obj.IDOrden, obj.Prefijo, obj.IDFactura, obj.Facturada, obj.IDComitente, obj.IDOrdenante, obj.IDBolsa, CType(obj.ValBolsa,System.Nullable(Of Double)), CType(obj.IDRueda,System.Nullable(Of Short)), CType(obj.TasaDescuento,System.Nullable(Of Double)), CType(obj.TasaCompraVende,System.Nullable(Of Double)), obj.Modalidad, obj.IndicadorEconomico, CType(obj.PuntosIndicador,System.Nullable(Of Double)), obj.Plazo, CType(obj.Liquidacion,System.Nullable(Of Date)), CType(obj.Cumplimiento,System.Nullable(Of Date)), CType(obj.Emision,System.Nullable(Of Date)), CType(obj.Vencimiento,System.Nullable(Of Date)), CType(obj.OtraPlaza,System.Nullable(Of Boolean)), obj.Plaza, obj.IDComisionistaLocal, obj.IDComisionistaOtraPlaza, obj.IDCiudadOtraPlaza, CType(obj.TasaEfectiva,System.Nullable(Of Double)), CType(obj.Cantidad,System.Nullable(Of Double)), CType(obj.Precio,System.Nullable(Of Double)), CType(obj.Transaccion_cur,System.Nullable(Of Double)), CType(obj.SubTotalLiq,System.Nullable(Of Double)), CType(obj.TotalLiq,System.Nullable(Of Double)), CType(obj.Comision,System.Nullable(Of Double)), CType(obj.Retencion,System.Nullable(Of Double)), CType(obj.Intereses,System.Nullable(Of Double)), CType(obj.ValorIva,System.Nullable(Of Double)), obj.DiasIntereses, CType(obj.FactorComisionPactada,System.Nullable(Of Double)), obj.Mercado, obj.NroTitulo, obj.IDCiudadExpTitulo, obj.PlazoOriginal, CType(obj.Aplazamiento,System.Nullable(Of Boolean)), CType(obj.VersionPapeleta,System.Nullable(Of Short)), CType(obj.EmisionOriginal,System.Nullable(Of Date)), CType(obj.VencimientoOriginal,System.Nullable(Of Date)), obj.Impresiones, obj.FormaPago, obj.CtrlImpPapeleta, obj.DiasVencimiento, obj.PosicionPropia, obj.Transaccion, obj.TipoOperacion, obj.DiasContado, CType(obj.Ordinaria,System.Nullable(Of Boolean)), obj.ObjetoOrdenExtraordinaria, obj.NumPadre, obj.ParcialPadre, CType(obj.OperacionPadre,System.Nullable(Of Date)), obj.DiasTramo, CType(obj.Vendido,System.Nullable(Of Boolean)), CType(obj.Vendido_fecha,System.Nullable(Of Date)), CType(obj.Manual,System.Nullable(Of Boolean)), CType(obj.ValorTraslado,System.Nullable(Of Double)), CType(obj.ValorBrutoCompraVencida,System.Nullable(Of Double)), obj.AutoRetenedor, obj.Sujeto, CType(obj.PcRenEfecCompraRet,System.Nullable(Of Double)), CType(obj.PcRenEfecVendeRet,System.Nullable(Of Double)), obj.Reinversion, obj.Swap, obj.NroSwap, obj.Certificacion, CType(obj.DescuentoAcumula,System.Nullable(Of Double)), CType(obj.PctRendimiento,System.Nullable(Of Double)), CType(obj.FechaCompraVencido,System.Nullable(Of Date)), CType(obj.PrecioCompraVencido,System.Nullable(Of Double)), obj.ConstanciaEnajenacion, obj.RepoTitulo, CType(obj.ServBolsaVble,System.Nullable(Of Double)), CType(obj.ServBolsaFijo,System.Nullable(Of Double)), obj.Traslado, obj.UBICACIONTITULO, obj.HoraGrabacion, obj.OrigenOperacion, obj.CodigoOperadorCompra, obj.CodigoOperadorVende, obj.IdentificacionRemate, obj.ModalidaOperacion, obj.IndicadorPrecio, obj.PeriodoExdividendo, obj.PlazoOperacionRepo, CType(obj.ValorCaptacionRepo,System.Nullable(Of Double)), CType(obj.VolumenCompraRepo,System.Nullable(Of Double)), CType(obj.PrecioNetoFraccion,System.Nullable(Of Double)), CType(obj.VolumenNetoFraccion,System.Nullable(Of Double)), obj.CodigoContactoComercial, obj.NroFraccionOperacion, obj.IdentificacionPatrimonio1, obj.TipoidentificacionCliente2, obj.NitCliente2, obj.IdentificacionPatrimonio2, obj.TipoIdentificacionCliente3, obj.NitCliente3, obj.IdentificacionPatrimonio3, obj.IndicadorOperacion, CType(obj.BaseRetencion,System.Nullable(Of Double)), CType(obj.PorcRetencion,System.Nullable(Of Double)), CType(obj.BaseRetencionTranslado,System.Nullable(Of Double)), CType(obj.PorcRetencionTranslado,System.Nullable(Of Double)), CType(obj.PorcIvaComision,System.Nullable(Of Double)), obj.IndicadorAcciones, obj.OperacionNegociada, CType(obj.FechaConstancia,System.Nullable(Of Date)), CType(obj.ValorConstancia,System.Nullable(Of Double)), obj.GeneraConstancia, CType(obj.Cargado,System.Nullable(Of Boolean)), obj.Usuario, CType(obj.CumplimientoTitulo,System.Nullable(Of Date)), obj.NroLote, CType(obj.ValorEntregaContraPago,System.Nullable(Of Double)), obj.AquienSeEnviaRetencion, obj.IDBaseDias, obj.TipoDeOferta, obj.NroLoteENC, CType(obj.ContabilidadENC,System.Nullable(Of Date)), p1, obj.CodigoIntermediario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.ValorExtemporaneo,System.Nullable(Of Double)), obj.PosicionExtemporaneo)
		obj.IDLiquidaciones = p1
	End Sub
	
	Private Sub DeleteLiquidacione(ByVal obj As OyDBolsa.Liquidacione)
		Me.uspOyDNet_Maestros_Liquidaciones_Eliminar(obj.IDLiquidaciones, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertFactura(ByVal obj As OyDBolsa.Factura)
		Dim p1 As Integer = obj.IDfacturas
		Me.uspOyDNet_Maestros_Facturas_Actualizar(obj.Prefijo, obj.Numero, obj.Comitente, CType(obj.Fecha_Documento,System.Nullable(Of Date)), obj.Estado, CType(obj.Fecha_Estado,System.Nullable(Of Date)), obj.Impresiones, obj.Usuario, obj.IDCodigoResolucion, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDfacturas = p1
	End Sub
	
	Private Sub UpdateFactura(ByVal obj As OyDBolsa.Factura)
		Dim p1 As Integer = obj.IDfacturas
		Me.uspOyDNet_Maestros_Facturas_Actualizar(obj.Prefijo, obj.Numero, obj.Comitente, CType(obj.Fecha_Documento,System.Nullable(Of Date)), obj.Estado, CType(obj.Fecha_Estado,System.Nullable(Of Date)), obj.Impresiones, obj.Usuario, obj.IDCodigoResolucion, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDfacturas = p1
	End Sub
	
	Private Sub UpdateConfiguracionFacturas(ByVal obj As OyDBolsa.ConfiguracionFacturas)
		Me.uspOyDNet_ConfiguracionFacturas_Actualizar(CType(obj.UsarFechade,System.Nullable(Of Boolean)), CType(obj.FechaLiquidacion,System.Nullable(Of Boolean)), CType(obj.FechaCumplimiento,System.Nullable(Of Boolean)), CType(obj.TipoOperacion,System.Nullable(Of Boolean)), CType(obj.TipoOperacionCompra,System.Nullable(Of Boolean)), CType(obj.TipoOperacionVenta,System.Nullable(Of Boolean)), CType(obj.ClaseOperacion,System.Nullable(Of Boolean)), CType(obj.ClaseOperacionAcciones,System.Nullable(Of Boolean)), CType(obj.ClaseOperacionRentaFija,System.Nullable(Of Boolean)), CType(obj.ClaseOperacionRentaSimultaneas,System.Nullable(Of Boolean)), CType(obj.ClaseOperacionRentaRepos,System.Nullable(Of Boolean)), CType(obj.UsarFechade_ORD,System.Nullable(Of Boolean)), CType(obj.FechaLiquidacion_ORD,System.Nullable(Of Boolean)), CType(obj.FechaCumplimiento_ORD,System.Nullable(Of Boolean)), CType(obj.TipoOperacion_ORD,System.Nullable(Of Boolean)), CType(obj.ClaseOperacion_ORD,System.Nullable(Of Boolean)), obj.intFechaLiquidacion, obj.intFechaCumplimiento, obj.intTipoOperacion, obj.intClaseOperacion, CType(obj.VentaOrd,System.Nullable(Of Boolean)), CType(obj.CompraOrd,System.Nullable(Of Boolean)), obj.TipoOperacionC, CType(obj.AccionesORD,System.Nullable(Of Boolean)), CType(obj.RentafijaORD,System.Nullable(Of Boolean)), CType(obj.SimultaneasORD,System.Nullable(Of Boolean)), CType(obj.reposORD,System.Nullable(Of Boolean)), obj.NroOrdenRF, obj.NroOrdenSimultaneas, obj.NroOrdenrepos, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    Private Sub UpdateConfiguracionMensajeriaCadena(ByVal obj As OyDBolsa.ConfiguracionMensajeriaCadena)
        Me.uspOyDNet_MensajeriaCadena_Actualizar(CType(obj.VIP, System.Nullable(Of Boolean)), CType(obj.Completa, System.Nullable(Of Boolean)), CType(obj.Parcial, System.Nullable(Of Boolean)), CType(obj.Ninguna, System.Nullable(Of Boolean)), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub DeleteReceptoresOrdene(ByVal obj As OyDBolsa.ReceptoresOrdene)
		Me.uspOyDNet_ReceptoresOrdenes_Eliminar(obj.IDReceptoresOrdenes, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertFacturasBancaIn(ByVal obj As OyDBolsa.FacturasBancaIn)
		Dim p1 As Integer = obj.IDFacturasBancaInv
		Me.uspOyDNet_Bolsa_FacturasBancaInv_Actualizar(obj.AnoDocumento, obj.Prefijo, obj.ID, CType(obj.Documento,System.Nullable(Of Date)), obj.IDComitente, obj.TipoIdentificacion, obj.NroIdentificacion, obj.Nombre, obj.Direccion, obj.Telefono, obj.Estado, obj.Impresiones, CType(obj.IVA,System.Nullable(Of Decimal)), CType(obj.Retencion,System.Nullable(Of Decimal)), CType(obj.Fecha_Estado,System.Nullable(Of Date)), obj.Usuario, p1, obj.Maquina, obj.EsExenta, obj.DetalleFacturaXML, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDFacturasBancaInv = p1
	End Sub
	
	Private Sub UpdateFacturasBancaIn(ByVal obj As OyDBolsa.FacturasBancaIn)
		Dim p1 As Integer = obj.IDFacturasBancaInv
		Me.uspOyDNet_Bolsa_FacturasBancaInv_Actualizar(obj.AnoDocumento, obj.Prefijo, obj.ID, CType(obj.Documento,System.Nullable(Of Date)), obj.IDComitente, obj.TipoIdentificacion, obj.NroIdentificacion, obj.Nombre, obj.Direccion, obj.Telefono, obj.Estado, obj.Impresiones, CType(obj.IVA,System.Nullable(Of Decimal)), CType(obj.Retencion,System.Nullable(Of Decimal)), CType(obj.Fecha_Estado,System.Nullable(Of Date)), obj.Usuario, p1, obj.Maquina, obj.EsExenta, obj.DetalleFacturaXML, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDFacturasBancaInv = p1
	End Sub
	
	Private Sub DeleteFacturasBancaIn(ByVal obj As OyDBolsa.FacturasBancaIn)
		Me.uspOyDNet_Bolsa_FacturasBancaInv_Eliminar(obj.IDFacturasBancaInv, CType(Nothing, String), CType(Nothing, System.Nullable(Of Integer)), CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertDetalleFacturasBancaIn(ByVal obj As OyDBolsa.DetalleFacturasBancaIn)
		Dim p1 As Integer = obj.IDDetalleFacturasBancaInv
		Me.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Actualizar(obj.AnoDocumento, obj.Prefijo, obj.ID, obj.Secuencia, obj.Descripcion, CType(obj.Valor,System.Nullable(Of Decimal)), CType(obj.Actualizacion,System.Nullable(Of Date)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDetalleFacturasBancaInv = p1
	End Sub
	
	Private Sub UpdateDetalleFacturasBancaIn(ByVal obj As OyDBolsa.DetalleFacturasBancaIn)
		Dim p1 As Integer = obj.IDDetalleFacturasBancaInv
		Me.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Actualizar(obj.AnoDocumento, obj.Prefijo, obj.ID, obj.Secuencia, obj.Descripcion, CType(obj.Valor,System.Nullable(Of Decimal)), CType(obj.Actualizacion,System.Nullable(Of Date)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDetalleFacturasBancaInv = p1
	End Sub
	
	Private Sub DeleteDetalleFacturasBancaIn(ByVal obj As OyDBolsa.DetalleFacturasBancaIn)
		Me.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar(obj.IDDetalleFacturasBancaInv, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertLiquidacionesGapOrdenes(ByVal obj As OyDBolsa.LiquidacionesGapOrdenes)
		Me.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar
	End Sub
	
	Private Sub UpdateLiquidacionesGapOrdenes(ByVal obj As OyDBolsa.LiquidacionesGapOrdenes)
		Me.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar
	End Sub
	
	Private Sub InsertPagosComisiones(ByVal obj As OyDBolsa.PagosComisiones)
		Me.uspOyDNet_PagosComisiones(obj.CodigoOyD, CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, System.Nullable(Of Boolean)))
	End Sub
	
	Private Sub UpdatePagosComisiones(ByVal obj As OyDBolsa.PagosComisiones)
		Me.uspOyDNet_PagosComisiones(obj.CodigoOyD, CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, System.Nullable(Of Boolean)))
	End Sub
	
	Private Sub DeletePagosComisiones(ByVal obj As OyDBolsa.PagosComisiones)
		Me.uspOyDNet_ConsultarPagosComisiones(CType(Nothing, String), CType(Nothing, System.Nullable(Of Date)), CType(Nothing, String), CType(Nothing, Integer), CType(Nothing, String), obj.CodigoOyD, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertEspeciesRelacionLocalExterior(ByVal obj As OyDBolsa.EspeciesRelacionLocalExterior)
		Me.uspOyDNet_tblEspeciesRelacionLocalExterior_Actualizarr(obj.ID, obj.IdEspecie, obj.IdEspecieExterior, obj.NitProgramaADR, obj.FactorEspecie, obj.FactorEspecieExterior, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateEspeciesRelacionLocalExterior(ByVal obj As OyDBolsa.EspeciesRelacionLocalExterior)
		Me.uspOyDNet_tblEspeciesRelacionLocalExterior_Actualizarr(obj.ID, obj.IdEspecie, obj.IdEspecieExterior, obj.NitProgramaADR, obj.FactorEspecie, obj.FactorEspecieExterior, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteEspeciesRelacionLocalExterior(ByVal obj As OyDBolsa.EspeciesRelacionLocalExterior)
		Me.uspOyDNet_tblEspeciesRelacionLocalExterior_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertLiquidaciones_BolsasDelExteriorEntidad(ByVal obj As OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
		Me.uspOyDNet_tblLiquidaciones_BolsasDelExterior_Actualizar(obj.ID, obj.Tipo, obj.IDLiquidacion, obj.Liquidacion, CType(obj.Cumplimiento,System.Nullable(Of Date)), obj.Parcial, obj.Clase, obj.IDComitente, obj.IdOrdenante, obj.IdEspecie, CType(obj.Precio,System.Nullable(Of Double)), CType(obj.Cantidad,System.Nullable(Of Double)), CType(obj.TotalLiq,System.Nullable(Of Double)), obj.ReferenciaExterior, obj.IdReceptor, obj.RetornoBolsaExterior, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateLiquidaciones_BolsasDelExteriorEntidad(ByVal obj As OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
		Me.uspOyDNet_tblLiquidaciones_BolsasDelExterior_Actualizar(CType(Nothing, Integer), obj.Tipo, obj.IDLiquidacion, obj.Liquidacion, CType(obj.Cumplimiento,System.Nullable(Of Date)), obj.Parcial, obj.Clase, obj.IDComitente, obj.IdOrdenante, obj.IdEspecie, CType(obj.Precio,System.Nullable(Of Double)), CType(obj.Cantidad,System.Nullable(Of Double)), CType(obj.TotalLiq,System.Nullable(Of Double)), obj.ReferenciaExterior, obj.IdReceptor, obj.RetornoBolsaExterior, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertLiquidacionesOF(ByVal obj As OyDBolsa.LiquidacionesOF)
		Dim p1 As Integer = obj.IDLiquidacionesOF
		Me.uspOyDNet_LiquidacionesOF_Actualizar(obj.ID, obj.Parcial, obj.Tipo, obj.ClaseOrden, obj.IDEspecie, obj.IDOrden, obj.Prefijo, obj.IDFactura, obj.Facturada, obj.IDComitente, obj.IDOrdenante, obj.IDBolsa, CType(obj.ValBolsa,System.Nullable(Of Double)), CType(obj.IDRueda,System.Nullable(Of Short)), CType(obj.TasaDescuento,System.Nullable(Of Double)), CType(obj.TasaCompraVende,System.Nullable(Of Double)), obj.Modalidad, obj.IndicadorEconomico, CType(obj.PuntosIndicador,System.Nullable(Of Double)), obj.Plazo, CType(obj.Liquidacion,System.Nullable(Of Date)), CType(obj.Cumplimiento,System.Nullable(Of Date)), CType(obj.Emision,System.Nullable(Of Date)), CType(obj.Vencimiento,System.Nullable(Of Date)), CType(obj.OtraPlaza,System.Nullable(Of Boolean)), obj.Plaza, obj.IDComisionistaLocal, obj.IDComisionistaOtraPlaza, obj.IDCiudadOtraPlaza, CType(obj.TasaEfectiva,System.Nullable(Of Double)), CType(obj.Cantidad,System.Nullable(Of Double)), CType(obj.Precio,System.Nullable(Of Double)), CType(obj.Transaccion_cur,System.Nullable(Of Double)), CType(obj.SubTotalLiq,System.Nullable(Of Double)), CType(obj.TotalLiq,System.Nullable(Of Double)), CType(obj.Comision,System.Nullable(Of Double)), CType(obj.Retencion,System.Nullable(Of Double)), CType(obj.Intereses,System.Nullable(Of Double)), CType(obj.ValorIva,System.Nullable(Of Double)), obj.DiasIntereses, CType(obj.FactorComisionPactada,System.Nullable(Of Double)), obj.Mercado, obj.NroTitulo, obj.IDCiudadExpTitulo, obj.PlazoOriginal, CType(obj.Aplazamiento,System.Nullable(Of Boolean)), CType(obj.VersionPapeleta,System.Nullable(Of Short)), CType(obj.EmisionOriginal,System.Nullable(Of Date)), CType(obj.VencimientoOriginal,System.Nullable(Of Date)), obj.Impresiones, obj.FormaPago, obj.CtrlImpPapeleta, obj.DiasVencimiento, obj.PosicionPropia, obj.Transaccion, obj.TipoOperacion, obj.DiasContado, CType(obj.Ordinaria,System.Nullable(Of Boolean)), obj.ObjetoOrdenExtraordinaria, obj.NumPadre, obj.ParcialPadre, CType(obj.OperacionPadre,System.Nullable(Of Date)), obj.DiasTramo, CType(obj.Vendido,System.Nullable(Of Boolean)), CType(obj.Vendido_fecha,System.Nullable(Of Date)), CType(obj.Manual,System.Nullable(Of Boolean)), CType(obj.ValorTraslado,System.Nullable(Of Double)), CType(obj.ValorBrutoCompraVencida,System.Nullable(Of Double)), obj.AutoRetenedor, obj.Sujeto, CType(obj.PcRenEfecCompraRet,System.Nullable(Of Double)), CType(obj.PcRenEfecVendeRet,System.Nullable(Of Double)), obj.Reinversion, obj.Swap, obj.NroSwap, obj.Certificacion, CType(obj.DescuentoAcumula,System.Nullable(Of Double)), CType(obj.PctRendimiento,System.Nullable(Of Double)), CType(obj.FechaCompraVencido,System.Nullable(Of Date)), CType(obj.PrecioCompraVencido,System.Nullable(Of Double)), obj.ConstanciaEnajenacion, obj.RepoTitulo, CType(obj.ServBolsaVble,System.Nullable(Of Double)), CType(obj.ServBolsaFijo,System.Nullable(Of Double)), obj.Traslado, obj.UBICACIONTITULO, obj.HoraGrabacion, obj.OrigenOperacion, obj.CodigoOperadorCompra, obj.CodigoOperadorVende, obj.IdentificacionRemate, obj.ModalidaOperacion, obj.IndicadorPrecio, obj.PeriodoExdividendo, obj.PlazoOperacionRepo, CType(obj.ValorCaptacionRepo,System.Nullable(Of Double)), CType(obj.VolumenCompraRepo,System.Nullable(Of Double)), CType(obj.PrecioNetoFraccion,System.Nullable(Of Double)), CType(obj.VolumenNetoFraccion,System.Nullable(Of Double)), obj.CodigoContactoComercial, obj.NroFraccionOperacion, obj.IdentificacionPatrimonio1, obj.TipoidentificacionCliente2, obj.NitCliente2, obj.IdentificacionPatrimonio2, obj.TipoIdentificacionCliente3, obj.NitCliente3, obj.IdentificacionPatrimonio3, obj.IndicadorOperacion, CType(obj.BaseRetencion,System.Nullable(Of Double)), CType(obj.PorcRetencion,System.Nullable(Of Double)), CType(obj.BaseRetencionTranslado,System.Nullable(Of Double)), CType(obj.PorcRetencionTranslado,System.Nullable(Of Double)), CType(obj.PorcIvaComision,System.Nullable(Of Double)), obj.IndicadorAcciones, obj.OperacionNegociada, CType(obj.FechaConstancia,System.Nullable(Of Date)), CType(obj.ValorConstancia,System.Nullable(Of Double)), obj.GeneraConstancia, CType(obj.Cargado,System.Nullable(Of Boolean)), obj.Usuario, CType(obj.CumplimientoTitulo,System.Nullable(Of Date)), obj.NroLote, CType(obj.ValorEntregaContraPago,System.Nullable(Of Double)), obj.AquienSeEnviaRetencion, obj.IDBaseDias, obj.TipoDeOferta, obj.NroLoteENC, CType(obj.ContabilidadENC,System.Nullable(Of Date)), p1, obj.CodigoIntermediario, obj.IDNegocio, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDLiquidacionesOF = p1
	End Sub
	
	Private Sub UpdateLiquidacionesOF(ByVal obj As OyDBolsa.LiquidacionesOF)
		Dim p1 As Integer = obj.IDLiquidacionesOF
		Me.uspOyDNet_LiquidacionesOF_Actualizar(obj.ID, obj.Parcial, obj.Tipo, obj.ClaseOrden, obj.IDEspecie, obj.IDOrden, obj.Prefijo, obj.IDFactura, obj.Facturada, obj.IDComitente, obj.IDOrdenante, obj.IDBolsa, CType(obj.ValBolsa,System.Nullable(Of Double)), CType(obj.IDRueda,System.Nullable(Of Short)), CType(obj.TasaDescuento,System.Nullable(Of Double)), CType(obj.TasaCompraVende,System.Nullable(Of Double)), obj.Modalidad, obj.IndicadorEconomico, CType(obj.PuntosIndicador,System.Nullable(Of Double)), obj.Plazo, CType(obj.Liquidacion,System.Nullable(Of Date)), CType(obj.Cumplimiento,System.Nullable(Of Date)), CType(obj.Emision,System.Nullable(Of Date)), CType(obj.Vencimiento,System.Nullable(Of Date)), CType(obj.OtraPlaza,System.Nullable(Of Boolean)), obj.Plaza, obj.IDComisionistaLocal, obj.IDComisionistaOtraPlaza, obj.IDCiudadOtraPlaza, CType(obj.TasaEfectiva,System.Nullable(Of Double)), CType(obj.Cantidad,System.Nullable(Of Double)), CType(obj.Precio,System.Nullable(Of Double)), CType(obj.Transaccion_cur,System.Nullable(Of Double)), CType(obj.SubTotalLiq,System.Nullable(Of Double)), CType(obj.TotalLiq,System.Nullable(Of Double)), CType(obj.Comision,System.Nullable(Of Double)), CType(obj.Retencion,System.Nullable(Of Double)), CType(obj.Intereses,System.Nullable(Of Double)), CType(obj.ValorIva,System.Nullable(Of Double)), obj.DiasIntereses, CType(obj.FactorComisionPactada,System.Nullable(Of Double)), obj.Mercado, obj.NroTitulo, obj.IDCiudadExpTitulo, obj.PlazoOriginal, CType(obj.Aplazamiento,System.Nullable(Of Boolean)), CType(obj.VersionPapeleta,System.Nullable(Of Short)), CType(obj.EmisionOriginal,System.Nullable(Of Date)), CType(obj.VencimientoOriginal,System.Nullable(Of Date)), obj.Impresiones, obj.FormaPago, obj.CtrlImpPapeleta, obj.DiasVencimiento, obj.PosicionPropia, obj.Transaccion, obj.TipoOperacion, obj.DiasContado, CType(obj.Ordinaria,System.Nullable(Of Boolean)), obj.ObjetoOrdenExtraordinaria, obj.NumPadre, obj.ParcialPadre, CType(obj.OperacionPadre,System.Nullable(Of Date)), obj.DiasTramo, CType(obj.Vendido,System.Nullable(Of Boolean)), CType(obj.Vendido_fecha,System.Nullable(Of Date)), CType(obj.Manual,System.Nullable(Of Boolean)), CType(obj.ValorTraslado,System.Nullable(Of Double)), CType(obj.ValorBrutoCompraVencida,System.Nullable(Of Double)), obj.AutoRetenedor, obj.Sujeto, CType(obj.PcRenEfecCompraRet,System.Nullable(Of Double)), CType(obj.PcRenEfecVendeRet,System.Nullable(Of Double)), obj.Reinversion, obj.Swap, obj.NroSwap, obj.Certificacion, CType(obj.DescuentoAcumula,System.Nullable(Of Double)), CType(obj.PctRendimiento,System.Nullable(Of Double)), CType(obj.FechaCompraVencido,System.Nullable(Of Date)), CType(obj.PrecioCompraVencido,System.Nullable(Of Double)), obj.ConstanciaEnajenacion, obj.RepoTitulo, CType(obj.ServBolsaVble,System.Nullable(Of Double)), CType(obj.ServBolsaFijo,System.Nullable(Of Double)), obj.Traslado, obj.UBICACIONTITULO, obj.HoraGrabacion, obj.OrigenOperacion, obj.CodigoOperadorCompra, obj.CodigoOperadorVende, obj.IdentificacionRemate, obj.ModalidaOperacion, obj.IndicadorPrecio, obj.PeriodoExdividendo, obj.PlazoOperacionRepo, CType(obj.ValorCaptacionRepo,System.Nullable(Of Double)), CType(obj.VolumenCompraRepo,System.Nullable(Of Double)), CType(obj.PrecioNetoFraccion,System.Nullable(Of Double)), CType(obj.VolumenNetoFraccion,System.Nullable(Of Double)), obj.CodigoContactoComercial, obj.NroFraccionOperacion, obj.IdentificacionPatrimonio1, obj.TipoidentificacionCliente2, obj.NitCliente2, obj.IdentificacionPatrimonio2, obj.TipoIdentificacionCliente3, obj.NitCliente3, obj.IdentificacionPatrimonio3, obj.IndicadorOperacion, CType(obj.BaseRetencion,System.Nullable(Of Double)), CType(obj.PorcRetencion,System.Nullable(Of Double)), CType(obj.BaseRetencionTranslado,System.Nullable(Of Double)), CType(obj.PorcRetencionTranslado,System.Nullable(Of Double)), CType(obj.PorcIvaComision,System.Nullable(Of Double)), obj.IndicadorAcciones, obj.OperacionNegociada, CType(obj.FechaConstancia,System.Nullable(Of Date)), CType(obj.ValorConstancia,System.Nullable(Of Double)), obj.GeneraConstancia, CType(obj.Cargado,System.Nullable(Of Boolean)), obj.Usuario, CType(obj.CumplimientoTitulo,System.Nullable(Of Date)), obj.NroLote, CType(obj.ValorEntregaContraPago,System.Nullable(Of Double)), obj.AquienSeEnviaRetencion, obj.IDBaseDias, obj.TipoDeOferta, obj.NroLoteENC, CType(obj.ContabilidadENC,System.Nullable(Of Date)), p1, obj.CodigoIntermediario, obj.IDNegocio, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDLiquidacionesOF = p1
	End Sub
	
	Private Sub DeleteLiquidacionesOF(ByVal obj As OyDBolsa.LiquidacionesOF)
		Me.uspOyDNet_Maestros_LiquidacionesOf_Eliminar(obj.IDLiquidacionesOF, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertReceptoresOrdenesOF(ByVal obj As OyDBolsa.ReceptoresOrdenesOF)
		Dim p1 As Integer = obj.IDReceptoresOrdenesOF
		Me.uspOyDNet_ReceptoresOrdenesOF_Actualizar(obj.TipoOrden, obj.ClaseOrden, obj.IDOrden, obj.Version, obj.IDReceptor, CType(obj.Lider,System.Nullable(Of Boolean)), CType(obj.Porcentaje,System.Nullable(Of Double)), CType(Nothing, String), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDReceptoresOrdenesOF = p1
	End Sub
	
	Private Sub UpdateReceptoresOrdenesOF(ByVal obj As OyDBolsa.ReceptoresOrdenesOF)
		Dim p1 As Integer = obj.IDReceptoresOrdenesOF
		Me.uspOyDNet_ReceptoresOrdenesOF_Actualizar(obj.TipoOrden, obj.ClaseOrden, obj.IDOrden, obj.Version, obj.IDReceptor, CType(obj.Lider,System.Nullable(Of Boolean)), CType(obj.Porcentaje,System.Nullable(Of Double)), CType(Nothing, String), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDReceptoresOrdenesOF = p1
	End Sub
	
	Private Sub DeleteReceptoresOrdenesOF(ByVal obj As OyDBolsa.ReceptoresOrdenesOF)
		Me.uspOyDNet_ReceptoresOrdenesOF_Eliminar(obj.IDReceptoresOrdenesOF, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spA2utils_CargarCombos")>  _
	Public Function spA2utils_CargarCombos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal listaNombreCombos As String) As ISingleResult(Of OyDBolsa.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), listaNombreCombos)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Liquidaciones_Actualizar")>  _
	Public Function uspOyDNet_Liquidaciones_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOrden As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDFactura As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrFacturada As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDOrdenante As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValBolsa As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pbytIDRueda As System.Nullable(Of Short),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaDescuento As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaCompraVende As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrModalidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrIndicadorEconomico As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPuntosIndicador As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPlazo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCumplimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEmision As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVencimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogOtraPlaza As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrPlaza As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionistaLocal As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionistaOtraPlaza As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCiudadOtraPlaza As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaEfectiva As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblCantidad As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurPrecio As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurTransaccion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurSubTotalLiq As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurTotalLiq As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurComision As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurRetencion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurIntereses As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurValorIva As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasIntereses As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblFactorComisionPactada As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrMercado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNroTitulo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCiudadExpTitulo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPlazoOriginal As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAplazamiento As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pbytVersionPapeleta As System.Nullable(Of Short),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEmisionOriginal As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVencimientoOriginal As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngImpresiones As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrFormaPago As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCtrlImpPapeleta As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasVencimiento As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrPosicionPropia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrTransaccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasContado As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogOrdinaria As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrObjetoOrdenExtraordinaria As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNumPadre As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcialPadre As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmOperacionPadre As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasTramo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogVendido As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVendido As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogManual As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorTraslado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorBrutoCompraVencida As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrAutoRetenedor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrSujeto As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPcRenEfecCompraRet As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPcRenEfecVendeRet As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrReinversion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrSwap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNroSwap As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrCertificacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblDescuentoAcumula As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPctRendimiento As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaCompraVencido As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPrecioCompraVencido As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrConstanciaEnajenacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrRepoTitulo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblServBolsaVble As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblServBolsaFijo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTraslado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrUBICACIONTITULO As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8)")> ByVal pstrHoraGrabacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrOrigenOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigoOperadorCompra As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigoOperadorVende As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrIdentificacionRemate As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrModalidaOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIndicadorPrecio As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrPeriodoExdividendo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPlazoOperacionRepo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorCaptacionRepo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal plngVolumenCompraRepo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPrecioNetoFraccion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal plngVolumenNetoFraccion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal plngCodigoContactoComercial As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNroFraccionOperacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIdentificacionPatrimonio1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoidentificacionCliente2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrNitCliente2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIdentificacionPatrimonio2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacionCliente3 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrNitCliente3 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIdentificacionPatrimonio3 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIndicadorOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblBaseRetencion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcRetencion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblBaseRetencionTranslado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcRetencionTranslado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcIvaComision As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIndicadorAcciones As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrOperacionNegociada As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaConstancia As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorConstancia As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrGeneraConstancia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCargado As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCumplimientoTitulo As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintNroLote As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorEntregaContraPago As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrAquienSeEnviaRetencion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIDBaseDias As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoDeOferta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintNroLoteENC As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmContabilidadENC As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDLiquidaciones As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrCodigoIntermediario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurValorExtemporaneo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrPosicionExtemporaneo As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pstrTipo, pstrClaseOrden, pstrIDEspecie, plngIDOrden, pstrPrefijo, plngIDFactura, pstrFacturada, plngIDComitente, plngIDOrdenante, plngIDBolsa, pdblValBolsa, pbytIDRueda, pdblTasaDescuento, pdblTasaCompraVende, pstrModalidad, pstrIndicadorEconomico, pdblPuntosIndicador, plngPlazo, pdtmLiquidacion, pdtmCumplimiento, pdtmEmision, pdtmVencimiento, plogOtraPlaza, pstrPlaza, plngIDComisionistaLocal, plngIDComisionistaOtraPlaza, plngIDCiudadOtraPlaza, pdblTasaEfectiva, pdblCantidad, pcurPrecio, pcurTransaccion, pcurSubTotalLiq, pcurTotalLiq, pcurComision, pcurRetencion, pcurIntereses, pcurValorIva, plngDiasIntereses, pdblFactorComisionPactada, pstrMercado, pstrNroTitulo, plngIDCiudadExpTitulo, plngPlazoOriginal, plogAplazamiento, pbytVersionPapeleta, pdtmEmisionOriginal, pdtmVencimientoOriginal, plngImpresiones, pstrFormaPago, plngCtrlImpPapeleta, plngDiasVencimiento, pstrPosicionPropia, pstrTransaccion, pstrTipoOperacion, plngDiasContado, plogOrdinaria, pstrObjetoOrdenExtraordinaria, plngNumPadre, plngParcialPadre, pdtmOperacionPadre, plngDiasTramo, plogVendido, pdtmVendido, plogManual, pdblValorTraslado, pdblValorBrutoCompraVencida, pstrAutoRetenedor, pstrSujeto, pdblPcRenEfecCompraRet, pdblPcRenEfecVendeRet, pstrReinversion, pstrSwap, plngNroSwap, pstrCertificacion, pdblDescuentoAcumula, pdblPctRendimiento, pdtmFechaCompraVencido, pdblPrecioCompraVencido, pstrConstanciaEnajenacion, pstrRepoTitulo, pdblServBolsaVble, pdblServBolsaFijo, pstrTraslado, pstrUBICACIONTITULO, pstrHoraGrabacion, pstrOrigenOperacion, plngCodigoOperadorCompra, plngCodigoOperadorVende, pstrIdentificacionRemate, pstrModalidaOperacion, pstrIndicadorPrecio, pstrPeriodoExdividendo, plngPlazoOperacionRepo, pdblValorCaptacionRepo, plngVolumenCompraRepo, pdblPrecioNetoFraccion, plngVolumenNetoFraccion, plngCodigoContactoComercial, plngNroFraccionOperacion, pstrIdentificacionPatrimonio1, pstrTipoidentificacionCliente2, pstrNitCliente2, pstrIdentificacionPatrimonio2, pstrTipoIdentificacionCliente3, pstrNitCliente3, pstrIdentificacionPatrimonio3, pstrIndicadorOperacion, pdblBaseRetencion, pdblPorcRetencion, pdblBaseRetencionTranslado, pdblPorcRetencionTranslado, pdblPorcIvaComision, pstrIndicadorAcciones, pstrOperacionNegociada, pdtmFechaConstancia, pdblValorConstancia, pstrGeneraConstancia, plogCargado, pstrUsuario, pdtmCumplimientoTitulo, pintNroLote, pdblValorEntregaContraPago, pstrAquienSeEnviaRetencion, pstrIDBaseDias, pstrTipoDeOferta, pintNroLoteENC, pdtmContabilidadENC, pintIDLiquidaciones, pstrCodigoIntermediario, infosesion, pintErrorPersonalizado, pcurValorExtemporaneo, pstrPosicionExtemporaneo)
		pintIDLiquidaciones = CType(result.GetParameterValue(129),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Liquidaciones_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Liquidaciones_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDLiquidaciones As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDLiquidaciones, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Liquidaciones_Consultar")>  _
	Public Function uspOyDNet_Maestros_Liquidaciones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCumplimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDano As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As System.Nullable(of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Liquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, lngIDComitente, pstrTipo, pstrClaseOrden, pdtmLiquidacion, pdtmCumplimiento, plngIDOrden, plngIDano, plngParcial, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Liquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Liquidaciones_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Liquidaciones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Liquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Liquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Liquidaciones_Factura_Consultar")>  _
	Public Function uspOyDNet_Maestros_Liquidaciones_Factura_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDFactura As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Liquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDFactura, pstrPrefijo, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Liquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Facturas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Facturas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmDocumento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEstado As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngImpresiones As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCodigoResolucion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDfacturas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrPrefijo, plngID, plngIDComitente, pdtmDocumento, pstrEstado, pdtmEstado, plngImpresiones, pstrUsuario, plngIDCodigoResolucion, pintIDfacturas, infosesion, pintErrorPersonalizado)
		pintIDfacturas = CType(result.GetParameterValue(9),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Facturas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Facturas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDfacturas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(200)")> ByVal pstrObservaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDfacturas, lngID, pstrPrefijo, pstrObservaciones, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Facturas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Facturas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmDocumento", DbType:="DateTime")> ByVal dtmDocumento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreComitente", DbType:="Varchar(50)")> ByVal strNombreComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Factura)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, lngIDComitente, dtmDocumento, strNombreComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Factura))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Facturas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Facturas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Factura)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Factura))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ReceptoresOrdenes_Actualizar")>  _
	Public Function uspOyDNet_ReceptoresOrdenes_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLider As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentaje As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDReceptoresOrdenes As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoOrden, pstrClaseOrden, plngIDOrden, plngVersion, pstrIDReceptor, plogLider, pdblPorcentaje, pstrUsuario, pintIDReceptoresOrdenes, infosesion, pintErrorPersonalizado)
		pintIDReceptoresOrdenes = CType(result.GetParameterValue(8),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ReceptoresOrdenes_Eliminar")>  _
	Public Function uspOyDNet_ReceptoresOrdenes_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDReceptoresOrdenes As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDReceptoresOrdenes, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ReceptoresOrdenes_Consultar")>  _
	Public Function uspOyDNet_Maestros_ReceptoresOrdenes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.ReceptoresOrdene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ReceptoresOrdene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_ReceptoresOrdenes_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_ReceptoresOrdenes_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.ReceptoresOrdene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ReceptoresOrdene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_BeneficiariosOrdenes_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_BeneficiariosOrdenes_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.BeneficiariosOrdene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.BeneficiariosOrdene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_EspeciesLiquidaciones_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_EspeciesLiquidaciones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.EspeciesLiquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pdtmLiquidacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.EspeciesLiquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_AplazamientosLiquidaciones_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_AplazamientosLiquidaciones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.AplazamientosLiquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pdtmLiquidacion, plngParcial, pstrTipo, pstrClase, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.AplazamientosLiquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_CustodiasLiquidaciones_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_CustodiasLiquidaciones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal PlngIDSucComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char (17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.CustodiasLiquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComisionista, PlngIDSucComisionista, plngIDComitente, pstrIDEspecie, pstrTipo, pstrClaseOrden, plngID, plngParcial, pdtmLiquidacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.CustodiasLiquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_Liquidaciones_Trasladar")>  _
	Public Function spTrasladarLiquidaciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDSucursal As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogActualizarCostos As System.Nullable(Of Boolean)) As ISingleResult(Of OyDBolsa.tblRespuestaValidacionesTraslado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrClase, pstrUsuario, plngIDSucursal, infosesion, pintErrorPersonalizado, plogActualizarCostos)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.tblRespuestaValidacionesTraslado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ValidarCostosBolsaxLiq_Consultar")>  _
	Public Function uspOyDNet_ValidarCostosBolsaxLiq_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef lngCantLiquidaciones As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, lngCantLiquidaciones, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		lngCantLiquidaciones = CType(result.GetParameterValue(1),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_CuentasDepositoCliente")>  _
	Public Function uspOyDNet_Bolsa_CuentasDepositoCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrDeposito As String) As ISingleResult(Of OyDBolsa.CuentasDepositoCliente)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pstrTipo, pstrClase, pdtmFechaLiquidacion, pstrDeposito)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.CuentasDepositoCliente))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_ValidacionCustodiaLiq")>  _
	Public Function uspOyDNet_Bolsa_ValidacionCustodiaLiq(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintResultado As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByRef pstrTabla As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pdtmFechaLiquidacion, pstrClase, pstrTipo, pintResultado, pstrTabla)
		pintResultado = CType(result.GetParameterValue(5),System.Nullable(Of Integer))
		pstrTabla = CType(result.GetParameterValue(6),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_ArregloUBICACIONTITULO")>  _
	Public Function uspOyDNet_Bolsa_ArregloUBICACIONTITULO(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrubicacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal plngIDCuentaDeceval As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef lngValor As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pstrTipo, pstrClaseOrden, pdtmLiquidacion, pstrubicacion, plngIDCuentaDeceval, pstrUsuario, infoSesion, pintErrorPersonalizado, lngValor)
		lngValor = CType(result.GetParameterValue(10),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Liquidaciones_Aplazamiento")>  _
	Public Function uspOyDNet_Liquidaciones_Aplazamiento(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoAplazamiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrAplazamiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDLiquidacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(300)")> ByRef pstrError As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef intNroAplazamientos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoAplazamiento, pstrAplazamiento, pstrClaseOrden, pstrTipoOrden, plngIDLiquidacion, plngParcial, pdtmLiquidacion, pdtmCumplimiento, pstrUsuario, pstrError, intNroAplazamientos, infoSesion, pintErrorPersonalizado)
		pstrError = CType(result.GetParameterValue(9),String)
		intNroAplazamientos = CType(result.GetParameterValue(10),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_FacturasBancaInv_Actualizar")>  _
	Public Function uspOyDNet_Bolsa_FacturasBancaInv_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngAnoDocumento As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmDocumento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal plngNroIdentificacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDireccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrEstado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngImpresiones As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurIVA As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurRetencion As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEstado As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDFacturasBancaInv As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrMaquina As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrEsExenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByVal pstrDetalleFacturaXML As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngAnoDocumento, pstrPrefijo, plngID, pdtmDocumento, plngIDComitente, pstrTipoIdentificacion, plngNroIdentificacion, pstrNombre, pstrDireccion, pstrTelefono, pstrEstado, plngImpresiones, pcurIVA, pcurRetencion, pdtmEstado, pstrUsuario, pintIDFacturasBancaInv, pstrMaquina, pstrEsExenta, pstrDetalleFacturaXML, infosesion, pintErrorPersonalizado)
		pintIDFacturasBancaInv = CType(result.GetParameterValue(16),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_FacturasBancaInv_Eliminar")>  _
	Public Function uspOyDNet_Bolsa_FacturasBancaInv_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDFacturasBancaInv As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngid As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDFacturasBancaInv, pstrPrefijo, plngid, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_FacturasBancaInv_Consultar")>  _
	Public Function uspOyDNet_Bolsa_FacturasBancaInv_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrPrefijo", DbType:="varchar(5)")> ByVal strPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmDocumento", DbType:="datetime")> ByVal dtmDocumento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreComitente", DbType:="varchar(50)")> ByVal strNombreComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.FacturasBancaIn)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strPrefijo, lngID, dtmDocumento, lngIDComitente, strNombreComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.FacturasBancaIn))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_FacturasBancaInv_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_FacturasBancaInv_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.FacturasBancaIn)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.FacturasBancaIn))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Actualizar")>  _
	Public Function uspOyDNet_Bolsa_DetalleFacturasBancaInv_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngAnoDocumento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngSecuencia As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurValor As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmActualizacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDDetalleFacturasBancaInv As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngAnoDocumento, pstrPrefijo, plngID, plngSecuencia, pstrDescripcion, pcurValor, pdtmActualizacion, pstrUsuario, pintIDDetalleFacturasBancaInv, infosesion, pintErrorPersonalizado)
		pintIDDetalleFacturasBancaInv = CType(result.GetParameterValue(8),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar")>  _
	Public Overloads Function uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDetalleFacturasBancaInv As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDDetalleFacturasBancaInv, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Consultar")>  _
	Public Function uspOyDNet_Bolsa_DetalleFacturasBancaInv_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngAnoDocumento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.DetalleFacturasBancaIn)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngAnoDocumento, pstrPrefijo, plngId, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.DetalleFacturasBancaIn))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_DetalleFacturasBancaInv_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.DetalleFacturasBancaIn)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.DetalleFacturasBancaIn))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ConsultarLiquidacionesGapOrdenes_OyDNet")>  _
	Public Function usp_ConsultarLiquidacionesGapOrdenes_OyDNet() As ISingleResult(Of OyDBolsa.LiquidacionesGapOrdenes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesGapOrdenes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar")>  _
	Public Overloads Function uspOyDNet_Bolsa_DetalleFacturasBancaInv_Eliminar() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyDNet_ValidarMaestroLista")>  _
	Public Function usp_OyDNet_ValidarMaestroLista(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrNegociacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrFormaPago As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrCanalRecepcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrMedioVerificable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrEjecucion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByRef pstrDuraccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogValidarUsuarioRec As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoOrden, pstrNegociacion, pstrFormaPago, pstrTipoInversion, pstrCanalRecepcion, pstrMedioVerificable, pstrEjecucion, pstrDuraccion, plogValidarUsuarioRec)
		pstrTipoOrden = CType(result.GetParameterValue(0),String)
		pstrNegociacion = CType(result.GetParameterValue(1),String)
		pstrFormaPago = CType(result.GetParameterValue(2),String)
		pstrTipoInversion = CType(result.GetParameterValue(3),String)
		pstrCanalRecepcion = CType(result.GetParameterValue(4),String)
		pstrMedioVerificable = CType(result.GetParameterValue(5),String)
		pstrEjecucion = CType(result.GetParameterValue(6),String)
		pstrDuraccion = CType(result.GetParameterValue(7),String)
		plogValidarUsuarioRec = CType(result.GetParameterValue(8),System.Nullable(Of Boolean))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyDNet_ValidarInfoLiquidacionGapOrdenes")>  _
	Public Function usp_OyDNet_ValidarInfoLiquidacionGapOrdenes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByRef pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(2)")> ByRef pstrEstadoCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogActivoCliente As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogValidarOrdenante As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogReceptorAsociado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogReceptorAsociadoEmp As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByRef pstrIDReceptor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDComitente, pstrDescripcion, pstrEstadoCliente, plogActivoCliente, plogValidarOrdenante, plogReceptorAsociado, plogReceptorAsociadoEmp, pstrIDReceptor)
		pstrDescripcion = CType(result.GetParameterValue(1),String)
		pstrEstadoCliente = CType(result.GetParameterValue(2),String)
		plogActivoCliente = CType(result.GetParameterValue(3),System.Nullable(Of Boolean))
		plogValidarOrdenante = CType(result.GetParameterValue(4),System.Nullable(Of Boolean))
		plogReceptorAsociado = CType(result.GetParameterValue(5),System.Nullable(Of Boolean))
		plogReceptorAsociadoEmp = CType(result.GetParameterValue(6),System.Nullable(Of Boolean))
		pstrIDReceptor = CType(result.GetParameterValue(7),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spInsOrdenesLiq")>  _
	Public Function spInsOrdenesLiq(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDLiquidacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCumplimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngCuentaDeposito As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByRef pGenerar As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngIDLiquidacion, pdtmFechaLiquidacion, pdtmFechaCumplimiento, plngIdComitente, plngParcial, pstrDeposito, plngCuentaDeposito, pGenerar, pstrUsuario)
		pGenerar = CType(result.GetParameterValue(9),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesVeriOrd_OyDNet")>  _
	Public Function spLiquidacionesVeriOrd_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.LiquidacionesConsultar)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesConsultar))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_TraerCumplimiento_OyDNet")>  _
	Public Function sp_TraerCumplimiento_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String) As ISingleResult(Of OyDBolsa.consultarcantidad)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, pstrIDEspecie)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.consultarcantidad))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesReceOrd_OyDNet")>  _
	Public Function spLiquidacionesReceOrd_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.ReceptoresOrdene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ReceptoresOrdene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesBeneOrd_OyDNet")>  _
	Public Function spLiquidacionesBeneOrd_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.BeneficiariosOrdene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.BeneficiariosOrdene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesEspecies_OyDNet")>  _
	Public Function spLiquidacionesEspecies_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.EspeciesLiquidacione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.EspeciesLiquidacione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesOrdenes_OyDNet")>  _
	Public Function spLiquidacionesOrdenes_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.LiquidacionesOrdenes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesOrdenes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesVeriLiq_OyDNet")>  _
	Public Function spLiquidacionesVeriLiq_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pstrTipo, pstrClase, pdtmLiquidacion)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesVeriLiq_OyDNet_OF")>  _
	Public Function spLiquidacionesVeriLiq_OyDNet_OF(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pstrTipo, pstrClase, plngIDBolsa, pdtmLiquidacion)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spValorEspecie_OyDNet")>  _
	Public Function spValorEspecie_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFecha As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef Curvalor As System.Nullable(Of Double)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrId, pdtmFecha, Curvalor)
		Curvalor = CType(result.GetParameterValue(2),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spDenominacionEspecie")>  _
	Public Function spDenominacionEspecie(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByRef pstrNombre As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrId, pstrNombre)
		pstrNombre = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spdblIvacomision")>  _
	Public Function spdblIvacomision(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef dblIvaComision As System.Nullable(Of Double)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), dblIvaComision)
		dblIvaComision = CType(result.GetParameterValue(0),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesOrdeCum_OyDNet")>  _
	Public Function spLiquidacionesOrdeCum_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByRef pstrEstado As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, pstrEstado)
		pstrEstado = CType(result.GetParameterValue(3),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spUpdOrdenes_OyDNet")>  _
	Public Function spUpdOrdenes_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEstado As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, plngVersion, pstrEstado, pdtmEstado, pstrUsuario)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ConsultarPagosComisiones")>  _
	Public Function uspOyDNet_ConsultarPagosComisiones(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PstrFondo", DbType:="VarChar(1)")> ByVal pstrFondo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PdtmFechaPago", DbType:="DateTime")> ByVal pdtmFechaPago As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PstrConsecutivo", DbType:="VarChar(15)")> ByVal pstrConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PlngUltimoID", DbType:="int")> ByVal plngUltimoID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PstrProceso", DbType:="VarChar(255)")> ByVal pstrProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.PagosComisiones)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFondo, pdtmFechaPago, pstrConsecutivo, plngUltimoID, pstrProceso, pstrUsuario, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.PagosComisiones))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ConsultarPagosComisionesAdmon")>  _
	Public Function uspOyDNet_ConsultarPagosComisionesAdmon(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrCodigoClienteInicio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrCodigoClienteFin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrCodigoEspecieInicio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrCodigoEspecieFin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrFondo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCorte As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PlngUltimoID", DbType:="int")> ByVal plngUltimoID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PstrProceso", DbType:="VarChar(255)")> ByVal pstrProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.PagosComisiones)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCodigoClienteInicio, pstrCodigoClienteFin, pstrCodigoEspecieInicio, pstrCodigoEspecieFin, pstrFondo, pdtmFechaCorte, plngUltimoID, pstrProceso, pstrUsuario, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.PagosComisiones))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_PagosComisiones")>  _
	Public Function uspOyDNet_PagosComisiones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text")> ByVal pxmlCobroComision As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoCobro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCorte As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef logExitoso As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pxmlCobroComision, pstrUsuario, pstrMaquina, infoSesion, pstrTipoCobro, pdtmCorte, pintErrorPersonalizado, logExitoso)
		logExitoso = CType(result.GetParameterValue(7),System.Nullable(Of Boolean))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Factura_TotalFactura")>  _
	Public Function uspOyDNet_Maestros_Factura_TotalFactura(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDFactura As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal strPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef curTotalFactura As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDFactura, strPrefijo, curTotalFactura, infosesion, pintErrorPersonalizado)
		curTotalFactura = CType(result.GetParameterValue(2),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_CumplimientoOrden_OyDNet")>  _
	Public Function sp_CumplimientoOrden_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblCantidadLiq As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblCantidadOrden As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblCantidadImportacion As System.Nullable(Of Double)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngIDOrden, pstrIDEspecie, pdblCantidadLiq, pdblCantidadOrden, pdblCantidadImportacion)
		pdblCantidadLiq = CType(result.GetParameterValue(4),System.Nullable(Of Double))
		pdblCantidadOrden = CType(result.GetParameterValue(5),System.Nullable(Of Double))
		pdblCantidadImportacion = CType(result.GetParameterValue(6),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_LiquidacionesOF_Actualizar")>  _
	Public Function uspOyDNet_LiquidacionesOF_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOrden As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDFactura As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrFacturada As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDOrdenante As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValBolsa As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pbytIDRueda As System.Nullable(Of Short),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaDescuento As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaCompraVende As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrModalidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrIndicadorEconomico As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPuntosIndicador As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPlazo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCumplimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEmision As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVencimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogOtraPlaza As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrPlaza As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionistaLocal As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionistaOtraPlaza As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCiudadOtraPlaza As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaEfectiva As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblCantidad As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurPrecio As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurTransaccion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurSubTotalLiq As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurTotalLiq As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurComision As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurRetencion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurIntereses As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pcurValorIva As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasIntereses As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblFactorComisionPactada As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrMercado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNroTitulo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCiudadExpTitulo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPlazoOriginal As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAplazamiento As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pbytVersionPapeleta As System.Nullable(Of Short),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEmisionOriginal As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVencimientoOriginal As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngImpresiones As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrFormaPago As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCtrlImpPapeleta As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasVencimiento As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrPosicionPropia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrTransaccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasContado As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogOrdinaria As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrObjetoOrdenExtraordinaria As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNumPadre As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcialPadre As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmOperacionPadre As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiasTramo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogVendido As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVendido As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogManual As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorTraslado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorBrutoCompraVencida As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrAutoRetenedor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrSujeto As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPcRenEfecCompraRet As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPcRenEfecVendeRet As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrReinversion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrSwap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNroSwap As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrCertificacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblDescuentoAcumula As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPctRendimiento As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaCompraVencido As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPrecioCompraVencido As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrConstanciaEnajenacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrRepoTitulo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblServBolsaVble As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblServBolsaFijo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTraslado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrUBICACIONTITULO As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8)")> ByVal pstrHoraGrabacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrOrigenOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigoOperadorCompra As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigoOperadorVende As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrIdentificacionRemate As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrModalidaOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIndicadorPrecio As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrPeriodoExdividendo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPlazoOperacionRepo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorCaptacionRepo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal plngVolumenCompraRepo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPrecioNetoFraccion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal plngVolumenNetoFraccion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal plngCodigoContactoComercial As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNroFraccionOperacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIdentificacionPatrimonio1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoidentificacionCliente2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrNitCliente2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIdentificacionPatrimonio2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacionCliente3 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrNitCliente3 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIdentificacionPatrimonio3 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIndicadorOperacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblBaseRetencion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcRetencion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblBaseRetencionTranslado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcRetencionTranslado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcIvaComision As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIndicadorAcciones As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrOperacionNegociada As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaConstancia As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorConstancia As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrGeneraConstancia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCargado As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCumplimientoTitulo As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintNroLote As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorEntregaContraPago As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrAquienSeEnviaRetencion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrIDBaseDias As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoDeOferta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintNroLoteENC As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmContabilidadENC As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDLiquidacionesOF As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrCodigoIntermediario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDNegocio As System.nullable(of System.Int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pstrTipo, pstrClaseOrden, pstrIDEspecie, plngIDOrden, pstrPrefijo, plngIDFactura, pstrFacturada, plngIDComitente, plngIDOrdenante, plngIDBolsa, pdblValBolsa, pbytIDRueda, pdblTasaDescuento, pdblTasaCompraVende, pstrModalidad, pstrIndicadorEconomico, pdblPuntosIndicador, plngPlazo, pdtmLiquidacion, pdtmCumplimiento, pdtmEmision, pdtmVencimiento, plogOtraPlaza, pstrPlaza, plngIDComisionistaLocal, plngIDComisionistaOtraPlaza, plngIDCiudadOtraPlaza, pdblTasaEfectiva, pdblCantidad, pcurPrecio, pcurTransaccion, pcurSubTotalLiq, pcurTotalLiq, pcurComision, pcurRetencion, pcurIntereses, pcurValorIva, plngDiasIntereses, pdblFactorComisionPactada, pstrMercado, pstrNroTitulo, plngIDCiudadExpTitulo, plngPlazoOriginal, plogAplazamiento, pbytVersionPapeleta, pdtmEmisionOriginal, pdtmVencimientoOriginal, plngImpresiones, pstrFormaPago, plngCtrlImpPapeleta, plngDiasVencimiento, pstrPosicionPropia, pstrTransaccion, pstrTipoOperacion, plngDiasContado, plogOrdinaria, pstrObjetoOrdenExtraordinaria, plngNumPadre, plngParcialPadre, pdtmOperacionPadre, plngDiasTramo, plogVendido, pdtmVendido, plogManual, pdblValorTraslado, pdblValorBrutoCompraVencida, pstrAutoRetenedor, pstrSujeto, pdblPcRenEfecCompraRet, pdblPcRenEfecVendeRet, pstrReinversion, pstrSwap, plngNroSwap, pstrCertificacion, pdblDescuentoAcumula, pdblPctRendimiento, pdtmFechaCompraVencido, pdblPrecioCompraVencido, pstrConstanciaEnajenacion, pstrRepoTitulo, pdblServBolsaVble, pdblServBolsaFijo, pstrTraslado, pstrUBICACIONTITULO, pstrHoraGrabacion, pstrOrigenOperacion, plngCodigoOperadorCompra, plngCodigoOperadorVende, pstrIdentificacionRemate, pstrModalidaOperacion, pstrIndicadorPrecio, pstrPeriodoExdividendo, plngPlazoOperacionRepo, pdblValorCaptacionRepo, plngVolumenCompraRepo, pdblPrecioNetoFraccion, plngVolumenNetoFraccion, plngCodigoContactoComercial, plngNroFraccionOperacion, pstrIdentificacionPatrimonio1, pstrTipoidentificacionCliente2, pstrNitCliente2, pstrIdentificacionPatrimonio2, pstrTipoIdentificacionCliente3, pstrNitCliente3, pstrIdentificacionPatrimonio3, pstrIndicadorOperacion, pdblBaseRetencion, pdblPorcRetencion, pdblBaseRetencionTranslado, pdblPorcRetencionTranslado, pdblPorcIvaComision, pstrIndicadorAcciones, pstrOperacionNegociada, pdtmFechaConstancia, pdblValorConstancia, pstrGeneraConstancia, plogCargado, pstrUsuario, pdtmCumplimientoTitulo, pintNroLote, pdblValorEntregaContraPago, pstrAquienSeEnviaRetencion, pstrIDBaseDias, pstrTipoDeOferta, pintNroLoteENC, pdtmContabilidadENC, pintIDLiquidacionesOF, pstrCodigoIntermediario, plngIDNegocio, infosesion, pintErrorPersonalizado)
		pintIDLiquidacionesOF = CType(result.GetParameterValue(129),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_LiquidacionesOF_Eliminar")>  _
	Public Function uspOyDNet_Maestros_LiquidacionesOf_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDLiquidacionesOF As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDLiquidacionesOF, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_LiquidacionesOF_Consultar")>  _
	Public Function uspOyDNet_Maestros_LiquidacionesOF_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCumplimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDano As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.LiquidacionesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, lngIDComitente, pstrTipo, pstrClaseOrden, pdtmLiquidacion, pdtmCumplimiento, plngIDOrden, plngIDano, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_LiquidacionesOF_Filtrar")>  _
	Public Function uspOyDNet_Maestros_LiquidacionesOF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.LiquidacionesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ReceptoresOrdenesOF_Actualizar")>  _
	Public Function uspOyDNet_ReceptoresOrdenesOF_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLider As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentaje As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDReceptoresOrdenesOF As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoOrden, pstrClaseOrden, plngIDOrden, plngVersion, pstrIDReceptor, plogLider, pdblPorcentaje, pstrUsuario, pintIDReceptoresOrdenesOF, infosesion, pintErrorPersonalizado)
		pintIDReceptoresOrdenesOF = CType(result.GetParameterValue(8),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ReceptoresOrdenesOF_Eliminar")>  _
	Public Function uspOyDNet_ReceptoresOrdenesOF_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDReceptoresOrdenesOF As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDReceptoresOrdenesOF, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_ReceptoresOrdenesOF_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_ReceptoresOrdenesOF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.ReceptoresOrdenesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ReceptoresOrdenesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_BeneficiariosOrdenesOF_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_BeneficiariosOrdenesOF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.BeneficiariosOrdenesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.BeneficiariosOrdenesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_EspeciesLiquidacionesOF_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_EspeciesLiquidacionesOF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.EspeciesLiquidacionesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngParcial, pdtmLiquidacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.EspeciesLiquidacionesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_AplazamientosLiquidacionesOF_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_AplazamientosLiquidacionesOF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.AplazamientosLiquidacionesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pdtmLiquidacion, plngParcial, pstrTipo, pstrClase, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.AplazamientosLiquidacionesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Bolsa_CustodiasLiquidacionesOF_Filtrar")>  _
	Public Function uspOyDNet_Bolsa_CustodiasLiquidacionesOF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal PlngIDSucComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char (17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.CustodiasLiquidacionesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComisionista, PlngIDSucComisionista, plngIDComitente, pstrIDEspecie, pstrTipo, pstrClaseOrden, plngID, plngParcial, pdtmLiquidacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.CustodiasLiquidacionesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_LiquidacionesOF_AplazamientoOF")>  _
	Public Function uspOyDNet_LiquidacionesOF_AplazamientoOF(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoAplazamiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrAplazamiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDLiquidacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(300)")> ByRef pstrError As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef intNroAplazamientos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoAplazamiento, pstrAplazamiento, pstrClaseOrden, pstrTipoOrden, plngIDLiquidacion, plngParcial, pdtmLiquidacion, pdtmCumplimiento, pstrUsuario, pstrError, intNroAplazamientos, infoSesion, pintErrorPersonalizado)
		pstrError = CType(result.GetParameterValue(9),String)
		intNroAplazamientos = CType(result.GetParameterValue(10),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesOFVeriOrd_OyDNet")>  _
	Public Function spLiquidacionesOFVeriOrd_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.LiquidacionesOFConsultar)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesOFConsultar))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesOFReceOrd_OyDNet")>  _
	Public Function spLiquidacionesOFReceOrd_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.ReceptoresOrdenesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ReceptoresOrdenesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesBeneOrdOF_OyDNet")>  _
	Public Function spLiquidacionesBeneOrdOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.BeneficiariosOrdenesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.BeneficiariosOrdenesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesOrdenesOF_OyDNet")>  _
	Public Function spLiquidacionesOrdenesOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.LiquidacionesOrdenesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.LiquidacionesOrdenesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_TraerCumplimientoOF_OyDNet")>  _
	Public Function sp_TraerCumplimientoOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String) As ISingleResult(Of OyDBolsa.consultarcantidadOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, pstrIDEspecie)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.consultarcantidadOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_CumplimientoOrdenOF_OyDNet")>  _
	Public Function sp_CumplimientoOrdenOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblCantidadLiq As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblCantidadOrden As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblCantidadImportacion As System.Nullable(Of Double)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngIDOrden, pstrIDEspecie, pdblCantidadLiq, pdblCantidadOrden, pdblCantidadImportacion)
		pdblCantidadLiq = CType(result.GetParameterValue(4),System.Nullable(Of Double))
		pdblCantidadOrden = CType(result.GetParameterValue(5),System.Nullable(Of Double))
		pdblCantidadImportacion = CType(result.GetParameterValue(6),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesEspeciesOF_OyDNet")>  _
	Public Function spLiquidacionesEspeciesOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDOrden", DbType:="int")> ByVal plngID As Integer) As ISingleResult(Of OyDBolsa.EspeciesLiquidacionesOF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.EspeciesLiquidacionesOF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLiquidacionesOrdeCumOF_OyDNet")>  _
	Public Function spLiquidacionesOrdeCumOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByRef pstrEstado As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, pstrEstado)
		pstrEstado = CType(result.GetParameterValue(3),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spUpdOrdenesOF_OyDNet")>  _
	Public Function spUpdOrdenesOF_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEstado As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, plngVersion, pstrEstado, pdtmEstado, pstrUsuario)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblEspeciesRelacionLocalExterior_Actualizar")>  _
	Public Function uspOyDNet_tblEspeciesRelacionLocalExterior_Actualizarr(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecieExterior As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNitProgramaADR As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintFactorEspecie As Short, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintFactorEspecieExterior As Short, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrIdEspecie, pstrIdEspecieExterior, pstrNitProgramaADR, pintFactorEspecie, pintFactorEspecieExterior, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblEspeciesRelacionLocalExterior_Eliminar")>  _
	Public Function uspOyDNet_tblEspeciesRelacionLocalExterior_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblLiquidaciones_BolsasDelExterior_Actualizar")>  _
	Public Function uspOyDNet_tblLiquidaciones_BolsasDelExterior_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDLiquidacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmLiquidacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmCumplimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngParcial As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClase As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(17)")> ByVal plngIdOrdenante As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurPrecio As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurTotalLiq As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngReferenciaExterior As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIdReceptor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrRetornoBolsaExterior As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrTipo, plngIDLiquidacion, pdtmLiquidacion, pdtmCumplimiento, plngParcial, pstrClase, plngIDComitente, plngIdOrdenante, pstrIdEspecie, pcurPrecio, pdblCantidad, pcurTotalLiq, plngReferenciaExterior, pstrIdReceptor, pstrRetornoBolsaExterior, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ConfiguracionFacturas_Actualizar")>  _
	Public Function uspOyDNet_ConfiguracionFacturas_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitUsarFechade As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitFechaLiquidacion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitFechaCumplimiento As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitTipoOperacion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitTipoOperacionCompra As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitTipoOperacionVenta As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitClaseOperacion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitClaseOperacionAcciones As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitClaseOperacionRentaFija As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitClaseOperacionSimultaneas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitClaseOperacionRepos As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitUsarFechade_ORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitFechaLiquidacion_ORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitFechaCumplimiento_ORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitTipoOperacion_ORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitClaseOperacion_ORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintFechaLiquidacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintFechaCumplimiento As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoOperacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintClaseOperacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitVentaOrd As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitCompraOrd As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoOperacionC As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitAccionesORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitRentafijaORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitSimultaneasORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitreposORD As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrdenRF As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrdenSimultaneas As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrdenrepos As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pbitUsarFechade, pbitFechaLiquidacion, pbitFechaCumplimiento, pbitTipoOperacion, pbitTipoOperacionCompra, pbitTipoOperacionVenta, pbitClaseOperacion, pbitClaseOperacionAcciones, pbitClaseOperacionRentaFija, pbitClaseOperacionSimultaneas, pbitClaseOperacionRepos, pbitUsarFechade_ORD, pbitFechaLiquidacion_ORD, pbitFechaCumplimiento_ORD, pbitTipoOperacion_ORD, pbitClaseOperacion_ORD, pintFechaLiquidacion, pintFechaCumplimiento, pintTipoOperacion, pintClaseOperacion, pbitVentaOrd, pbitCompraOrd, pintTipoOperacionC, pbitAccionesORD, pbitRentafijaORD, pbitSimultaneasORD, pbitreposORD, pintNroOrdenRF, pintNroOrdenSimultaneas, pintNroOrdenrepos, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MensajeriaCadena_Actualizar")>  _
	Public Function uspOyDNet_MensajeriaCadena_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitVIP As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitCompleta As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitParcial As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitNinguna As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pbitVIP, pbitCompleta, pbitParcial, pbitNinguna, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblEspeciesRelacionLocalExterior_Consultar")>  _
	Public Function uspOyDNet_tblEspeciesRelacionLocalExterior_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrEspecies As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrEspeciesExterior As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.EspeciesRelacionLocalExterior)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrEspecies, pstrEspeciesExterior, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.EspeciesRelacionLocalExterior))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblEspeciesRelacionLocalExterior_Filtrar")>  _
	Public Function uspOyDNet_tblEspeciesRelacionLocalExterior_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.EspeciesRelacionLocalExterior)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.EspeciesRelacionLocalExterior))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblLiquidaciones_BolsasDelExterior_Consultar")>  _
	Public Function uspOyDNet_tblLiquidaciones_BolsasDelExterior_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDLiquidacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmLiquidacion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDLiquidacion, pdtmLiquidacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_tblLiquidaciones_BolsasDelExterior_Filtrar")>  _
	Public Function uspOyDNet_tblLiquidaciones_BolsasDelExterior_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.Liquidaciones_BolsasDelExteriorEntidad))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Configuracion_Facturas_Filtrar")>  _
	Public Function uspOyDNet_Configuracion_Facturas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.ConfiguracionFacturas)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ConfiguracionFacturas))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Mensajeria_Cadena_Filtrar")>  _
	Public Function uspOyDNet_Mensajeria_Cadena_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.ConfiguracionMensajeriaCadena)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.ConfiguracionMensajeriaCadena))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_CampoTabla")>  _
	Public Function uspOyDNet_Utilidades_CampoTabla(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrIdCondicion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrCampo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrCondicion As String) As ISingleResult(Of OyDBolsa.uspOyDNet_Utilidades_CampoTablaResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdCondicion, pstrCampo, pstrTabla, pstrCondicion)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.uspOyDNet_Utilidades_CampoTablaResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_generarCadenaFacturas_NET")>  _
	Public Function usp_generarCadenaFacturas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngFacturaDesde As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngFacturaHasta As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17)")> ByVal plngIdComitenteDesde As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17)")> ByVal plngIdComitenteHasta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrTipoMensajeria As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdBolsa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.TmpFacturas_EnvioCadena)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngFacturaDesde, plngFacturaHasta, plngIdComitenteDesde, plngIdComitenteHasta, pstrTipoMensajeria, plngIdBolsa, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.TmpFacturas_EnvioCadena))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_generarCadenaPapeletas_NET")>  _
	Public Function usp_generarCadenaPapeletas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal pstrClienteDesde As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal pstrClienteHasta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pbitClienteAPT As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarchar(4000)")> ByVal pstrCadenaTexto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.tbltmpPlanoPapeletas)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrClienteDesde, pstrClienteHasta, pbitClienteAPT, pstrCadenaTexto, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.tbltmpPlanoPapeletas))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ConsultaClientes_APT_Papeletas")>  _
	Public Function usp_ConsultaClientes_APT_Papeletas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal pstrClienteDesde As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal pstrClienteHasta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDBolsa.tblPlanoPapeletasBolsa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrClienteDesde, pstrClienteHasta, pintTipo, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OyDBolsa.tblPlanoPapeletasBolsa))
	End Function
End Class

Namespace OyDBolsa
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidaciones")>  _
	Partial Public Class Liquidacione
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _ID As Integer
		
		Private _Parcial As Integer
		
		Private _Tipo As String
		
		Private _ClaseOrden As String
		
		Private _IDEspecie As String
		
		Private _IDOrden As Integer
		
		Private _Prefijo As String
		
		Private _IDFactura As System.Nullable(of System.int32)
		
		Private _Facturada As String
		
		Private _IDComitente As String
		
		Private _IDOrdenante As String
		
		Private _IDBolsa As Integer
		
		Private _ValBolsa As System.Nullable(Of Double)
		
		Private _IDRueda As System.Nullable(Of Short)
		
		Private _TasaDescuento As System.Nullable(Of Double)
		
		Private _TasaCompraVende As System.Nullable(Of Double)
		
		Private _Modalidad As String
		
		Private _IndicadorEconomico As String
		
		Private _PuntosIndicador As System.Nullable(Of Double)
		
		Private _Plazo As Integer
		
		Private _Liquidacion As Date
		
		Private _Cumplimiento As Date
		
		Private _Emision As System.Nullable(Of Date)
		
		Private _Vencimiento As System.Nullable(Of Date)
		
		Private _OtraPlaza As Boolean
		
		Private _Plaza As String
		
		Private _IDComisionistaLocal As System.Nullable(of System.int32)
		
		Private _IDComisionistaOtraPlaza As System.Nullable(of System.int32)
		
		Private _IDCiudadOtraPlaza As Integer
		
		Private _TasaEfectiva As Double
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _Precio As System.Nullable(Of Double)
		
		Private _Transaccion_cur As System.Nullable(Of Double)
		
		Private _SubTotalLiq As System.Nullable(Of Double)
		
		Private _TotalLiq As System.Nullable(Of Double)
		
		Private _Comision As System.Nullable(Of Double)
		
		Private _Retencion As System.Nullable(Of Double)
		
		Private _Intereses As System.Nullable(Of Double)
		
		Private _ValorIva As System.Nullable(Of Double)
		
		Private _DiasIntereses As Integer
		
		Private _FactorComisionPactada As System.Nullable(Of Double)
		
		Private _Mercado As String
		
		Private _NroTitulo As String
		
		Private _IDCiudadExpTitulo As Integer
		
		Private _PlazoOriginal As Integer
		
		Private _Aplazamiento As Boolean
		
		Private _VersionPapeleta As System.Nullable(Of Short)
		
		Private _EmisionOriginal As System.Nullable(Of Date)
		
		Private _VencimientoOriginal As System.Nullable(Of Date)
		
		Private _Impresiones As Integer
		
		Private _FormaPago As String
		
		Private _CtrlImpPapeleta As Integer
		
		Private _DiasVencimiento As Integer
		
		Private _PosicionPropia As String
		
		Private _Transaccion As String
		
		Private _TipoOperacion As String
		
		Private _DiasContado As Integer
		
		Private _Ordinaria As Boolean
		
		Private _ObjetoOrdenExtraordinaria As String
		
		Private _NumPadre As Integer
		
		Private _ParcialPadre As System.Nullable(of System.int32)
		
		Private _OperacionPadre As System.Nullable(Of Date)
		
		Private _DiasTramo As Integer
		
		Private _Vendido As Boolean
		
		Private _Vendido_fecha As System.Nullable(Of Date)
		
		Private _Manual As Boolean
		
		Private _ValorTraslado As System.Nullable(Of Double)
		
		Private _ValorBrutoCompraVencida As System.Nullable(Of Double)
		
		Private _AutoRetenedor As String
		
		Private _Sujeto As String
		
		Private _PcRenEfecCompraRet As System.Nullable(Of Double)
		
		Private _PcRenEfecVendeRet As System.Nullable(Of Double)
		
		Private _Reinversion As String
		
		Private _Swap As String
		
		Private _NroSwap As Integer
		
		Private _Certificacion As String
		
		Private _DescuentoAcumula As System.Nullable(Of Double)
		
		Private _PctRendimiento As System.Nullable(Of Double)
		
		Private _FechaCompraVencido As System.Nullable(Of Date)
		
		Private _PrecioCompraVencido As System.Nullable(Of Double)
		
		Private _ConstanciaEnajenacion As String
		
		Private _RepoTitulo As String
		
		Private _ServBolsaVble As System.Nullable(Of Double)
		
		Private _ServBolsaFijo As System.Nullable(Of Double)
		
		Private _Traslado As String
		
		Private _UBICACIONTITULO As String
		
		Private _HoraGrabacion As String
		
		Private _OrigenOperacion As String
		
		Private _CodigoOperadorCompra As Integer
		
		Private _CodigoOperadorVende As Integer
		
		Private _IdentificacionRemate As String
		
		Private _ModalidaOperacion As String
		
		Private _IndicadorPrecio As String
		
		Private _PeriodoExdividendo As String
		
		Private _PlazoOperacionRepo As Integer
		
		Private _ValorCaptacionRepo As System.Nullable(Of Double)
		
		Private _VolumenCompraRepo As System.Nullable(Of Double)
		
		Private _PrecioNetoFraccion As System.Nullable(Of Double)
		
		Private _VolumenNetoFraccion As System.Nullable(Of Double)
		
		Private _CodigoContactoComercial As String
		
		Private _NroFraccionOperacion As Integer
		
		Private _IdentificacionPatrimonio1 As String
		
		Private _TipoidentificacionCliente2 As String
		
		Private _NitCliente2 As String
		
		Private _IdentificacionPatrimonio2 As String
		
		Private _TipoIdentificacionCliente3 As String
		
		Private _NitCliente3 As String
		
		Private _IdentificacionPatrimonio3 As String
		
		Private _IndicadorOperacion As String
		
		Private _BaseRetencion As System.Nullable(Of Double)
		
		Private _PorcRetencion As System.Nullable(Of Double)
		
		Private _BaseRetencionTranslado As System.Nullable(Of Double)
		
		Private _PorcRetencionTranslado As System.Nullable(Of Double)
		
		Private _PorcIvaComision As System.Nullable(Of Double)
		
		Private _IndicadorAcciones As String
		
		Private _OperacionNegociada As String
		
		Private _FechaConstancia As System.Nullable(Of Date)
		
		Private _ValorConstancia As System.Nullable(Of Double)
		
		Private _GeneraConstancia As String
		
		Private _Cargado As Boolean
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _CumplimientoTitulo As System.Nullable(Of Date)
		
		Private _NroLote As Integer
		
		Private _ValorEntregaContraPago As System.Nullable(Of Double)
		
		Private _AquienSeEnviaRetencion As String
		
		Private _IDBaseDias As String
		
		Private _TipoDeOferta As String
		
		Private _NroLoteENC As Integer
		
		Private _ContabilidadENC As System.Nullable(Of Date)
		
		Private _IDLiquidaciones As Integer
		
		Private _CodigoIntermediario As String
		
		Private _InfoSesion As String
		
		Private _ValorExtemporaneo As System.Nullable(Of Double)
		
		Private _PosicionExtemporaneo As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Private _ReceptoresOrdenes As EntitySet(Of ReceptoresOrdene)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnIDOrdenChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnIDFacturaChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDFacturaChanged()
    End Sub
    Partial Private Sub OnFacturadaChanging(value As String)
    End Sub
    Partial Private Sub OnFacturadaChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnIDOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIDOrdenanteChanged()
    End Sub
    Partial Private Sub OnIDBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBolsaChanged()
    End Sub
    Partial Private Sub OnValBolsaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValBolsaChanged()
    End Sub
    Partial Private Sub OnIDRuedaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnIDRuedaChanged()
    End Sub
    Partial Private Sub OnTasaDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaDescuentoChanged()
    End Sub
    Partial Private Sub OnTasaCompraVendeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaCompraVendeChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnIndicadorEconomicoChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorEconomicoChanged()
    End Sub
    Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPuntosIndicadorChanged()
    End Sub
    Partial Private Sub OnPlazoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlazoChanged()
    End Sub
    Partial Private Sub OnLiquidacionChanging(value As Date)
    End Sub
    Partial Private Sub OnLiquidacionChanged()
    End Sub
    Partial Private Sub OnCumplimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnCumplimientoChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnOtraPlazaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOtraPlazaChanged()
    End Sub
    Partial Private Sub OnPlazaChanging(value As String)
    End Sub
    Partial Private Sub OnPlazaChanged()
    End Sub
    Partial Private Sub OnIDComisionistaLocalChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDComisionistaLocalChanged()
    End Sub
    Partial Private Sub OnIDComisionistaOtraPlazaChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDComisionistaOtraPlazaChanged()
    End Sub
    Partial Private Sub OnIDCiudadOtraPlazaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCiudadOtraPlazaChanged()
    End Sub
    Partial Private Sub OnTasaEfectivaChanging(value As Double)
    End Sub
    Partial Private Sub OnTasaEfectivaChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnTransaccion_curChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTransaccion_curChanged()
    End Sub
    Partial Private Sub OnSubTotalLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSubTotalLiqChanged()
    End Sub
    Partial Private Sub OnTotalLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalLiqChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRetencionChanged()
    End Sub
    Partial Private Sub OnInteresesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnInteresesChanged()
    End Sub
    Partial Private Sub OnValorIvaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorIvaChanged()
    End Sub
    Partial Private Sub OnDiasInteresesChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasInteresesChanged()
    End Sub
    Partial Private Sub OnFactorComisionPactadaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFactorComisionPactadaChanged()
    End Sub
    Partial Private Sub OnMercadoChanging(value As String)
    End Sub
    Partial Private Sub OnMercadoChanged()
    End Sub
    Partial Private Sub OnNroTituloChanging(value As String)
    End Sub
    Partial Private Sub OnNroTituloChanged()
    End Sub
    Partial Private Sub OnIDCiudadExpTituloChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCiudadExpTituloChanged()
    End Sub
    Partial Private Sub OnPlazoOriginalChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlazoOriginalChanged()
    End Sub
    Partial Private Sub OnAplazamientoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplazamientoChanged()
    End Sub
    Partial Private Sub OnVersionPapeletaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVersionPapeletaChanged()
    End Sub
    Partial Private Sub OnEmisionOriginalChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionOriginalChanged()
    End Sub
    Partial Private Sub OnVencimientoOriginalChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoOriginalChanged()
    End Sub
    Partial Private Sub OnImpresionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnImpresionesChanged()
    End Sub
    Partial Private Sub OnFormaPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFormaPagoChanged()
    End Sub
    Partial Private Sub OnCtrlImpPapeletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCtrlImpPapeletaChanged()
    End Sub
    Partial Private Sub OnDiasVencimientoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasVencimientoChanged()
    End Sub
    Partial Private Sub OnPosicionPropiaChanging(value As String)
    End Sub
    Partial Private Sub OnPosicionPropiaChanged()
    End Sub
    Partial Private Sub OnTransaccionChanging(value As String)
    End Sub
    Partial Private Sub OnTransaccionChanged()
    End Sub
    Partial Private Sub OnTipoOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOperacionChanged()
    End Sub
    Partial Private Sub OnDiasContadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasContadoChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnObjetoOrdenExtraordinariaChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoOrdenExtraordinariaChanged()
    End Sub
    Partial Private Sub OnNumPadreChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumPadreChanged()
    End Sub
    Partial Private Sub OnParcialPadreChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnParcialPadreChanged()
    End Sub
    Partial Private Sub OnOperacionPadreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOperacionPadreChanged()
    End Sub
    Partial Private Sub OnDiasTramoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasTramoChanged()
    End Sub
    Partial Private Sub OnVendidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVendidoChanged()
    End Sub
    Partial Private Sub OnVendido_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVendido_fechaChanged()
    End Sub
    Partial Private Sub OnManualChanging(value As Boolean)
    End Sub
    Partial Private Sub OnManualChanged()
    End Sub
    Partial Private Sub OnValorTrasladoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorTrasladoChanged()
    End Sub
    Partial Private Sub OnValorBrutoCompraVencidaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorBrutoCompraVencidaChanged()
    End Sub
    Partial Private Sub OnAutoRetenedorChanging(value As String)
    End Sub
    Partial Private Sub OnAutoRetenedorChanged()
    End Sub
    Partial Private Sub OnSujetoChanging(value As String)
    End Sub
    Partial Private Sub OnSujetoChanged()
    End Sub
    Partial Private Sub OnPcRenEfecCompraRetChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPcRenEfecCompraRetChanged()
    End Sub
    Partial Private Sub OnPcRenEfecVendeRetChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPcRenEfecVendeRetChanged()
    End Sub
    Partial Private Sub OnReinversionChanging(value As String)
    End Sub
    Partial Private Sub OnReinversionChanged()
    End Sub
    Partial Private Sub OnSwapChanging(value As String)
    End Sub
    Partial Private Sub OnSwapChanged()
    End Sub
    Partial Private Sub OnNroSwapChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroSwapChanged()
    End Sub
    Partial Private Sub OnCertificacionChanging(value As String)
    End Sub
    Partial Private Sub OnCertificacionChanged()
    End Sub
    Partial Private Sub OnDescuentoAcumulaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDescuentoAcumulaChanged()
    End Sub
    Partial Private Sub OnPctRendimientoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPctRendimientoChanged()
    End Sub
    Partial Private Sub OnFechaCompraVencidoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaCompraVencidoChanged()
    End Sub
    Partial Private Sub OnPrecioCompraVencidoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecioCompraVencidoChanged()
    End Sub
    Partial Private Sub OnConstanciaEnajenacionChanging(value As String)
    End Sub
    Partial Private Sub OnConstanciaEnajenacionChanged()
    End Sub
    Partial Private Sub OnRepoTituloChanging(value As String)
    End Sub
    Partial Private Sub OnRepoTituloChanged()
    End Sub
    Partial Private Sub OnServBolsaVbleChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnServBolsaVbleChanged()
    End Sub
    Partial Private Sub OnServBolsaFijoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnServBolsaFijoChanged()
    End Sub
    Partial Private Sub OnTrasladoChanging(value As String)
    End Sub
    Partial Private Sub OnTrasladoChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnHoraGrabacionChanging(value As String)
    End Sub
    Partial Private Sub OnHoraGrabacionChanged()
    End Sub
    Partial Private Sub OnOrigenOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnOrigenOperacionChanged()
    End Sub
    Partial Private Sub OnCodigoOperadorCompraChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoOperadorCompraChanged()
    End Sub
    Partial Private Sub OnCodigoOperadorVendeChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoOperadorVendeChanged()
    End Sub
    Partial Private Sub OnIdentificacionRemateChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionRemateChanged()
    End Sub
    Partial Private Sub OnModalidaOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnModalidaOperacionChanged()
    End Sub
    Partial Private Sub OnIndicadorPrecioChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorPrecioChanged()
    End Sub
    Partial Private Sub OnPeriodoExdividendoChanging(value As String)
    End Sub
    Partial Private Sub OnPeriodoExdividendoChanged()
    End Sub
    Partial Private Sub OnPlazoOperacionRepoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlazoOperacionRepoChanged()
    End Sub
    Partial Private Sub OnValorCaptacionRepoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorCaptacionRepoChanged()
    End Sub
    Partial Private Sub OnVolumenCompraRepoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVolumenCompraRepoChanged()
    End Sub
    Partial Private Sub OnPrecioNetoFraccionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecioNetoFraccionChanged()
    End Sub
    Partial Private Sub OnVolumenNetoFraccionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVolumenNetoFraccionChanged()
    End Sub
    Partial Private Sub OnCodigoContactoComercialChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoContactoComercialChanged()
    End Sub
    Partial Private Sub OnNroFraccionOperacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroFraccionOperacionChanged()
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio1Changing(value As String)
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio1Changed()
    End Sub
    Partial Private Sub OnTipoidentificacionCliente2Changing(value As String)
    End Sub
    Partial Private Sub OnTipoidentificacionCliente2Changed()
    End Sub
    Partial Private Sub OnNitCliente2Changing(value As String)
    End Sub
    Partial Private Sub OnNitCliente2Changed()
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio2Changing(value As String)
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio2Changed()
    End Sub
    Partial Private Sub OnTipoIdentificacionCliente3Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionCliente3Changed()
    End Sub
    Partial Private Sub OnNitCliente3Changing(value As String)
    End Sub
    Partial Private Sub OnNitCliente3Changed()
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio3Changing(value As String)
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio3Changed()
    End Sub
    Partial Private Sub OnIndicadorOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorOperacionChanged()
    End Sub
    Partial Private Sub OnBaseRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBaseRetencionChanged()
    End Sub
    Partial Private Sub OnPorcRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcRetencionChanged()
    End Sub
    Partial Private Sub OnBaseRetencionTransladoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBaseRetencionTransladoChanged()
    End Sub
    Partial Private Sub OnPorcRetencionTransladoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcRetencionTransladoChanged()
    End Sub
    Partial Private Sub OnPorcIvaComisionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcIvaComisionChanged()
    End Sub
    Partial Private Sub OnIndicadorAccionesChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorAccionesChanged()
    End Sub
    Partial Private Sub OnOperacionNegociadaChanging(value As String)
    End Sub
    Partial Private Sub OnOperacionNegociadaChanged()
    End Sub
    Partial Private Sub OnFechaConstanciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaConstanciaChanged()
    End Sub
    Partial Private Sub OnValorConstanciaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorConstanciaChanged()
    End Sub
    Partial Private Sub OnGeneraConstanciaChanging(value As String)
    End Sub
    Partial Private Sub OnGeneraConstanciaChanged()
    End Sub
    Partial Private Sub OnCargadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCargadoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCumplimientoTituloChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCumplimientoTituloChanged()
    End Sub
    Partial Private Sub OnNroLoteChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLoteChanged()
    End Sub
    Partial Private Sub OnValorEntregaContraPagoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorEntregaContraPagoChanged()
    End Sub
    Partial Private Sub OnAquienSeEnviaRetencionChanging(value As String)
    End Sub
    Partial Private Sub OnAquienSeEnviaRetencionChanged()
    End Sub
    Partial Private Sub OnIDBaseDiasChanging(value As String)
    End Sub
    Partial Private Sub OnIDBaseDiasChanged()
    End Sub
    Partial Private Sub OnTipoDeOfertaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDeOfertaChanged()
    End Sub
    Partial Private Sub OnNroLoteENCChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLoteENCChanged()
    End Sub
    Partial Private Sub OnContabilidadENCChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnContabilidadENCChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLiquidacionesChanged()
    End Sub
    Partial Private Sub OnCodigoIntermediarioChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoIntermediarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnValorExtemporaneoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorExtemporaneoChanged()
    End Sub
    Partial Private Sub OnPosicionExtemporaneoChanging(value As String)
    End Sub
    Partial Private Sub OnPosicionExtemporaneoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._ReceptoresOrdenes = New EntitySet(Of ReceptoresOrdene)(AddressOf Me.attach_ReceptoresOrdenes, AddressOf Me.detach_ReceptoresOrdenes)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Parcial() As Integer
			Get
				Return Me._Parcial
			End Get
			Set
				If (Object.Equals(Me._Parcial, value) = false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me.OnClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOrden = value
					Me.SendPropertyChanged("ClaseOrden")
					Me.OnClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_IDOrden", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrden() As Integer
			Get
				Return Me._IDOrden
			End Get
			Set
				If (Object.Equals(Me._IDOrden, value) = false) Then
					Me.OnIDOrdenChanging(value)
					Me.SendPropertyChanging
					Me._IDOrden = value
					Me.SendPropertyChanged("IDOrden")
					Me.OnIDOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5)")>  _
		Public Property Prefijo() As String
			Get
				Return Me._Prefijo
			End Get
			Set
				If (String.Equals(Me._Prefijo, value) = false) Then
					Me.OnPrefijoChanging(value)
					Me.SendPropertyChanging
					Me._Prefijo = value
					Me.SendPropertyChanged("Prefijo")
					Me.OnPrefijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDFactura", Storage:="_IDFactura", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDFactura() As System.Nullable(of System.int32)
			Get
				Return Me._IDFactura
			End Get
			Set
				If (Object.Equals(Me._IDFactura, value) = false) Then
					Me.OnIDFacturaChanging(value)
					Me.SendPropertyChanging
					Me._IDFactura = value
					Me.SendPropertyChanged("IDFactura")
					Me.OnIDFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFacturada", Storage:="_Facturada", DbType:="Varchar(1)")>  _
		Public Property Facturada() As String
			Get
				Return Me._Facturada
			End Get
			Set
				If (String.Equals(Me._Facturada, value) = false) Then
					Me.OnFacturadaChanging(value)
					Me.SendPropertyChanging
					Me._Facturada = value
					Me.SendPropertyChanged("Facturada")
					Me.OnFacturadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDComitente() As String
			Get
				Return Me._IDComitente
			End Get
			Set
				If (String.Equals(Me._IDComitente, value) = false) Then
					Me.OnIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IDComitente = value
					Me.SendPropertyChanged("IDComitente")
					Me.OnIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenante", Storage:="_IDOrdenante", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrdenante() As String
			Get
				Return Me._IDOrdenante
			End Get
			Set
				If (String.Equals(Me._IDOrdenante, value) = false) Then
					Me.OnIDOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._IDOrdenante = value
					Me.SendPropertyChanged("IDOrdenante")
					Me.OnIDOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDBolsa", Storage:="_IDBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDBolsa() As Integer
			Get
				Return Me._IDBolsa
			End Get
			Set
				If (Object.Equals(Me._IDBolsa, value) = false) Then
					Me.OnIDBolsaChanging(value)
					Me.SendPropertyChanging
					Me._IDBolsa = value
					Me.SendPropertyChanged("IDBolsa")
					Me.OnIDBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValBolsa", Storage:="_ValBolsa", DbType:="Float")>  _
		Public Property ValBolsa() As System.Nullable(Of Double)
			Get
				Return Me._ValBolsa
			End Get
			Set
				If (Me._ValBolsa.Equals(value) = false) Then
					Me.OnValBolsaChanging(value)
					Me.SendPropertyChanging
					Me._ValBolsa = value
					Me.SendPropertyChanged("ValBolsa")
					Me.OnValBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bytIDRueda", Storage:="_IDRueda", DbType:="Smallint")>  _
		Public Property IDRueda() As System.Nullable(Of Short)
			Get
				Return Me._IDRueda
			End Get
			Set
				If (Me._IDRueda.Equals(value) = false) Then
					Me.OnIDRuedaChanging(value)
					Me.SendPropertyChanging
					Me._IDRueda = value
					Me.SendPropertyChanged("IDRueda")
					Me.OnIDRuedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaDescuento", Storage:="_TasaDescuento", DbType:="Float")>  _
		Public Property TasaDescuento() As System.Nullable(Of Double)
			Get
				Return Me._TasaDescuento
			End Get
			Set
				If (Me._TasaDescuento.Equals(value) = false) Then
					Me.OnTasaDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._TasaDescuento = value
					Me.SendPropertyChanged("TasaDescuento")
					Me.OnTasaDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaCompraVende", Storage:="_TasaCompraVende", DbType:="Float")>  _
		Public Property TasaCompraVende() As System.Nullable(Of Double)
			Get
				Return Me._TasaCompraVende
			End Get
			Set
				If (Me._TasaCompraVende.Equals(value) = false) Then
					Me.OnTasaCompraVendeChanging(value)
					Me.SendPropertyChanging
					Me._TasaCompraVende = value
					Me.SendPropertyChanged("TasaCompraVende")
					Me.OnTasaCompraVendeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(2)")>  _
		Public Property Modalidad() As String
			Get
				Return Me._Modalidad
			End Get
			Set
				If (String.Equals(Me._Modalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._Modalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorEconomico", Storage:="_IndicadorEconomico", DbType:="Varchar(2)")>  _
		Public Property IndicadorEconomico() As String
			Get
				Return Me._IndicadorEconomico
			End Get
			Set
				If (String.Equals(Me._IndicadorEconomico, value) = false) Then
					Me.OnIndicadorEconomicoChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorEconomico = value
					Me.SendPropertyChanged("IndicadorEconomico")
					Me.OnIndicadorEconomicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float")>  _
		Public Property PuntosIndicador() As System.Nullable(Of Double)
			Get
				Return Me._PuntosIndicador
			End Get
			Set
				If (Me._PuntosIndicador.Equals(value) = false) Then
					Me.OnPuntosIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._PuntosIndicador = value
					Me.SendPropertyChanged("PuntosIndicador")
					Me.OnPuntosIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPlazo", Storage:="_Plazo", DbType:="Int", CanBeNull:=true)>  _
		Public Property Plazo() As Integer
			Get
				Return Me._Plazo
			End Get
			Set
				If (Object.Equals(Me._Plazo, value) = false) Then
					Me.OnPlazoChanging(value)
					Me.SendPropertyChanging
					Me._Plazo = value
					Me.SendPropertyChanged("Plazo")
					Me.OnPlazoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_Liquidacion", DbType:="Datetime NOT NULL")>  _
		Public Property Liquidacion() As Date
			Get
				Return Me._Liquidacion
			End Get
			Set
				If ((Me._Liquidacion = value)  _
							= false) Then
					Me.OnLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._Liquidacion = value
					Me.SendPropertyChanged("Liquidacion")
					Me.OnLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="Datetime NOT NULL")>  _
		Public Property Cumplimiento() As Date
			Get
				Return Me._Cumplimiento
			End Get
			Set
				If ((Me._Cumplimiento = value)  _
							= false) Then
					Me.OnCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._Cumplimiento = value
					Me.SendPropertyChanged("Cumplimiento")
					Me.OnCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="Datetime")>  _
		Public Property Emision() As System.Nullable(Of Date)
			Get
				Return Me._Emision
			End Get
			Set
				If (Me._Emision.Equals(value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._Emision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="Datetime")>  _
		Public Property Vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._Vencimiento
			End Get
			Set
				If (Me._Vencimiento.Equals(value) = false) Then
					Me.OnVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._Vencimiento = value
					Me.SendPropertyChanged("Vencimiento")
					Me.OnVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOtraPlaza", Storage:="_OtraPlaza", DbType:="Bit NOT NULL")>  _
		Public Property OtraPlaza() As Boolean
			Get
				Return Me._OtraPlaza
			End Get
			Set
				If ((Me._OtraPlaza = value)  _
							= false) Then
					Me.OnOtraPlazaChanging(value)
					Me.SendPropertyChanging
					Me._OtraPlaza = value
					Me.SendPropertyChanged("OtraPlaza")
					Me.OnOtraPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPlaza", Storage:="_Plaza", DbType:="Varchar(3)")>  _
		Public Property Plaza() As String
			Get
				Return Me._Plaza
			End Get
			Set
				If (String.Equals(Me._Plaza, value) = false) Then
					Me.OnPlazaChanging(value)
					Me.SendPropertyChanging
					Me._Plaza = value
					Me.SendPropertyChanged("Plaza")
					Me.OnPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionistaLocal", Storage:="_IDComisionistaLocal", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDComisionistaLocal() As System.Nullable(of System.int32)
			Get
				Return Me._IDComisionistaLocal
			End Get
			Set
				If (Object.Equals(Me._IDComisionistaLocal, value) = false) Then
					Me.OnIDComisionistaLocalChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionistaLocal = value
					Me.SendPropertyChanged("IDComisionistaLocal")
					Me.OnIDComisionistaLocalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionistaOtraPlaza", Storage:="_IDComisionistaOtraPlaza", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDComisionistaOtraPlaza() As System.Nullable(of System.int32)
			Get
				Return Me._IDComisionistaOtraPlaza
			End Get
			Set
				If (Object.Equals(Me._IDComisionistaOtraPlaza, value) = false) Then
					Me.OnIDComisionistaOtraPlazaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionistaOtraPlaza = value
					Me.SendPropertyChanged("IDComisionistaOtraPlaza")
					Me.OnIDComisionistaOtraPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCiudadOtraPlaza", Storage:="_IDCiudadOtraPlaza", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCiudadOtraPlaza() As Integer
			Get
				Return Me._IDCiudadOtraPlaza
			End Get
			Set
				If (Object.Equals(Me._IDCiudadOtraPlaza, value) = false) Then
					Me.OnIDCiudadOtraPlazaChanging(value)
					Me.SendPropertyChanging
					Me._IDCiudadOtraPlaza = value
					Me.SendPropertyChanged("IDCiudadOtraPlaza")
					Me.OnIDCiudadOtraPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaEfectiva", Storage:="_TasaEfectiva", DbType:="Float NOT NULL")>  _
		Public Property TasaEfectiva() As Double
			Get
				Return Me._TasaEfectiva
			End Get
			Set
				If ((Me._TasaEfectiva = value)  _
							= false) Then
					Me.OnTasaEfectivaChanging(value)
					Me.SendPropertyChanging
					Me._TasaEfectiva = value
					Me.SendPropertyChanged("TasaEfectiva")
					Me.OnTasaEfectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curPrecio", Storage:="_Precio", DbType:="Float")>  _
		Public Property Precio() As System.Nullable(Of Double)
			Get
				Return Me._Precio
			End Get
			Set
				If (Me._Precio.Equals(value) = false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTransaccion", Storage:="_Transaccion_cur", DbType:="Float")>  _
		Public Property Transaccion_cur() As System.Nullable(Of Double)
			Get
				Return Me._Transaccion_cur
			End Get
			Set
				If (Me._Transaccion_cur.Equals(value) = false) Then
					Me.OnTransaccion_curChanging(value)
					Me.SendPropertyChanging
					Me._Transaccion_cur = value
					Me.SendPropertyChanged("Transaccion_cur")
					Me.OnTransaccion_curChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curSubTotalLiq", Storage:="_SubTotalLiq", DbType:="Float")>  _
		Public Property SubTotalLiq() As System.Nullable(Of Double)
			Get
				Return Me._SubTotalLiq
			End Get
			Set
				If (Me._SubTotalLiq.Equals(value) = false) Then
					Me.OnSubTotalLiqChanging(value)
					Me.SendPropertyChanging
					Me._SubTotalLiq = value
					Me.SendPropertyChanged("SubTotalLiq")
					Me.OnSubTotalLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTotalLiq", Storage:="_TotalLiq", DbType:="Float")>  _
		Public Property TotalLiq() As System.Nullable(Of Double)
			Get
				Return Me._TotalLiq
			End Get
			Set
				If (Me._TotalLiq.Equals(value) = false) Then
					Me.OnTotalLiqChanging(value)
					Me.SendPropertyChanging
					Me._TotalLiq = value
					Me.SendPropertyChanged("TotalLiq")
					Me.OnTotalLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curComision", Storage:="_Comision", DbType:="Float")>  _
		Public Property Comision() As System.Nullable(Of Double)
			Get
				Return Me._Comision
			End Get
			Set
				If (Me._Comision.Equals(value) = false) Then
					Me.OnComisionChanging(value)
					Me.SendPropertyChanging
					Me._Comision = value
					Me.SendPropertyChanged("Comision")
					Me.OnComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curRetencion", Storage:="_Retencion", DbType:="Float")>  _
		Public Property Retencion() As System.Nullable(Of Double)
			Get
				Return Me._Retencion
			End Get
			Set
				If (Me._Retencion.Equals(value) = false) Then
					Me.OnRetencionChanging(value)
					Me.SendPropertyChanging
					Me._Retencion = value
					Me.SendPropertyChanged("Retencion")
					Me.OnRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curIntereses", Storage:="_Intereses", DbType:="Float")>  _
		Public Property Intereses() As System.Nullable(Of Double)
			Get
				Return Me._Intereses
			End Get
			Set
				If (Me._Intereses.Equals(value) = false) Then
					Me.OnInteresesChanging(value)
					Me.SendPropertyChanging
					Me._Intereses = value
					Me.SendPropertyChanged("Intereses")
					Me.OnInteresesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorIva", Storage:="_ValorIva", DbType:="Float")>  _
		Public Property ValorIva() As System.Nullable(Of Double)
			Get
				Return Me._ValorIva
			End Get
			Set
				If (Me._ValorIva.Equals(value) = false) Then
					Me.OnValorIvaChanging(value)
					Me.SendPropertyChanging
					Me._ValorIva = value
					Me.SendPropertyChanged("ValorIva")
					Me.OnValorIvaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasIntereses", Storage:="_DiasIntereses", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasIntereses() As Integer
			Get
				Return Me._DiasIntereses
			End Get
			Set
				If (Object.Equals(Me._DiasIntereses, value) = false) Then
					Me.OnDiasInteresesChanging(value)
					Me.SendPropertyChanging
					Me._DiasIntereses = value
					Me.SendPropertyChanged("DiasIntereses")
					Me.OnDiasInteresesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblFactorComisionPactada", Storage:="_FactorComisionPactada", DbType:="Float")>  _
		Public Property FactorComisionPactada() As System.Nullable(Of Double)
			Get
				Return Me._FactorComisionPactada
			End Get
			Set
				If (Me._FactorComisionPactada.Equals(value) = false) Then
					Me.OnFactorComisionPactadaChanging(value)
					Me.SendPropertyChanging
					Me._FactorComisionPactada = value
					Me.SendPropertyChanged("FactorComisionPactada")
					Me.OnFactorComisionPactadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_Mercado", DbType:="Varchar(1)")>  _
		Public Property Mercado() As String
			Get
				Return Me._Mercado
			End Get
			Set
				If (String.Equals(Me._Mercado, value) = false) Then
					Me.OnMercadoChanging(value)
					Me.SendPropertyChanging
					Me._Mercado = value
					Me.SendPropertyChanged("Mercado")
					Me.OnMercadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroTitulo", Storage:="_NroTitulo", DbType:="Varchar(25)")>  _
		Public Property NroTitulo() As String
			Get
				Return Me._NroTitulo
			End Get
			Set
				If (String.Equals(Me._NroTitulo, value) = false) Then
					Me.OnNroTituloChanging(value)
					Me.SendPropertyChanging
					Me._NroTitulo = value
					Me.SendPropertyChanged("NroTitulo")
					Me.OnNroTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCiudadExpTitulo", Storage:="_IDCiudadExpTitulo", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCiudadExpTitulo() As Integer
			Get
				Return Me._IDCiudadExpTitulo
			End Get
			Set
				If (Object.Equals(Me._IDCiudadExpTitulo, value) = false) Then
					Me.OnIDCiudadExpTituloChanging(value)
					Me.SendPropertyChanging
					Me._IDCiudadExpTitulo = value
					Me.SendPropertyChanged("IDCiudadExpTitulo")
					Me.OnIDCiudadExpTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPlazoOriginal", Storage:="_PlazoOriginal", DbType:="Int", CanBeNull:=true)>  _
		Public Property PlazoOriginal() As Integer
			Get
				Return Me._PlazoOriginal
			End Get
			Set
				If (Object.Equals(Me._PlazoOriginal, value) = false) Then
					Me.OnPlazoOriginalChanging(value)
					Me.SendPropertyChanging
					Me._PlazoOriginal = value
					Me.SendPropertyChanged("PlazoOriginal")
					Me.OnPlazoOriginalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAplazamiento", Storage:="_Aplazamiento", DbType:="Bit NOT NULL")>  _
		Public Property Aplazamiento() As Boolean
			Get
				Return Me._Aplazamiento
			End Get
			Set
				If ((Me._Aplazamiento = value)  _
							= false) Then
					Me.OnAplazamientoChanging(value)
					Me.SendPropertyChanging
					Me._Aplazamiento = value
					Me.SendPropertyChanged("Aplazamiento")
					Me.OnAplazamientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bytVersionPapeleta", Storage:="_VersionPapeleta", DbType:="Smallint")>  _
		Public Property VersionPapeleta() As System.Nullable(Of Short)
			Get
				Return Me._VersionPapeleta
			End Get
			Set
				If (Me._VersionPapeleta.Equals(value) = false) Then
					Me.OnVersionPapeletaChanging(value)
					Me.SendPropertyChanging
					Me._VersionPapeleta = value
					Me.SendPropertyChanged("VersionPapeleta")
					Me.OnVersionPapeletaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmisionOriginal", Storage:="_EmisionOriginal", DbType:="Datetime")>  _
		Public Property EmisionOriginal() As System.Nullable(Of Date)
			Get
				Return Me._EmisionOriginal
			End Get
			Set
				If (Me._EmisionOriginal.Equals(value) = false) Then
					Me.OnEmisionOriginalChanging(value)
					Me.SendPropertyChanging
					Me._EmisionOriginal = value
					Me.SendPropertyChanged("EmisionOriginal")
					Me.OnEmisionOriginalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimientoOriginal", Storage:="_VencimientoOriginal", DbType:="Datetime")>  _
		Public Property VencimientoOriginal() As System.Nullable(Of Date)
			Get
				Return Me._VencimientoOriginal
			End Get
			Set
				If (Me._VencimientoOriginal.Equals(value) = false) Then
					Me.OnVencimientoOriginalChanging(value)
					Me.SendPropertyChanging
					Me._VencimientoOriginal = value
					Me.SendPropertyChanged("VencimientoOriginal")
					Me.OnVencimientoOriginalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int", CanBeNull:=true)>  _
		Public Property Impresiones() As Integer
			Get
				Return Me._Impresiones
			End Get
			Set
				If (Object.Equals(Me._Impresiones, value) = false) Then
					Me.OnImpresionesChanging(value)
					Me.SendPropertyChanging
					Me._Impresiones = value
					Me.SendPropertyChanged("Impresiones")
					Me.OnImpresionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFormaPago", Storage:="_FormaPago", DbType:="Varchar(2)")>  _
		Public Property FormaPago() As String
			Get
				Return Me._FormaPago
			End Get
			Set
				If (String.Equals(Me._FormaPago, value) = false) Then
					Me.OnFormaPagoChanging(value)
					Me.SendPropertyChanging
					Me._FormaPago = value
					Me.SendPropertyChanged("FormaPago")
					Me.OnFormaPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCtrlImpPapeleta", Storage:="_CtrlImpPapeleta", DbType:="Int", CanBeNull:=true)>  _
		Public Property CtrlImpPapeleta() As Integer
			Get
				Return Me._CtrlImpPapeleta
			End Get
			Set
				If (Object.Equals(Me._CtrlImpPapeleta, value) = false) Then
					Me.OnCtrlImpPapeletaChanging(value)
					Me.SendPropertyChanging
					Me._CtrlImpPapeleta = value
					Me.SendPropertyChanged("CtrlImpPapeleta")
					Me.OnCtrlImpPapeletaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasVencimiento", Storage:="_DiasVencimiento", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasVencimiento() As Integer
			Get
				Return Me._DiasVencimiento
			End Get
			Set
				If (Object.Equals(Me._DiasVencimiento, value) = false) Then
					Me.OnDiasVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._DiasVencimiento = value
					Me.SendPropertyChanged("DiasVencimiento")
					Me.OnDiasVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPosicionPropia", Storage:="_PosicionPropia", DbType:="Varchar(1)")>  _
		Public Property PosicionPropia() As String
			Get
				Return Me._PosicionPropia
			End Get
			Set
				If (String.Equals(Me._PosicionPropia, value) = false) Then
					Me.OnPosicionPropiaChanging(value)
					Me.SendPropertyChanging
					Me._PosicionPropia = value
					Me.SendPropertyChanged("PosicionPropia")
					Me.OnPosicionPropiaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTransaccion", Storage:="_Transaccion", DbType:="Varchar(2)")>  _
		Public Property Transaccion() As String
			Get
				Return Me._Transaccion
			End Get
			Set
				If (String.Equals(Me._Transaccion, value) = false) Then
					Me.OnTransaccionChanging(value)
					Me.SendPropertyChanging
					Me._Transaccion = value
					Me.SendPropertyChanged("Transaccion")
					Me.OnTransaccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(1)")>  _
		Public Property TipoOperacion() As String
			Get
				Return Me._TipoOperacion
			End Get
			Set
				If (String.Equals(Me._TipoOperacion, value) = false) Then
					Me.OnTipoOperacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacion = value
					Me.SendPropertyChanged("TipoOperacion")
					Me.OnTipoOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasContado", Storage:="_DiasContado", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasContado() As Integer
			Get
				Return Me._DiasContado
			End Get
			Set
				If (Object.Equals(Me._DiasContado, value) = false) Then
					Me.OnDiasContadoChanging(value)
					Me.SendPropertyChanging
					Me._DiasContado = value
					Me.SendPropertyChanged("DiasContado")
					Me.OnDiasContadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
		Public Property Ordinaria() As Boolean
			Get
				Return Me._Ordinaria
			End Get
			Set
				If ((Me._Ordinaria = value)  _
							= false) Then
					Me.OnOrdinariaChanging(value)
					Me.SendPropertyChanging
					Me._Ordinaria = value
					Me.SendPropertyChanged("Ordinaria")
					Me.OnOrdinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjetoOrdenExtraordinaria", Storage:="_ObjetoOrdenExtraordinaria", DbType:="Varchar(3)")>  _
		Public Property ObjetoOrdenExtraordinaria() As String
			Get
				Return Me._ObjetoOrdenExtraordinaria
			End Get
			Set
				If (String.Equals(Me._ObjetoOrdenExtraordinaria, value) = false) Then
					Me.OnObjetoOrdenExtraordinariaChanging(value)
					Me.SendPropertyChanging
					Me._ObjetoOrdenExtraordinaria = value
					Me.SendPropertyChanged("ObjetoOrdenExtraordinaria")
					Me.OnObjetoOrdenExtraordinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNumPadre", Storage:="_NumPadre", DbType:="Int", CanBeNull:=true)>  _
		Public Property NumPadre() As Integer
			Get
				Return Me._NumPadre
			End Get
			Set
				If (Object.Equals(Me._NumPadre, value) = false) Then
					Me.OnNumPadreChanging(value)
					Me.SendPropertyChanging
					Me._NumPadre = value
					Me.SendPropertyChanged("NumPadre")
					Me.OnNumPadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcialPadre", Storage:="_ParcialPadre", DbType:="Int", CanBeNull:=true)>  _
		Public Property ParcialPadre() As System.Nullable(of System.int32)
			Get
				Return Me._ParcialPadre
			End Get
			Set
				If (Object.Equals(Me._ParcialPadre, value) = false) Then
					Me.OnParcialPadreChanging(value)
					Me.SendPropertyChanging
					Me._ParcialPadre = value
					Me.SendPropertyChanged("ParcialPadre")
					Me.OnParcialPadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmOperacionPadre", Storage:="_OperacionPadre", DbType:="Datetime")>  _
		Public Property OperacionPadre() As System.Nullable(Of Date)
			Get
				Return Me._OperacionPadre
			End Get
			Set
				If (Me._OperacionPadre.Equals(value) = false) Then
					Me.OnOperacionPadreChanging(value)
					Me.SendPropertyChanging
					Me._OperacionPadre = value
					Me.SendPropertyChanged("OperacionPadre")
					Me.OnOperacionPadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasTramo", Storage:="_DiasTramo", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasTramo() As Integer
			Get
				Return Me._DiasTramo
			End Get
			Set
				If (Object.Equals(Me._DiasTramo, value) = false) Then
					Me.OnDiasTramoChanging(value)
					Me.SendPropertyChanging
					Me._DiasTramo = value
					Me.SendPropertyChanged("DiasTramo")
					Me.OnDiasTramoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logVendido", Storage:="_Vendido", DbType:="Bit NOT NULL")>  _
		Public Property Vendido() As Boolean
			Get
				Return Me._Vendido
			End Get
			Set
				If ((Me._Vendido = value)  _
							= false) Then
					Me.OnVendidoChanging(value)
					Me.SendPropertyChanging
					Me._Vendido = value
					Me.SendPropertyChanged("Vendido")
					Me.OnVendidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVendido", Storage:="_Vendido_fecha", DbType:="Datetime")>  _
		Public Property Vendido_fecha() As System.Nullable(Of Date)
			Get
				Return Me._Vendido_fecha
			End Get
			Set
				If (Me._Vendido_fecha.Equals(value) = false) Then
					Me.OnVendido_fechaChanging(value)
					Me.SendPropertyChanging
					Me._Vendido_fecha = value
					Me.SendPropertyChanged("Vendido_fecha")
					Me.OnVendido_fechaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logManual", Storage:="_Manual", DbType:="Bit NOT NULL")>  _
		Public Property Manual() As Boolean
			Get
				Return Me._Manual
			End Get
			Set
				If ((Me._Manual = value)  _
							= false) Then
					Me.OnManualChanging(value)
					Me.SendPropertyChanging
					Me._Manual = value
					Me.SendPropertyChanged("Manual")
					Me.OnManualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorTraslado", Storage:="_ValorTraslado", DbType:="Float")>  _
		Public Property ValorTraslado() As System.Nullable(Of Double)
			Get
				Return Me._ValorTraslado
			End Get
			Set
				If (Me._ValorTraslado.Equals(value) = false) Then
					Me.OnValorTrasladoChanging(value)
					Me.SendPropertyChanging
					Me._ValorTraslado = value
					Me.SendPropertyChanged("ValorTraslado")
					Me.OnValorTrasladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorBrutoCompraVencida", Storage:="_ValorBrutoCompraVencida", DbType:="Float")>  _
		Public Property ValorBrutoCompraVencida() As System.Nullable(Of Double)
			Get
				Return Me._ValorBrutoCompraVencida
			End Get
			Set
				If (Me._ValorBrutoCompraVencida.Equals(value) = false) Then
					Me.OnValorBrutoCompraVencidaChanging(value)
					Me.SendPropertyChanging
					Me._ValorBrutoCompraVencida = value
					Me.SendPropertyChanged("ValorBrutoCompraVencida")
					Me.OnValorBrutoCompraVencidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAutoRetenedor", Storage:="_AutoRetenedor", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property AutoRetenedor() As String
			Get
				Return Me._AutoRetenedor
			End Get
			Set
				If (String.Equals(Me._AutoRetenedor, value) = false) Then
					Me.OnAutoRetenedorChanging(value)
					Me.SendPropertyChanging
					Me._AutoRetenedor = value
					Me.SendPropertyChanged("AutoRetenedor")
					Me.OnAutoRetenedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSujeto", Storage:="_Sujeto", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Sujeto() As String
			Get
				Return Me._Sujeto
			End Get
			Set
				If (String.Equals(Me._Sujeto, value) = false) Then
					Me.OnSujetoChanging(value)
					Me.SendPropertyChanging
					Me._Sujeto = value
					Me.SendPropertyChanged("Sujeto")
					Me.OnSujetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPcRenEfecCompraRet", Storage:="_PcRenEfecCompraRet", DbType:="Float")>  _
		Public Property PcRenEfecCompraRet() As System.Nullable(Of Double)
			Get
				Return Me._PcRenEfecCompraRet
			End Get
			Set
				If (Me._PcRenEfecCompraRet.Equals(value) = false) Then
					Me.OnPcRenEfecCompraRetChanging(value)
					Me.SendPropertyChanging
					Me._PcRenEfecCompraRet = value
					Me.SendPropertyChanged("PcRenEfecCompraRet")
					Me.OnPcRenEfecCompraRetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPcRenEfecVendeRet", Storage:="_PcRenEfecVendeRet", DbType:="Float")>  _
		Public Property PcRenEfecVendeRet() As System.Nullable(Of Double)
			Get
				Return Me._PcRenEfecVendeRet
			End Get
			Set
				If (Me._PcRenEfecVendeRet.Equals(value) = false) Then
					Me.OnPcRenEfecVendeRetChanging(value)
					Me.SendPropertyChanging
					Me._PcRenEfecVendeRet = value
					Me.SendPropertyChanged("PcRenEfecVendeRet")
					Me.OnPcRenEfecVendeRetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReinversion", Storage:="_Reinversion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Reinversion() As String
			Get
				Return Me._Reinversion
			End Get
			Set
				If (String.Equals(Me._Reinversion, value) = false) Then
					Me.OnReinversionChanging(value)
					Me.SendPropertyChanging
					Me._Reinversion = value
					Me.SendPropertyChanged("Reinversion")
					Me.OnReinversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSwap", Storage:="_Swap", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Swap() As String
			Get
				Return Me._Swap
			End Get
			Set
				If (String.Equals(Me._Swap, value) = false) Then
					Me.OnSwapChanging(value)
					Me.SendPropertyChanging
					Me._Swap = value
					Me.SendPropertyChanged("Swap")
					Me.OnSwapChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroSwap", Storage:="_NroSwap", DbType:="Int", CanBeNull:=true)>  _
		Public Property NroSwap() As Integer
			Get
				Return Me._NroSwap
			End Get
			Set
				If (Object.Equals(Me._NroSwap, value) = false) Then
					Me.OnNroSwapChanging(value)
					Me.SendPropertyChanging
					Me._NroSwap = value
					Me.SendPropertyChanged("NroSwap")
					Me.OnNroSwapChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCertificacion", Storage:="_Certificacion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Certificacion() As String
			Get
				Return Me._Certificacion
			End Get
			Set
				If (String.Equals(Me._Certificacion, value) = false) Then
					Me.OnCertificacionChanging(value)
					Me.SendPropertyChanging
					Me._Certificacion = value
					Me.SendPropertyChanged("Certificacion")
					Me.OnCertificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblDescuentoAcumula", Storage:="_DescuentoAcumula", DbType:="Float")>  _
		Public Property DescuentoAcumula() As System.Nullable(Of Double)
			Get
				Return Me._DescuentoAcumula
			End Get
			Set
				If (Me._DescuentoAcumula.Equals(value) = false) Then
					Me.OnDescuentoAcumulaChanging(value)
					Me.SendPropertyChanging
					Me._DescuentoAcumula = value
					Me.SendPropertyChanged("DescuentoAcumula")
					Me.OnDescuentoAcumulaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPctRendimiento", Storage:="_PctRendimiento", DbType:="Float")>  _
		Public Property PctRendimiento() As System.Nullable(Of Double)
			Get
				Return Me._PctRendimiento
			End Get
			Set
				If (Me._PctRendimiento.Equals(value) = false) Then
					Me.OnPctRendimientoChanging(value)
					Me.SendPropertyChanging
					Me._PctRendimiento = value
					Me.SendPropertyChanged("PctRendimiento")
					Me.OnPctRendimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCompraVencido", Storage:="_FechaCompraVencido", DbType:="Datetime")>  _
		Public Property FechaCompraVencido() As System.Nullable(Of Date)
			Get
				Return Me._FechaCompraVencido
			End Get
			Set
				If (Me._FechaCompraVencido.Equals(value) = false) Then
					Me.OnFechaCompraVencidoChanging(value)
					Me.SendPropertyChanging
					Me._FechaCompraVencido = value
					Me.SendPropertyChanged("FechaCompraVencido")
					Me.OnFechaCompraVencidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioCompraVencido", Storage:="_PrecioCompraVencido", DbType:="Float")>  _
		Public Property PrecioCompraVencido() As System.Nullable(Of Double)
			Get
				Return Me._PrecioCompraVencido
			End Get
			Set
				If (Me._PrecioCompraVencido.Equals(value) = false) Then
					Me.OnPrecioCompraVencidoChanging(value)
					Me.SendPropertyChanging
					Me._PrecioCompraVencido = value
					Me.SendPropertyChanged("PrecioCompraVencido")
					Me.OnPrecioCompraVencidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConstanciaEnajenacion", Storage:="_ConstanciaEnajenacion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property ConstanciaEnajenacion() As String
			Get
				Return Me._ConstanciaEnajenacion
			End Get
			Set
				If (String.Equals(Me._ConstanciaEnajenacion, value) = false) Then
					Me.OnConstanciaEnajenacionChanging(value)
					Me.SendPropertyChanging
					Me._ConstanciaEnajenacion = value
					Me.SendPropertyChanged("ConstanciaEnajenacion")
					Me.OnConstanciaEnajenacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRepoTitulo", Storage:="_RepoTitulo", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property RepoTitulo() As String
			Get
				Return Me._RepoTitulo
			End Get
			Set
				If (String.Equals(Me._RepoTitulo, value) = false) Then
					Me.OnRepoTituloChanging(value)
					Me.SendPropertyChanging
					Me._RepoTitulo = value
					Me.SendPropertyChanged("RepoTitulo")
					Me.OnRepoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblServBolsaVble", Storage:="_ServBolsaVble", DbType:="Float")>  _
		Public Property ServBolsaVble() As System.Nullable(Of Double)
			Get
				Return Me._ServBolsaVble
			End Get
			Set
				If (Me._ServBolsaVble.Equals(value) = false) Then
					Me.OnServBolsaVbleChanging(value)
					Me.SendPropertyChanging
					Me._ServBolsaVble = value
					Me.SendPropertyChanged("ServBolsaVble")
					Me.OnServBolsaVbleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblServBolsaFijo", Storage:="_ServBolsaFijo", DbType:="Float")>  _
		Public Property ServBolsaFijo() As System.Nullable(Of Double)
			Get
				Return Me._ServBolsaFijo
			End Get
			Set
				If (Me._ServBolsaFijo.Equals(value) = false) Then
					Me.OnServBolsaFijoChanging(value)
					Me.SendPropertyChanging
					Me._ServBolsaFijo = value
					Me.SendPropertyChanged("ServBolsaFijo")
					Me.OnServBolsaFijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTraslado", Storage:="_Traslado", DbType:="Varchar(1)")>  _
		Public Property Traslado() As String
			Get
				Return Me._Traslado
			End Get
			Set
				If (String.Equals(Me._Traslado, value) = false) Then
					Me.OnTrasladoChanging(value)
					Me.SendPropertyChanging
					Me._Traslado = value
					Me.SendPropertyChanged("Traslado")
					Me.OnTrasladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(1)")>  _
		Public Property UBICACIONTITULO() As String
			Get
				Return Me._UBICACIONTITULO
			End Get
			Set
				If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
					Me.OnUBICACIONTITULOChanging(value)
					Me.SendPropertyChanging
					Me._UBICACIONTITULO = value
					Me.SendPropertyChanged("UBICACIONTITULO")
					Me.OnUBICACIONTITULOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraGrabacion", Storage:="_HoraGrabacion", DbType:="Varchar(8)")>  _
		Public Property HoraGrabacion() As String
			Get
				Return Me._HoraGrabacion
			End Get
			Set
				If (String.Equals(Me._HoraGrabacion, value) = false) Then
					Me.OnHoraGrabacionChanging(value)
					Me.SendPropertyChanging
					Me._HoraGrabacion = value
					Me.SendPropertyChanged("HoraGrabacion")
					Me.OnHoraGrabacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOrigenOperacion", Storage:="_OrigenOperacion", DbType:="Varchar(1)")>  _
		Public Property OrigenOperacion() As String
			Get
				Return Me._OrigenOperacion
			End Get
			Set
				If (String.Equals(Me._OrigenOperacion, value) = false) Then
					Me.OnOrigenOperacionChanging(value)
					Me.SendPropertyChanging
					Me._OrigenOperacion = value
					Me.SendPropertyChanged("OrigenOperacion")
					Me.OnOrigenOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoOperadorCompra", Storage:="_CodigoOperadorCompra", DbType:="Int", CanBeNull:=true)>  _
		Public Property CodigoOperadorCompra() As Integer
			Get
				Return Me._CodigoOperadorCompra
			End Get
			Set
				If (Object.Equals(Me._CodigoOperadorCompra, value) = false) Then
					Me.OnCodigoOperadorCompraChanging(value)
					Me.SendPropertyChanging
					Me._CodigoOperadorCompra = value
					Me.SendPropertyChanged("CodigoOperadorCompra")
					Me.OnCodigoOperadorCompraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoOperadorVende", Storage:="_CodigoOperadorVende", DbType:="Int", CanBeNull:=true)>  _
		Public Property CodigoOperadorVende() As Integer
			Get
				Return Me._CodigoOperadorVende
			End Get
			Set
				If (Object.Equals(Me._CodigoOperadorVende, value) = false) Then
					Me.OnCodigoOperadorVendeChanging(value)
					Me.SendPropertyChanging
					Me._CodigoOperadorVende = value
					Me.SendPropertyChanged("CodigoOperadorVende")
					Me.OnCodigoOperadorVendeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionRemate", Storage:="_IdentificacionRemate", DbType:="Varchar(2)")>  _
		Public Property IdentificacionRemate() As String
			Get
				Return Me._IdentificacionRemate
			End Get
			Set
				If (String.Equals(Me._IdentificacionRemate, value) = false) Then
					Me.OnIdentificacionRemateChanging(value)
					Me.SendPropertyChanging
					Me._IdentificacionRemate = value
					Me.SendPropertyChanged("IdentificacionRemate")
					Me.OnIdentificacionRemateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidaOperacion", Storage:="_ModalidaOperacion", DbType:="Char(1)")>  _
		Public Property ModalidaOperacion() As String
			Get
				Return Me._ModalidaOperacion
			End Get
			Set
				If (String.Equals(Me._ModalidaOperacion, value) = false) Then
					Me.OnModalidaOperacionChanging(value)
					Me.SendPropertyChanging
					Me._ModalidaOperacion = value
					Me.SendPropertyChanged("ModalidaOperacion")
					Me.OnModalidaOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorPrecio", Storage:="_IndicadorPrecio", DbType:="Char(1)")>  _
		Public Property IndicadorPrecio() As String
			Get
				Return Me._IndicadorPrecio
			End Get
			Set
				If (String.Equals(Me._IndicadorPrecio, value) = false) Then
					Me.OnIndicadorPrecioChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorPrecio = value
					Me.SendPropertyChanged("IndicadorPrecio")
					Me.OnIndicadorPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPeriodoExdividendo", Storage:="_PeriodoExdividendo", DbType:="Char(1)")>  _
		Public Property PeriodoExdividendo() As String
			Get
				Return Me._PeriodoExdividendo
			End Get
			Set
				If (String.Equals(Me._PeriodoExdividendo, value) = false) Then
					Me.OnPeriodoExdividendoChanging(value)
					Me.SendPropertyChanging
					Me._PeriodoExdividendo = value
					Me.SendPropertyChanged("PeriodoExdividendo")
					Me.OnPeriodoExdividendoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPlazoOperacionRepo", Storage:="_PlazoOperacionRepo", DbType:="Int", CanBeNull:=true)>  _
		Public Property PlazoOperacionRepo() As Integer
			Get
				Return Me._PlazoOperacionRepo
			End Get
			Set
				If (Object.Equals(Me._PlazoOperacionRepo, value) = false) Then
					Me.OnPlazoOperacionRepoChanging(value)
					Me.SendPropertyChanging
					Me._PlazoOperacionRepo = value
					Me.SendPropertyChanged("PlazoOperacionRepo")
					Me.OnPlazoOperacionRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorCaptacionRepo", Storage:="_ValorCaptacionRepo", DbType:="Float")>  _
		Public Property ValorCaptacionRepo() As System.Nullable(Of Double)
			Get
				Return Me._ValorCaptacionRepo
			End Get
			Set
				If (Me._ValorCaptacionRepo.Equals(value) = false) Then
					Me.OnValorCaptacionRepoChanging(value)
					Me.SendPropertyChanging
					Me._ValorCaptacionRepo = value
					Me.SendPropertyChanged("ValorCaptacionRepo")
					Me.OnValorCaptacionRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVolumenCompraRepo", Storage:="_VolumenCompraRepo", DbType:="Float")>  _
		Public Property VolumenCompraRepo() As System.Nullable(Of Double)
			Get
				Return Me._VolumenCompraRepo
			End Get
			Set
				If (Me._VolumenCompraRepo.Equals(value) = false) Then
					Me.OnVolumenCompraRepoChanging(value)
					Me.SendPropertyChanging
					Me._VolumenCompraRepo = value
					Me.SendPropertyChanged("VolumenCompraRepo")
					Me.OnVolumenCompraRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioNetoFraccion", Storage:="_PrecioNetoFraccion", DbType:="Float")>  _
		Public Property PrecioNetoFraccion() As System.Nullable(Of Double)
			Get
				Return Me._PrecioNetoFraccion
			End Get
			Set
				If (Me._PrecioNetoFraccion.Equals(value) = false) Then
					Me.OnPrecioNetoFraccionChanging(value)
					Me.SendPropertyChanging
					Me._PrecioNetoFraccion = value
					Me.SendPropertyChanged("PrecioNetoFraccion")
					Me.OnPrecioNetoFraccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVolumenNetoFraccion", Storage:="_VolumenNetoFraccion", DbType:="Float")>  _
		Public Property VolumenNetoFraccion() As System.Nullable(Of Double)
			Get
				Return Me._VolumenNetoFraccion
			End Get
			Set
				If (Me._VolumenNetoFraccion.Equals(value) = false) Then
					Me.OnVolumenNetoFraccionChanging(value)
					Me.SendPropertyChanging
					Me._VolumenNetoFraccion = value
					Me.SendPropertyChanged("VolumenNetoFraccion")
					Me.OnVolumenNetoFraccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoContactoComercial", Storage:="_CodigoContactoComercial", DbType:="Varchar(10)")>  _
		Public Property CodigoContactoComercial() As String
			Get
				Return Me._CodigoContactoComercial
			End Get
			Set
				If (String.Equals(Me._CodigoContactoComercial, value) = false) Then
					Me.OnCodigoContactoComercialChanging(value)
					Me.SendPropertyChanging
					Me._CodigoContactoComercial = value
					Me.SendPropertyChanged("CodigoContactoComercial")
					Me.OnCodigoContactoComercialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroFraccionOperacion", Storage:="_NroFraccionOperacion", DbType:="Int", CanBeNull:=true)>  _
		Public Property NroFraccionOperacion() As Integer
			Get
				Return Me._NroFraccionOperacion
			End Get
			Set
				If (Object.Equals(Me._NroFraccionOperacion, value) = false) Then
					Me.OnNroFraccionOperacionChanging(value)
					Me.SendPropertyChanging
					Me._NroFraccionOperacion = value
					Me.SendPropertyChanged("NroFraccionOperacion")
					Me.OnNroFraccionOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionPatrimonio1", Storage:="_IdentificacionPatrimonio1", DbType:="Varchar(3)")>  _
		Public Property IdentificacionPatrimonio1() As String
			Get
				Return Me._IdentificacionPatrimonio1
			End Get
			Set
				If (String.Equals(Me._IdentificacionPatrimonio1, value) = false) Then
					Me.OnIdentificacionPatrimonio1Changing(value)
					Me.SendPropertyChanging
					Me._IdentificacionPatrimonio1 = value
					Me.SendPropertyChanged("IdentificacionPatrimonio1")
					Me.OnIdentificacionPatrimonio1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoidentificacionCliente2", Storage:="_TipoidentificacionCliente2", DbType:="Char(1)")>  _
		Public Property TipoidentificacionCliente2() As String
			Get
				Return Me._TipoidentificacionCliente2
			End Get
			Set
				If (String.Equals(Me._TipoidentificacionCliente2, value) = false) Then
					Me.OnTipoidentificacionCliente2Changing(value)
					Me.SendPropertyChanging
					Me._TipoidentificacionCliente2 = value
					Me.SendPropertyChanged("TipoidentificacionCliente2")
					Me.OnTipoidentificacionCliente2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitCliente2", Storage:="_NitCliente2", DbType:="Varchar(12)")>  _
		Public Property NitCliente2() As String
			Get
				Return Me._NitCliente2
			End Get
			Set
				If (String.Equals(Me._NitCliente2, value) = false) Then
					Me.OnNitCliente2Changing(value)
					Me.SendPropertyChanging
					Me._NitCliente2 = value
					Me.SendPropertyChanged("NitCliente2")
					Me.OnNitCliente2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionPatrimonio2", Storage:="_IdentificacionPatrimonio2", DbType:="Varchar(3)")>  _
		Public Property IdentificacionPatrimonio2() As String
			Get
				Return Me._IdentificacionPatrimonio2
			End Get
			Set
				If (String.Equals(Me._IdentificacionPatrimonio2, value) = false) Then
					Me.OnIdentificacionPatrimonio2Changing(value)
					Me.SendPropertyChanging
					Me._IdentificacionPatrimonio2 = value
					Me.SendPropertyChanged("IdentificacionPatrimonio2")
					Me.OnIdentificacionPatrimonio2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacionCliente3", Storage:="_TipoIdentificacionCliente3", DbType:="Char(1)")>  _
		Public Property TipoIdentificacionCliente3() As String
			Get
				Return Me._TipoIdentificacionCliente3
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionCliente3, value) = false) Then
					Me.OnTipoIdentificacionCliente3Changing(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionCliente3 = value
					Me.SendPropertyChanged("TipoIdentificacionCliente3")
					Me.OnTipoIdentificacionCliente3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitCliente3", Storage:="_NitCliente3", DbType:="Varchar(12)")>  _
		Public Property NitCliente3() As String
			Get
				Return Me._NitCliente3
			End Get
			Set
				If (String.Equals(Me._NitCliente3, value) = false) Then
					Me.OnNitCliente3Changing(value)
					Me.SendPropertyChanging
					Me._NitCliente3 = value
					Me.SendPropertyChanged("NitCliente3")
					Me.OnNitCliente3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionPatrimonio3", Storage:="_IdentificacionPatrimonio3", DbType:="Varchar(3)")>  _
		Public Property IdentificacionPatrimonio3() As String
			Get
				Return Me._IdentificacionPatrimonio3
			End Get
			Set
				If (String.Equals(Me._IdentificacionPatrimonio3, value) = false) Then
					Me.OnIdentificacionPatrimonio3Changing(value)
					Me.SendPropertyChanging
					Me._IdentificacionPatrimonio3 = value
					Me.SendPropertyChanged("IdentificacionPatrimonio3")
					Me.OnIdentificacionPatrimonio3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorOperacion", Storage:="_IndicadorOperacion", DbType:="Char(1)")>  _
		Public Property IndicadorOperacion() As String
			Get
				Return Me._IndicadorOperacion
			End Get
			Set
				If (String.Equals(Me._IndicadorOperacion, value) = false) Then
					Me.OnIndicadorOperacionChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorOperacion = value
					Me.SendPropertyChanged("IndicadorOperacion")
					Me.OnIndicadorOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblBaseRetencion", Storage:="_BaseRetencion", DbType:="Float")>  _
		Public Property BaseRetencion() As System.Nullable(Of Double)
			Get
				Return Me._BaseRetencion
			End Get
			Set
				If (Me._BaseRetencion.Equals(value) = false) Then
					Me.OnBaseRetencionChanging(value)
					Me.SendPropertyChanging
					Me._BaseRetencion = value
					Me.SendPropertyChanged("BaseRetencion")
					Me.OnBaseRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcRetencion", Storage:="_PorcRetencion", DbType:="Float")>  _
		Public Property PorcRetencion() As System.Nullable(Of Double)
			Get
				Return Me._PorcRetencion
			End Get
			Set
				If (Me._PorcRetencion.Equals(value) = false) Then
					Me.OnPorcRetencionChanging(value)
					Me.SendPropertyChanging
					Me._PorcRetencion = value
					Me.SendPropertyChanged("PorcRetencion")
					Me.OnPorcRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblBaseRetencionTranslado", Storage:="_BaseRetencionTranslado", DbType:="Float")>  _
		Public Property BaseRetencionTranslado() As System.Nullable(Of Double)
			Get
				Return Me._BaseRetencionTranslado
			End Get
			Set
				If (Me._BaseRetencionTranslado.Equals(value) = false) Then
					Me.OnBaseRetencionTransladoChanging(value)
					Me.SendPropertyChanging
					Me._BaseRetencionTranslado = value
					Me.SendPropertyChanged("BaseRetencionTranslado")
					Me.OnBaseRetencionTransladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcRetencionTranslado", Storage:="_PorcRetencionTranslado", DbType:="Float")>  _
		Public Property PorcRetencionTranslado() As System.Nullable(Of Double)
			Get
				Return Me._PorcRetencionTranslado
			End Get
			Set
				If (Me._PorcRetencionTranslado.Equals(value) = false) Then
					Me.OnPorcRetencionTransladoChanging(value)
					Me.SendPropertyChanging
					Me._PorcRetencionTranslado = value
					Me.SendPropertyChanged("PorcRetencionTranslado")
					Me.OnPorcRetencionTransladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcIvaComision", Storage:="_PorcIvaComision", DbType:="Float")>  _
		Public Property PorcIvaComision() As System.Nullable(Of Double)
			Get
				Return Me._PorcIvaComision
			End Get
			Set
				If (Me._PorcIvaComision.Equals(value) = false) Then
					Me.OnPorcIvaComisionChanging(value)
					Me.SendPropertyChanging
					Me._PorcIvaComision = value
					Me.SendPropertyChanged("PorcIvaComision")
					Me.OnPorcIvaComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorAcciones", Storage:="_IndicadorAcciones", DbType:="Char(1)")>  _
		Public Property IndicadorAcciones() As String
			Get
				Return Me._IndicadorAcciones
			End Get
			Set
				If (String.Equals(Me._IndicadorAcciones, value) = false) Then
					Me.OnIndicadorAccionesChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorAcciones = value
					Me.SendPropertyChanged("IndicadorAcciones")
					Me.OnIndicadorAccionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOperacionNegociada", Storage:="_OperacionNegociada", DbType:="Char(1)")>  _
		Public Property OperacionNegociada() As String
			Get
				Return Me._OperacionNegociada
			End Get
			Set
				If (String.Equals(Me._OperacionNegociada, value) = false) Then
					Me.OnOperacionNegociadaChanging(value)
					Me.SendPropertyChanging
					Me._OperacionNegociada = value
					Me.SendPropertyChanged("OperacionNegociada")
					Me.OnOperacionNegociadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaConstancia", Storage:="_FechaConstancia", DbType:="Datetime")>  _
		Public Property FechaConstancia() As System.Nullable(Of Date)
			Get
				Return Me._FechaConstancia
			End Get
			Set
				If (Me._FechaConstancia.Equals(value) = false) Then
					Me.OnFechaConstanciaChanging(value)
					Me.SendPropertyChanging
					Me._FechaConstancia = value
					Me.SendPropertyChanged("FechaConstancia")
					Me.OnFechaConstanciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorConstancia", Storage:="_ValorConstancia", DbType:="Float")>  _
		Public Property ValorConstancia() As System.Nullable(Of Double)
			Get
				Return Me._ValorConstancia
			End Get
			Set
				If (Me._ValorConstancia.Equals(value) = false) Then
					Me.OnValorConstanciaChanging(value)
					Me.SendPropertyChanging
					Me._ValorConstancia = value
					Me.SendPropertyChanged("ValorConstancia")
					Me.OnValorConstanciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strGeneraConstancia", Storage:="_GeneraConstancia", DbType:="Char(1)")>  _
		Public Property GeneraConstancia() As String
			Get
				Return Me._GeneraConstancia
			End Get
			Set
				If (String.Equals(Me._GeneraConstancia, value) = false) Then
					Me.OnGeneraConstanciaChanging(value)
					Me.SendPropertyChanging
					Me._GeneraConstancia = value
					Me.SendPropertyChanged("GeneraConstancia")
					Me.OnGeneraConstanciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCargado", Storage:="_Cargado", DbType:="Bit NOT NULL")>  _
		Public Property Cargado() As Boolean
			Get
				Return Me._Cargado
			End Get
			Set
				If ((Me._Cargado = value)  _
							= false) Then
					Me.OnCargadoChanging(value)
					Me.SendPropertyChanging
					Me._Cargado = value
					Me.SendPropertyChanged("Cargado")
					Me.OnCargadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimientoTitulo", Storage:="_CumplimientoTitulo", DbType:="Datetime")>  _
		Public Property CumplimientoTitulo() As System.Nullable(Of Date)
			Get
				Return Me._CumplimientoTitulo
			End Get
			Set
				If (Me._CumplimientoTitulo.Equals(value) = false) Then
					Me.OnCumplimientoTituloChanging(value)
					Me.SendPropertyChanging
					Me._CumplimientoTitulo = value
					Me.SendPropertyChanged("CumplimientoTitulo")
					Me.OnCumplimientoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLote", Storage:="_NroLote", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property NroLote() As Integer
			Get
				Return Me._NroLote
			End Get
			Set
				If (Object.Equals(Me._NroLote, value) = false) Then
					Me.OnNroLoteChanging(value)
					Me.SendPropertyChanging
					Me._NroLote = value
					Me.SendPropertyChanged("NroLote")
					Me.OnNroLoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorEntregaContraPago", Storage:="_ValorEntregaContraPago", DbType:="Float")>  _
		Public Property ValorEntregaContraPago() As System.Nullable(Of Double)
			Get
				Return Me._ValorEntregaContraPago
			End Get
			Set
				If (Me._ValorEntregaContraPago.Equals(value) = false) Then
					Me.OnValorEntregaContraPagoChanging(value)
					Me.SendPropertyChanging
					Me._ValorEntregaContraPago = value
					Me.SendPropertyChanged("ValorEntregaContraPago")
					Me.OnValorEntregaContraPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAquienSeEnviaRetencion", Storage:="_AquienSeEnviaRetencion", DbType:="Char(1)")>  _
		Public Property AquienSeEnviaRetencion() As String
			Get
				Return Me._AquienSeEnviaRetencion
			End Get
			Set
				If (String.Equals(Me._AquienSeEnviaRetencion, value) = false) Then
					Me.OnAquienSeEnviaRetencionChanging(value)
					Me.SendPropertyChanging
					Me._AquienSeEnviaRetencion = value
					Me.SendPropertyChanged("AquienSeEnviaRetencion")
					Me.OnAquienSeEnviaRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDBaseDias", Storage:="_IDBaseDias", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
		Public Property IDBaseDias() As String
			Get
				Return Me._IDBaseDias
			End Get
			Set
				If (String.Equals(Me._IDBaseDias, value) = false) Then
					Me.OnIDBaseDiasChanging(value)
					Me.SendPropertyChanging
					Me._IDBaseDias = value
					Me.SendPropertyChanged("IDBaseDias")
					Me.OnIDBaseDiasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoDeOferta", Storage:="_TipoDeOferta", DbType:="Char(1)")>  _
		Public Property TipoDeOferta() As String
			Get
				Return Me._TipoDeOferta
			End Get
			Set
				If (String.Equals(Me._TipoDeOferta, value) = false) Then
					Me.OnTipoDeOfertaChanging(value)
					Me.SendPropertyChanging
					Me._TipoDeOferta = value
					Me.SendPropertyChanged("TipoDeOferta")
					Me.OnTipoDeOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLoteENC", Storage:="_NroLoteENC", DbType:="Int", CanBeNull:=true)>  _
		Public Property NroLoteENC() As Integer
			Get
				Return Me._NroLoteENC
			End Get
			Set
				If (Object.Equals(Me._NroLoteENC, value) = false) Then
					Me.OnNroLoteENCChanging(value)
					Me.SendPropertyChanging
					Me._NroLoteENC = value
					Me.SendPropertyChanged("NroLoteENC")
					Me.OnNroLoteENCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmContabilidadENC", Storage:="_ContabilidadENC", DbType:="Datetime")>  _
		Public Property ContabilidadENC() As System.Nullable(Of Date)
			Get
				Return Me._ContabilidadENC
			End Get
			Set
				If (Me._ContabilidadENC.Equals(value) = false) Then
					Me.OnContabilidadENCChanging(value)
					Me.SendPropertyChanging
					Me._ContabilidadENC = value
					Me.SendPropertyChanged("ContabilidadENC")
					Me.OnContabilidadENCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidaciones", Storage:="_IDLiquidaciones", AutoSync:=AutoSync.OnInsert, DbType:="Int", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDLiquidaciones() As Integer
			Get
				Return Me._IDLiquidaciones
			End Get
			Set
				If (Object.Equals(Me._IDLiquidaciones, value) = false) Then
					Me.OnIDLiquidacionesChanging(value)
					Me.SendPropertyChanging
					Me._IDLiquidaciones = value
					Me.SendPropertyChanged("IDLiquidaciones")
					Me.OnIDLiquidacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoIntermediario", Storage:="_CodigoIntermediario", DbType:="Varchar(10)")>  _
		Public Property CodigoIntermediario() As String
			Get
				Return Me._CodigoIntermediario
			End Get
			Set
				If (String.Equals(Me._CodigoIntermediario, value) = false) Then
					Me.OnCodigoIntermediarioChanging(value)
					Me.SendPropertyChanging
					Me._CodigoIntermediario = value
					Me.SendPropertyChanged("CodigoIntermediario")
					Me.OnCodigoIntermediarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorExtemporaneo", Storage:="_ValorExtemporaneo", DbType:="Float")>  _
		Public Property ValorExtemporaneo() As System.Nullable(Of Double)
			Get
				Return Me._ValorExtemporaneo
			End Get
			Set
				If (Me._ValorExtemporaneo.Equals(value) = false) Then
					Me.OnValorExtemporaneoChanging(value)
					Me.SendPropertyChanging
					Me._ValorExtemporaneo = value
					Me.SendPropertyChanged("ValorExtemporaneo")
					Me.OnValorExtemporaneoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPosicionExtemporaneo", Storage:="_PosicionExtemporaneo", DbType:="Varchar(1)")>  _
		Public Property PosicionExtemporaneo() As String
			Get
				Return Me._PosicionExtemporaneo
			End Get
			Set
				If (String.Equals(Me._PosicionExtemporaneo, value) = false) Then
					Me.OnPosicionExtemporaneoChanging(value)
					Me.SendPropertyChanging
					Me._PosicionExtemporaneo = value
					Me.SendPropertyChanged("PosicionExtemporaneo")
					Me.OnPosicionExtemporaneoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Liquidacione_ReceptoresOrdene", Storage:="_ReceptoresOrdenes", ThisKey:="IDOrden", OtherKey:="IDOrden")>  _
		Public Property ReceptoresOrdenes() As EntitySet(Of ReceptoresOrdene)
			Get
				Return Me._ReceptoresOrdenes
			End Get
			Set
				Me._ReceptoresOrdenes.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_ReceptoresOrdenes(ByVal entity As ReceptoresOrdene)
			Me.SendPropertyChanging
			entity.Liquidacione = Me
		End Sub
		
		Private Sub detach_ReceptoresOrdenes(ByVal entity As ReceptoresOrdene)
			Me.SendPropertyChanging
			entity.Liquidacione = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblFacturas")>  _
	Partial Public Class Factura
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _Prefijo As String
		
		Private _Numero As Integer
		
		Private _Prefijo_Numero As String
		
		Private _Comitente As String
		
		Private _Nombre As String
		
		Private _Fecha_Documento As Date
		
		Private _Estado As String
		
		Private _Fecha_Estado As Date
		
		Private _Impresiones As Integer
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDCodigoResolucion As Integer
		
		Private _Observaciones As String
		
		Private _IDfacturas As Integer
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnPrefijo_NumeroChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijo_NumeroChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnFecha_DocumentoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_DocumentoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFecha_EstadoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_EstadoChanged()
    End Sub
    Partial Private Sub OnImpresionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnImpresionesChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanged()
    End Sub
    Partial Private Sub OnObservacionesChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionesChanged()
    End Sub
    Partial Private Sub OnIDfacturasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDfacturasChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5) NOT NULL", CanBeNull:=false)>  _
		Public Property Prefijo() As String
			Get
				Return Me._Prefijo
			End Get
			Set
				If (String.Equals(Me._Prefijo, value) = false) Then
					Me.OnPrefijoChanging(value)
					Me.SendPropertyChanging
					Me._Prefijo = value
					Me.SendPropertyChanged("Prefijo")
					Me.OnPrefijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Numero", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Numero() As Integer
			Get
				Return Me._Numero
			End Get
			Set
				If (Object.Equals(Me._Numero, value) = false) Then
					Me.OnNumeroChanging(value)
					Me.SendPropertyChanging
					Me._Numero = value
					Me.SendPropertyChanged("Numero")
					Me.OnNumeroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefijo_Numero", DbType:="Varchar(30) NOT NULL")>  _
		Public Property Prefijo_Numero() As String
			Get
				Return Me._Prefijo_Numero
			End Get
			Set
				If (String.Equals(Me._Prefijo_Numero, value) = false) Then
					Me.OnPrefijo_NumeroChanging(value)
					Me.SendPropertyChanging
					Me._Prefijo_Numero = value
					Me.SendPropertyChanged("Prefijo_Numero")
					Me.OnPrefijo_NumeroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_Comitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property Comitente() As String
			Get
				Return Me._Comitente
			End Get
			Set
				If (String.Equals(Me._Comitente, value) = false) Then
					Me.OnComitenteChanging(value)
					Me.SendPropertyChanging
					Me._Comitente = value
					Me.SendPropertyChanged("Comitente")
					Me.OnComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(250) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmDocumento", Storage:="_Fecha_Documento", DbType:="Datetime NOT NULL")>  _
		Public Property Fecha_Documento() As Date
			Get
				Return Me._Fecha_Documento
			End Get
			Set
				If ((Me._Fecha_Documento = value)  _
							= false) Then
					Me.OnFecha_DocumentoChanging(value)
					Me.SendPropertyChanging
					Me._Fecha_Documento = value
					Me.SendPropertyChanged("Fecha_Documento")
					Me.OnFecha_DocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Fecha_Estado", DbType:="Datetime NOT NULL")>  _
		Public Property Fecha_Estado() As Date
			Get
				Return Me._Fecha_Estado
			End Get
			Set
				If ((Me._Fecha_Estado = value)  _
							= false) Then
					Me.OnFecha_EstadoChanging(value)
					Me.SendPropertyChanging
					Me._Fecha_Estado = value
					Me.SendPropertyChanged("Fecha_Estado")
					Me.OnFecha_EstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Impresiones() As Integer
			Get
				Return Me._Impresiones
			End Get
			Set
				If (Object.Equals(Me._Impresiones, value) = false) Then
					Me.OnImpresionesChanging(value)
					Me.SendPropertyChanging
					Me._Impresiones = value
					Me.SendPropertyChanged("Impresiones")
					Me.OnImpresionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCodigoResolucion", Storage:="_IDCodigoResolucion", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCodigoResolucion() As Integer
			Get
				Return Me._IDCodigoResolucion
			End Get
			Set
				If (Object.Equals(Me._IDCodigoResolucion, value) = false) Then
					Me.OnIDCodigoResolucionChanging(value)
					Me.SendPropertyChanging
					Me._IDCodigoResolucion = value
					Me.SendPropertyChanged("IDCodigoResolucion")
					Me.OnIDCodigoResolucionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObservaciones", Storage:="_Observaciones", DbType:="Varchar(200) NOT NULL")>  _
		Public Property Observaciones() As String
			Get
				Return Me._Observaciones
			End Get
			Set
				If (String.Equals(Me._Observaciones, value) = false) Then
					Me.OnObservacionesChanging(value)
					Me.SendPropertyChanging
					Me._Observaciones = value
					Me.SendPropertyChanged("Observaciones")
					Me.OnObservacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDfacturas", Storage:="_IDfacturas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDfacturas() As Integer
			Get
				Return Me._IDfacturas
			End Get
			Set
				If (Object.Equals(Me._IDfacturas, value) = false) Then
					Me.OnIDfacturasChanging(value)
					Me.SendPropertyChanging
					Me._IDfacturas = value
					Me.SendPropertyChanged("IDfacturas")
					Me.OnIDfacturasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TmpFacturas_EnvioCadena")>  _
	Partial Public Class TmpFacturas_EnvioCadena
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _lngIDcadenaFacturas As Integer
		
		Private _logExitoso As System.Nullable(Of Boolean)
		
		Private _strMensaje As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDcadenaFacturasChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDcadenaFacturasChanged()
    End Sub
    Partial Private Sub OnlogExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogExitosoChanged()
    End Sub
    Partial Private Sub OnstrMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnstrMensajeChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDcadenaFacturas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property lngIDcadenaFacturas() As Integer
			Get
				Return Me._lngIDcadenaFacturas
			End Get
			Set
				If (Object.Equals(Me._lngIDcadenaFacturas, value) = false) Then
					Me.OnlngIDcadenaFacturasChanging(value)
					Me.SendPropertyChanging
					Me._lngIDcadenaFacturas = value
					Me.SendPropertyChanged("lngIDcadenaFacturas")
					Me.OnlngIDcadenaFacturasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExitoso", DbType:="Bit NULL")>  _
		Public Property logExitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._logExitoso
			End Get
			Set
				If (Me._logExitoso.Equals(value) = false) Then
					Me.OnlogExitosoChanging(value)
					Me.SendPropertyChanging
					Me._logExitoso = value
					Me.SendPropertyChanged("logExitoso")
					Me.OnlogExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMensaje", DbType:="Varchar(1000)")>  _
		Public Property strMensaje() As String
			Get
				Return Me._strMensaje
			End Get
			Set
				If (String.Equals(Me._strMensaje, value) = false) Then
					Me.OnstrMensajeChanging(value)
					Me.SendPropertyChanging
					Me._strMensaje = value
					Me.SendPropertyChanged("strMensaje")
					Me.OnstrMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbltmpPlanoPapeletas")>  _
	Partial Public Class tbltmpPlanoPapeletas
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _lngIDcadenaPapeletas As Integer
		
		Private _logExitoso As System.Nullable(Of Boolean)
		
		Private _strMensaje As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDcadenaPapeletasChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDcadenaPapeletasChanged()
    End Sub
    Partial Private Sub OnlogExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogExitosoChanged()
    End Sub
    Partial Private Sub OnstrMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnstrMensajeChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDcadenaPapeletas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property lngIDcadenaPapeletas() As Integer
			Get
				Return Me._lngIDcadenaPapeletas
			End Get
			Set
				If (Object.Equals(Me._lngIDcadenaPapeletas, value) = false) Then
					Me.OnlngIDcadenaPapeletasChanging(value)
					Me.SendPropertyChanging
					Me._lngIDcadenaPapeletas = value
					Me.SendPropertyChanged("lngIDcadenaPapeletas")
					Me.OnlngIDcadenaPapeletasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExitoso", DbType:="Bit NULL")>  _
		Public Property logExitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._logExitoso
			End Get
			Set
				If (Me._logExitoso.Equals(value) = false) Then
					Me.OnlogExitosoChanging(value)
					Me.SendPropertyChanging
					Me._logExitoso = value
					Me.SendPropertyChanged("logExitoso")
					Me.OnlogExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMensaje", DbType:="Varchar(1000)")>  _
		Public Property strMensaje() As String
			Get
				Return Me._strMensaje
			End Get
			Set
				If (String.Equals(Me._strMensaje, value) = false) Then
					Me.OnstrMensajeChanging(value)
					Me.SendPropertyChanging
					Me._strMensaje = value
					Me.SendPropertyChanged("strMensaje")
					Me.OnstrMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPlanoPapeletasBolsa")>  _
	Partial Public Class tblPlanoPapeletasBolsa
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _lngIDPapeleta As Integer
		
		Private _Cliente As String
		
		Private _Clase As String
		
		Private _Tipo As String
		
		Private _Parcial As Integer
		
		Private _Fecha As String
		
		Private _NroLiq As Integer
		
		Private _ClienteAPT As System.Nullable(Of Boolean)
		
		Private _intmarcaAPT As Integer
		
		Private _Seleccionado As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDPapeletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDPapeletaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As String)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As String)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnNroLiqChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLiqChanged()
    End Sub
    Partial Private Sub OnClienteAPTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClienteAPTChanged()
    End Sub
    Partial Private Sub OnintmarcaAPTChanging(value As Integer)
    End Sub
    Partial Private Sub OnintmarcaAPTChanged()
    End Sub
    Partial Private Sub OnSeleccionadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSeleccionadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDPapeleta", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property lngIDPapeleta() As Integer
			Get
				Return Me._lngIDPapeleta
			End Get
			Set
				If (Object.Equals(Me._lngIDPapeleta, value) = false) Then
					Me.OnlngIDPapeletaChanging(value)
					Me.SendPropertyChanging
					Me._lngIDPapeleta = value
					Me.SendPropertyChanged("lngIDPapeleta")
					Me.OnlngIDPapeletaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property Cliente() As String
			Get
				Return Me._Cliente
			End Get
			Set
				If (String.Equals(Me._Cliente, value) = false) Then
					Me.OnClienteChanging(value)
					Me.SendPropertyChanging
					Me._Cliente = value
					Me.SendPropertyChanged("Cliente")
					Me.OnClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clase", DbType:="Varchar(1) NULL")>  _
		Public Property Clase() As String
			Get
				Return Me._Clase
			End Get
			Set
				If (String.Equals(Me._Clase, value) = false) Then
					Me.OnClaseChanging(value)
					Me.SendPropertyChanging
					Me._Clase = value
					Me.SendPropertyChanged("Clase")
					Me.OnClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Varchar(1) NULL")>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Parcial", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property Parcial() As Integer
			Get
				Return Me._Parcial
			End Get
			Set
				If (Object.Equals(Me._Parcial, value) = false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Varchar(15) NULL")>  _
		Public Property Fecha() As String
			Get
				Return Me._Fecha
			End Get
			Set
				If (String.Equals(Me._Fecha, value) = false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NroLiq", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property NroLiq() As Integer
			Get
				Return Me._NroLiq
			End Get
			Set
				If (Object.Equals(Me._NroLiq, value) = false) Then
					Me.OnNroLiqChanging(value)
					Me.SendPropertyChanging
					Me._NroLiq = value
					Me.SendPropertyChanged("NroLiq")
					Me.OnNroLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClienteAPT", DbType:="Bit NULL")>  _
		Public Property ClienteAPT() As System.Nullable(Of Boolean)
			Get
				Return Me._ClienteAPT
			End Get
			Set
				If (Me._ClienteAPT.Equals(value) = false) Then
					Me.OnClienteAPTChanging(value)
					Me.SendPropertyChanging
					Me._ClienteAPT = value
					Me.SendPropertyChanged("ClienteAPT")
					Me.OnClienteAPTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intmarcaAPT", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property intmarcaAPT() As Integer
			Get
				Return Me._intmarcaAPT
			End Get
			Set
				If (Object.Equals(Me._intmarcaAPT, value) = false) Then
					Me.OnintmarcaAPTChanging(value)
					Me.SendPropertyChanging
					Me._intmarcaAPT = value
					Me.SendPropertyChanged("intmarcaAPT")
					Me.OnintmarcaAPTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seleccionado", DbType:="Bit NULL")>  _
		Public Property Seleccionado() As System.Nullable(Of Boolean)
			Get
				Return Me._Seleccionado
			End Get
			Set
				If (Me._Seleccionado.Equals(value) = false) Then
					Me.OnSeleccionadoChanging(value)
					Me.SendPropertyChanging
					Me._Seleccionado = value
					Me.SendPropertyChanged("Seleccionado")
					Me.OnSeleccionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConfiguracionFacturas")>  _
	Partial Public Class ConfiguracionFacturas
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _UsarFechade As System.Nullable(Of Boolean)
		
		Private _FechaLiquidacion As System.Nullable(Of Boolean)
		
		Private _FechaCumplimiento As System.Nullable(Of Boolean)
		
		Private _TipoOperacion As System.Nullable(Of Boolean)
		
		Private _TipoOperacionCompra As System.Nullable(Of Boolean)
		
		Private _TipoOperacionVenta As System.Nullable(Of Boolean)
		
		Private _ClaseOperacion As System.Nullable(Of Boolean)
		
		Private _ClaseOperacionAcciones As System.Nullable(Of Boolean)
		
		Private _ClaseOperacionRentaFija As System.Nullable(Of Boolean)
		
		Private _ClaseOperacionRentaSimultaneas As System.Nullable(Of Boolean)
		
		Private _ClaseOperacionRentaRepos As System.Nullable(Of Boolean)
		
		Private _UsarFechade_ORD As System.Nullable(Of Boolean)
		
		Private _FechaLiquidacion_ORD As System.Nullable(Of Boolean)
		
		Private _FechaCumplimiento_ORD As System.Nullable(Of Boolean)
		
		Private _TipoOperacion_ORD As System.Nullable(Of Boolean)
		
		Private _VentaOrd As System.Nullable(Of Boolean)
		
		Private _CompraOrd As System.Nullable(Of Boolean)
		
		Private _ClaseOperacion_ORD As System.Nullable(Of Boolean)
		
		Private _AccionesORD As System.Nullable(Of Boolean)
		
		Private _RentafijaORD As System.Nullable(Of Boolean)
		
		Private _SimultaneasORD As System.Nullable(Of Boolean)
		
		Private _reposORD As System.Nullable(Of Boolean)
		
		Private _intFechaLiquidacion As Integer
		
		Private _intFechaCumplimiento As Integer
		
		Private _intTipoOperacion As Integer
		
		Private _TipoOperacionC As Integer
		
		Private _intClaseOperacion As Integer
		
		Private _NroOrdenRF As Integer
		
		Private _NroOrdenSimultaneas As Integer
		
		Private _NroOrdenrepos As Integer
		
		Private _InfoSesion As String
		
		Private _IDConfiguracionfacturas As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUsarFechadeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsarFechadeChanged()
    End Sub
    Partial Private Sub OnFechaLiquidacionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFechaLiquidacionChanged()
    End Sub
    Partial Private Sub OnFechaCumplimientoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFechaCumplimientoChanged()
    End Sub
    Partial Private Sub OnTipoOperacionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoOperacionChanged()
    End Sub
    Partial Private Sub OnTipoOperacionCompraChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoOperacionCompraChanged()
    End Sub
    Partial Private Sub OnTipoOperacionVentaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoOperacionVentaChanged()
    End Sub
    Partial Private Sub OnClaseOperacionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClaseOperacionChanged()
    End Sub
    Partial Private Sub OnClaseOperacionAccionesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClaseOperacionAccionesChanged()
    End Sub
    Partial Private Sub OnClaseOperacionRentaFijaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClaseOperacionRentaFijaChanged()
    End Sub
    Partial Private Sub OnClaseOperacionRentaSimultaneasChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClaseOperacionRentaSimultaneasChanged()
    End Sub
    Partial Private Sub OnClaseOperacionRentaReposChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClaseOperacionRentaReposChanged()
    End Sub
    Partial Private Sub OnUsarFechade_ORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsarFechade_ORDChanged()
    End Sub
    Partial Private Sub OnFechaLiquidacion_ORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFechaLiquidacion_ORDChanged()
    End Sub
    Partial Private Sub OnFechaCumplimiento_ORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFechaCumplimiento_ORDChanged()
    End Sub
    Partial Private Sub OnTipoOperacion_ORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoOperacion_ORDChanged()
    End Sub
    Partial Private Sub OnVentaOrdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnVentaOrdChanged()
    End Sub
    Partial Private Sub OnCompraOrdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCompraOrdChanged()
    End Sub
    Partial Private Sub OnClaseOperacion_ORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClaseOperacion_ORDChanged()
    End Sub
    Partial Private Sub OnAccionesORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAccionesORDChanged()
    End Sub
    Partial Private Sub OnRentafijaORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRentafijaORDChanged()
    End Sub
    Partial Private Sub OnSimultaneasORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSimultaneasORDChanged()
    End Sub
    Partial Private Sub OnreposORDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnreposORDChanged()
    End Sub
    Partial Private Sub OnintFechaLiquidacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintFechaLiquidacionChanged()
    End Sub
    Partial Private Sub OnintFechaCumplimientoChanging(value As Integer)
    End Sub
    Partial Private Sub OnintFechaCumplimientoChanged()
    End Sub
    Partial Private Sub OnintTipoOperacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintTipoOperacionChanged()
    End Sub
    Partial Private Sub OnTipoOperacionCChanging(value As Integer)
    End Sub
    Partial Private Sub OnTipoOperacionCChanged()
    End Sub
    Partial Private Sub OnintClaseOperacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintClaseOperacionChanged()
    End Sub
    Partial Private Sub OnNroOrdenRFChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroOrdenRFChanged()
    End Sub
    Partial Private Sub OnNroOrdenSimultaneasChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroOrdenSimultaneasChanged()
    End Sub
    Partial Private Sub OnNroOrdenreposChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroOrdenreposChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnIDConfiguracionfacturasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConfiguracionfacturasChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitUsarFechade", Storage:="_UsarFechade", DbType:="Bit NULL")>  _
		Public Property UsarFechade() As System.Nullable(Of Boolean)
			Get
				Return Me._UsarFechade
			End Get
			Set
				If (Me._UsarFechade.Equals(value) = false) Then
					Me.OnUsarFechadeChanging(value)
					Me.SendPropertyChanging
					Me._UsarFechade = value
					Me.SendPropertyChanged("UsarFechade")
					Me.OnUsarFechadeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaLiquidacion", Storage:="_FechaLiquidacion", DbType:="Bit NULL")>  _
		Public Property FechaLiquidacion() As System.Nullable(Of Boolean)
			Get
				Return Me._FechaLiquidacion
			End Get
			Set
				If (Me._FechaLiquidacion.Equals(value) = false) Then
					Me.OnFechaLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._FechaLiquidacion = value
					Me.SendPropertyChanged("FechaLiquidacion")
					Me.OnFechaLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaCumplimiento", Storage:="_FechaCumplimiento", DbType:="Bit NULL")>  _
		Public Property FechaCumplimiento() As System.Nullable(Of Boolean)
			Get
				Return Me._FechaCumplimiento
			End Get
			Set
				If (Me._FechaCumplimiento.Equals(value) = false) Then
					Me.OnFechaCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._FechaCumplimiento = value
					Me.SendPropertyChanged("FechaCumplimiento")
					Me.OnFechaCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitTipoOperacion", Storage:="_TipoOperacion", DbType:="Bit NULL")>  _
		Public Property TipoOperacion() As System.Nullable(Of Boolean)
			Get
				Return Me._TipoOperacion
			End Get
			Set
				If (Me._TipoOperacion.Equals(value) = false) Then
					Me.OnTipoOperacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacion = value
					Me.SendPropertyChanged("TipoOperacion")
					Me.OnTipoOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitTipoOperacionCompra", Storage:="_TipoOperacionCompra", DbType:="Bit NULL")>  _
		Public Property TipoOperacionCompra() As System.Nullable(Of Boolean)
			Get
				Return Me._TipoOperacionCompra
			End Get
			Set
				If (Me._TipoOperacionCompra.Equals(value) = false) Then
					Me.OnTipoOperacionCompraChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacionCompra = value
					Me.SendPropertyChanged("TipoOperacionCompra")
					Me.OnTipoOperacionCompraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitTipoOperacionVenta", Storage:="_TipoOperacionVenta", DbType:="Bit NULL")>  _
		Public Property TipoOperacionVenta() As System.Nullable(Of Boolean)
			Get
				Return Me._TipoOperacionVenta
			End Get
			Set
				If (Me._TipoOperacionVenta.Equals(value) = false) Then
					Me.OnTipoOperacionVentaChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacionVenta = value
					Me.SendPropertyChanged("TipoOperacionVenta")
					Me.OnTipoOperacionVentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitClaseOperacion", Storage:="_ClaseOperacion", DbType:="Bit NULL")>  _
		Public Property ClaseOperacion() As System.Nullable(Of Boolean)
			Get
				Return Me._ClaseOperacion
			End Get
			Set
				If (Me._ClaseOperacion.Equals(value) = false) Then
					Me.OnClaseOperacionChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOperacion = value
					Me.SendPropertyChanged("ClaseOperacion")
					Me.OnClaseOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitClaseOperacionAcciones", Storage:="_ClaseOperacionAcciones", DbType:="Bit NULL")>  _
		Public Property ClaseOperacionAcciones() As System.Nullable(Of Boolean)
			Get
				Return Me._ClaseOperacionAcciones
			End Get
			Set
				If (Me._ClaseOperacionAcciones.Equals(value) = false) Then
					Me.OnClaseOperacionAccionesChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOperacionAcciones = value
					Me.SendPropertyChanged("ClaseOperacionAcciones")
					Me.OnClaseOperacionAccionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitClaseOperacionRentaFija", Storage:="_ClaseOperacionRentaFija", DbType:="Bit NULL")>  _
		Public Property ClaseOperacionRentaFija() As System.Nullable(Of Boolean)
			Get
				Return Me._ClaseOperacionRentaFija
			End Get
			Set
				If (Me._ClaseOperacionRentaFija.Equals(value) = false) Then
					Me.OnClaseOperacionRentaFijaChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOperacionRentaFija = value
					Me.SendPropertyChanged("ClaseOperacionRentaFija")
					Me.OnClaseOperacionRentaFijaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitClaseOperacionRentaSimultaneas", Storage:="_ClaseOperacionRentaSimultaneas", DbType:="Bit NULL")>  _
		Public Property ClaseOperacionRentaSimultaneas() As System.Nullable(Of Boolean)
			Get
				Return Me._ClaseOperacionRentaSimultaneas
			End Get
			Set
				If (Me._ClaseOperacionRentaSimultaneas.Equals(value) = false) Then
					Me.OnClaseOperacionRentaSimultaneasChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOperacionRentaSimultaneas = value
					Me.SendPropertyChanged("ClaseOperacionRentaSimultaneas")
					Me.OnClaseOperacionRentaSimultaneasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitClaseOperacionRentaRepos", Storage:="_ClaseOperacionRentaRepos", DbType:="Bit NULL")>  _
		Public Property ClaseOperacionRentaRepos() As System.Nullable(Of Boolean)
			Get
				Return Me._ClaseOperacionRentaRepos
			End Get
			Set
				If (Me._ClaseOperacionRentaRepos.Equals(value) = false) Then
					Me.OnClaseOperacionRentaReposChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOperacionRentaRepos = value
					Me.SendPropertyChanged("ClaseOperacionRentaRepos")
					Me.OnClaseOperacionRentaReposChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitUsarFechade_ORD", Storage:="_UsarFechade_ORD", DbType:="Bit NULL")>  _
		Public Property UsarFechade_ORD() As System.Nullable(Of Boolean)
			Get
				Return Me._UsarFechade_ORD
			End Get
			Set
				If (Me._UsarFechade_ORD.Equals(value) = false) Then
					Me.OnUsarFechade_ORDChanging(value)
					Me.SendPropertyChanging
					Me._UsarFechade_ORD = value
					Me.SendPropertyChanged("UsarFechade_ORD")
					Me.OnUsarFechade_ORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaLiquidacion_ORD", Storage:="_FechaLiquidacion_ORD", DbType:="Bit NULL")>  _
		Public Property FechaLiquidacion_ORD() As System.Nullable(Of Boolean)
			Get
				Return Me._FechaLiquidacion_ORD
			End Get
			Set
				If (Me._FechaLiquidacion_ORD.Equals(value) = false) Then
					Me.OnFechaLiquidacion_ORDChanging(value)
					Me.SendPropertyChanging
					Me._FechaLiquidacion_ORD = value
					Me.SendPropertyChanged("FechaLiquidacion_ORD")
					Me.OnFechaLiquidacion_ORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaCumplimiento_ORD", Storage:="_FechaCumplimiento_ORD", DbType:="Bit NULL")>  _
		Public Property FechaCumplimiento_ORD() As System.Nullable(Of Boolean)
			Get
				Return Me._FechaCumplimiento_ORD
			End Get
			Set
				If (Me._FechaCumplimiento_ORD.Equals(value) = false) Then
					Me.OnFechaCumplimiento_ORDChanging(value)
					Me.SendPropertyChanging
					Me._FechaCumplimiento_ORD = value
					Me.SendPropertyChanged("FechaCumplimiento_ORD")
					Me.OnFechaCumplimiento_ORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitTipoOperacion_ORD", Storage:="_TipoOperacion_ORD", DbType:="Bit NULL")>  _
		Public Property TipoOperacion_ORD() As System.Nullable(Of Boolean)
			Get
				Return Me._TipoOperacion_ORD
			End Get
			Set
				If (Me._TipoOperacion_ORD.Equals(value) = false) Then
					Me.OnTipoOperacion_ORDChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacion_ORD = value
					Me.SendPropertyChanged("TipoOperacion_ORD")
					Me.OnTipoOperacion_ORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitVentaOrd", Storage:="_VentaOrd", DbType:="Bit NULL")>  _
		Public Property VentaOrd() As System.Nullable(Of Boolean)
			Get
				Return Me._VentaOrd
			End Get
			Set
				If (Me._VentaOrd.Equals(value) = false) Then
					Me.OnVentaOrdChanging(value)
					Me.SendPropertyChanging
					Me._VentaOrd = value
					Me.SendPropertyChanged("VentaOrd")
					Me.OnVentaOrdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitCompraOrd", Storage:="_CompraOrd", DbType:="Bit NULL")>  _
		Public Property CompraOrd() As System.Nullable(Of Boolean)
			Get
				Return Me._CompraOrd
			End Get
			Set
				If (Me._CompraOrd.Equals(value) = false) Then
					Me.OnCompraOrdChanging(value)
					Me.SendPropertyChanging
					Me._CompraOrd = value
					Me.SendPropertyChanged("CompraOrd")
					Me.OnCompraOrdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitClaseOperacion_ORD", Storage:="_ClaseOperacion_ORD", DbType:="Bit NULL")>  _
		Public Property ClaseOperacion_ORD() As System.Nullable(Of Boolean)
			Get
				Return Me._ClaseOperacion_ORD
			End Get
			Set
				If (Me._ClaseOperacion_ORD.Equals(value) = false) Then
					Me.OnClaseOperacion_ORDChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOperacion_ORD = value
					Me.SendPropertyChanged("ClaseOperacion_ORD")
					Me.OnClaseOperacion_ORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitAccionesORD", Storage:="_AccionesORD", DbType:="Bit NULL")>  _
		Public Property AccionesORD() As System.Nullable(Of Boolean)
			Get
				Return Me._AccionesORD
			End Get
			Set
				If (Me._AccionesORD.Equals(value) = false) Then
					Me.OnAccionesORDChanging(value)
					Me.SendPropertyChanging
					Me._AccionesORD = value
					Me.SendPropertyChanged("AccionesORD")
					Me.OnAccionesORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitRentafijaORD", Storage:="_RentafijaORD", DbType:="Bit NULL")>  _
		Public Property RentafijaORD() As System.Nullable(Of Boolean)
			Get
				Return Me._RentafijaORD
			End Get
			Set
				If (Me._RentafijaORD.Equals(value) = false) Then
					Me.OnRentafijaORDChanging(value)
					Me.SendPropertyChanging
					Me._RentafijaORD = value
					Me.SendPropertyChanged("RentafijaORD")
					Me.OnRentafijaORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitSimultaneasORD", Storage:="_SimultaneasORD", DbType:="Bit NULL")>  _
		Public Property SimultaneasORD() As System.Nullable(Of Boolean)
			Get
				Return Me._SimultaneasORD
			End Get
			Set
				If (Me._SimultaneasORD.Equals(value) = false) Then
					Me.OnSimultaneasORDChanging(value)
					Me.SendPropertyChanging
					Me._SimultaneasORD = value
					Me.SendPropertyChanged("SimultaneasORD")
					Me.OnSimultaneasORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitreposORD", Storage:="_reposORD", DbType:="Bit NULL")>  _
		Public Property reposORD() As System.Nullable(Of Boolean)
			Get
				Return Me._reposORD
			End Get
			Set
				If (Me._reposORD.Equals(value) = false) Then
					Me.OnreposORDChanging(value)
					Me.SendPropertyChanging
					Me._reposORD = value
					Me.SendPropertyChanged("reposORD")
					Me.OnreposORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intFechaLiquidacion", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property intFechaLiquidacion() As Integer
			Get
				Return Me._intFechaLiquidacion
			End Get
			Set
				If (Object.Equals(Me._intFechaLiquidacion, value) = false) Then
					Me.OnintFechaLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._intFechaLiquidacion = value
					Me.SendPropertyChanged("intFechaLiquidacion")
					Me.OnintFechaLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intFechaCumplimiento", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property intFechaCumplimiento() As Integer
			Get
				Return Me._intFechaCumplimiento
			End Get
			Set
				If (Object.Equals(Me._intFechaCumplimiento, value) = false) Then
					Me.OnintFechaCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._intFechaCumplimiento = value
					Me.SendPropertyChanged("intFechaCumplimiento")
					Me.OnintFechaCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intTipoOperacion", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property intTipoOperacion() As Integer
			Get
				Return Me._intTipoOperacion
			End Get
			Set
				If (Object.Equals(Me._intTipoOperacion, value) = false) Then
					Me.OnintTipoOperacionChanging(value)
					Me.SendPropertyChanging
					Me._intTipoOperacion = value
					Me.SendPropertyChanged("intTipoOperacion")
					Me.OnintTipoOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoOperacionC", Storage:="_TipoOperacionC", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property TipoOperacionC() As Integer
			Get
				Return Me._TipoOperacionC
			End Get
			Set
				If (Object.Equals(Me._TipoOperacionC, value) = false) Then
					Me.OnTipoOperacionCChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacionC = value
					Me.SendPropertyChanged("TipoOperacionC")
					Me.OnTipoOperacionCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intClaseOperacion", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property intClaseOperacion() As Integer
			Get
				Return Me._intClaseOperacion
			End Get
			Set
				If (Object.Equals(Me._intClaseOperacion, value) = false) Then
					Me.OnintClaseOperacionChanging(value)
					Me.SendPropertyChanging
					Me._intClaseOperacion = value
					Me.SendPropertyChanged("intClaseOperacion")
					Me.OnintClaseOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroOrdenRF", Storage:="_NroOrdenRF", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property NroOrdenRF() As Integer
			Get
				Return Me._NroOrdenRF
			End Get
			Set
				If (Object.Equals(Me._NroOrdenRF, value) = false) Then
					Me.OnNroOrdenRFChanging(value)
					Me.SendPropertyChanging
					Me._NroOrdenRF = value
					Me.SendPropertyChanged("NroOrdenRF")
					Me.OnNroOrdenRFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroOrdenSimultaneas", Storage:="_NroOrdenSimultaneas", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property NroOrdenSimultaneas() As Integer
			Get
				Return Me._NroOrdenSimultaneas
			End Get
			Set
				If (Object.Equals(Me._NroOrdenSimultaneas, value) = false) Then
					Me.OnNroOrdenSimultaneasChanging(value)
					Me.SendPropertyChanging
					Me._NroOrdenSimultaneas = value
					Me.SendPropertyChanged("NroOrdenSimultaneas")
					Me.OnNroOrdenSimultaneasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroOrdenrepos", Storage:="_NroOrdenrepos", DbType:="Int Null", CanBeNull:=true)>  _
		Public Property NroOrdenrepos() As Integer
			Get
				Return Me._NroOrdenrepos
			End Get
			Set
				If (Object.Equals(Me._NroOrdenrepos, value) = false) Then
					Me.OnNroOrdenreposChanging(value)
					Me.SendPropertyChanging
					Me._NroOrdenrepos = value
					Me.SendPropertyChanged("NroOrdenrepos")
					Me.OnNroOrdenreposChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConfiguracionfacturas", Storage:="_IDConfiguracionfacturas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDConfiguracionfacturas() As Integer
			Get
				Return Me._IDConfiguracionfacturas
			End Get
			Set
				If (Object.Equals(Me._IDConfiguracionfacturas, value) = false) Then
					Me.OnIDConfiguracionfacturasChanging(value)
					Me.SendPropertyChanging
					Me._IDConfiguracionfacturas = value
					Me.SendPropertyChanged("IDConfiguracionfacturas")
					Me.OnIDConfiguracionfacturasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_ConfiguracionMensajeria_Cadena")>  _
	Partial Public Class ConfiguracionMensajeriaCadena
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _VIP As Boolean
		
		Private _Completa As Boolean
		
		Private _Parcial As Boolean
		
		Private _Ninguna As Boolean
		
		Private _InfoSesion As String
		
		Private _IDConfiguracionMensajeria As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVIPChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVIPChanged()
    End Sub
    Partial Private Sub OnCompletaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCompletaChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Boolean)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnNingunaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnNingunaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnIDConfiguracionMensajeriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConfiguracionMensajeriaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitVIP", Storage:="_VIP", DbType:="Bit NOT NULL")>  _
		Public Property VIP() As Boolean
			Get
				Return Me._VIP
			End Get
			Set
				If ((Me._VIP = value)  _
							= false) Then
					Me.OnVIPChanging(value)
					Me.SendPropertyChanging
					Me._VIP = value
					Me.SendPropertyChanged("VIP")
					Me.OnVIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitCompleta", Storage:="_Completa", DbType:="Bit NOT NULL")>  _
		Public Property Completa() As Boolean
			Get
				Return Me._Completa
			End Get
			Set
				If ((Me._Completa = value)  _
							= false) Then
					Me.OnCompletaChanging(value)
					Me.SendPropertyChanging
					Me._Completa = value
					Me.SendPropertyChanged("Completa")
					Me.OnCompletaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitParcial", Storage:="_Parcial", DbType:="Bit NOT NULL")>  _
		Public Property Parcial() As Boolean
			Get
				Return Me._Parcial
			End Get
			Set
				If ((Me._Parcial = value)  _
							= false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitNinguna", Storage:="_Ninguna", DbType:="Bit NOT NULL")>  _
		Public Property Ninguna() As Boolean
			Get
				Return Me._Ninguna
			End Get
			Set
				If ((Me._Ninguna = value)  _
							= false) Then
					Me.OnNingunaChanging(value)
					Me.SendPropertyChanging
					Me._Ninguna = value
					Me.SendPropertyChanged("Ninguna")
					Me.OnNingunaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConfiguracionMensajeria", Storage:="_IDConfiguracionMensajeria", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDConfiguracionMensajeria() As Integer
			Get
				Return Me._IDConfiguracionMensajeria
			End Get
			Set
				If (Object.Equals(Me._IDConfiguracionMensajeria, value) = false) Then
					Me.OnIDConfiguracionMensajeriaChanging(value)
					Me.SendPropertyChanging
					Me._IDConfiguracionMensajeria = value
					Me.SendPropertyChanged("IDConfiguracionMensajeria")
					Me.OnIDConfiguracionMensajeriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ItemCombo
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Categoria As String
		
		Private _ID As String
		
		Private _Descripcion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Categoria() As String
			Get
				Return Me._Categoria
			End Get
			Set
				If (String.Equals(Me._Categoria, value) = false) Then
					Me.OnCategoriaChanging(value)
					Me.SendPropertyChanging
					Me._Categoria = value
					Me.SendPropertyChanged("Categoria")
					Me.OnCategoriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property ID() As String
			Get
				Return Me._ID
			End Get
			Set
				If (String.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresOrdenes")>  _
	Partial Public Class ReceptoresOrdene
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TipoOrden As String
		
		Private _ClaseOrden As String
		
		Private _IDOrden As Integer
		
		Private _Version As Integer
		
		Private _IDReceptor As String
		
		Private _Lider As Boolean
		
		Private _Porcentaje As Double
		
		Private _Usuario As String
		
		Private _IDReceptoresOrdenes As Integer
		
		Private _InfoSesion As String
		
		Private _Nombre As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Private _Liquidacione As EntityRef(Of Liquidacione)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOrdenChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OnIDOrdenChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As Integer)
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorChanged()
    End Sub
    Partial Private Sub OnLiderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLiderChanged()
    End Sub
    Partial Private Sub OnPorcentajeChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDReceptoresOrdenesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDReceptoresOrdenesChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._Liquidacione = CType(Nothing, EntityRef(Of Liquidacione))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoOrden() As String
			Get
				Return Me._TipoOrden
			End Get
			Set
				If (String.Equals(Me._TipoOrden, value) = false) Then
					Me.OnTipoOrdenChanging(value)
					Me.SendPropertyChanging
					Me._TipoOrden = value
					Me.SendPropertyChanged("TipoOrden")
					Me.OnTipoOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me.OnClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOrden = value
					Me.SendPropertyChanged("ClaseOrden")
					Me.OnClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_IDOrden", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrden() As Integer
			Get
				Return Me._IDOrden
			End Get
			Set
				If (Object.Equals(Me._IDOrden, value) = false) Then
					Me.OnIDOrdenChanging(value)
					Me.SendPropertyChanging
					Me._IDOrden = value
					Me.SendPropertyChanged("IDOrden")
					Me.OnIDOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Version() As Integer
			Get
				Return Me._Version
			End Get
			Set
				If (Object.Equals(Me._Version, value) = false) Then
					Me.OnVersionChanging(value)
					Me.SendPropertyChanging
					Me._Version = value
					Me.SendPropertyChanged("Version")
					Me.OnVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property IDReceptor() As String
			Get
				Return Me._IDReceptor
			End Get
			Set
				If (String.Equals(Me._IDReceptor, value) = false) Then
					Me.OnIDReceptorChanging(value)
					Me.SendPropertyChanging
					Me._IDReceptor = value
					Me.SendPropertyChanged("IDReceptor")
					Me.OnIDReceptorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>  _
		Public Property Lider() As Boolean
			Get
				Return Me._Lider
			End Get
			Set
				If ((Me._Lider = value)  _
							= false) Then
					Me.OnLiderChanging(value)
					Me.SendPropertyChanging
					Me._Lider = value
					Me.SendPropertyChanged("Lider")
					Me.OnLiderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentaje", Storage:="_Porcentaje", DbType:="Float NOT NULL")>  _
		Public Property Porcentaje() As Double
			Get
				Return Me._Porcentaje
			End Get
			Set
				If ((Me._Porcentaje = value)  _
							= false) Then
					Me.OnPorcentajeChanging(value)
					Me.SendPropertyChanging
					Me._Porcentaje = value
					Me.SendPropertyChanged("Porcentaje")
					Me.OnPorcentajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptoresOrdenes", Storage:="_IDReceptoresOrdenes", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDReceptoresOrdenes() As Integer
			Get
				Return Me._IDReceptoresOrdenes
			End Get
			Set
				If (Object.Equals(Me._IDReceptoresOrdenes, value) = false) Then
					Me.OnIDReceptoresOrdenesChanging(value)
					Me.SendPropertyChanging
					Me._IDReceptoresOrdenes = value
					Me.SendPropertyChanged("IDReceptoresOrdenes")
					Me.OnIDReceptoresOrdenesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Liquidacione_ReceptoresOrdene", Storage:="_Liquidacione", ThisKey:="IDOrden", OtherKey:="IDOrden", IsForeignKey:=true)>  _
		Public Property Liquidacione() As Liquidacione
			Get
				Return Me._Liquidacione.Entity
			End Get
			Set
				Dim previousValue As Liquidacione = Me._Liquidacione.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Liquidacione.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Liquidacione.Entity = Nothing
						previousValue.ReceptoresOrdenes.Remove(Me)
					End If
					Me._Liquidacione.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.ReceptoresOrdenes.Add(Me)
						Me._IDOrden = value.IDOrden
					Else
						Me._IDOrden = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("Liquidacione")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBeneficiariosOrdenes")>  _
	Partial Public Class BeneficiariosOrdene
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Nombre As String
		
		Private _TipoIdentificacion As String
		
		Private _NroDocumento As Decimal
		
		Private _Parentesco As String
		
		Private _IDBeneficiariosOrdenes As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnParentescoChanging(value As String)
    End Sub
    Partial Private Sub OnParentescoChanged()
    End Sub
    Partial Private Sub OnIDBeneficiariosOrdenesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBeneficiariosOrdenesChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoIdentificacion() As String
			Get
				Return Me._TipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacion, value) = false) Then
					Me.OnTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacion = value
					Me.SendPropertyChanged("TipoIdentificacion")
					Me.OnTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="numeric (15, 0) NOT NULL")>  _
		Public Property NroDocumento() As Decimal
			Get
				Return Me._NroDocumento
			End Get
			Set
				If ((Me._NroDocumento = value)  _
							= false) Then
					Me.OnNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._NroDocumento = value
					Me.SendPropertyChanged("NroDocumento")
					Me.OnNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParentesco", Storage:="_Parentesco", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property Parentesco() As String
			Get
				Return Me._Parentesco
			End Get
			Set
				If (String.Equals(Me._Parentesco, value) = false) Then
					Me.OnParentescoChanging(value)
					Me.SendPropertyChanging
					Me._Parentesco = value
					Me.SendPropertyChanged("Parentesco")
					Me.OnParentescoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBeneficiariosOrdenes", Storage:="_IDBeneficiariosOrdenes", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDBeneficiariosOrdenes() As Integer
			Get
				Return Me._IDBeneficiariosOrdenes
			End Get
			Set
				If (Object.Equals(Me._IDBeneficiariosOrdenes, value) = false) Then
					Me.OnIDBeneficiariosOrdenesChanging(value)
					Me.SendPropertyChanging
					Me._IDBeneficiariosOrdenes = value
					Me.SendPropertyChanged("IDBeneficiariosOrdenes")
					Me.OnIDBeneficiariosOrdenesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesLiquidaciones")>  _
	Partial Public Class EspeciesLiquidacione
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDEspecie As String
		
		Private _Nombre As String
		
		Private _Descripcion As String
		
		Private _IDEspeciesLiquidaciones As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnIDEspeciesLiquidacionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEspeciesLiquidacionesChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEspeciesLiquidaciones", Storage:="_IDEspeciesLiquidaciones", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDEspeciesLiquidaciones() As Integer
			Get
				Return Me._IDEspeciesLiquidaciones
			End Get
			Set
				If (Object.Equals(Me._IDEspeciesLiquidaciones, value) = false) Then
					Me.OnIDEspeciesLiquidacionesChanging(value)
					Me.SendPropertyChanging
					Me._IDEspeciesLiquidaciones = value
					Me.SendPropertyChanged("IDEspeciesLiquidaciones")
					Me.OnIDEspeciesLiquidacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAplazamientosLiquidaciones")>  _
	Partial Public Class AplazamientosLiquidacione
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Aplazamiento As String
		
		Private _Cumplimiento As Date
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDAplazamientos As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAplazamientoChanging(value As String)
    End Sub
    Partial Private Sub OnAplazamientoChanged()
    End Sub
    Partial Private Sub OnCumplimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnCumplimientoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDAplazamientosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAplazamientosChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAplazamiento", Storage:="_Aplazamiento", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property Aplazamiento() As String
			Get
				Return Me._Aplazamiento
			End Get
			Set
				If (String.Equals(Me._Aplazamiento, value) = false) Then
					Me.OnAplazamientoChanging(value)
					Me.SendPropertyChanging
					Me._Aplazamiento = value
					Me.SendPropertyChanged("Aplazamiento")
					Me.OnAplazamientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="datetime")>  _
		Public Property Cumplimiento() As Date
			Get
				Return Me._Cumplimiento
			End Get
			Set
				If ((Me._Cumplimiento = value)  _
							= false) Then
					Me.OnCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._Cumplimiento = value
					Me.SendPropertyChanged("Cumplimiento")
					Me.OnCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="datetime")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDAplazamientos", Storage:="_IDAplazamientos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDAplazamientos() As Integer
			Get
				Return Me._IDAplazamientos
			End Get
			Set
				If (Object.Equals(Me._IDAplazamientos, value) = false) Then
					Me.OnIDAplazamientosChanging(value)
					Me.SendPropertyChanging
					Me._IDAplazamientos = value
					Me.SendPropertyChanged("IDAplazamientos")
					Me.OnIDAplazamientosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCustodiasLiquidaciones")>  _
	Partial Public Class CustodiasLiquidacione
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdRecibo As Integer
		
		Private _Secuencia As Integer
		
		Private _Estado As String
		
		Private _EstadoActual As String
		
		Private _IDCustodia As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdReciboChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReciboChanged()
    End Sub
    Partial Private Sub OnSecuenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSecuenciaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnEstadoActualChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoActualChanged()
    End Sub
    Partial Private Sub OnIDCustodiaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCustodiaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdRecibo", Storage:="_IdRecibo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IdRecibo() As Integer
			Get
				Return Me._IdRecibo
			End Get
			Set
				If (Object.Equals(Me._IdRecibo, value) = false) Then
					Me.OnIdReciboChanging(value)
					Me.SendPropertyChanging
					Me._IdRecibo = value
					Me.SendPropertyChanged("IdRecibo")
					Me.OnIdReciboChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSecuencia", Storage:="_Secuencia", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Secuencia() As Integer
			Get
				Return Me._Secuencia
			End Get
			Set
				If (Object.Equals(Me._Secuencia, value) = false) Then
					Me.OnSecuenciaChanging(value)
					Me.SendPropertyChanging
					Me._Secuencia = value
					Me.SendPropertyChanged("Secuencia")
					Me.OnSecuenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(1)", CanBeNull:=false)>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoActual", Storage:="_EstadoActual", DbType:="Varchar(1)")>  _
		Public Property EstadoActual() As String
			Get
				Return Me._EstadoActual
			End Get
			Set
				If (String.Equals(Me._EstadoActual, value) = false) Then
					Me.OnEstadoActualChanging(value)
					Me.SendPropertyChanging
					Me._EstadoActual = value
					Me.SendPropertyChanged("EstadoActual")
					Me.OnEstadoActualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCustodia", Storage:="_IDCustodia", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDCustodia() As Integer
			Get
				Return Me._IDCustodia
			End Get
			Set
				If (Object.Equals(Me._IDCustodia, value) = false) Then
					Me.OnIDCustodiaChanging(value)
					Me.SendPropertyChanging
					Me._IDCustodia = value
					Me.SendPropertyChanged("IDCustodia")
					Me.OnIDCustodiaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class Comentario
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _FechaHora As System.Nullable(Of Date)
		
		Private _Nombre As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFechaHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaHoraChanged()
    End Sub
    Partial Private Sub OnTextoChanging(value As String)
    End Sub
    Partial Private Sub OnTextoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaHora", IsPrimaryKey:=true)>  _
		Public Property FechaHora() As System.Nullable(Of Date)
			Get
				Return Me._FechaHora
			End Get
			Set
				If (Me._FechaHora.Equals(value) = false) Then
					Me.OnFechaHoraChanging(value)
					Me.SendPropertyChanging
					Me._FechaHora = value
					Me.SendPropertyChanged("FechaHora")
					Me.OnFechaHoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Nombre", Storage:="_Nombre", IsPrimaryKey:=true)>  _
		Public Property Texto() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnTextoChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Texto")
					Me.OnTextoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class TituloArregloUbicacion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _NroLiq As Integer
		
		Private _NroParcial As Integer
		
		Private _TipoOperacion As String
		
		Private _ClasePapel As String
		
		Private _FechaLiquidacion As Date
		
		Private _UBICACIONTITULO As String
		
		Private _NroCuenta As Integer
		
		Private _ClaseNombre As String
		
		Private _TipoNombre As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNroLiqChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLiqChanged()
    End Sub
    Partial Private Sub OnNroParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroParcialChanged()
    End Sub
    Partial Private Sub OnTipoOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOperacionChanged()
    End Sub
    Partial Private Sub OnClasePapelChanging(value As String)
    End Sub
    Partial Private Sub OnClasePapelChanged()
    End Sub
    Partial Private Sub OnFechaLiquidacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaLiquidacionChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnNroCuentaChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroCuentaChanged()
    End Sub
    Partial Private Sub OnClaseNombreChanging(value As String)
    End Sub
    Partial Private Sub OnClaseNombreChanged()
    End Sub
    Partial Private Sub OnTipoNombreChanging(value As String)
    End Sub
    Partial Private Sub OnTipoNombreChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroLiq", Storage:="_NroLiq", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property NroLiq() As Integer
			Get
				Return Me._NroLiq
			End Get
			Set
				If (Object.Equals(Me._NroLiq, value) = false) Then
					Me.OnNroLiqChanging(value)
					Me.SendPropertyChanging
					Me._NroLiq = value
					Me.SendPropertyChanged("NroLiq")
					Me.OnNroLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroParcial", Storage:="_NroParcial", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property NroParcial() As Integer
			Get
				Return Me._NroParcial
			End Get
			Set
				If (Object.Equals(Me._NroParcial, value) = false) Then
					Me.OnNroParcialChanging(value)
					Me.SendPropertyChanging
					Me._NroParcial = value
					Me.SendPropertyChanged("NroParcial")
					Me.OnNroParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property TipoOperacion() As String
			Get
				Return Me._TipoOperacion
			End Get
			Set
				If (String.Equals(Me._TipoOperacion, value) = false) Then
					Me.OnTipoOperacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacion = value
					Me.SendPropertyChanged("TipoOperacion")
					Me.OnTipoOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasePapel", Storage:="_ClasePapel", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property ClasePapel() As String
			Get
				Return Me._ClasePapel
			End Get
			Set
				If (String.Equals(Me._ClasePapel, value) = false) Then
					Me.OnClasePapelChanging(value)
					Me.SendPropertyChanging
					Me._ClasePapel = value
					Me.SendPropertyChanged("ClasePapel")
					Me.OnClasePapelChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaLiquidacion", Storage:="_FechaLiquidacion", IsPrimaryKey:=true)>  _
		Public Property FechaLiquidacion() As Date
			Get
				Return Me._FechaLiquidacion
			End Get
			Set
				If ((Me._FechaLiquidacion = value)  _
							= false) Then
					Me.OnFechaLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._FechaLiquidacion = value
					Me.SendPropertyChanged("FechaLiquidacion")
					Me.OnFechaLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property UBICACIONTITULO() As String
			Get
				Return Me._UBICACIONTITULO
			End Get
			Set
				If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
					Me.OnUBICACIONTITULOChanging(value)
					Me.SendPropertyChanging
					Me._UBICACIONTITULO = value
					Me.SendPropertyChanged("UBICACIONTITULO")
					Me.OnUBICACIONTITULOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroCuenta", Storage:="_NroCuenta", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property NroCuenta() As Integer
			Get
				Return Me._NroCuenta
			End Get
			Set
				If (Object.Equals(Me._NroCuenta, value) = false) Then
					Me.OnNroCuentaChanging(value)
					Me.SendPropertyChanging
					Me._NroCuenta = value
					Me.SendPropertyChanged("NroCuenta")
					Me.OnNroCuentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseNombre", Storage:="_ClaseNombre", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property ClaseNombre() As String
			Get
				Return Me._ClaseNombre
			End Get
			Set
				If (String.Equals(Me._ClaseNombre, value) = false) Then
					Me.OnClaseNombreChanging(value)
					Me.SendPropertyChanging
					Me._ClaseNombre = value
					Me.SendPropertyChanged("ClaseNombre")
					Me.OnClaseNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNombre", Storage:="_TipoNombre", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property TipoNombre() As String
			Get
				Return Me._TipoNombre
			End Get
			Set
				If (String.Equals(Me._TipoNombre, value) = false) Then
					Me.OnTipoNombreChanging(value)
					Me.SendPropertyChanging
					Me._TipoNombre = value
					Me.SendPropertyChanged("TipoNombre")
					Me.OnTipoNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class CuentasDepositoCliente
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _lngidCuentaDeceval As Integer
		
		Private _lngidComitente As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngidCuentaDecevalChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngidCuentaDecevalChanged()
    End Sub
    Partial Private Sub OnlngidComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnlngidComitenteChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngidCuentaDeceval", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property lngidCuentaDeceval() As Integer
			Get
				Return Me._lngidCuentaDeceval
			End Get
			Set
				If ((Me._lngidCuentaDeceval = value)  _
							= false) Then
					Me.OnlngidCuentaDecevalChanging(value)
					Me.SendPropertyChanging
					Me._lngidCuentaDeceval = value
					Me.SendPropertyChanged("lngidCuentaDeceval")
					Me.OnlngidCuentaDecevalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngidComitente", DbType:="Char(17)", IsPrimaryKey:=true)>  _
		Public Property lngidComitente() As String
			Get
				Return Me._lngidComitente
			End Get
			Set
				If (String.Equals(Me._lngidComitente, value) = false) Then
					Me.OnlngidComitenteChanging(value)
					Me.SendPropertyChanging
					Me._lngidComitente = value
					Me.SendPropertyChanged("lngidComitente")
					Me.OnlngidComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ValidacionCustodiaLiq
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intID As Integer
		
		Private _intResultado As Integer
		
		Private _strTabla As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnintResultadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnintResultadoChanged()
    End Sub
    Partial Private Sub OnstrTablaChanging(value As String)
    End Sub
    Partial Private Sub OnstrTablaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intID() As Integer
			Get
				Return Me._intID
			End Get
			Set
				If ((Me._intID = value)  _
							= false) Then
					Me.OnintIDChanging(value)
					Me.SendPropertyChanging
					Me._intID = value
					Me.SendPropertyChanged("intID")
					Me.OnintIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intResultado", DbType:="Int NOT NULL")>  _
		Public Property intResultado() As Integer
			Get
				Return Me._intResultado
			End Get
			Set
				If ((Me._intResultado = value)  _
							= false) Then
					Me.OnintResultadoChanging(value)
					Me.SendPropertyChanging
					Me._intResultado = value
					Me.SendPropertyChanged("intResultado")
					Me.OnintResultadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTabla", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property strTabla() As String
			Get
				Return Me._strTabla
			End Get
			Set
				If (String.Equals(Me._strTabla, value) = false) Then
					Me.OnstrTablaChanging(value)
					Me.SendPropertyChanging
					Me._strTabla = value
					Me.SendPropertyChanged("strTabla")
					Me.OnstrTablaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblFacturasBancaInv")>  _
	Partial Public Class FacturasBancaIn
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _AnoDocumento As Integer
		
		Private _Prefijo As String
		
		Private _ID As Integer
		
		Private _Documento As Date
		
		Private _IDComitente As String
		
		Private _TipoIdentificacion As String
		
		Private _NroIdentificacion As String
		
		Private _Nombre As String
		
		Private _Direccion As String
		
		Private _Telefono As String
		
		Private _Estado As String
		
		Private _Impresiones As Integer
		
		Private _IVA As System.Nullable(Of Decimal)
		
		Private _Retencion As System.Nullable(Of Decimal)
		
		Private _Fecha_Estado As Date
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDFacturasBancaInv As Integer
		
		Private _Maquina As String
		
		Private _EsExenta As String
		
		Private _DetalleFacturaXML As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnAnoDocumentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnAnoDocumentoChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDocumentoChanging(value As Date)
    End Sub
    Partial Private Sub OnDocumentoChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNroIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnNroIdentificacionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnImpresionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnImpresionesChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OnRetencionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRetencionChanged()
    End Sub
    Partial Private Sub OnFecha_EstadoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_EstadoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDFacturasBancaInvChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFacturasBancaInvChanged()
    End Sub
    Partial Private Sub OnMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnMaquinaChanged()
    End Sub
    Partial Private Sub OnEsExentaChanging(value As String)
    End Sub
    Partial Private Sub OnEsExentaChanged()
    End Sub
    Partial Private Sub OnDetalleFacturaXMLChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleFacturaXMLChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngAnoDocumento", Storage:="_AnoDocumento", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property AnoDocumento() As Integer
			Get
				Return Me._AnoDocumento
			End Get
			Set
				If (Object.Equals(Me._AnoDocumento, value) = false) Then
					Me.OnAnoDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._AnoDocumento = value
					Me.SendPropertyChanged("AnoDocumento")
					Me.OnAnoDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5) NOT NULL", CanBeNull:=false)>  _
		Public Property Prefijo() As String
			Get
				Return Me._Prefijo
			End Get
			Set
				If (String.Equals(Me._Prefijo, value) = false) Then
					Me.OnPrefijoChanging(value)
					Me.SendPropertyChanging
					Me._Prefijo = value
					Me.SendPropertyChanged("Prefijo")
					Me.OnPrefijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmDocumento", Storage:="_Documento", DbType:="Datetime NOT NULL")>  _
		Public Property Documento() As Date
			Get
				Return Me._Documento
			End Get
			Set
				If ((Me._Documento = value)  _
							= false) Then
					Me.OnDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._Documento = value
					Me.SendPropertyChanged("Documento")
					Me.OnDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17)")>  _
		Public Property IDComitente() As String
			Get
				Return Me._IDComitente
			End Get
			Set
				If (String.Equals(Me._IDComitente, value) = false) Then
					Me.OnIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IDComitente = value
					Me.SendPropertyChanged("IDComitente")
					Me.OnIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Char(1)")>  _
		Public Property TipoIdentificacion() As String
			Get
				Return Me._TipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacion, value) = false) Then
					Me.OnTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacion = value
					Me.SendPropertyChanged("TipoIdentificacion")
					Me.OnTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroIdentificacion", Storage:="_NroIdentificacion", DbType:="Varchar(15)")>  _
		Public Property NroIdentificacion() As String
			Get
				Return Me._NroIdentificacion
			End Get
			Set
				If (String.Equals(Me._NroIdentificacion, value) = false) Then
					Me.OnNroIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._NroIdentificacion = value
					Me.SendPropertyChanged("NroIdentificacion")
					Me.OnNroIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)")>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccion", Storage:="_Direccion", DbType:="Varchar(50)")>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono", Storage:="_Telefono", DbType:="Varchar(25)")>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Impresiones() As Integer
			Get
				Return Me._Impresiones
			End Get
			Set
				If (Object.Equals(Me._Impresiones, value) = false) Then
					Me.OnImpresionesChanging(value)
					Me.SendPropertyChanging
					Me._Impresiones = value
					Me.SendPropertyChanged("Impresiones")
					Me.OnImpresionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curIVA", Storage:="_IVA", DbType:="Money")>  _
		Public Property IVA() As System.Nullable(Of Decimal)
			Get
				Return Me._IVA
			End Get
			Set
				If (Me._IVA.Equals(value) = false) Then
					Me.OnIVAChanging(value)
					Me.SendPropertyChanging
					Me._IVA = value
					Me.SendPropertyChanged("IVA")
					Me.OnIVAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curRetencion", Storage:="_Retencion", DbType:="Money")>  _
		Public Property Retencion() As System.Nullable(Of Decimal)
			Get
				Return Me._Retencion
			End Get
			Set
				If (Me._Retencion.Equals(value) = false) Then
					Me.OnRetencionChanging(value)
					Me.SendPropertyChanging
					Me._Retencion = value
					Me.SendPropertyChanged("Retencion")
					Me.OnRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Fecha_Estado", DbType:="Datetime NOT NULL")>  _
		Public Property Fecha_Estado() As Date
			Get
				Return Me._Fecha_Estado
			End Get
			Set
				If ((Me._Fecha_Estado = value)  _
							= false) Then
					Me.OnFecha_EstadoChanging(value)
					Me.SendPropertyChanging
					Me._Fecha_Estado = value
					Me.SendPropertyChanged("Fecha_Estado")
					Me.OnFecha_EstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDFacturasBancaInv", Storage:="_IDFacturasBancaInv", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDFacturasBancaInv() As Integer
			Get
				Return Me._IDFacturasBancaInv
			End Get
			Set
				If (Object.Equals(Me._IDFacturasBancaInv, value) = false) Then
					Me.OnIDFacturasBancaInvChanging(value)
					Me.SendPropertyChanging
					Me._IDFacturasBancaInv = value
					Me.SendPropertyChanged("IDFacturasBancaInv")
					Me.OnIDFacturasBancaInvChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMaquina", Storage:="_Maquina", DbType:="Varchar(50)")>  _
		Public Property Maquina() As String
			Get
				Return Me._Maquina
			End Get
			Set
				If (String.Equals(Me._Maquina, value) = false) Then
					Me.OnMaquinaChanging(value)
					Me.SendPropertyChanging
					Me._Maquina = value
					Me.SendPropertyChanged("Maquina")
					Me.OnMaquinaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEsExenta", Storage:="_EsExenta", DbType:="Varchar(80)")>  _
		Public Property EsExenta() As String
			Get
				Return Me._EsExenta
			End Get
			Set
				If (String.Equals(Me._EsExenta, value) = false) Then
					Me.OnEsExentaChanging(value)
					Me.SendPropertyChanging
					Me._EsExenta = value
					Me.SendPropertyChanged("EsExenta")
					Me.OnEsExentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="pstrDetalleFacturaXML", Storage:="_DetalleFacturaXML", DbType:="Varchar(8000)")>  _
		Public Property DetalleFacturaXML() As String
			Get
				Return Me._DetalleFacturaXML
			End Get
			Set
				If (String.Equals(Me._DetalleFacturaXML, value) = false) Then
					Me.OnDetalleFacturaXMLChanging(value)
					Me.SendPropertyChanging
					Me._DetalleFacturaXML = value
					Me.SendPropertyChanged("DetalleFacturaXML")
					Me.OnDetalleFacturaXMLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDetalleFacturasBancaInv")>  _
	Partial Public Class DetalleFacturasBancaIn
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _AnoDocumento As Integer
		
		Private _Prefijo As String
		
		Private _ID As Integer
		
		Private _Secuencia As Integer
		
		Private _Descripcion As String
		
		Private _Valor As Decimal
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDDetalleFacturasBancaInv As Integer
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnAnoDocumentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnAnoDocumentoChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnSecuenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSecuenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As Decimal)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDDetalleFacturasBancaInvChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDetalleFacturasBancaInvChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngAnoDocumento", Storage:="_AnoDocumento", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property AnoDocumento() As Integer
			Get
				Return Me._AnoDocumento
			End Get
			Set
				If (Object.Equals(Me._AnoDocumento, value) = false) Then
					Me.OnAnoDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._AnoDocumento = value
					Me.SendPropertyChanged("AnoDocumento")
					Me.OnAnoDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5)")>  _
		Public Property Prefijo() As String
			Get
				Return Me._Prefijo
			End Get
			Set
				If (String.Equals(Me._Prefijo, value) = false) Then
					Me.OnPrefijoChanging(value)
					Me.SendPropertyChanging
					Me._Prefijo = value
					Me.SendPropertyChanged("Prefijo")
					Me.OnPrefijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSecuencia", Storage:="_Secuencia", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Secuencia() As Integer
			Get
				Return Me._Secuencia
			End Get
			Set
				If (Object.Equals(Me._Secuencia, value) = false) Then
					Me.OnSecuenciaChanging(value)
					Me.SendPropertyChanging
					Me._Secuencia = value
					Me.SendPropertyChanged("Secuencia")
					Me.OnSecuenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValor", Storage:="_Valor", DbType:="Money NOT NULL")>  _
		Public Property Valor() As Decimal
			Get
				Return Me._Valor
			End Get
			Set
				If ((Me._Valor = value)  _
							= false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDetalleFacturasBancaInv", Storage:="_IDDetalleFacturasBancaInv", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDDetalleFacturasBancaInv() As Integer
			Get
				Return Me._IDDetalleFacturasBancaInv
			End Get
			Set
				If (Object.Equals(Me._IDDetalleFacturasBancaInv, value) = false) Then
					Me.OnIDDetalleFacturasBancaInvChanging(value)
					Me.SendPropertyChanging
					Me._IDDetalleFacturasBancaInv = value
					Me.SendPropertyChanged("IDDetalleFacturasBancaInv")
					Me.OnIDDetalleFacturasBancaInvChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidacionesGapOrdenes")>  _
	Partial Public Class LiquidacionesGapOrdenes
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDLiquidacionesGapOrdenes As Integer
		
		Private _Activo As System.Nullable(Of Boolean)
		
		Private _Tipo As String
		
		Private _ClaseOrden As String
		
		Private _dtmFechaLiquidacion As System.Nullable(Of Date)
		
		Private _ID As System.Nullable(Of Integer)
		
		Private _Parcial As System.Nullable(Of Integer)
		
		Private _dtmFechaCumplimiento As System.Nullable(Of Date)
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _NroDocumento As String
		
		Private _Comitente As String
		
		Private _Nombre As String
		
		Private _CuentaDeceval As System.Nullable(Of Integer)
		
		Private _UBICACIONTITULO As String
		
		Private _Especie As String
		
		Private _TipoOferta As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDLiquidacionesGapOrdenesChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDLiquidacionesGapOrdenesChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OndtmFechaLiquidacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmFechaLiquidacionChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OndtmFechaCumplimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmFechaCumplimientoChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCuentaDecevalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCuentaDecevalChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnEspecieChanged()
    End Sub
    Partial Private Sub OnTipoOfertaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOfertaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDLiquidacionesGapOrdenes", DbType:="Int", IsPrimaryKey:=true)>  _
		Public Property intIDLiquidacionesGapOrdenes() As Integer
			Get
				Return Me._intIDLiquidacionesGapOrdenes
			End Get
			Set
				If ((Me._intIDLiquidacionesGapOrdenes = value)  _
							= false) Then
					Me.OnintIDLiquidacionesGapOrdenesChanging(value)
					Me.SendPropertyChanging
					Me._intIDLiquidacionesGapOrdenes = value
					Me.SendPropertyChanged("intIDLiquidacionesGapOrdenes")
					Me.OnintIDLiquidacionesGapOrdenesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit")>  _
		Public Property Activo() As System.Nullable(Of Boolean)
			Get
				Return Me._Activo
			End Get
			Set
				If (Me._Activo.Equals(value) = false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRTIPO", Storage:="_Tipo", DbType:="Varchar(1)")>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRCLASEORDEN", Storage:="_ClaseOrden", DbType:="Varchar(1)")>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me.OnClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOrden = value
					Me.SendPropertyChanged("ClaseOrden")
					Me.OnClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMLIQUIDACION", Storage:="_dtmFechaLiquidacion", DbType:="DateTime")>  _
		Public Property dtmFechaLiquidacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmFechaLiquidacion
			End Get
			Set
				If (Me._dtmFechaLiquidacion.Equals(value) = false) Then
					Me.OndtmFechaLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmFechaLiquidacion = value
					Me.SendPropertyChanged("dtmFechaLiquidacion")
					Me.OndtmFechaLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGID", Storage:="_ID", DbType:="Int")>  _
		Public Property ID() As System.Nullable(Of Integer)
			Get
				Return Me._ID
			End Get
			Set
				If (Me._ID.Equals(value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGPARCIAL", Storage:="_Parcial", DbType:="Int")>  _
		Public Property Parcial() As System.Nullable(Of Integer)
			Get
				Return Me._Parcial
			End Get
			Set
				If (Me._Parcial.Equals(value) = false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DTMCUMPLIMIENTO", Storage:="_dtmFechaCumplimiento", DbType:="DateTime")>  _
		Public Property dtmFechaCumplimiento() As System.Nullable(Of Date)
			Get
				Return Me._dtmFechaCumplimiento
			End Get
			Set
				If (Me._dtmFechaCumplimiento.Equals(value) = false) Then
					Me.OndtmFechaCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._dtmFechaCumplimiento = value
					Me.SendPropertyChanged("dtmFechaCumplimiento")
					Me.OndtmFechaCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DBLCANTIDAD", Storage:="_Cantidad", DbType:="Float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LNGNRODOCUMENTO", Storage:="_NroDocumento", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property NroDocumento() As String
			Get
				Return Me._NroDocumento
			End Get
			Set
				If (String.Equals(Me._NroDocumento, value) = false) Then
					Me.OnNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._NroDocumento = value
					Me.SendPropertyChanged("NroDocumento")
					Me.OnNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="IDCOMITENTE", Storage:="_Comitente", DbType:="Varchar(17)")>  _
		Public Property Comitente() As String
			Get
				Return Me._Comitente
			End Get
			Set
				If (String.Equals(Me._Comitente, value) = false) Then
					Me.OnComitenteChanging(value)
					Me.SendPropertyChanging
					Me._Comitente = value
					Me.SendPropertyChanged("Comitente")
					Me.OnComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRNOMBRE", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="CUENTA_DECEVAL", Storage:="_CuentaDeceval", DbType:="Int")>  _
		Public Property CuentaDeceval() As System.Nullable(Of Integer)
			Get
				Return Me._CuentaDeceval
			End Get
			Set
				If (Me._CuentaDeceval.Equals(value) = false) Then
					Me.OnCuentaDecevalChanging(value)
					Me.SendPropertyChanging
					Me._CuentaDeceval = value
					Me.SendPropertyChanged("CuentaDeceval")
					Me.OnCuentaDecevalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(50)")>  _
		Public Property UBICACIONTITULO() As String
			Get
				Return Me._UBICACIONTITULO
			End Get
			Set
				If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
					Me.OnUBICACIONTITULOChanging(value)
					Me.SendPropertyChanging
					Me._UBICACIONTITULO = value
					Me.SendPropertyChanged("UBICACIONTITULO")
					Me.OnUBICACIONTITULOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STRIDESPECIE", Storage:="_Especie", DbType:="Varchar(15)")>  _
		Public Property Especie() As String
			Get
				Return Me._Especie
			End Get
			Set
				If (String.Equals(Me._Especie, value) = false) Then
					Me.OnEspecieChanging(value)
					Me.SendPropertyChanging
					Me._Especie = value
					Me.SendPropertyChanged("Especie")
					Me.OnEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="TIPODEOFERTA", Storage:="_TipoOferta", DbType:="Varchar(50)")>  _
		Public Property TipoOferta() As String
			Get
				Return Me._TipoOferta
			End Get
			Set
				If (String.Equals(Me._TipoOferta, value) = false) Then
					Me.OnTipoOfertaChanging(value)
					Me.SendPropertyChanging
					Me._TipoOferta = value
					Me.SendPropertyChanged("TipoOferta")
					Me.OnTipoOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidacionesConsultar")>  _
	Partial Public Class LiquidacionesConsultar
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComitente As String
		
		Private _Comitente As String
		
		Private _IDOrdenante As String
		
		Private _Ordenante As String
		
		Private _Ordinaria As Boolean
		
		Private _Objeto As String
		
		Private _Estado As String
		
		Private _Tipo As String
		
		Private _Clase As String
		
		Private _ID As Integer
		
		Private _Orden As System.Nullable(Of Date)
		
		Private _UBICACIONTITULO As String
		
		Private _IDEspecie As String
		
		Private _Especie As String
		
		Private _IDClase As Integer
		
		Private _Inferior As System.Nullable(Of Double)
		
		Private _Superior As System.Nullable(Of Double)
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _ComisionPactada As System.Nullable(Of Double)
		
		Private _Modalidad As String
		
		Private _Emision As System.Nullable(Of Date)
		
		Private _Vencimiento As System.Nullable(Of Date)
		
		Private _TasaInicial As System.Nullable(Of Double)
		
		Private _TasaNominal As System.Nullable(Of Double)
		
		Private _Repo As Boolean
		
		Private _EnPesos As Boolean
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnIDOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIDOrdenanteChanged()
    End Sub
    Partial Private Sub OnOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnOrdenanteChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnObjetoChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As String)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnEspecieChanged()
    End Sub
    Partial Private Sub OnIDClaseChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClaseChanged()
    End Sub
    Partial Private Sub OnInferiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnInferiorChanged()
    End Sub
    Partial Private Sub OnSuperiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSuperiorChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnComisionPactadaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComisionPactadaChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnTasaInicialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaInicialChanged()
    End Sub
    Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaNominalChanged()
    End Sub
    Partial Private Sub OnRepoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRepoChanged()
    End Sub
    Partial Private Sub OnEnPesosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnPesosChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDComitente() As String
			Get
				Return Me._IDComitente
			End Get
			Set
				If (String.Equals(Me._IDComitente, value) = false) Then
					Me.OnIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IDComitente = value
					Me.SendPropertyChanged("IDComitente")
					Me.OnIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComitente", Storage:="_Comitente", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Comitente() As String
			Get
				Return Me._Comitente
			End Get
			Set
				If (String.Equals(Me._Comitente, value) = false) Then
					Me.OnComitenteChanging(value)
					Me.SendPropertyChanging
					Me._Comitente = value
					Me.SendPropertyChanged("Comitente")
					Me.OnComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenante", Storage:="_IDOrdenante", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrdenante() As String
			Get
				Return Me._IDOrdenante
			End Get
			Set
				If (String.Equals(Me._IDOrdenante, value) = false) Then
					Me.OnIDOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._IDOrdenante = value
					Me.SendPropertyChanged("IDOrdenante")
					Me.OnIDOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOrdenante", Storage:="_Ordenante", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Ordenante() As String
			Get
				Return Me._Ordenante
			End Get
			Set
				If (String.Equals(Me._Ordenante, value) = false) Then
					Me.OnOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._Ordenante = value
					Me.SendPropertyChanged("Ordenante")
					Me.OnOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
		Public Property Ordinaria() As Boolean
			Get
				Return Me._Ordinaria
			End Get
			Set
				If ((Me._Ordinaria = value)  _
							= false) Then
					Me.OnOrdinariaChanging(value)
					Me.SendPropertyChanging
					Me._Ordinaria = value
					Me.SendPropertyChanged("Ordinaria")
					Me.OnOrdinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjeto", Storage:="_Objeto", DbType:="Char(3)", CanBeNull:=false)>  _
		Public Property Objeto() As String
			Get
				Return Me._Objeto
			End Get
			Set
				If (String.Equals(Me._Objeto, value) = false) Then
					Me.OnObjetoChanging(value)
					Me.SendPropertyChanging
					Me._Objeto = value
					Me.SendPropertyChanged("Objeto")
					Me.OnObjetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1)", CanBeNull:=false)>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Char(1)", CanBeNull:=false)>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="Char(1)", CanBeNull:=false)>  _
		Public Property Clase() As String
			Get
				Return Me._Clase
			End Get
			Set
				If (String.Equals(Me._Clase, value) = false) Then
					Me.OnClaseChanging(value)
					Me.SendPropertyChanging
					Me._Clase = value
					Me.SendPropertyChanged("Clase")
					Me.OnClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmOrden", Storage:="_Orden", DbType:="Datetime")>  _
		Public Property Orden() As System.Nullable(Of Date)
			Get
				Return Me._Orden
			End Get
			Set
				If (Me._Orden.Equals(value) = false) Then
					Me.OnOrdenChanging(value)
					Me.SendPropertyChanging
					Me._Orden = value
					Me.SendPropertyChanged("Orden")
					Me.OnOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(1)", CanBeNull:=false)>  _
		Public Property UBICACIONTITULO() As String
			Get
				Return Me._UBICACIONTITULO
			End Get
			Set
				If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
					Me.OnUBICACIONTITULOChanging(value)
					Me.SendPropertyChanging
					Me._UBICACIONTITULO = value
					Me.SendPropertyChanged("UBICACIONTITULO")
					Me.OnUBICACIONTITULOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Especie() As String
			Get
				Return Me._Especie
			End Get
			Set
				If (String.Equals(Me._Especie, value) = false) Then
					Me.OnEspecieChanging(value)
					Me.SendPropertyChanging
					Me._Especie = value
					Me.SendPropertyChanged("Especie")
					Me.OnEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDClase", Storage:="_IDClase", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDClase() As Integer
			Get
				Return Me._IDClase
			End Get
			Set
				If (Object.Equals(Me._IDClase, value) = false) Then
					Me.OnIDClaseChanging(value)
					Me.SendPropertyChanging
					Me._IDClase = value
					Me.SendPropertyChanged("IDClase")
					Me.OnIDClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblInferior", Storage:="_Inferior", DbType:="Float")>  _
		Public Property Inferior() As System.Nullable(Of Double)
			Get
				Return Me._Inferior
			End Get
			Set
				If (Me._Inferior.Equals(value) = false) Then
					Me.OnInferiorChanging(value)
					Me.SendPropertyChanging
					Me._Inferior = value
					Me.SendPropertyChanged("Inferior")
					Me.OnInferiorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSuperior", Storage:="_Superior", DbType:="Float")>  _
		Public Property Superior() As System.Nullable(Of Double)
			Get
				Return Me._Superior
			End Get
			Set
				If (Me._Superior.Equals(value) = false) Then
					Me.OnSuperiorChanging(value)
					Me.SendPropertyChanging
					Me._Superior = value
					Me.SendPropertyChanged("Superior")
					Me.OnSuperiorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionPactada", Storage:="_ComisionPactada", DbType:="Float")>  _
		Public Property ComisionPactada() As System.Nullable(Of Double)
			Get
				Return Me._ComisionPactada
			End Get
			Set
				If (Me._ComisionPactada.Equals(value) = false) Then
					Me.OnComisionPactadaChanging(value)
					Me.SendPropertyChanging
					Me._ComisionPactada = value
					Me.SendPropertyChanged("ComisionPactada")
					Me.OnComisionPactadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(2)", CanBeNull:=false)>  _
		Public Property Modalidad() As String
			Get
				Return Me._Modalidad
			End Get
			Set
				If (String.Equals(Me._Modalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._Modalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="Datetime")>  _
		Public Property Emision() As System.Nullable(Of Date)
			Get
				Return Me._Emision
			End Get
			Set
				If (Me._Emision.Equals(value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._Emision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="Datetime")>  _
		Public Property Vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._Vencimiento
			End Get
			Set
				If (Me._Vencimiento.Equals(value) = false) Then
					Me.OnVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._Vencimiento = value
					Me.SendPropertyChanged("Vencimiento")
					Me.OnVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaInicial", Storage:="_TasaInicial", DbType:="Float")>  _
		Public Property TasaInicial() As System.Nullable(Of Double)
			Get
				Return Me._TasaInicial
			End Get
			Set
				If (Me._TasaInicial.Equals(value) = false) Then
					Me.OnTasaInicialChanging(value)
					Me.SendPropertyChanging
					Me._TasaInicial = value
					Me.SendPropertyChanged("TasaInicial")
					Me.OnTasaInicialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float")>  _
		Public Property TasaNominal() As System.Nullable(Of Double)
			Get
				Return Me._TasaNominal
			End Get
			Set
				If (Me._TasaNominal.Equals(value) = false) Then
					Me.OnTasaNominalChanging(value)
					Me.SendPropertyChanging
					Me._TasaNominal = value
					Me.SendPropertyChanged("TasaNominal")
					Me.OnTasaNominalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRepo", Storage:="_Repo", DbType:="Bit NOT NULL")>  _
		Public Property Repo() As Boolean
			Get
				Return Me._Repo
			End Get
			Set
				If ((Me._Repo = value)  _
							= false) Then
					Me.OnRepoChanging(value)
					Me.SendPropertyChanging
					Me._Repo = value
					Me.SendPropertyChanged("Repo")
					Me.OnRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEnPesos", Storage:="_EnPesos", DbType:="Bit")>  _
		Public Property EnPesos() As Boolean
			Get
				Return Me._EnPesos
			End Get
			Set
				If ((Me._EnPesos = value)  _
							= false) Then
					Me.OnEnPesosChanging(value)
					Me.SendPropertyChanging
					Me._EnPesos = value
					Me.SendPropertyChanged("EnPesos")
					Me.OnEnPesosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblconsultarcantidad")>  _
	Partial Public Class consultarcantidad
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CantidadLiq As System.Nullable(Of Double)
		
		Private _CantidadOrden As System.Nullable(Of Double)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCantidadLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadLiqChanged()
    End Sub
    Partial Private Sub OnCantidadOrdenChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadOrdenChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadLiq", Storage:="_CantidadLiq", DbType:="Float", IsPrimaryKey:=true)>  _
		Public Property CantidadLiq() As System.Nullable(Of Double)
			Get
				Return Me._CantidadLiq
			End Get
			Set
				If (Me._CantidadLiq.Equals(value) = false) Then
					Me.OnCantidadLiqChanging(value)
					Me.SendPropertyChanging
					Me._CantidadLiq = value
					Me.SendPropertyChanged("CantidadLiq")
					Me.OnCantidadLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadOrden", Storage:="_CantidadOrden", DbType:="Float")>  _
		Public Property CantidadOrden() As System.Nullable(Of Double)
			Get
				Return Me._CantidadOrden
			End Get
			Set
				If (Me._CantidadOrden.Equals(value) = false) Then
					Me.OnCantidadOrdenChanging(value)
					Me.SendPropertyChanging
					Me._CantidadOrden = value
					Me.SendPropertyChanged("CantidadOrden")
					Me.OnCantidadOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidacionesOrdenes")>  _
	Partial Public Class LiquidacionesOrdenes
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Objeto As String
		
		Private _Ordinaria As Boolean
		
		Private _ComisionPactada As Double
		
		Private _IDOrdenes As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnObjetoChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnComisionPactadaChanging(value As Double)
    End Sub
    Partial Private Sub OnComisionPactadaChanged()
    End Sub
    Partial Private Sub OnIDOrdenesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenesChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjeto", Storage:="_Objeto", DbType:="char(3) NOT NULL")>  _
		Public Property Objeto() As String
			Get
				Return Me._Objeto
			End Get
			Set
				If (String.Equals(Me._Objeto, value) = false) Then
					Me.OnObjetoChanging(value)
					Me.SendPropertyChanging
					Me._Objeto = value
					Me.SendPropertyChanged("Objeto")
					Me.OnObjetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
		Public Property Ordinaria() As Boolean
			Get
				Return Me._Ordinaria
			End Get
			Set
				If ((Me._Ordinaria = value)  _
							= false) Then
					Me.OnOrdinariaChanging(value)
					Me.SendPropertyChanging
					Me._Ordinaria = value
					Me.SendPropertyChanged("Ordinaria")
					Me.OnOrdinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionPactada", Storage:="_ComisionPactada", DbType:="Float NOT NULL")>  _
		Public Property ComisionPactada() As Double
			Get
				Return Me._ComisionPactada
			End Get
			Set
				If ((Me._ComisionPactada = value)  _
							= false) Then
					Me.OnComisionPactadaChanging(value)
					Me.SendPropertyChanging
					Me._ComisionPactada = value
					Me.SendPropertyChanged("ComisionPactada")
					Me.OnComisionPactadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenes", Storage:="_IDOrdenes", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property IDOrdenes() As Integer
			Get
				Return Me._IDOrdenes
			End Get
			Set
				If (Object.Equals(Me._IDOrdenes, value) = false) Then
					Me.OnIDOrdenesChanging(value)
					Me.SendPropertyChanging
					Me._IDOrdenes = value
					Me.SendPropertyChanged("IDOrdenes")
					Me.OnIDOrdenesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tPagosComisiones")>  _
	Partial Public Class PagosComisiones
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Id As Integer
		
		Private _Proceso As String
		
		Private _CodigoOyD As String
		
		Private _Marcar As System.Nullable(Of Boolean)
		
		Private _Nombre As String
		
		Private _CuentaDeposito As System.Nullable(Of Integer)
		
		Private _Especie As String
		
		Private _NombreEspecie As String
		
		Private _ValorPagado As Decimal
		
		Private _ValorCobroComision As System.Nullable(Of Decimal)
		
		Private _AutoRetenedor As System.Nullable(Of Boolean)
		
		Private _IVA As System.Nullable(Of Integer)
		
		Private _RteFuente As System.Nullable(Of Integer)
		
		Private _ValorIVA As System.Nullable(Of Decimal)
		
		Private _Retension As System.Nullable(Of Integer)
		
		Private _ValorRetension As System.Nullable(Of Decimal)
		
		Private _PorcentajeVariable As System.Nullable(Of Decimal)
		
		Private _ValorFijoComision As System.Nullable(Of Decimal)
		
		Private _ValorComision As System.Nullable(Of Decimal)
		
		Private _ValorNeto As System.Nullable(Of Decimal)
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _ValorNominal As System.Nullable(Of Double)
		
		Private _NombreConsecutivo As String
		
		Private _IDDocumento As System.Nullable(Of Integer)
		
		Private _Secuencia As System.Nullable(Of Integer)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnProcesoChanging(value As String)
    End Sub
    Partial Private Sub OnProcesoChanged()
    End Sub
    Partial Private Sub OnCodigoOyDChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoOyDChanged()
    End Sub
    Partial Private Sub OnMarcarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMarcarChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCuentaDepositoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCuentaDepositoChanged()
    End Sub
    Partial Private Sub OnEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnEspecieChanged()
    End Sub
    Partial Private Sub OnNombreEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnNombreEspecieChanged()
    End Sub
    Partial Private Sub OnValorPagadoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnValorPagadoChanged()
    End Sub
    Partial Private Sub OnValorCobroComisionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorCobroComisionChanged()
    End Sub
    Partial Private Sub OnAutoRetenedorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAutoRetenedorChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OnRteFuenteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRteFuenteChanged()
    End Sub
    Partial Private Sub OnValorIVAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorIVAChanged()
    End Sub
    Partial Private Sub OnRetensionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRetensionChanged()
    End Sub
    Partial Private Sub OnValorRetensionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorRetensionChanged()
    End Sub
    Partial Private Sub OnPorcentajeVariableChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcentajeVariableChanged()
    End Sub
    Partial Private Sub OnValorFijoComisionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorFijoComisionChanged()
    End Sub
    Partial Private Sub OnValorComisionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorComisionChanged()
    End Sub
    Partial Private Sub OnValorNetoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorNetoChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnValorNominalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorNominalChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnIDDocumentoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDDocumentoChanged()
    End Sub
    Partial Private Sub OnSecuenciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSecuenciaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_Id", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Id() As Integer
			Get
				Return Me._Id
			End Get
			Set
				If (Object.Equals(Me._Id, value) = false) Then
					Me.OnIdChanging(value)
					Me.SendPropertyChanging
					Me._Id = value
					Me.SendPropertyChanged("Id")
					Me.OnIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strProceso", Storage:="_Proceso", DbType:="VarChar(255)")>  _
		Public Property Proceso() As String
			Get
				Return Me._Proceso
			End Get
			Set
				If (String.Equals(Me._Proceso, value) = false) Then
					Me.OnProcesoChanging(value)
					Me.SendPropertyChanging
					Me._Proceso = value
					Me.SendPropertyChanged("Proceso")
					Me.OnProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOyD", Storage:="_CodigoOyD", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property CodigoOyD() As String
			Get
				Return Me._CodigoOyD
			End Get
			Set
				If (String.Equals(Me._CodigoOyD, value) = false) Then
					Me.OnCodigoOyDChanging(value)
					Me.SendPropertyChanging
					Me._CodigoOyD = value
					Me.SendPropertyChanged("CodigoOyD")
					Me.OnCodigoOyDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMarcar", Storage:="_Marcar", DbType:="Bit")>  _
		Public Property Marcar() As System.Nullable(Of Boolean)
			Get
				Return Me._Marcar
			End Get
			Set
				If (Me._Marcar.Equals(value) = false) Then
					Me.OnMarcarChanging(value)
					Me.SendPropertyChanging
					Me._Marcar = value
					Me.SendPropertyChanged("Marcar")
					Me.OnMarcarChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCuentaDeposito", Storage:="_CuentaDeposito", DbType:="Int")>  _
		Public Property CuentaDeposito() As System.Nullable(Of Integer)
			Get
				Return Me._CuentaDeposito
			End Get
			Set
				If (Me._CuentaDeposito.Equals(value) = false) Then
					Me.OnCuentaDepositoChanging(value)
					Me.SendPropertyChanging
					Me._CuentaDeposito = value
					Me.SendPropertyChanged("CuentaDeposito")
					Me.OnCuentaDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="VarChar(15)")>  _
		Public Property Especie() As String
			Get
				Return Me._Especie
			End Get
			Set
				If (String.Equals(Me._Especie, value) = false) Then
					Me.OnEspecieChanging(value)
					Me.SendPropertyChanging
					Me._Especie = value
					Me.SendPropertyChanged("Especie")
					Me.OnEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEspecie", Storage:="_NombreEspecie", DbType:="VarChar(50)")>  _
		Public Property NombreEspecie() As String
			Get
				Return Me._NombreEspecie
			End Get
			Set
				If (String.Equals(Me._NombreEspecie, value) = false) Then
					Me.OnNombreEspecieChanging(value)
					Me.SendPropertyChanging
					Me._NombreEspecie = value
					Me.SendPropertyChanged("NombreEspecie")
					Me.OnNombreEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorPagado", Storage:="_ValorPagado", DbType:="Money NOT NULL")>  _
		Public Property ValorPagado() As Decimal
			Get
				Return Me._ValorPagado
			End Get
			Set
				If ((Me._ValorPagado = value)  _
							= false) Then
					Me.OnValorPagadoChanging(value)
					Me.SendPropertyChanging
					Me._ValorPagado = value
					Me.SendPropertyChanged("ValorPagado")
					Me.OnValorPagadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorCobroComision", Storage:="_ValorCobroComision", DbType:="Decimal(15,4)")>  _
		Public Property ValorCobroComision() As System.Nullable(Of Decimal)
			Get
				Return Me._ValorCobroComision
			End Get
			Set
				If (Me._ValorCobroComision.Equals(value) = false) Then
					Me.OnValorCobroComisionChanging(value)
					Me.SendPropertyChanging
					Me._ValorCobroComision = value
					Me.SendPropertyChanged("ValorCobroComision")
					Me.OnValorCobroComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAutoRetenedor", Storage:="_AutoRetenedor", DbType:="Bit")>  _
		Public Property AutoRetenedor() As System.Nullable(Of Boolean)
			Get
				Return Me._AutoRetenedor
			End Get
			Set
				If (Me._AutoRetenedor.Equals(value) = false) Then
					Me.OnAutoRetenedorChanging(value)
					Me.SendPropertyChanging
					Me._AutoRetenedor = value
					Me.SendPropertyChanged("AutoRetenedor")
					Me.OnAutoRetenedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIVA", Storage:="_IVA", DbType:="Int")>  _
		Public Property IVA() As System.Nullable(Of Integer)
			Get
				Return Me._IVA
			End Get
			Set
				If (Me._IVA.Equals(value) = false) Then
					Me.OnIVAChanging(value)
					Me.SendPropertyChanging
					Me._IVA = value
					Me.SendPropertyChanged("IVA")
					Me.OnIVAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intRteFuente", Storage:="_RteFuente", DbType:="Int")>  _
		Public Property RteFuente() As System.Nullable(Of Integer)
			Get
				Return Me._RteFuente
			End Get
			Set
				If (Me._RteFuente.Equals(value) = false) Then
					Me.OnRteFuenteChanging(value)
					Me.SendPropertyChanging
					Me._RteFuente = value
					Me.SendPropertyChanged("RteFuente")
					Me.OnRteFuenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorIVA", Storage:="_ValorIVA", DbType:="Decimal(26,4)")>  _
		Public Property ValorIVA() As System.Nullable(Of Decimal)
			Get
				Return Me._ValorIVA
			End Get
			Set
				If (Me._ValorIVA.Equals(value) = false) Then
					Me.OnValorIVAChanging(value)
					Me.SendPropertyChanging
					Me._ValorIVA = value
					Me.SendPropertyChanged("ValorIVA")
					Me.OnValorIVAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intRetension", Storage:="_Retension", DbType:="Int")>  _
		Public Property Retension() As System.Nullable(Of Integer)
			Get
				Return Me._Retension
			End Get
			Set
				If (Me._Retension.Equals(value) = false) Then
					Me.OnRetensionChanging(value)
					Me.SendPropertyChanging
					Me._Retension = value
					Me.SendPropertyChanged("Retension")
					Me.OnRetensionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorRetension", Storage:="_ValorRetension", DbType:="Decimal(26,4)")>  _
		Public Property ValorRetension() As System.Nullable(Of Decimal)
			Get
				Return Me._ValorRetension
			End Get
			Set
				If (Me._ValorRetension.Equals(value) = false) Then
					Me.OnValorRetensionChanging(value)
					Me.SendPropertyChanging
					Me._ValorRetension = value
					Me.SendPropertyChanged("ValorRetension")
					Me.OnValorRetensionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeVariable", Storage:="_PorcentajeVariable", DbType:="Decimal(5,2)")>  _
		Public Property PorcentajeVariable() As System.Nullable(Of Decimal)
			Get
				Return Me._PorcentajeVariable
			End Get
			Set
				If (Me._PorcentajeVariable.Equals(value) = false) Then
					Me.OnPorcentajeVariableChanging(value)
					Me.SendPropertyChanging
					Me._PorcentajeVariable = value
					Me.SendPropertyChanged("PorcentajeVariable")
					Me.OnPorcentajeVariableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorFijoComision", Storage:="_ValorFijoComision", DbType:="Decimal(19,4)")>  _
		Public Property ValorFijoComision() As System.Nullable(Of Decimal)
			Get
				Return Me._ValorFijoComision
			End Get
			Set
				If (Me._ValorFijoComision.Equals(value) = false) Then
					Me.OnValorFijoComisionChanging(value)
					Me.SendPropertyChanging
					Me._ValorFijoComision = value
					Me.SendPropertyChanged("ValorFijoComision")
					Me.OnValorFijoComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorComision", Storage:="_ValorComision", DbType:="Decimal(25,10)")>  _
		Public Property ValorComision() As System.Nullable(Of Decimal)
			Get
				Return Me._ValorComision
			End Get
			Set
				If (Me._ValorComision.Equals(value) = false) Then
					Me.OnValorComisionChanging(value)
					Me.SendPropertyChanging
					Me._ValorComision = value
					Me.SendPropertyChanged("ValorComision")
					Me.OnValorComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorNeto", Storage:="_ValorNeto", DbType:="Decimal(26,10)")>  _
		Public Property ValorNeto() As System.Nullable(Of Decimal)
			Get
				Return Me._ValorNeto
			End Get
			Set
				If (Me._ValorNeto.Equals(value) = false) Then
					Me.OnValorNetoChanging(value)
					Me.SendPropertyChanging
					Me._ValorNeto = value
					Me.SendPropertyChanged("ValorNeto")
					Me.OnValorNetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorNominal", Storage:="_ValorNominal", DbType:="Float")>  _
		Public Property ValorNominal() As System.Nullable(Of Double)
			Get
				Return Me._ValorNominal
			End Get
			Set
				If (Me._ValorNominal.Equals(value) = false) Then
					Me.OnValorNominalChanging(value)
					Me.SendPropertyChanging
					Me._ValorNominal = value
					Me.SendPropertyChanged("ValorNominal")
					Me.OnValorNominalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_NombreConsecutivo", DbType:="VarChar(15)")>  _
		Public Property NombreConsecutivo() As String
			Get
				Return Me._NombreConsecutivo
			End Get
			Set
				If (String.Equals(Me._NombreConsecutivo, value) = false) Then
					Me.OnNombreConsecutivoChanging(value)
					Me.SendPropertyChanging
					Me._NombreConsecutivo = value
					Me.SendPropertyChanged("NombreConsecutivo")
					Me.OnNombreConsecutivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDocumento", Storage:="_IDDocumento", DbType:="Int")>  _
		Public Property IDDocumento() As System.Nullable(Of Integer)
			Get
				Return Me._IDDocumento
			End Get
			Set
				If (Me._IDDocumento.Equals(value) = false) Then
					Me.OnIDDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._IDDocumento = value
					Me.SendPropertyChanged("IDDocumento")
					Me.OnIDDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSecuencia", Storage:="_Secuencia", DbType:="Int")>  _
		Public Property Secuencia() As System.Nullable(Of Integer)
			Get
				Return Me._Secuencia
			End Get
			Set
				If (Me._Secuencia.Equals(value) = false) Then
					Me.OnSecuenciaChanging(value)
					Me.SendPropertyChanging
					Me._Secuencia = value
					Me.SendPropertyChanged("Secuencia")
					Me.OnSecuenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesRelacionLocalExterior")>  _
	Partial Public Class EspeciesRelacionLocalExterior
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _IdEspecie As String
		
		Private _IdEspecieExterior As String
		
		Private _NitProgramaADR As String
		
		Private _FactorEspecie As Short
		
		Private _FactorEspecieExterior As Short
		
		Private _Usuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIdEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIdEspecieChanged()
    End Sub
    Partial Private Sub OnIdEspecieExteriorChanging(value As String)
    End Sub
    Partial Private Sub OnIdEspecieExteriorChanged()
    End Sub
    Partial Private Sub OnNitProgramaADRChanging(value As String)
    End Sub
    Partial Private Sub OnNitProgramaADRChanged()
    End Sub
    Partial Private Sub OnFactorEspecieChanging(value As Short)
    End Sub
    Partial Private Sub OnFactorEspecieChanged()
    End Sub
    Partial Private Sub OnFactorEspecieExteriorChanging(value As Short)
    End Sub
    Partial Private Sub OnFactorEspecieExteriorChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_IdEspecie", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IdEspecie() As String
			Get
				Return Me._IdEspecie
			End Get
			Set
				If (String.Equals(Me._IdEspecie, value) = false) Then
					Me.OnIdEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IdEspecie = value
					Me.SendPropertyChanged("IdEspecie")
					Me.OnIdEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecieExterior", Storage:="_IdEspecieExterior", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IdEspecieExterior() As String
			Get
				Return Me._IdEspecieExterior
			End Get
			Set
				If (String.Equals(Me._IdEspecieExterior, value) = false) Then
					Me.OnIdEspecieExteriorChanging(value)
					Me.SendPropertyChanging
					Me._IdEspecieExterior = value
					Me.SendPropertyChanged("IdEspecieExterior")
					Me.OnIdEspecieExteriorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitProgramaADR", Storage:="_NitProgramaADR", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property NitProgramaADR() As String
			Get
				Return Me._NitProgramaADR
			End Get
			Set
				If (String.Equals(Me._NitProgramaADR, value) = false) Then
					Me.OnNitProgramaADRChanging(value)
					Me.SendPropertyChanging
					Me._NitProgramaADR = value
					Me.SendPropertyChanged("NitProgramaADR")
					Me.OnNitProgramaADRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intFactorEspecie", Storage:="_FactorEspecie", DbType:="smallint", CanBeNull:=false)>  _
		Public Property FactorEspecie() As Short
			Get
				Return Me._FactorEspecie
			End Get
			Set
				If (Object.Equals(Me._FactorEspecie, value) = false) Then
					Me.OnFactorEspecieChanging(value)
					Me.SendPropertyChanging
					Me._FactorEspecie = value
					Me.SendPropertyChanged("FactorEspecie")
					Me.OnFactorEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intFactorEspecieExterior", Storage:="_FactorEspecieExterior", DbType:="smallint", CanBeNull:=false)>  _
		Public Property FactorEspecieExterior() As Short
			Get
				Return Me._FactorEspecieExterior
			End Get
			Set
				If (Object.Equals(Me._FactorEspecieExterior, value) = false) Then
					Me.OnFactorEspecieExteriorChanging(value)
					Me.SendPropertyChanging
					Me._FactorEspecieExterior = value
					Me.SendPropertyChanged("FactorEspecieExterior")
					Me.OnFactorEspecieExteriorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidaciones_BolsasDelExterior")>  _
	Partial Public Class Liquidaciones_BolsasDelExteriorEntidad
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Tipo As String
		
		Private _IDLiquidacion As Integer
		
		Private _Liquidacion As System.Nullable(Of System.DateTime)
		
		Private _Cumplimiento As Date
		
		Private _Parcial As Integer
		
		Private _Clase As String
		
		Private _IDComitente As String
		
		Private _IdOrdenante As String
		
		Private _IdEspecie As String
		
		Private _Precio As Double
		
		Private _Cantidad As Double
		
		Private _TotalLiq As Double
		
		Private _ReferenciaExterior As Integer
		
		Private _IdReceptor As String
		
		Private _RetornoBolsaExterior As System.String 
		
		Private _Usuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLiquidacionChanged()
    End Sub
    Partial Private Sub OnLiquidacionChanging(value As System.Nullable(Of System.DateTime))
    End Sub
    Partial Private Sub OnLiquidacionChanged()
    End Sub
    Partial Private Sub OnCumplimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnCumplimientoChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As String)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnIdOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIdOrdenanteChanged()
    End Sub
    Partial Private Sub OnIdEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIdEspecieChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Double)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Double)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnTotalLiqChanging(value As Double)
    End Sub
    Partial Private Sub OnTotalLiqChanged()
    End Sub
    Partial Private Sub OnReferenciaExteriorChanging(value As Integer)
    End Sub
    Partial Private Sub OnReferenciaExteriorChanged()
    End Sub
    Partial Private Sub OnIdReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIdReceptorChanged()
    End Sub
    Partial Private Sub OnRetornoBolsaExteriorChanging(value As System.String )
    End Sub
    Partial Private Sub OnRetornoBolsaExteriorChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDLiquidacion", Storage:="_IDLiquidacion", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDLiquidacion() As Integer
			Get
				Return Me._IDLiquidacion
			End Get
			Set
				If (Object.Equals(Me._IDLiquidacion, value) = false) Then
					Me.OnIDLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._IDLiquidacion = value
					Me.SendPropertyChanged("IDLiquidacion")
					Me.OnIDLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_Liquidacion", DbType:="Datetime", CanBeNull:=true)>  _
		Public Property Liquidacion() As System.Nullable(Of System.DateTime)
			Get
				Return Me._Liquidacion
			End Get
			Set
				If (Object.Equals(Me._Liquidacion, value) = false) Then
					Me.OnLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._Liquidacion = value
					Me.SendPropertyChanged("Liquidacion")
					Me.OnLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="Datetime NOT NULL")>  _
		Public Property Cumplimiento() As Date
			Get
				Return Me._Cumplimiento
			End Get
			Set
				If ((Me._Cumplimiento = value)  _
							= false) Then
					Me.OnCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._Cumplimiento = value
					Me.SendPropertyChanged("Cumplimiento")
					Me.OnCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", DbType:="int", CanBeNull:=false)>  _
		Public Property Parcial() As Integer
			Get
				Return Me._Parcial
			End Get
			Set
				If (Object.Equals(Me._Parcial, value) = false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Clase() As String
			Get
				Return Me._Clase
			End Get
			Set
				If (String.Equals(Me._Clase, value) = false) Then
					Me.OnClaseChanging(value)
					Me.SendPropertyChanging
					Me._Clase = value
					Me.SendPropertyChanged("Clase")
					Me.OnClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Varchar(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDComitente() As String
			Get
				Return Me._IDComitente
			End Get
			Set
				If (String.Equals(Me._IDComitente, value) = false) Then
					Me.OnIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IDComitente = value
					Me.SendPropertyChanged("IDComitente")
					Me.OnIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOrdenante", Storage:="_IdOrdenante", DbType:="Varchar(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IdOrdenante() As String
			Get
				Return Me._IdOrdenante
			End Get
			Set
				If (String.Equals(Me._IdOrdenante, value) = false) Then
					Me.OnIdOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._IdOrdenante = value
					Me.SendPropertyChanged("IdOrdenante")
					Me.OnIdOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_IdEspecie", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IdEspecie() As String
			Get
				Return Me._IdEspecie
			End Get
			Set
				If (String.Equals(Me._IdEspecie, value) = false) Then
					Me.OnIdEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IdEspecie = value
					Me.SendPropertyChanged("IdEspecie")
					Me.OnIdEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curPrecio", Storage:="_Precio", DbType:="Float NOT NULL")>  _
		Public Property Precio() As Double
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NOT NULL")>  _
		Public Property Cantidad() As Double
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTotalLiq", Storage:="_TotalLiq", DbType:="Float NOT NULL")>  _
		Public Property TotalLiq() As Double
			Get
				Return Me._TotalLiq
			End Get
			Set
				If ((Me._TotalLiq = value)  _
							= false) Then
					Me.OnTotalLiqChanging(value)
					Me.SendPropertyChanging
					Me._TotalLiq = value
					Me.SendPropertyChanged("TotalLiq")
					Me.OnTotalLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngReferenciaExterior", Storage:="_ReferenciaExterior", DbType:="int", CanBeNull:=true)>  _
		Public Property ReferenciaExterior() As Integer
			Get
				Return Me._ReferenciaExterior
			End Get
			Set
				If (Object.Equals(Me._ReferenciaExterior, value) = false) Then
					Me.OnReferenciaExteriorChanging(value)
					Me.SendPropertyChanging
					Me._ReferenciaExterior = value
					Me.SendPropertyChanged("ReferenciaExterior")
					Me.OnReferenciaExteriorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdReceptor", Storage:="_IdReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property IdReceptor() As String
			Get
				Return Me._IdReceptor
			End Get
			Set
				If (String.Equals(Me._IdReceptor, value) = false) Then
					Me.OnIdReceptorChanging(value)
					Me.SendPropertyChanging
					Me._IdReceptor = value
					Me.SendPropertyChanged("IdReceptor")
					Me.OnIdReceptorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetornoBolsaExterior", Storage:="_RetornoBolsaExterior", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property RetornoBolsaExterior() As System.String 
			Get
				Return Me._RetornoBolsaExterior
			End Get
			Set
				If (Object.Equals(Me._RetornoBolsaExterior, value) = false) Then
					Me.OnRetornoBolsaExteriorChanging(value)
					Me.SendPropertyChanging
					Me._RetornoBolsaExterior = value
					Me.SendPropertyChanged("RetornoBolsaExterior")
					Me.OnRetornoBolsaExteriorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidacionesOF")>  _
	Partial Public Class LiquidacionesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _ID As Integer
		
		Private _Parcial As Integer
		
		Private _Tipo As String
		
		Private _ClaseOrden As String
		
		Private _IDEspecie As String
		
		Private _IDOrden As Integer
		
		Private _Prefijo As String
		
		Private _IDFactura As System.Nullable(of System.int32)
		
		Private _Facturada As String
		
		Private _IDComitente As String
		
		Private _IDOrdenante As String
		
		Private _IDBolsa As Integer
		
		Private _ValBolsa As System.Nullable(Of Double)
		
		Private _IDRueda As System.Nullable(Of Short)
		
		Private _TasaDescuento As System.Nullable(Of Double)
		
		Private _TasaCompraVende As System.Nullable(Of Double)
		
		Private _Modalidad As String
		
		Private _IndicadorEconomico As String
		
		Private _PuntosIndicador As System.Nullable(Of Double)
		
		Private _Plazo As Integer
		
		Private _Liquidacion As Date
		
		Private _Cumplimiento As Date
		
		Private _Emision As System.Nullable(Of Date)
		
		Private _Vencimiento As System.Nullable(Of Date)
		
		Private _OtraPlaza As Boolean
		
		Private _Plaza As String
		
		Private _IDComisionistaLocal As System.Nullable(of System.int32)
		
		Private _IDComisionistaOtraPlaza As System.Nullable(of System.int32)
		
		Private _IDCiudadOtraPlaza As Integer
		
		Private _TasaEfectiva As Double
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _Precio As System.Nullable(Of Double)
		
		Private _Transaccion_cur As System.Nullable(Of Double)
		
		Private _SubTotalLiq As System.Nullable(Of Double)
		
		Private _TotalLiq As System.Nullable(Of Double)
		
		Private _Comision As System.Nullable(Of Double)
		
		Private _Retencion As System.Nullable(Of Double)
		
		Private _Intereses As System.Nullable(Of Double)
		
		Private _ValorIva As System.Nullable(Of Double)
		
		Private _DiasIntereses As Integer
		
		Private _FactorComisionPactada As System.Nullable(Of Double)
		
		Private _Mercado As String
		
		Private _NroTitulo As String
		
		Private _IDCiudadExpTitulo As Integer
		
		Private _PlazoOriginal As Integer
		
		Private _Aplazamiento As Boolean
		
		Private _VersionPapeleta As System.Nullable(Of Short)
		
		Private _EmisionOriginal As System.Nullable(Of Date)
		
		Private _VencimientoOriginal As System.Nullable(Of Date)
		
		Private _Impresiones As Integer
		
		Private _FormaPago As String
		
		Private _CtrlImpPapeleta As Integer
		
		Private _DiasVencimiento As Integer
		
		Private _PosicionPropia As String
		
		Private _Transaccion As String
		
		Private _TipoOperacion As String
		
		Private _DiasContado As Integer
		
		Private _Ordinaria As Boolean
		
		Private _ObjetoOrdenExtraordinaria As String
		
		Private _NumPadre As Integer
		
		Private _ParcialPadre As System.Nullable(of System.int32)
		
		Private _OperacionPadre As System.Nullable(Of Date)
		
		Private _DiasTramo As Integer
		
		Private _Vendido As Boolean
		
		Private _Vendido_fecha As System.Nullable(Of Date)
		
		Private _Manual As Boolean
		
		Private _ValorTraslado As System.Nullable(Of Double)
		
		Private _ValorBrutoCompraVencida As System.Nullable(Of Double)
		
		Private _AutoRetenedor As String
		
		Private _Sujeto As String
		
		Private _PcRenEfecCompraRet As System.Nullable(Of Double)
		
		Private _PcRenEfecVendeRet As System.Nullable(Of Double)
		
		Private _Reinversion As String
		
		Private _Swap As String
		
		Private _NroSwap As Integer
		
		Private _Certificacion As String
		
		Private _DescuentoAcumula As System.Nullable(Of Double)
		
		Private _PctRendimiento As System.Nullable(Of Double)
		
		Private _FechaCompraVencido As System.Nullable(Of Date)
		
		Private _PrecioCompraVencido As System.Nullable(Of Double)
		
		Private _ConstanciaEnajenacion As String
		
		Private _RepoTitulo As String
		
		Private _ServBolsaVble As System.Nullable(Of Double)
		
		Private _ServBolsaFijo As System.Nullable(Of Double)
		
		Private _Traslado As String
		
		Private _UBICACIONTITULO As String
		
		Private _HoraGrabacion As String
		
		Private _OrigenOperacion As String
		
		Private _CodigoOperadorCompra As Integer
		
		Private _CodigoOperadorVende As Integer
		
		Private _IdentificacionRemate As String
		
		Private _ModalidaOperacion As String
		
		Private _IndicadorPrecio As String
		
		Private _PeriodoExdividendo As String
		
		Private _PlazoOperacionRepo As Integer
		
		Private _ValorCaptacionRepo As System.Nullable(Of Double)
		
		Private _VolumenCompraRepo As System.Nullable(Of Double)
		
		Private _PrecioNetoFraccion As System.Nullable(Of Double)
		
		Private _VolumenNetoFraccion As System.Nullable(Of Double)
		
		Private _CodigoContactoComercial As String
		
		Private _NroFraccionOperacion As Integer
		
		Private _IdentificacionPatrimonio1 As String
		
		Private _TipoidentificacionCliente2 As String
		
		Private _NitCliente2 As String
		
		Private _IdentificacionPatrimonio2 As String
		
		Private _TipoIdentificacionCliente3 As String
		
		Private _NitCliente3 As String
		
		Private _IdentificacionPatrimonio3 As String
		
		Private _IndicadorOperacion As String
		
		Private _BaseRetencion As System.Nullable(Of Double)
		
		Private _PorcRetencion As System.Nullable(Of Double)
		
		Private _BaseRetencionTranslado As System.Nullable(Of Double)
		
		Private _PorcRetencionTranslado As System.Nullable(Of Double)
		
		Private _PorcIvaComision As System.Nullable(Of Double)
		
		Private _IndicadorAcciones As String
		
		Private _OperacionNegociada As String
		
		Private _FechaConstancia As System.Nullable(Of Date)
		
		Private _ValorConstancia As System.Nullable(Of Double)
		
		Private _GeneraConstancia As String
		
		Private _Cargado As Boolean
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _CumplimientoTitulo As System.Nullable(Of Date)
		
		Private _NroLote As Integer
		
		Private _ValorEntregaContraPago As System.Nullable(Of Double)
		
		Private _AquienSeEnviaRetencion As String
		
		Private _IDBaseDias As String
		
		Private _TipoDeOferta As String
		
		Private _NroLoteENC As Integer
		
		Private _ContabilidadENC As System.Nullable(Of Date)
		
		Private _IDLiquidacionesOF As Integer
		
		Private _CodigoIntermediario As String
		
		Private _IDNegocio As System.nullable(of System.Int32)
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnIDOrdenChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnIDFacturaChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDFacturaChanged()
    End Sub
    Partial Private Sub OnFacturadaChanging(value As String)
    End Sub
    Partial Private Sub OnFacturadaChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnIDOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIDOrdenanteChanged()
    End Sub
    Partial Private Sub OnIDBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBolsaChanged()
    End Sub
    Partial Private Sub OnValBolsaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValBolsaChanged()
    End Sub
    Partial Private Sub OnIDRuedaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnIDRuedaChanged()
    End Sub
    Partial Private Sub OnTasaDescuentoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaDescuentoChanged()
    End Sub
    Partial Private Sub OnTasaCompraVendeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaCompraVendeChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnIndicadorEconomicoChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorEconomicoChanged()
    End Sub
    Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPuntosIndicadorChanged()
    End Sub
    Partial Private Sub OnPlazoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlazoChanged()
    End Sub
    Partial Private Sub OnLiquidacionChanging(value As Date)
    End Sub
    Partial Private Sub OnLiquidacionChanged()
    End Sub
    Partial Private Sub OnCumplimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnCumplimientoChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnOtraPlazaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOtraPlazaChanged()
    End Sub
    Partial Private Sub OnPlazaChanging(value As String)
    End Sub
    Partial Private Sub OnPlazaChanged()
    End Sub
    Partial Private Sub OnIDComisionistaLocalChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDComisionistaLocalChanged()
    End Sub
    Partial Private Sub OnIDComisionistaOtraPlazaChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDComisionistaOtraPlazaChanged()
    End Sub
    Partial Private Sub OnIDCiudadOtraPlazaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCiudadOtraPlazaChanged()
    End Sub
    Partial Private Sub OnTasaEfectivaChanging(value As Double)
    End Sub
    Partial Private Sub OnTasaEfectivaChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnTransaccion_curChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTransaccion_curChanged()
    End Sub
    Partial Private Sub OnSubTotalLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSubTotalLiqChanged()
    End Sub
    Partial Private Sub OnTotalLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalLiqChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRetencionChanged()
    End Sub
    Partial Private Sub OnInteresesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnInteresesChanged()
    End Sub
    Partial Private Sub OnValorIvaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorIvaChanged()
    End Sub
    Partial Private Sub OnDiasInteresesChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasInteresesChanged()
    End Sub
    Partial Private Sub OnFactorComisionPactadaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFactorComisionPactadaChanged()
    End Sub
    Partial Private Sub OnMercadoChanging(value As String)
    End Sub
    Partial Private Sub OnMercadoChanged()
    End Sub
    Partial Private Sub OnNroTituloChanging(value As String)
    End Sub
    Partial Private Sub OnNroTituloChanged()
    End Sub
    Partial Private Sub OnIDCiudadExpTituloChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCiudadExpTituloChanged()
    End Sub
    Partial Private Sub OnPlazoOriginalChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlazoOriginalChanged()
    End Sub
    Partial Private Sub OnAplazamientoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplazamientoChanged()
    End Sub
    Partial Private Sub OnVersionPapeletaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVersionPapeletaChanged()
    End Sub
    Partial Private Sub OnEmisionOriginalChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionOriginalChanged()
    End Sub
    Partial Private Sub OnVencimientoOriginalChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoOriginalChanged()
    End Sub
    Partial Private Sub OnImpresionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnImpresionesChanged()
    End Sub
    Partial Private Sub OnFormaPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFormaPagoChanged()
    End Sub
    Partial Private Sub OnCtrlImpPapeletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCtrlImpPapeletaChanged()
    End Sub
    Partial Private Sub OnDiasVencimientoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasVencimientoChanged()
    End Sub
    Partial Private Sub OnPosicionPropiaChanging(value As String)
    End Sub
    Partial Private Sub OnPosicionPropiaChanged()
    End Sub
    Partial Private Sub OnTransaccionChanging(value As String)
    End Sub
    Partial Private Sub OnTransaccionChanged()
    End Sub
    Partial Private Sub OnTipoOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOperacionChanged()
    End Sub
    Partial Private Sub OnDiasContadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasContadoChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnObjetoOrdenExtraordinariaChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoOrdenExtraordinariaChanged()
    End Sub
    Partial Private Sub OnNumPadreChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumPadreChanged()
    End Sub
    Partial Private Sub OnParcialPadreChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnParcialPadreChanged()
    End Sub
    Partial Private Sub OnOperacionPadreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOperacionPadreChanged()
    End Sub
    Partial Private Sub OnDiasTramoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasTramoChanged()
    End Sub
    Partial Private Sub OnVendidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVendidoChanged()
    End Sub
    Partial Private Sub OnVendido_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVendido_fechaChanged()
    End Sub
    Partial Private Sub OnManualChanging(value As Boolean)
    End Sub
    Partial Private Sub OnManualChanged()
    End Sub
    Partial Private Sub OnValorTrasladoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorTrasladoChanged()
    End Sub
    Partial Private Sub OnValorBrutoCompraVencidaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorBrutoCompraVencidaChanged()
    End Sub
    Partial Private Sub OnAutoRetenedorChanging(value As String)
    End Sub
    Partial Private Sub OnAutoRetenedorChanged()
    End Sub
    Partial Private Sub OnSujetoChanging(value As String)
    End Sub
    Partial Private Sub OnSujetoChanged()
    End Sub
    Partial Private Sub OnPcRenEfecCompraRetChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPcRenEfecCompraRetChanged()
    End Sub
    Partial Private Sub OnPcRenEfecVendeRetChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPcRenEfecVendeRetChanged()
    End Sub
    Partial Private Sub OnReinversionChanging(value As String)
    End Sub
    Partial Private Sub OnReinversionChanged()
    End Sub
    Partial Private Sub OnSwapChanging(value As String)
    End Sub
    Partial Private Sub OnSwapChanged()
    End Sub
    Partial Private Sub OnNroSwapChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroSwapChanged()
    End Sub
    Partial Private Sub OnCertificacionChanging(value As String)
    End Sub
    Partial Private Sub OnCertificacionChanged()
    End Sub
    Partial Private Sub OnDescuentoAcumulaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDescuentoAcumulaChanged()
    End Sub
    Partial Private Sub OnPctRendimientoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPctRendimientoChanged()
    End Sub
    Partial Private Sub OnFechaCompraVencidoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaCompraVencidoChanged()
    End Sub
    Partial Private Sub OnPrecioCompraVencidoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecioCompraVencidoChanged()
    End Sub
    Partial Private Sub OnConstanciaEnajenacionChanging(value As String)
    End Sub
    Partial Private Sub OnConstanciaEnajenacionChanged()
    End Sub
    Partial Private Sub OnRepoTituloChanging(value As String)
    End Sub
    Partial Private Sub OnRepoTituloChanged()
    End Sub
    Partial Private Sub OnServBolsaVbleChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnServBolsaVbleChanged()
    End Sub
    Partial Private Sub OnServBolsaFijoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnServBolsaFijoChanged()
    End Sub
    Partial Private Sub OnTrasladoChanging(value As String)
    End Sub
    Partial Private Sub OnTrasladoChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnHoraGrabacionChanging(value As String)
    End Sub
    Partial Private Sub OnHoraGrabacionChanged()
    End Sub
    Partial Private Sub OnOrigenOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnOrigenOperacionChanged()
    End Sub
    Partial Private Sub OnCodigoOperadorCompraChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoOperadorCompraChanged()
    End Sub
    Partial Private Sub OnCodigoOperadorVendeChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoOperadorVendeChanged()
    End Sub
    Partial Private Sub OnIdentificacionRemateChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionRemateChanged()
    End Sub
    Partial Private Sub OnModalidaOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnModalidaOperacionChanged()
    End Sub
    Partial Private Sub OnIndicadorPrecioChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorPrecioChanged()
    End Sub
    Partial Private Sub OnPeriodoExdividendoChanging(value As String)
    End Sub
    Partial Private Sub OnPeriodoExdividendoChanged()
    End Sub
    Partial Private Sub OnPlazoOperacionRepoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPlazoOperacionRepoChanged()
    End Sub
    Partial Private Sub OnValorCaptacionRepoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorCaptacionRepoChanged()
    End Sub
    Partial Private Sub OnVolumenCompraRepoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVolumenCompraRepoChanged()
    End Sub
    Partial Private Sub OnPrecioNetoFraccionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecioNetoFraccionChanged()
    End Sub
    Partial Private Sub OnVolumenNetoFraccionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVolumenNetoFraccionChanged()
    End Sub
    Partial Private Sub OnCodigoContactoComercialChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoContactoComercialChanged()
    End Sub
    Partial Private Sub OnNroFraccionOperacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroFraccionOperacionChanged()
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio1Changing(value As String)
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio1Changed()
    End Sub
    Partial Private Sub OnTipoidentificacionCliente2Changing(value As String)
    End Sub
    Partial Private Sub OnTipoidentificacionCliente2Changed()
    End Sub
    Partial Private Sub OnNitCliente2Changing(value As String)
    End Sub
    Partial Private Sub OnNitCliente2Changed()
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio2Changing(value As String)
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio2Changed()
    End Sub
    Partial Private Sub OnTipoIdentificacionCliente3Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionCliente3Changed()
    End Sub
    Partial Private Sub OnNitCliente3Changing(value As String)
    End Sub
    Partial Private Sub OnNitCliente3Changed()
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio3Changing(value As String)
    End Sub
    Partial Private Sub OnIdentificacionPatrimonio3Changed()
    End Sub
    Partial Private Sub OnIndicadorOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorOperacionChanged()
    End Sub
    Partial Private Sub OnBaseRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBaseRetencionChanged()
    End Sub
    Partial Private Sub OnPorcRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcRetencionChanged()
    End Sub
    Partial Private Sub OnBaseRetencionTransladoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBaseRetencionTransladoChanged()
    End Sub
    Partial Private Sub OnPorcRetencionTransladoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcRetencionTransladoChanged()
    End Sub
    Partial Private Sub OnPorcIvaComisionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcIvaComisionChanged()
    End Sub
    Partial Private Sub OnIndicadorAccionesChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorAccionesChanged()
    End Sub
    Partial Private Sub OnOperacionNegociadaChanging(value As String)
    End Sub
    Partial Private Sub OnOperacionNegociadaChanged()
    End Sub
    Partial Private Sub OnFechaConstanciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaConstanciaChanged()
    End Sub
    Partial Private Sub OnValorConstanciaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorConstanciaChanged()
    End Sub
    Partial Private Sub OnGeneraConstanciaChanging(value As String)
    End Sub
    Partial Private Sub OnGeneraConstanciaChanged()
    End Sub
    Partial Private Sub OnCargadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCargadoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCumplimientoTituloChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCumplimientoTituloChanged()
    End Sub
    Partial Private Sub OnNroLoteChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLoteChanged()
    End Sub
    Partial Private Sub OnValorEntregaContraPagoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorEntregaContraPagoChanged()
    End Sub
    Partial Private Sub OnAquienSeEnviaRetencionChanging(value As String)
    End Sub
    Partial Private Sub OnAquienSeEnviaRetencionChanged()
    End Sub
    Partial Private Sub OnIDBaseDiasChanging(value As String)
    End Sub
    Partial Private Sub OnIDBaseDiasChanged()
    End Sub
    Partial Private Sub OnTipoDeOfertaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDeOfertaChanged()
    End Sub
    Partial Private Sub OnNroLoteENCChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLoteENCChanged()
    End Sub
    Partial Private Sub OnContabilidadENCChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnContabilidadENCChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionesOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLiquidacionesOFChanged()
    End Sub
    Partial Private Sub OnCodigoIntermediarioChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoIntermediarioChanged()
    End Sub
    Partial Private Sub OnIDNegocioChanging(value As System.nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDNegocioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Parcial() As Integer
			Get
				Return Me._Parcial
			End Get
			Set
				If (Object.Equals(Me._Parcial, value) = false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me.OnClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOrden = value
					Me.SendPropertyChanged("ClaseOrden")
					Me.OnClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_IDOrden", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrden() As Integer
			Get
				Return Me._IDOrden
			End Get
			Set
				If (Object.Equals(Me._IDOrden, value) = false) Then
					Me.OnIDOrdenChanging(value)
					Me.SendPropertyChanging
					Me._IDOrden = value
					Me.SendPropertyChanged("IDOrden")
					Me.OnIDOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5)")>  _
		Public Property Prefijo() As String
			Get
				Return Me._Prefijo
			End Get
			Set
				If (String.Equals(Me._Prefijo, value) = false) Then
					Me.OnPrefijoChanging(value)
					Me.SendPropertyChanging
					Me._Prefijo = value
					Me.SendPropertyChanged("Prefijo")
					Me.OnPrefijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDFactura", Storage:="_IDFactura", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDFactura() As System.Nullable(of System.int32)
			Get
				Return Me._IDFactura
			End Get
			Set
				If (Object.Equals(Me._IDFactura, value) = false) Then
					Me.OnIDFacturaChanging(value)
					Me.SendPropertyChanging
					Me._IDFactura = value
					Me.SendPropertyChanged("IDFactura")
					Me.OnIDFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFacturada", Storage:="_Facturada", DbType:="Varchar(1)")>  _
		Public Property Facturada() As String
			Get
				Return Me._Facturada
			End Get
			Set
				If (String.Equals(Me._Facturada, value) = false) Then
					Me.OnFacturadaChanging(value)
					Me.SendPropertyChanging
					Me._Facturada = value
					Me.SendPropertyChanged("Facturada")
					Me.OnFacturadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDComitente() As String
			Get
				Return Me._IDComitente
			End Get
			Set
				If (String.Equals(Me._IDComitente, value) = false) Then
					Me.OnIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IDComitente = value
					Me.SendPropertyChanged("IDComitente")
					Me.OnIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenante", Storage:="_IDOrdenante", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrdenante() As String
			Get
				Return Me._IDOrdenante
			End Get
			Set
				If (String.Equals(Me._IDOrdenante, value) = false) Then
					Me.OnIDOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._IDOrdenante = value
					Me.SendPropertyChanged("IDOrdenante")
					Me.OnIDOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDBolsa", Storage:="_IDBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDBolsa() As Integer
			Get
				Return Me._IDBolsa
			End Get
			Set
				If (Object.Equals(Me._IDBolsa, value) = false) Then
					Me.OnIDBolsaChanging(value)
					Me.SendPropertyChanging
					Me._IDBolsa = value
					Me.SendPropertyChanged("IDBolsa")
					Me.OnIDBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValBolsa", Storage:="_ValBolsa", DbType:="Float")>  _
		Public Property ValBolsa() As System.Nullable(Of Double)
			Get
				Return Me._ValBolsa
			End Get
			Set
				If (Me._ValBolsa.Equals(value) = false) Then
					Me.OnValBolsaChanging(value)
					Me.SendPropertyChanging
					Me._ValBolsa = value
					Me.SendPropertyChanged("ValBolsa")
					Me.OnValBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bytIDRueda", Storage:="_IDRueda", DbType:="Smallint")>  _
		Public Property IDRueda() As System.Nullable(Of Short)
			Get
				Return Me._IDRueda
			End Get
			Set
				If (Me._IDRueda.Equals(value) = false) Then
					Me.OnIDRuedaChanging(value)
					Me.SendPropertyChanging
					Me._IDRueda = value
					Me.SendPropertyChanged("IDRueda")
					Me.OnIDRuedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaDescuento", Storage:="_TasaDescuento", DbType:="Float")>  _
		Public Property TasaDescuento() As System.Nullable(Of Double)
			Get
				Return Me._TasaDescuento
			End Get
			Set
				If (Me._TasaDescuento.Equals(value) = false) Then
					Me.OnTasaDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._TasaDescuento = value
					Me.SendPropertyChanged("TasaDescuento")
					Me.OnTasaDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaCompraVende", Storage:="_TasaCompraVende", DbType:="Float")>  _
		Public Property TasaCompraVende() As System.Nullable(Of Double)
			Get
				Return Me._TasaCompraVende
			End Get
			Set
				If (Me._TasaCompraVende.Equals(value) = false) Then
					Me.OnTasaCompraVendeChanging(value)
					Me.SendPropertyChanging
					Me._TasaCompraVende = value
					Me.SendPropertyChanged("TasaCompraVende")
					Me.OnTasaCompraVendeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(2)")>  _
		Public Property Modalidad() As String
			Get
				Return Me._Modalidad
			End Get
			Set
				If (String.Equals(Me._Modalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._Modalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorEconomico", Storage:="_IndicadorEconomico", DbType:="Varchar(2)")>  _
		Public Property IndicadorEconomico() As String
			Get
				Return Me._IndicadorEconomico
			End Get
			Set
				If (String.Equals(Me._IndicadorEconomico, value) = false) Then
					Me.OnIndicadorEconomicoChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorEconomico = value
					Me.SendPropertyChanged("IndicadorEconomico")
					Me.OnIndicadorEconomicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float")>  _
		Public Property PuntosIndicador() As System.Nullable(Of Double)
			Get
				Return Me._PuntosIndicador
			End Get
			Set
				If (Me._PuntosIndicador.Equals(value) = false) Then
					Me.OnPuntosIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._PuntosIndicador = value
					Me.SendPropertyChanged("PuntosIndicador")
					Me.OnPuntosIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPlazo", Storage:="_Plazo", DbType:="Int", CanBeNull:=true)>  _
		Public Property Plazo() As Integer
			Get
				Return Me._Plazo
			End Get
			Set
				If (Object.Equals(Me._Plazo, value) = false) Then
					Me.OnPlazoChanging(value)
					Me.SendPropertyChanging
					Me._Plazo = value
					Me.SendPropertyChanged("Plazo")
					Me.OnPlazoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_Liquidacion", DbType:="Datetime NOT NULL")>  _
		Public Property Liquidacion() As Date
			Get
				Return Me._Liquidacion
			End Get
			Set
				If ((Me._Liquidacion = value)  _
							= false) Then
					Me.OnLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._Liquidacion = value
					Me.SendPropertyChanged("Liquidacion")
					Me.OnLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="Datetime NOT NULL")>  _
		Public Property Cumplimiento() As Date
			Get
				Return Me._Cumplimiento
			End Get
			Set
				If ((Me._Cumplimiento = value)  _
							= false) Then
					Me.OnCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._Cumplimiento = value
					Me.SendPropertyChanged("Cumplimiento")
					Me.OnCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="Datetime")>  _
		Public Property Emision() As System.Nullable(Of Date)
			Get
				Return Me._Emision
			End Get
			Set
				If (Me._Emision.Equals(value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._Emision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="Datetime")>  _
		Public Property Vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._Vencimiento
			End Get
			Set
				If (Me._Vencimiento.Equals(value) = false) Then
					Me.OnVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._Vencimiento = value
					Me.SendPropertyChanged("Vencimiento")
					Me.OnVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOtraPlaza", Storage:="_OtraPlaza", DbType:="Bit NOT NULL")>  _
		Public Property OtraPlaza() As Boolean
			Get
				Return Me._OtraPlaza
			End Get
			Set
				If ((Me._OtraPlaza = value)  _
							= false) Then
					Me.OnOtraPlazaChanging(value)
					Me.SendPropertyChanging
					Me._OtraPlaza = value
					Me.SendPropertyChanged("OtraPlaza")
					Me.OnOtraPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPlaza", Storage:="_Plaza", DbType:="Varchar(3)")>  _
		Public Property Plaza() As String
			Get
				Return Me._Plaza
			End Get
			Set
				If (String.Equals(Me._Plaza, value) = false) Then
					Me.OnPlazaChanging(value)
					Me.SendPropertyChanging
					Me._Plaza = value
					Me.SendPropertyChanged("Plaza")
					Me.OnPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionistaLocal", Storage:="_IDComisionistaLocal", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDComisionistaLocal() As System.Nullable(of System.int32)
			Get
				Return Me._IDComisionistaLocal
			End Get
			Set
				If (Object.Equals(Me._IDComisionistaLocal, value) = false) Then
					Me.OnIDComisionistaLocalChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionistaLocal = value
					Me.SendPropertyChanged("IDComisionistaLocal")
					Me.OnIDComisionistaLocalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionistaOtraPlaza", Storage:="_IDComisionistaOtraPlaza", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDComisionistaOtraPlaza() As System.Nullable(of System.int32)
			Get
				Return Me._IDComisionistaOtraPlaza
			End Get
			Set
				If (Object.Equals(Me._IDComisionistaOtraPlaza, value) = false) Then
					Me.OnIDComisionistaOtraPlazaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionistaOtraPlaza = value
					Me.SendPropertyChanged("IDComisionistaOtraPlaza")
					Me.OnIDComisionistaOtraPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCiudadOtraPlaza", Storage:="_IDCiudadOtraPlaza", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCiudadOtraPlaza() As Integer
			Get
				Return Me._IDCiudadOtraPlaza
			End Get
			Set
				If (Object.Equals(Me._IDCiudadOtraPlaza, value) = false) Then
					Me.OnIDCiudadOtraPlazaChanging(value)
					Me.SendPropertyChanging
					Me._IDCiudadOtraPlaza = value
					Me.SendPropertyChanged("IDCiudadOtraPlaza")
					Me.OnIDCiudadOtraPlazaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaEfectiva", Storage:="_TasaEfectiva", DbType:="Float NOT NULL")>  _
		Public Property TasaEfectiva() As Double
			Get
				Return Me._TasaEfectiva
			End Get
			Set
				If ((Me._TasaEfectiva = value)  _
							= false) Then
					Me.OnTasaEfectivaChanging(value)
					Me.SendPropertyChanging
					Me._TasaEfectiva = value
					Me.SendPropertyChanged("TasaEfectiva")
					Me.OnTasaEfectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curPrecio", Storage:="_Precio", DbType:="Float")>  _
		Public Property Precio() As System.Nullable(Of Double)
			Get
				Return Me._Precio
			End Get
			Set
				If (Me._Precio.Equals(value) = false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTransaccion", Storage:="_Transaccion_cur", DbType:="Float")>  _
		Public Property Transaccion_cur() As System.Nullable(Of Double)
			Get
				Return Me._Transaccion_cur
			End Get
			Set
				If (Me._Transaccion_cur.Equals(value) = false) Then
					Me.OnTransaccion_curChanging(value)
					Me.SendPropertyChanging
					Me._Transaccion_cur = value
					Me.SendPropertyChanged("Transaccion_cur")
					Me.OnTransaccion_curChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curSubTotalLiq", Storage:="_SubTotalLiq", DbType:="Float")>  _
		Public Property SubTotalLiq() As System.Nullable(Of Double)
			Get
				Return Me._SubTotalLiq
			End Get
			Set
				If (Me._SubTotalLiq.Equals(value) = false) Then
					Me.OnSubTotalLiqChanging(value)
					Me.SendPropertyChanging
					Me._SubTotalLiq = value
					Me.SendPropertyChanged("SubTotalLiq")
					Me.OnSubTotalLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTotalLiq", Storage:="_TotalLiq", DbType:="Float")>  _
		Public Property TotalLiq() As System.Nullable(Of Double)
			Get
				Return Me._TotalLiq
			End Get
			Set
				If (Me._TotalLiq.Equals(value) = false) Then
					Me.OnTotalLiqChanging(value)
					Me.SendPropertyChanging
					Me._TotalLiq = value
					Me.SendPropertyChanged("TotalLiq")
					Me.OnTotalLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curComision", Storage:="_Comision", DbType:="Float")>  _
		Public Property Comision() As System.Nullable(Of Double)
			Get
				Return Me._Comision
			End Get
			Set
				If (Me._Comision.Equals(value) = false) Then
					Me.OnComisionChanging(value)
					Me.SendPropertyChanging
					Me._Comision = value
					Me.SendPropertyChanged("Comision")
					Me.OnComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curRetencion", Storage:="_Retencion", DbType:="Float")>  _
		Public Property Retencion() As System.Nullable(Of Double)
			Get
				Return Me._Retencion
			End Get
			Set
				If (Me._Retencion.Equals(value) = false) Then
					Me.OnRetencionChanging(value)
					Me.SendPropertyChanging
					Me._Retencion = value
					Me.SendPropertyChanged("Retencion")
					Me.OnRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curIntereses", Storage:="_Intereses", DbType:="Float")>  _
		Public Property Intereses() As System.Nullable(Of Double)
			Get
				Return Me._Intereses
			End Get
			Set
				If (Me._Intereses.Equals(value) = false) Then
					Me.OnInteresesChanging(value)
					Me.SendPropertyChanging
					Me._Intereses = value
					Me.SendPropertyChanged("Intereses")
					Me.OnInteresesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorIva", Storage:="_ValorIva", DbType:="Float")>  _
		Public Property ValorIva() As System.Nullable(Of Double)
			Get
				Return Me._ValorIva
			End Get
			Set
				If (Me._ValorIva.Equals(value) = false) Then
					Me.OnValorIvaChanging(value)
					Me.SendPropertyChanging
					Me._ValorIva = value
					Me.SendPropertyChanged("ValorIva")
					Me.OnValorIvaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasIntereses", Storage:="_DiasIntereses", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasIntereses() As Integer
			Get
				Return Me._DiasIntereses
			End Get
			Set
				If (Object.Equals(Me._DiasIntereses, value) = false) Then
					Me.OnDiasInteresesChanging(value)
					Me.SendPropertyChanging
					Me._DiasIntereses = value
					Me.SendPropertyChanged("DiasIntereses")
					Me.OnDiasInteresesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblFactorComisionPactada", Storage:="_FactorComisionPactada", DbType:="Float")>  _
		Public Property FactorComisionPactada() As System.Nullable(Of Double)
			Get
				Return Me._FactorComisionPactada
			End Get
			Set
				If (Me._FactorComisionPactada.Equals(value) = false) Then
					Me.OnFactorComisionPactadaChanging(value)
					Me.SendPropertyChanging
					Me._FactorComisionPactada = value
					Me.SendPropertyChanged("FactorComisionPactada")
					Me.OnFactorComisionPactadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_Mercado", DbType:="Varchar(1)")>  _
		Public Property Mercado() As String
			Get
				Return Me._Mercado
			End Get
			Set
				If (String.Equals(Me._Mercado, value) = false) Then
					Me.OnMercadoChanging(value)
					Me.SendPropertyChanging
					Me._Mercado = value
					Me.SendPropertyChanged("Mercado")
					Me.OnMercadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroTitulo", Storage:="_NroTitulo", DbType:="Varchar(25)")>  _
		Public Property NroTitulo() As String
			Get
				Return Me._NroTitulo
			End Get
			Set
				If (String.Equals(Me._NroTitulo, value) = false) Then
					Me.OnNroTituloChanging(value)
					Me.SendPropertyChanging
					Me._NroTitulo = value
					Me.SendPropertyChanged("NroTitulo")
					Me.OnNroTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCiudadExpTitulo", Storage:="_IDCiudadExpTitulo", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCiudadExpTitulo() As Integer
			Get
				Return Me._IDCiudadExpTitulo
			End Get
			Set
				If (Object.Equals(Me._IDCiudadExpTitulo, value) = false) Then
					Me.OnIDCiudadExpTituloChanging(value)
					Me.SendPropertyChanging
					Me._IDCiudadExpTitulo = value
					Me.SendPropertyChanged("IDCiudadExpTitulo")
					Me.OnIDCiudadExpTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPlazoOriginal", Storage:="_PlazoOriginal", DbType:="Int", CanBeNull:=true)>  _
		Public Property PlazoOriginal() As Integer
			Get
				Return Me._PlazoOriginal
			End Get
			Set
				If (Object.Equals(Me._PlazoOriginal, value) = false) Then
					Me.OnPlazoOriginalChanging(value)
					Me.SendPropertyChanging
					Me._PlazoOriginal = value
					Me.SendPropertyChanged("PlazoOriginal")
					Me.OnPlazoOriginalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAplazamiento", Storage:="_Aplazamiento", DbType:="Bit NOT NULL")>  _
		Public Property Aplazamiento() As Boolean
			Get
				Return Me._Aplazamiento
			End Get
			Set
				If ((Me._Aplazamiento = value)  _
							= false) Then
					Me.OnAplazamientoChanging(value)
					Me.SendPropertyChanging
					Me._Aplazamiento = value
					Me.SendPropertyChanged("Aplazamiento")
					Me.OnAplazamientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bytVersionPapeleta", Storage:="_VersionPapeleta", DbType:="Smallint")>  _
		Public Property VersionPapeleta() As System.Nullable(Of Short)
			Get
				Return Me._VersionPapeleta
			End Get
			Set
				If (Me._VersionPapeleta.Equals(value) = false) Then
					Me.OnVersionPapeletaChanging(value)
					Me.SendPropertyChanging
					Me._VersionPapeleta = value
					Me.SendPropertyChanged("VersionPapeleta")
					Me.OnVersionPapeletaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmisionOriginal", Storage:="_EmisionOriginal", DbType:="Datetime")>  _
		Public Property EmisionOriginal() As System.Nullable(Of Date)
			Get
				Return Me._EmisionOriginal
			End Get
			Set
				If (Me._EmisionOriginal.Equals(value) = false) Then
					Me.OnEmisionOriginalChanging(value)
					Me.SendPropertyChanging
					Me._EmisionOriginal = value
					Me.SendPropertyChanged("EmisionOriginal")
					Me.OnEmisionOriginalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimientoOriginal", Storage:="_VencimientoOriginal", DbType:="Datetime")>  _
		Public Property VencimientoOriginal() As System.Nullable(Of Date)
			Get
				Return Me._VencimientoOriginal
			End Get
			Set
				If (Me._VencimientoOriginal.Equals(value) = false) Then
					Me.OnVencimientoOriginalChanging(value)
					Me.SendPropertyChanging
					Me._VencimientoOriginal = value
					Me.SendPropertyChanged("VencimientoOriginal")
					Me.OnVencimientoOriginalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int", CanBeNull:=true)>  _
		Public Property Impresiones() As Integer
			Get
				Return Me._Impresiones
			End Get
			Set
				If (Object.Equals(Me._Impresiones, value) = false) Then
					Me.OnImpresionesChanging(value)
					Me.SendPropertyChanging
					Me._Impresiones = value
					Me.SendPropertyChanged("Impresiones")
					Me.OnImpresionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFormaPago", Storage:="_FormaPago", DbType:="Varchar(2)")>  _
		Public Property FormaPago() As String
			Get
				Return Me._FormaPago
			End Get
			Set
				If (String.Equals(Me._FormaPago, value) = false) Then
					Me.OnFormaPagoChanging(value)
					Me.SendPropertyChanging
					Me._FormaPago = value
					Me.SendPropertyChanged("FormaPago")
					Me.OnFormaPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCtrlImpPapeleta", Storage:="_CtrlImpPapeleta", DbType:="Int", CanBeNull:=true)>  _
		Public Property CtrlImpPapeleta() As Integer
			Get
				Return Me._CtrlImpPapeleta
			End Get
			Set
				If (Object.Equals(Me._CtrlImpPapeleta, value) = false) Then
					Me.OnCtrlImpPapeletaChanging(value)
					Me.SendPropertyChanging
					Me._CtrlImpPapeleta = value
					Me.SendPropertyChanged("CtrlImpPapeleta")
					Me.OnCtrlImpPapeletaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasVencimiento", Storage:="_DiasVencimiento", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasVencimiento() As Integer
			Get
				Return Me._DiasVencimiento
			End Get
			Set
				If (Object.Equals(Me._DiasVencimiento, value) = false) Then
					Me.OnDiasVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._DiasVencimiento = value
					Me.SendPropertyChanged("DiasVencimiento")
					Me.OnDiasVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPosicionPropia", Storage:="_PosicionPropia", DbType:="Varchar(1)")>  _
		Public Property PosicionPropia() As String
			Get
				Return Me._PosicionPropia
			End Get
			Set
				If (String.Equals(Me._PosicionPropia, value) = false) Then
					Me.OnPosicionPropiaChanging(value)
					Me.SendPropertyChanging
					Me._PosicionPropia = value
					Me.SendPropertyChanged("PosicionPropia")
					Me.OnPosicionPropiaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTransaccion", Storage:="_Transaccion", DbType:="Varchar(2)")>  _
		Public Property Transaccion() As String
			Get
				Return Me._Transaccion
			End Get
			Set
				If (String.Equals(Me._Transaccion, value) = false) Then
					Me.OnTransaccionChanging(value)
					Me.SendPropertyChanging
					Me._Transaccion = value
					Me.SendPropertyChanged("Transaccion")
					Me.OnTransaccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(1)")>  _
		Public Property TipoOperacion() As String
			Get
				Return Me._TipoOperacion
			End Get
			Set
				If (String.Equals(Me._TipoOperacion, value) = false) Then
					Me.OnTipoOperacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoOperacion = value
					Me.SendPropertyChanged("TipoOperacion")
					Me.OnTipoOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasContado", Storage:="_DiasContado", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasContado() As Integer
			Get
				Return Me._DiasContado
			End Get
			Set
				If (Object.Equals(Me._DiasContado, value) = false) Then
					Me.OnDiasContadoChanging(value)
					Me.SendPropertyChanging
					Me._DiasContado = value
					Me.SendPropertyChanged("DiasContado")
					Me.OnDiasContadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
		Public Property Ordinaria() As Boolean
			Get
				Return Me._Ordinaria
			End Get
			Set
				If ((Me._Ordinaria = value)  _
							= false) Then
					Me.OnOrdinariaChanging(value)
					Me.SendPropertyChanging
					Me._Ordinaria = value
					Me.SendPropertyChanged("Ordinaria")
					Me.OnOrdinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjetoOrdenExtraordinaria", Storage:="_ObjetoOrdenExtraordinaria", DbType:="Varchar(3)")>  _
		Public Property ObjetoOrdenExtraordinaria() As String
			Get
				Return Me._ObjetoOrdenExtraordinaria
			End Get
			Set
				If (String.Equals(Me._ObjetoOrdenExtraordinaria, value) = false) Then
					Me.OnObjetoOrdenExtraordinariaChanging(value)
					Me.SendPropertyChanging
					Me._ObjetoOrdenExtraordinaria = value
					Me.SendPropertyChanged("ObjetoOrdenExtraordinaria")
					Me.OnObjetoOrdenExtraordinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNumPadre", Storage:="_NumPadre", DbType:="Int", CanBeNull:=true)>  _
		Public Property NumPadre() As Integer
			Get
				Return Me._NumPadre
			End Get
			Set
				If (Object.Equals(Me._NumPadre, value) = false) Then
					Me.OnNumPadreChanging(value)
					Me.SendPropertyChanging
					Me._NumPadre = value
					Me.SendPropertyChanged("NumPadre")
					Me.OnNumPadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcialPadre", Storage:="_ParcialPadre", DbType:="Int", CanBeNull:=true)>  _
		Public Property ParcialPadre() As System.Nullable(of System.int32)
			Get
				Return Me._ParcialPadre
			End Get
			Set
				If (Object.Equals(Me._ParcialPadre, value) = false) Then
					Me.OnParcialPadreChanging(value)
					Me.SendPropertyChanging
					Me._ParcialPadre = value
					Me.SendPropertyChanged("ParcialPadre")
					Me.OnParcialPadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmOperacionPadre", Storage:="_OperacionPadre", DbType:="Datetime")>  _
		Public Property OperacionPadre() As System.Nullable(Of Date)
			Get
				Return Me._OperacionPadre
			End Get
			Set
				If (Me._OperacionPadre.Equals(value) = false) Then
					Me.OnOperacionPadreChanging(value)
					Me.SendPropertyChanging
					Me._OperacionPadre = value
					Me.SendPropertyChanged("OperacionPadre")
					Me.OnOperacionPadreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiasTramo", Storage:="_DiasTramo", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiasTramo() As Integer
			Get
				Return Me._DiasTramo
			End Get
			Set
				If (Object.Equals(Me._DiasTramo, value) = false) Then
					Me.OnDiasTramoChanging(value)
					Me.SendPropertyChanging
					Me._DiasTramo = value
					Me.SendPropertyChanged("DiasTramo")
					Me.OnDiasTramoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logVendido", Storage:="_Vendido", DbType:="Bit NOT NULL")>  _
		Public Property Vendido() As Boolean
			Get
				Return Me._Vendido
			End Get
			Set
				If ((Me._Vendido = value)  _
							= false) Then
					Me.OnVendidoChanging(value)
					Me.SendPropertyChanging
					Me._Vendido = value
					Me.SendPropertyChanged("Vendido")
					Me.OnVendidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVendido", Storage:="_Vendido_fecha", DbType:="Datetime")>  _
		Public Property Vendido_fecha() As System.Nullable(Of Date)
			Get
				Return Me._Vendido_fecha
			End Get
			Set
				If (Me._Vendido_fecha.Equals(value) = false) Then
					Me.OnVendido_fechaChanging(value)
					Me.SendPropertyChanging
					Me._Vendido_fecha = value
					Me.SendPropertyChanged("Vendido_fecha")
					Me.OnVendido_fechaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logManual", Storage:="_Manual", DbType:="Bit NOT NULL")>  _
		Public Property Manual() As Boolean
			Get
				Return Me._Manual
			End Get
			Set
				If ((Me._Manual = value)  _
							= false) Then
					Me.OnManualChanging(value)
					Me.SendPropertyChanging
					Me._Manual = value
					Me.SendPropertyChanged("Manual")
					Me.OnManualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorTraslado", Storage:="_ValorTraslado", DbType:="Float")>  _
		Public Property ValorTraslado() As System.Nullable(Of Double)
			Get
				Return Me._ValorTraslado
			End Get
			Set
				If (Me._ValorTraslado.Equals(value) = false) Then
					Me.OnValorTrasladoChanging(value)
					Me.SendPropertyChanging
					Me._ValorTraslado = value
					Me.SendPropertyChanged("ValorTraslado")
					Me.OnValorTrasladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorBrutoCompraVencida", Storage:="_ValorBrutoCompraVencida", DbType:="Float")>  _
		Public Property ValorBrutoCompraVencida() As System.Nullable(Of Double)
			Get
				Return Me._ValorBrutoCompraVencida
			End Get
			Set
				If (Me._ValorBrutoCompraVencida.Equals(value) = false) Then
					Me.OnValorBrutoCompraVencidaChanging(value)
					Me.SendPropertyChanging
					Me._ValorBrutoCompraVencida = value
					Me.SendPropertyChanged("ValorBrutoCompraVencida")
					Me.OnValorBrutoCompraVencidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAutoRetenedor", Storage:="_AutoRetenedor", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property AutoRetenedor() As String
			Get
				Return Me._AutoRetenedor
			End Get
			Set
				If (String.Equals(Me._AutoRetenedor, value) = false) Then
					Me.OnAutoRetenedorChanging(value)
					Me.SendPropertyChanging
					Me._AutoRetenedor = value
					Me.SendPropertyChanged("AutoRetenedor")
					Me.OnAutoRetenedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSujeto", Storage:="_Sujeto", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Sujeto() As String
			Get
				Return Me._Sujeto
			End Get
			Set
				If (String.Equals(Me._Sujeto, value) = false) Then
					Me.OnSujetoChanging(value)
					Me.SendPropertyChanging
					Me._Sujeto = value
					Me.SendPropertyChanged("Sujeto")
					Me.OnSujetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPcRenEfecCompraRet", Storage:="_PcRenEfecCompraRet", DbType:="Float")>  _
		Public Property PcRenEfecCompraRet() As System.Nullable(Of Double)
			Get
				Return Me._PcRenEfecCompraRet
			End Get
			Set
				If (Me._PcRenEfecCompraRet.Equals(value) = false) Then
					Me.OnPcRenEfecCompraRetChanging(value)
					Me.SendPropertyChanging
					Me._PcRenEfecCompraRet = value
					Me.SendPropertyChanged("PcRenEfecCompraRet")
					Me.OnPcRenEfecCompraRetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPcRenEfecVendeRet", Storage:="_PcRenEfecVendeRet", DbType:="Float")>  _
		Public Property PcRenEfecVendeRet() As System.Nullable(Of Double)
			Get
				Return Me._PcRenEfecVendeRet
			End Get
			Set
				If (Me._PcRenEfecVendeRet.Equals(value) = false) Then
					Me.OnPcRenEfecVendeRetChanging(value)
					Me.SendPropertyChanging
					Me._PcRenEfecVendeRet = value
					Me.SendPropertyChanged("PcRenEfecVendeRet")
					Me.OnPcRenEfecVendeRetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReinversion", Storage:="_Reinversion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Reinversion() As String
			Get
				Return Me._Reinversion
			End Get
			Set
				If (String.Equals(Me._Reinversion, value) = false) Then
					Me.OnReinversionChanging(value)
					Me.SendPropertyChanging
					Me._Reinversion = value
					Me.SendPropertyChanged("Reinversion")
					Me.OnReinversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSwap", Storage:="_Swap", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Swap() As String
			Get
				Return Me._Swap
			End Get
			Set
				If (String.Equals(Me._Swap, value) = false) Then
					Me.OnSwapChanging(value)
					Me.SendPropertyChanging
					Me._Swap = value
					Me.SendPropertyChanged("Swap")
					Me.OnSwapChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroSwap", Storage:="_NroSwap", DbType:="Int", CanBeNull:=true)>  _
		Public Property NroSwap() As Integer
			Get
				Return Me._NroSwap
			End Get
			Set
				If (Object.Equals(Me._NroSwap, value) = false) Then
					Me.OnNroSwapChanging(value)
					Me.SendPropertyChanging
					Me._NroSwap = value
					Me.SendPropertyChanged("NroSwap")
					Me.OnNroSwapChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCertificacion", Storage:="_Certificacion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property Certificacion() As String
			Get
				Return Me._Certificacion
			End Get
			Set
				If (String.Equals(Me._Certificacion, value) = false) Then
					Me.OnCertificacionChanging(value)
					Me.SendPropertyChanging
					Me._Certificacion = value
					Me.SendPropertyChanged("Certificacion")
					Me.OnCertificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblDescuentoAcumula", Storage:="_DescuentoAcumula", DbType:="Float")>  _
		Public Property DescuentoAcumula() As System.Nullable(Of Double)
			Get
				Return Me._DescuentoAcumula
			End Get
			Set
				If (Me._DescuentoAcumula.Equals(value) = false) Then
					Me.OnDescuentoAcumulaChanging(value)
					Me.SendPropertyChanging
					Me._DescuentoAcumula = value
					Me.SendPropertyChanged("DescuentoAcumula")
					Me.OnDescuentoAcumulaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPctRendimiento", Storage:="_PctRendimiento", DbType:="Float")>  _
		Public Property PctRendimiento() As System.Nullable(Of Double)
			Get
				Return Me._PctRendimiento
			End Get
			Set
				If (Me._PctRendimiento.Equals(value) = false) Then
					Me.OnPctRendimientoChanging(value)
					Me.SendPropertyChanging
					Me._PctRendimiento = value
					Me.SendPropertyChanged("PctRendimiento")
					Me.OnPctRendimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCompraVencido", Storage:="_FechaCompraVencido", DbType:="Datetime")>  _
		Public Property FechaCompraVencido() As System.Nullable(Of Date)
			Get
				Return Me._FechaCompraVencido
			End Get
			Set
				If (Me._FechaCompraVencido.Equals(value) = false) Then
					Me.OnFechaCompraVencidoChanging(value)
					Me.SendPropertyChanging
					Me._FechaCompraVencido = value
					Me.SendPropertyChanged("FechaCompraVencido")
					Me.OnFechaCompraVencidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioCompraVencido", Storage:="_PrecioCompraVencido", DbType:="Float")>  _
		Public Property PrecioCompraVencido() As System.Nullable(Of Double)
			Get
				Return Me._PrecioCompraVencido
			End Get
			Set
				If (Me._PrecioCompraVencido.Equals(value) = false) Then
					Me.OnPrecioCompraVencidoChanging(value)
					Me.SendPropertyChanging
					Me._PrecioCompraVencido = value
					Me.SendPropertyChanged("PrecioCompraVencido")
					Me.OnPrecioCompraVencidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConstanciaEnajenacion", Storage:="_ConstanciaEnajenacion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property ConstanciaEnajenacion() As String
			Get
				Return Me._ConstanciaEnajenacion
			End Get
			Set
				If (String.Equals(Me._ConstanciaEnajenacion, value) = false) Then
					Me.OnConstanciaEnajenacionChanging(value)
					Me.SendPropertyChanging
					Me._ConstanciaEnajenacion = value
					Me.SendPropertyChanged("ConstanciaEnajenacion")
					Me.OnConstanciaEnajenacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRepoTitulo", Storage:="_RepoTitulo", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property RepoTitulo() As String
			Get
				Return Me._RepoTitulo
			End Get
			Set
				If (String.Equals(Me._RepoTitulo, value) = false) Then
					Me.OnRepoTituloChanging(value)
					Me.SendPropertyChanging
					Me._RepoTitulo = value
					Me.SendPropertyChanged("RepoTitulo")
					Me.OnRepoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblServBolsaVble", Storage:="_ServBolsaVble", DbType:="Float")>  _
		Public Property ServBolsaVble() As System.Nullable(Of Double)
			Get
				Return Me._ServBolsaVble
			End Get
			Set
				If (Me._ServBolsaVble.Equals(value) = false) Then
					Me.OnServBolsaVbleChanging(value)
					Me.SendPropertyChanging
					Me._ServBolsaVble = value
					Me.SendPropertyChanged("ServBolsaVble")
					Me.OnServBolsaVbleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblServBolsaFijo", Storage:="_ServBolsaFijo", DbType:="Float")>  _
		Public Property ServBolsaFijo() As System.Nullable(Of Double)
			Get
				Return Me._ServBolsaFijo
			End Get
			Set
				If (Me._ServBolsaFijo.Equals(value) = false) Then
					Me.OnServBolsaFijoChanging(value)
					Me.SendPropertyChanging
					Me._ServBolsaFijo = value
					Me.SendPropertyChanged("ServBolsaFijo")
					Me.OnServBolsaFijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTraslado", Storage:="_Traslado", DbType:="Varchar(1)")>  _
		Public Property Traslado() As String
			Get
				Return Me._Traslado
			End Get
			Set
				If (String.Equals(Me._Traslado, value) = false) Then
					Me.OnTrasladoChanging(value)
					Me.SendPropertyChanging
					Me._Traslado = value
					Me.SendPropertyChanged("Traslado")
					Me.OnTrasladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(1)")>  _
		Public Property UBICACIONTITULO() As String
			Get
				Return Me._UBICACIONTITULO
			End Get
			Set
				If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
					Me.OnUBICACIONTITULOChanging(value)
					Me.SendPropertyChanging
					Me._UBICACIONTITULO = value
					Me.SendPropertyChanged("UBICACIONTITULO")
					Me.OnUBICACIONTITULOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraGrabacion", Storage:="_HoraGrabacion", DbType:="Varchar(8)")>  _
		Public Property HoraGrabacion() As String
			Get
				Return Me._HoraGrabacion
			End Get
			Set
				If (String.Equals(Me._HoraGrabacion, value) = false) Then
					Me.OnHoraGrabacionChanging(value)
					Me.SendPropertyChanging
					Me._HoraGrabacion = value
					Me.SendPropertyChanged("HoraGrabacion")
					Me.OnHoraGrabacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOrigenOperacion", Storage:="_OrigenOperacion", DbType:="Varchar(1)")>  _
		Public Property OrigenOperacion() As String
			Get
				Return Me._OrigenOperacion
			End Get
			Set
				If (String.Equals(Me._OrigenOperacion, value) = false) Then
					Me.OnOrigenOperacionChanging(value)
					Me.SendPropertyChanging
					Me._OrigenOperacion = value
					Me.SendPropertyChanged("OrigenOperacion")
					Me.OnOrigenOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoOperadorCompra", Storage:="_CodigoOperadorCompra", DbType:="Int", CanBeNull:=true)>  _
		Public Property CodigoOperadorCompra() As Integer
			Get
				Return Me._CodigoOperadorCompra
			End Get
			Set
				If (Object.Equals(Me._CodigoOperadorCompra, value) = false) Then
					Me.OnCodigoOperadorCompraChanging(value)
					Me.SendPropertyChanging
					Me._CodigoOperadorCompra = value
					Me.SendPropertyChanged("CodigoOperadorCompra")
					Me.OnCodigoOperadorCompraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoOperadorVende", Storage:="_CodigoOperadorVende", DbType:="Int", CanBeNull:=true)>  _
		Public Property CodigoOperadorVende() As Integer
			Get
				Return Me._CodigoOperadorVende
			End Get
			Set
				If (Object.Equals(Me._CodigoOperadorVende, value) = false) Then
					Me.OnCodigoOperadorVendeChanging(value)
					Me.SendPropertyChanging
					Me._CodigoOperadorVende = value
					Me.SendPropertyChanged("CodigoOperadorVende")
					Me.OnCodigoOperadorVendeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionRemate", Storage:="_IdentificacionRemate", DbType:="Varchar(2)")>  _
		Public Property IdentificacionRemate() As String
			Get
				Return Me._IdentificacionRemate
			End Get
			Set
				If (String.Equals(Me._IdentificacionRemate, value) = false) Then
					Me.OnIdentificacionRemateChanging(value)
					Me.SendPropertyChanging
					Me._IdentificacionRemate = value
					Me.SendPropertyChanged("IdentificacionRemate")
					Me.OnIdentificacionRemateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidaOperacion", Storage:="_ModalidaOperacion", DbType:="Char(1)")>  _
		Public Property ModalidaOperacion() As String
			Get
				Return Me._ModalidaOperacion
			End Get
			Set
				If (String.Equals(Me._ModalidaOperacion, value) = false) Then
					Me.OnModalidaOperacionChanging(value)
					Me.SendPropertyChanging
					Me._ModalidaOperacion = value
					Me.SendPropertyChanged("ModalidaOperacion")
					Me.OnModalidaOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorPrecio", Storage:="_IndicadorPrecio", DbType:="Char(1)")>  _
		Public Property IndicadorPrecio() As String
			Get
				Return Me._IndicadorPrecio
			End Get
			Set
				If (String.Equals(Me._IndicadorPrecio, value) = false) Then
					Me.OnIndicadorPrecioChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorPrecio = value
					Me.SendPropertyChanged("IndicadorPrecio")
					Me.OnIndicadorPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPeriodoExdividendo", Storage:="_PeriodoExdividendo", DbType:="Char(1)")>  _
		Public Property PeriodoExdividendo() As String
			Get
				Return Me._PeriodoExdividendo
			End Get
			Set
				If (String.Equals(Me._PeriodoExdividendo, value) = false) Then
					Me.OnPeriodoExdividendoChanging(value)
					Me.SendPropertyChanging
					Me._PeriodoExdividendo = value
					Me.SendPropertyChanged("PeriodoExdividendo")
					Me.OnPeriodoExdividendoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPlazoOperacionRepo", Storage:="_PlazoOperacionRepo", DbType:="Int", CanBeNull:=true)>  _
		Public Property PlazoOperacionRepo() As Integer
			Get
				Return Me._PlazoOperacionRepo
			End Get
			Set
				If (Object.Equals(Me._PlazoOperacionRepo, value) = false) Then
					Me.OnPlazoOperacionRepoChanging(value)
					Me.SendPropertyChanging
					Me._PlazoOperacionRepo = value
					Me.SendPropertyChanged("PlazoOperacionRepo")
					Me.OnPlazoOperacionRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorCaptacionRepo", Storage:="_ValorCaptacionRepo", DbType:="Float")>  _
		Public Property ValorCaptacionRepo() As System.Nullable(Of Double)
			Get
				Return Me._ValorCaptacionRepo
			End Get
			Set
				If (Me._ValorCaptacionRepo.Equals(value) = false) Then
					Me.OnValorCaptacionRepoChanging(value)
					Me.SendPropertyChanging
					Me._ValorCaptacionRepo = value
					Me.SendPropertyChanged("ValorCaptacionRepo")
					Me.OnValorCaptacionRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVolumenCompraRepo", Storage:="_VolumenCompraRepo", DbType:="Float")>  _
		Public Property VolumenCompraRepo() As System.Nullable(Of Double)
			Get
				Return Me._VolumenCompraRepo
			End Get
			Set
				If (Me._VolumenCompraRepo.Equals(value) = false) Then
					Me.OnVolumenCompraRepoChanging(value)
					Me.SendPropertyChanging
					Me._VolumenCompraRepo = value
					Me.SendPropertyChanged("VolumenCompraRepo")
					Me.OnVolumenCompraRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioNetoFraccion", Storage:="_PrecioNetoFraccion", DbType:="Float")>  _
		Public Property PrecioNetoFraccion() As System.Nullable(Of Double)
			Get
				Return Me._PrecioNetoFraccion
			End Get
			Set
				If (Me._PrecioNetoFraccion.Equals(value) = false) Then
					Me.OnPrecioNetoFraccionChanging(value)
					Me.SendPropertyChanging
					Me._PrecioNetoFraccion = value
					Me.SendPropertyChanged("PrecioNetoFraccion")
					Me.OnPrecioNetoFraccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVolumenNetoFraccion", Storage:="_VolumenNetoFraccion", DbType:="Float")>  _
		Public Property VolumenNetoFraccion() As System.Nullable(Of Double)
			Get
				Return Me._VolumenNetoFraccion
			End Get
			Set
				If (Me._VolumenNetoFraccion.Equals(value) = false) Then
					Me.OnVolumenNetoFraccionChanging(value)
					Me.SendPropertyChanging
					Me._VolumenNetoFraccion = value
					Me.SendPropertyChanged("VolumenNetoFraccion")
					Me.OnVolumenNetoFraccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoContactoComercial", Storage:="_CodigoContactoComercial", DbType:="Varchar(10)")>  _
		Public Property CodigoContactoComercial() As String
			Get
				Return Me._CodigoContactoComercial
			End Get
			Set
				If (String.Equals(Me._CodigoContactoComercial, value) = false) Then
					Me.OnCodigoContactoComercialChanging(value)
					Me.SendPropertyChanging
					Me._CodigoContactoComercial = value
					Me.SendPropertyChanged("CodigoContactoComercial")
					Me.OnCodigoContactoComercialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroFraccionOperacion", Storage:="_NroFraccionOperacion", DbType:="Int", CanBeNull:=true)>  _
		Public Property NroFraccionOperacion() As Integer
			Get
				Return Me._NroFraccionOperacion
			End Get
			Set
				If (Object.Equals(Me._NroFraccionOperacion, value) = false) Then
					Me.OnNroFraccionOperacionChanging(value)
					Me.SendPropertyChanging
					Me._NroFraccionOperacion = value
					Me.SendPropertyChanged("NroFraccionOperacion")
					Me.OnNroFraccionOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionPatrimonio1", Storage:="_IdentificacionPatrimonio1", DbType:="Varchar(3)")>  _
		Public Property IdentificacionPatrimonio1() As String
			Get
				Return Me._IdentificacionPatrimonio1
			End Get
			Set
				If (String.Equals(Me._IdentificacionPatrimonio1, value) = false) Then
					Me.OnIdentificacionPatrimonio1Changing(value)
					Me.SendPropertyChanging
					Me._IdentificacionPatrimonio1 = value
					Me.SendPropertyChanged("IdentificacionPatrimonio1")
					Me.OnIdentificacionPatrimonio1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoidentificacionCliente2", Storage:="_TipoidentificacionCliente2", DbType:="Char(1)")>  _
		Public Property TipoidentificacionCliente2() As String
			Get
				Return Me._TipoidentificacionCliente2
			End Get
			Set
				If (String.Equals(Me._TipoidentificacionCliente2, value) = false) Then
					Me.OnTipoidentificacionCliente2Changing(value)
					Me.SendPropertyChanging
					Me._TipoidentificacionCliente2 = value
					Me.SendPropertyChanged("TipoidentificacionCliente2")
					Me.OnTipoidentificacionCliente2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitCliente2", Storage:="_NitCliente2", DbType:="Varchar(12)")>  _
		Public Property NitCliente2() As String
			Get
				Return Me._NitCliente2
			End Get
			Set
				If (String.Equals(Me._NitCliente2, value) = false) Then
					Me.OnNitCliente2Changing(value)
					Me.SendPropertyChanging
					Me._NitCliente2 = value
					Me.SendPropertyChanged("NitCliente2")
					Me.OnNitCliente2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionPatrimonio2", Storage:="_IdentificacionPatrimonio2", DbType:="Varchar(3)")>  _
		Public Property IdentificacionPatrimonio2() As String
			Get
				Return Me._IdentificacionPatrimonio2
			End Get
			Set
				If (String.Equals(Me._IdentificacionPatrimonio2, value) = false) Then
					Me.OnIdentificacionPatrimonio2Changing(value)
					Me.SendPropertyChanging
					Me._IdentificacionPatrimonio2 = value
					Me.SendPropertyChanged("IdentificacionPatrimonio2")
					Me.OnIdentificacionPatrimonio2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacionCliente3", Storage:="_TipoIdentificacionCliente3", DbType:="Char(1)")>  _
		Public Property TipoIdentificacionCliente3() As String
			Get
				Return Me._TipoIdentificacionCliente3
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionCliente3, value) = false) Then
					Me.OnTipoIdentificacionCliente3Changing(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionCliente3 = value
					Me.SendPropertyChanged("TipoIdentificacionCliente3")
					Me.OnTipoIdentificacionCliente3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitCliente3", Storage:="_NitCliente3", DbType:="Varchar(12)")>  _
		Public Property NitCliente3() As String
			Get
				Return Me._NitCliente3
			End Get
			Set
				If (String.Equals(Me._NitCliente3, value) = false) Then
					Me.OnNitCliente3Changing(value)
					Me.SendPropertyChanging
					Me._NitCliente3 = value
					Me.SendPropertyChanged("NitCliente3")
					Me.OnNitCliente3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdentificacionPatrimonio3", Storage:="_IdentificacionPatrimonio3", DbType:="Varchar(3)")>  _
		Public Property IdentificacionPatrimonio3() As String
			Get
				Return Me._IdentificacionPatrimonio3
			End Get
			Set
				If (String.Equals(Me._IdentificacionPatrimonio3, value) = false) Then
					Me.OnIdentificacionPatrimonio3Changing(value)
					Me.SendPropertyChanging
					Me._IdentificacionPatrimonio3 = value
					Me.SendPropertyChanged("IdentificacionPatrimonio3")
					Me.OnIdentificacionPatrimonio3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorOperacion", Storage:="_IndicadorOperacion", DbType:="Char(1)")>  _
		Public Property IndicadorOperacion() As String
			Get
				Return Me._IndicadorOperacion
			End Get
			Set
				If (String.Equals(Me._IndicadorOperacion, value) = false) Then
					Me.OnIndicadorOperacionChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorOperacion = value
					Me.SendPropertyChanged("IndicadorOperacion")
					Me.OnIndicadorOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblBaseRetencion", Storage:="_BaseRetencion", DbType:="Float")>  _
		Public Property BaseRetencion() As System.Nullable(Of Double)
			Get
				Return Me._BaseRetencion
			End Get
			Set
				If (Me._BaseRetencion.Equals(value) = false) Then
					Me.OnBaseRetencionChanging(value)
					Me.SendPropertyChanging
					Me._BaseRetencion = value
					Me.SendPropertyChanged("BaseRetencion")
					Me.OnBaseRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcRetencion", Storage:="_PorcRetencion", DbType:="Float")>  _
		Public Property PorcRetencion() As System.Nullable(Of Double)
			Get
				Return Me._PorcRetencion
			End Get
			Set
				If (Me._PorcRetencion.Equals(value) = false) Then
					Me.OnPorcRetencionChanging(value)
					Me.SendPropertyChanging
					Me._PorcRetencion = value
					Me.SendPropertyChanged("PorcRetencion")
					Me.OnPorcRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblBaseRetencionTranslado", Storage:="_BaseRetencionTranslado", DbType:="Float")>  _
		Public Property BaseRetencionTranslado() As System.Nullable(Of Double)
			Get
				Return Me._BaseRetencionTranslado
			End Get
			Set
				If (Me._BaseRetencionTranslado.Equals(value) = false) Then
					Me.OnBaseRetencionTransladoChanging(value)
					Me.SendPropertyChanging
					Me._BaseRetencionTranslado = value
					Me.SendPropertyChanged("BaseRetencionTranslado")
					Me.OnBaseRetencionTransladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcRetencionTranslado", Storage:="_PorcRetencionTranslado", DbType:="Float")>  _
		Public Property PorcRetencionTranslado() As System.Nullable(Of Double)
			Get
				Return Me._PorcRetencionTranslado
			End Get
			Set
				If (Me._PorcRetencionTranslado.Equals(value) = false) Then
					Me.OnPorcRetencionTransladoChanging(value)
					Me.SendPropertyChanging
					Me._PorcRetencionTranslado = value
					Me.SendPropertyChanged("PorcRetencionTranslado")
					Me.OnPorcRetencionTransladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcIvaComision", Storage:="_PorcIvaComision", DbType:="Float")>  _
		Public Property PorcIvaComision() As System.Nullable(Of Double)
			Get
				Return Me._PorcIvaComision
			End Get
			Set
				If (Me._PorcIvaComision.Equals(value) = false) Then
					Me.OnPorcIvaComisionChanging(value)
					Me.SendPropertyChanging
					Me._PorcIvaComision = value
					Me.SendPropertyChanged("PorcIvaComision")
					Me.OnPorcIvaComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorAcciones", Storage:="_IndicadorAcciones", DbType:="Char(1)")>  _
		Public Property IndicadorAcciones() As String
			Get
				Return Me._IndicadorAcciones
			End Get
			Set
				If (String.Equals(Me._IndicadorAcciones, value) = false) Then
					Me.OnIndicadorAccionesChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorAcciones = value
					Me.SendPropertyChanged("IndicadorAcciones")
					Me.OnIndicadorAccionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOperacionNegociada", Storage:="_OperacionNegociada", DbType:="Char(1)")>  _
		Public Property OperacionNegociada() As String
			Get
				Return Me._OperacionNegociada
			End Get
			Set
				If (String.Equals(Me._OperacionNegociada, value) = false) Then
					Me.OnOperacionNegociadaChanging(value)
					Me.SendPropertyChanging
					Me._OperacionNegociada = value
					Me.SendPropertyChanged("OperacionNegociada")
					Me.OnOperacionNegociadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaConstancia", Storage:="_FechaConstancia", DbType:="Datetime")>  _
		Public Property FechaConstancia() As System.Nullable(Of Date)
			Get
				Return Me._FechaConstancia
			End Get
			Set
				If (Me._FechaConstancia.Equals(value) = false) Then
					Me.OnFechaConstanciaChanging(value)
					Me.SendPropertyChanging
					Me._FechaConstancia = value
					Me.SendPropertyChanged("FechaConstancia")
					Me.OnFechaConstanciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorConstancia", Storage:="_ValorConstancia", DbType:="Float")>  _
		Public Property ValorConstancia() As System.Nullable(Of Double)
			Get
				Return Me._ValorConstancia
			End Get
			Set
				If (Me._ValorConstancia.Equals(value) = false) Then
					Me.OnValorConstanciaChanging(value)
					Me.SendPropertyChanging
					Me._ValorConstancia = value
					Me.SendPropertyChanged("ValorConstancia")
					Me.OnValorConstanciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strGeneraConstancia", Storage:="_GeneraConstancia", DbType:="Char(1)")>  _
		Public Property GeneraConstancia() As String
			Get
				Return Me._GeneraConstancia
			End Get
			Set
				If (String.Equals(Me._GeneraConstancia, value) = false) Then
					Me.OnGeneraConstanciaChanging(value)
					Me.SendPropertyChanging
					Me._GeneraConstancia = value
					Me.SendPropertyChanged("GeneraConstancia")
					Me.OnGeneraConstanciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCargado", Storage:="_Cargado", DbType:="Bit NOT NULL")>  _
		Public Property Cargado() As Boolean
			Get
				Return Me._Cargado
			End Get
			Set
				If ((Me._Cargado = value)  _
							= false) Then
					Me.OnCargadoChanging(value)
					Me.SendPropertyChanging
					Me._Cargado = value
					Me.SendPropertyChanged("Cargado")
					Me.OnCargadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimientoTitulo", Storage:="_CumplimientoTitulo", DbType:="Datetime")>  _
		Public Property CumplimientoTitulo() As System.Nullable(Of Date)
			Get
				Return Me._CumplimientoTitulo
			End Get
			Set
				If (Me._CumplimientoTitulo.Equals(value) = false) Then
					Me.OnCumplimientoTituloChanging(value)
					Me.SendPropertyChanging
					Me._CumplimientoTitulo = value
					Me.SendPropertyChanged("CumplimientoTitulo")
					Me.OnCumplimientoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLote", Storage:="_NroLote", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property NroLote() As Integer
			Get
				Return Me._NroLote
			End Get
			Set
				If (Object.Equals(Me._NroLote, value) = false) Then
					Me.OnNroLoteChanging(value)
					Me.SendPropertyChanging
					Me._NroLote = value
					Me.SendPropertyChanged("NroLote")
					Me.OnNroLoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorEntregaContraPago", Storage:="_ValorEntregaContraPago", DbType:="Float")>  _
		Public Property ValorEntregaContraPago() As System.Nullable(Of Double)
			Get
				Return Me._ValorEntregaContraPago
			End Get
			Set
				If (Me._ValorEntregaContraPago.Equals(value) = false) Then
					Me.OnValorEntregaContraPagoChanging(value)
					Me.SendPropertyChanging
					Me._ValorEntregaContraPago = value
					Me.SendPropertyChanged("ValorEntregaContraPago")
					Me.OnValorEntregaContraPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAquienSeEnviaRetencion", Storage:="_AquienSeEnviaRetencion", DbType:="Char(1)")>  _
		Public Property AquienSeEnviaRetencion() As String
			Get
				Return Me._AquienSeEnviaRetencion
			End Get
			Set
				If (String.Equals(Me._AquienSeEnviaRetencion, value) = false) Then
					Me.OnAquienSeEnviaRetencionChanging(value)
					Me.SendPropertyChanging
					Me._AquienSeEnviaRetencion = value
					Me.SendPropertyChanged("AquienSeEnviaRetencion")
					Me.OnAquienSeEnviaRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDBaseDias", Storage:="_IDBaseDias", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
		Public Property IDBaseDias() As String
			Get
				Return Me._IDBaseDias
			End Get
			Set
				If (String.Equals(Me._IDBaseDias, value) = false) Then
					Me.OnIDBaseDiasChanging(value)
					Me.SendPropertyChanging
					Me._IDBaseDias = value
					Me.SendPropertyChanged("IDBaseDias")
					Me.OnIDBaseDiasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoDeOferta", Storage:="_TipoDeOferta", DbType:="Char(1)")>  _
		Public Property TipoDeOferta() As String
			Get
				Return Me._TipoDeOferta
			End Get
			Set
				If (String.Equals(Me._TipoDeOferta, value) = false) Then
					Me.OnTipoDeOfertaChanging(value)
					Me.SendPropertyChanging
					Me._TipoDeOferta = value
					Me.SendPropertyChanged("TipoDeOferta")
					Me.OnTipoDeOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLoteENC", Storage:="_NroLoteENC", DbType:="Int", CanBeNull:=true)>  _
		Public Property NroLoteENC() As Integer
			Get
				Return Me._NroLoteENC
			End Get
			Set
				If (Object.Equals(Me._NroLoteENC, value) = false) Then
					Me.OnNroLoteENCChanging(value)
					Me.SendPropertyChanging
					Me._NroLoteENC = value
					Me.SendPropertyChanged("NroLoteENC")
					Me.OnNroLoteENCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmContabilidadENC", Storage:="_ContabilidadENC", DbType:="Datetime")>  _
		Public Property ContabilidadENC() As System.Nullable(Of Date)
			Get
				Return Me._ContabilidadENC
			End Get
			Set
				If (Me._ContabilidadENC.Equals(value) = false) Then
					Me.OnContabilidadENCChanging(value)
					Me.SendPropertyChanging
					Me._ContabilidadENC = value
					Me.SendPropertyChanged("ContabilidadENC")
					Me.OnContabilidadENCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidacionesOF", Storage:="_IDLiquidacionesOF", AutoSync:=AutoSync.OnInsert, DbType:="Int", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDLiquidacionesOF() As Integer
			Get
				Return Me._IDLiquidacionesOF
			End Get
			Set
				If (Object.Equals(Me._IDLiquidacionesOF, value) = false) Then
					Me.OnIDLiquidacionesOFChanging(value)
					Me.SendPropertyChanging
					Me._IDLiquidacionesOF = value
					Me.SendPropertyChanged("IDLiquidacionesOF")
					Me.OnIDLiquidacionesOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoIntermediario", Storage:="_CodigoIntermediario", DbType:="Varchar(10)")>  _
		Public Property CodigoIntermediario() As String
			Get
				Return Me._CodigoIntermediario
			End Get
			Set
				If (String.Equals(Me._CodigoIntermediario, value) = false) Then
					Me.OnCodigoIntermediarioChanging(value)
					Me.SendPropertyChanging
					Me._CodigoIntermediario = value
					Me.SendPropertyChanged("CodigoIntermediario")
					Me.OnCodigoIntermediarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDNegocio", Storage:="_IDNegocio", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDNegocio() As System.nullable(of System.Int32)
			Get
				Return Me._IDNegocio
			End Get
			Set
				If (Object.Equals(Me._IDNegocio, value) = false) Then
					Me.OnIDNegocioChanging(value)
					Me.SendPropertyChanging
					Me._IDNegocio = value
					Me.SendPropertyChanged("IDNegocio")
					Me.OnIDNegocioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresOrdenesOF")>  _
	Partial Public Class ReceptoresOrdenesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TipoOrden As String
		
		Private _ClaseOrden As String
		
		Private _IDOrden As Integer
		
		Private _Version As Integer
		
		Private _IDReceptor As String
		
		Private _Lider As Boolean
		
		Private _Porcentaje As Double
		
		Private _Usuario As String
		
		Private _IDReceptoresOrdenesOF As Integer
		
		Private _InfoSesion As String
		
		Private _Nombre As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Private _LiquidacionesOF As EntityRef(Of LiquidacionesOF)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOrdenChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OnIDOrdenChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As Integer)
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorChanged()
    End Sub
    Partial Private Sub OnLiderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLiderChanged()
    End Sub
    Partial Private Sub OnPorcentajeChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDReceptoresOrdenesOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDReceptoresOrdenesOFChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._LiquidacionesOF = CType(Nothing, EntityRef(Of LiquidacionesOF))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoOrden() As String
			Get
				Return Me._TipoOrden
			End Get
			Set
				If (String.Equals(Me._TipoOrden, value) = false) Then
					Me.OnTipoOrdenChanging(value)
					Me.SendPropertyChanging
					Me._TipoOrden = value
					Me.SendPropertyChanged("TipoOrden")
					Me.OnTipoOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me.OnClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOrden = value
					Me.SendPropertyChanged("ClaseOrden")
					Me.OnClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_IDOrden", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrden() As Integer
			Get
				Return Me._IDOrden
			End Get
			Set
				If (Object.Equals(Me._IDOrden, value) = false) Then
					Me.OnIDOrdenChanging(value)
					Me.SendPropertyChanging
					Me._IDOrden = value
					Me.SendPropertyChanged("IDOrden")
					Me.OnIDOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Version() As Integer
			Get
				Return Me._Version
			End Get
			Set
				If (Object.Equals(Me._Version, value) = false) Then
					Me.OnVersionChanging(value)
					Me.SendPropertyChanging
					Me._Version = value
					Me.SendPropertyChanged("Version")
					Me.OnVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property IDReceptor() As String
			Get
				Return Me._IDReceptor
			End Get
			Set
				If (String.Equals(Me._IDReceptor, value) = false) Then
					Me.OnIDReceptorChanging(value)
					Me.SendPropertyChanging
					Me._IDReceptor = value
					Me.SendPropertyChanged("IDReceptor")
					Me.OnIDReceptorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>  _
		Public Property Lider() As Boolean
			Get
				Return Me._Lider
			End Get
			Set
				If ((Me._Lider = value)  _
							= false) Then
					Me.OnLiderChanging(value)
					Me.SendPropertyChanging
					Me._Lider = value
					Me.SendPropertyChanged("Lider")
					Me.OnLiderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentaje", Storage:="_Porcentaje", DbType:="Float NOT NULL")>  _
		Public Property Porcentaje() As Double
			Get
				Return Me._Porcentaje
			End Get
			Set
				If ((Me._Porcentaje = value)  _
							= false) Then
					Me.OnPorcentajeChanging(value)
					Me.SendPropertyChanging
					Me._Porcentaje = value
					Me.SendPropertyChanged("Porcentaje")
					Me.OnPorcentajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptoresOrdenesOF", Storage:="_IDReceptoresOrdenesOF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDReceptoresOrdenesOF() As Integer
			Get
				Return Me._IDReceptoresOrdenesOF
			End Get
			Set
				If (Object.Equals(Me._IDReceptoresOrdenesOF, value) = false) Then
					Me.OnIDReceptoresOrdenesOFChanging(value)
					Me.SendPropertyChanging
					Me._IDReceptoresOrdenesOF = value
					Me.SendPropertyChanged("IDReceptoresOrdenesOF")
					Me.OnIDReceptoresOrdenesOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="LiquidacionesOF_ReceptoresOrdenesOF", Storage:="_LiquidacionesOF", ThisKey:="IDOrden", OtherKey:="IDOrden", IsForeignKey:=true)>  _
		Public Property LiquidacionesOF() As LiquidacionesOF
			Get
				Return Me._LiquidacionesOF.Entity
			End Get
			Set
				If (Object.Equals(Me._LiquidacionesOF.Entity, value) = false) Then
					Me.SendPropertyChanging
					Me._LiquidacionesOF.Entity = value
					Me.SendPropertyChanged("LiquidacionesOF")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBeneficiariosOrdenesOF")>  _
	Partial Public Class BeneficiariosOrdenesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Nombre As String
		
		Private _TipoIdentificacion As String
		
		Private _NroDocumento As Decimal
		
		Private _Parentesco As String
		
		Private _IDBeneficiariosOrdenesOF As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnParentescoChanging(value As String)
    End Sub
    Partial Private Sub OnParentescoChanged()
    End Sub
    Partial Private Sub OnIDBeneficiariosOrdenesOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBeneficiariosOrdenesOFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoIdentificacion() As String
			Get
				Return Me._TipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacion, value) = false) Then
					Me.OnTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacion = value
					Me.SendPropertyChanged("TipoIdentificacion")
					Me.OnTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="numeric (15, 0) NOT NULL")>  _
		Public Property NroDocumento() As Decimal
			Get
				Return Me._NroDocumento
			End Get
			Set
				If ((Me._NroDocumento = value)  _
							= false) Then
					Me.OnNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._NroDocumento = value
					Me.SendPropertyChanged("NroDocumento")
					Me.OnNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParentesco", Storage:="_Parentesco", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property Parentesco() As String
			Get
				Return Me._Parentesco
			End Get
			Set
				If (String.Equals(Me._Parentesco, value) = false) Then
					Me.OnParentescoChanging(value)
					Me.SendPropertyChanging
					Me._Parentesco = value
					Me.SendPropertyChanged("Parentesco")
					Me.OnParentescoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBeneficiariosOrdenesOF", Storage:="_IDBeneficiariosOrdenesOF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDBeneficiariosOrdenesOF() As Integer
			Get
				Return Me._IDBeneficiariosOrdenesOF
			End Get
			Set
				If (Object.Equals(Me._IDBeneficiariosOrdenesOF, value) = false) Then
					Me.OnIDBeneficiariosOrdenesOFChanging(value)
					Me.SendPropertyChanging
					Me._IDBeneficiariosOrdenesOF = value
					Me.SendPropertyChanged("IDBeneficiariosOrdenesOF")
					Me.OnIDBeneficiariosOrdenesOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesLiquidacionesOF")>  _
	Partial Public Class EspeciesLiquidacionesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDEspecie As String
		
		Private _Nombre As String
		
		Private _Descripcion As String
		
		Private _IDEspeciesLiquidacionesOF As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnIDEspeciesLiquidacionesOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEspeciesLiquidacionesOFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEspeciesLiquidacionesOF", Storage:="_IDEspeciesLiquidacionesOF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDEspeciesLiquidacionesOF() As Integer
			Get
				Return Me._IDEspeciesLiquidacionesOF
			End Get
			Set
				If (Object.Equals(Me._IDEspeciesLiquidacionesOF, value) = false) Then
					Me.OnIDEspeciesLiquidacionesOFChanging(value)
					Me.SendPropertyChanging
					Me._IDEspeciesLiquidacionesOF = value
					Me.SendPropertyChanged("IDEspeciesLiquidacionesOF")
					Me.OnIDEspeciesLiquidacionesOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAplazamientosLiquidacionesOF")>  _
	Partial Public Class AplazamientosLiquidacionesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Aplazamiento As String
		
		Private _Cumplimiento As Date
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDAplazamientosOF As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAplazamientoChanging(value As String)
    End Sub
    Partial Private Sub OnAplazamientoChanged()
    End Sub
    Partial Private Sub OnCumplimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnCumplimientoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDAplazamientosOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAplazamientosOFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAplazamiento", Storage:="_Aplazamiento", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property Aplazamiento() As String
			Get
				Return Me._Aplazamiento
			End Get
			Set
				If (String.Equals(Me._Aplazamiento, value) = false) Then
					Me.OnAplazamientoChanging(value)
					Me.SendPropertyChanging
					Me._Aplazamiento = value
					Me.SendPropertyChanged("Aplazamiento")
					Me.OnAplazamientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="datetime")>  _
		Public Property Cumplimiento() As Date
			Get
				Return Me._Cumplimiento
			End Get
			Set
				If ((Me._Cumplimiento = value)  _
							= false) Then
					Me.OnCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._Cumplimiento = value
					Me.SendPropertyChanged("Cumplimiento")
					Me.OnCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="datetime")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDAplazamientosOF", Storage:="_IDAplazamientosOF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDAplazamientosOF() As Integer
			Get
				Return Me._IDAplazamientosOF
			End Get
			Set
				If (Object.Equals(Me._IDAplazamientosOF, value) = false) Then
					Me.OnIDAplazamientosOFChanging(value)
					Me.SendPropertyChanging
					Me._IDAplazamientosOF = value
					Me.SendPropertyChanged("IDAplazamientosOF")
					Me.OnIDAplazamientosOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCustodiasLiquidacionesOF")>  _
	Partial Public Class CustodiasLiquidacionesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdRecibo As Integer
		
		Private _Secuencia As Integer
		
		Private _Estado As String
		
		Private _EstadoActual As String
		
		Private _IDCustodiaOF As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdReciboChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReciboChanged()
    End Sub
    Partial Private Sub OnSecuenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSecuenciaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnEstadoActualChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoActualChanged()
    End Sub
    Partial Private Sub OnIDCustodiaOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCustodiaOFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdRecibo", Storage:="_IdRecibo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IdRecibo() As Integer
			Get
				Return Me._IdRecibo
			End Get
			Set
				If (Object.Equals(Me._IdRecibo, value) = false) Then
					Me.OnIdReciboChanging(value)
					Me.SendPropertyChanging
					Me._IdRecibo = value
					Me.SendPropertyChanged("IdRecibo")
					Me.OnIdReciboChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSecuencia", Storage:="_Secuencia", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Secuencia() As Integer
			Get
				Return Me._Secuencia
			End Get
			Set
				If (Object.Equals(Me._Secuencia, value) = false) Then
					Me.OnSecuenciaChanging(value)
					Me.SendPropertyChanging
					Me._Secuencia = value
					Me.SendPropertyChanged("Secuencia")
					Me.OnSecuenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(1)", CanBeNull:=false)>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoActual", Storage:="_EstadoActual", DbType:="Varchar(1)")>  _
		Public Property EstadoActual() As String
			Get
				Return Me._EstadoActual
			End Get
			Set
				If (String.Equals(Me._EstadoActual, value) = false) Then
					Me.OnEstadoActualChanging(value)
					Me.SendPropertyChanging
					Me._EstadoActual = value
					Me.SendPropertyChanged("EstadoActual")
					Me.OnEstadoActualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCustodiaOF", Storage:="_IDCustodiaOF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDCustodiaOF() As Integer
			Get
				Return Me._IDCustodiaOF
			End Get
			Set
				If (Object.Equals(Me._IDCustodiaOF, value) = false) Then
					Me.OnIDCustodiaOFChanging(value)
					Me.SendPropertyChanging
					Me._IDCustodiaOF = value
					Me.SendPropertyChanged("IDCustodiaOF")
					Me.OnIDCustodiaOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidacionesOFConsultar")>  _
	Partial Public Class LiquidacionesOFConsultar
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComitente As String
		
		Private _Comitente As String
		
		Private _IDOrdenante As String
		
		Private _Ordenante As String
		
		Private _Ordinaria As Boolean
		
		Private _Objeto As String
		
		Private _Estado As String
		
		Private _Tipo As String
		
		Private _Clase As String
		
		Private _ID As Integer
		
		Private _Orden As System.Nullable(Of Date)
		
		Private _UBICACIONTITULO As String
		
		Private _IDEspecie As String
		
		Private _Especie As String
		
		Private _IDClase As Integer
		
		Private _Inferior As System.Nullable(Of Double)
		
		Private _Superior As System.Nullable(Of Double)
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _ComisionPactada As System.Nullable(Of Double)
		
		Private _Modalidad As String
		
		Private _Emision As System.Nullable(Of Date)
		
		Private _Vencimiento As System.Nullable(Of Date)
		
		Private _TasaInicial As System.Nullable(Of Double)
		
		Private _TasaNominal As System.Nullable(Of Double)
		
		Private _Repo As Boolean
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnIDOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIDOrdenanteChanged()
    End Sub
    Partial Private Sub OnOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnOrdenanteChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnObjetoChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As String)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnEspecieChanged()
    End Sub
    Partial Private Sub OnIDClaseChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClaseChanged()
    End Sub
    Partial Private Sub OnInferiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnInferiorChanged()
    End Sub
    Partial Private Sub OnSuperiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSuperiorChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnComisionPactadaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComisionPactadaChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnTasaInicialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaInicialChanged()
    End Sub
    Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaNominalChanged()
    End Sub
    Partial Private Sub OnRepoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRepoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDComitente() As String
			Get
				Return Me._IDComitente
			End Get
			Set
				If (String.Equals(Me._IDComitente, value) = false) Then
					Me.OnIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IDComitente = value
					Me.SendPropertyChanged("IDComitente")
					Me.OnIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComitente", Storage:="_Comitente", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Comitente() As String
			Get
				Return Me._Comitente
			End Get
			Set
				If (String.Equals(Me._Comitente, value) = false) Then
					Me.OnComitenteChanging(value)
					Me.SendPropertyChanging
					Me._Comitente = value
					Me.SendPropertyChanged("Comitente")
					Me.OnComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenante", Storage:="_IDOrdenante", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IDOrdenante() As String
			Get
				Return Me._IDOrdenante
			End Get
			Set
				If (String.Equals(Me._IDOrdenante, value) = false) Then
					Me.OnIDOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._IDOrdenante = value
					Me.SendPropertyChanged("IDOrdenante")
					Me.OnIDOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOrdenante", Storage:="_Ordenante", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Ordenante() As String
			Get
				Return Me._Ordenante
			End Get
			Set
				If (String.Equals(Me._Ordenante, value) = false) Then
					Me.OnOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._Ordenante = value
					Me.SendPropertyChanged("Ordenante")
					Me.OnOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
		Public Property Ordinaria() As Boolean
			Get
				Return Me._Ordinaria
			End Get
			Set
				If ((Me._Ordinaria = value)  _
							= false) Then
					Me.OnOrdinariaChanging(value)
					Me.SendPropertyChanging
					Me._Ordinaria = value
					Me.SendPropertyChanged("Ordinaria")
					Me.OnOrdinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjeto", Storage:="_Objeto", DbType:="Char(3)", CanBeNull:=false)>  _
		Public Property Objeto() As String
			Get
				Return Me._Objeto
			End Get
			Set
				If (String.Equals(Me._Objeto, value) = false) Then
					Me.OnObjetoChanging(value)
					Me.SendPropertyChanging
					Me._Objeto = value
					Me.SendPropertyChanged("Objeto")
					Me.OnObjetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1)", CanBeNull:=false)>  _
		Public Property Estado() As String
			Get
				Return Me._Estado
			End Get
			Set
				If (String.Equals(Me._Estado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._Estado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Char(1)", CanBeNull:=false)>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="Char(1)", CanBeNull:=false)>  _
		Public Property Clase() As String
			Get
				Return Me._Clase
			End Get
			Set
				If (String.Equals(Me._Clase, value) = false) Then
					Me.OnClaseChanging(value)
					Me.SendPropertyChanging
					Me._Clase = value
					Me.SendPropertyChanged("Clase")
					Me.OnClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmOrden", Storage:="_Orden", DbType:="Datetime")>  _
		Public Property Orden() As System.Nullable(Of Date)
			Get
				Return Me._Orden
			End Get
			Set
				If (Me._Orden.Equals(value) = false) Then
					Me.OnOrdenChanging(value)
					Me.SendPropertyChanging
					Me._Orden = value
					Me.SendPropertyChanged("Orden")
					Me.OnOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(1)", CanBeNull:=false)>  _
		Public Property UBICACIONTITULO() As String
			Get
				Return Me._UBICACIONTITULO
			End Get
			Set
				If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
					Me.OnUBICACIONTITULOChanging(value)
					Me.SendPropertyChanging
					Me._UBICACIONTITULO = value
					Me.SendPropertyChanged("UBICACIONTITULO")
					Me.OnUBICACIONTITULOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Especie() As String
			Get
				Return Me._Especie
			End Get
			Set
				If (String.Equals(Me._Especie, value) = false) Then
					Me.OnEspecieChanging(value)
					Me.SendPropertyChanging
					Me._Especie = value
					Me.SendPropertyChanged("Especie")
					Me.OnEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDClase", Storage:="_IDClase", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDClase() As Integer
			Get
				Return Me._IDClase
			End Get
			Set
				If (Object.Equals(Me._IDClase, value) = false) Then
					Me.OnIDClaseChanging(value)
					Me.SendPropertyChanging
					Me._IDClase = value
					Me.SendPropertyChanged("IDClase")
					Me.OnIDClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblInferior", Storage:="_Inferior", DbType:="Float")>  _
		Public Property Inferior() As System.Nullable(Of Double)
			Get
				Return Me._Inferior
			End Get
			Set
				If (Me._Inferior.Equals(value) = false) Then
					Me.OnInferiorChanging(value)
					Me.SendPropertyChanging
					Me._Inferior = value
					Me.SendPropertyChanged("Inferior")
					Me.OnInferiorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSuperior", Storage:="_Superior", DbType:="Float")>  _
		Public Property Superior() As System.Nullable(Of Double)
			Get
				Return Me._Superior
			End Get
			Set
				If (Me._Superior.Equals(value) = false) Then
					Me.OnSuperiorChanging(value)
					Me.SendPropertyChanging
					Me._Superior = value
					Me.SendPropertyChanged("Superior")
					Me.OnSuperiorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionPactada", Storage:="_ComisionPactada", DbType:="Float")>  _
		Public Property ComisionPactada() As System.Nullable(Of Double)
			Get
				Return Me._ComisionPactada
			End Get
			Set
				If (Me._ComisionPactada.Equals(value) = false) Then
					Me.OnComisionPactadaChanging(value)
					Me.SendPropertyChanging
					Me._ComisionPactada = value
					Me.SendPropertyChanged("ComisionPactada")
					Me.OnComisionPactadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(2)", CanBeNull:=false)>  _
		Public Property Modalidad() As String
			Get
				Return Me._Modalidad
			End Get
			Set
				If (String.Equals(Me._Modalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._Modalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="Datetime")>  _
		Public Property Emision() As System.Nullable(Of Date)
			Get
				Return Me._Emision
			End Get
			Set
				If (Me._Emision.Equals(value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._Emision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="Datetime")>  _
		Public Property Vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._Vencimiento
			End Get
			Set
				If (Me._Vencimiento.Equals(value) = false) Then
					Me.OnVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._Vencimiento = value
					Me.SendPropertyChanged("Vencimiento")
					Me.OnVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaInicial", Storage:="_TasaInicial", DbType:="Float")>  _
		Public Property TasaInicial() As System.Nullable(Of Double)
			Get
				Return Me._TasaInicial
			End Get
			Set
				If (Me._TasaInicial.Equals(value) = false) Then
					Me.OnTasaInicialChanging(value)
					Me.SendPropertyChanging
					Me._TasaInicial = value
					Me.SendPropertyChanged("TasaInicial")
					Me.OnTasaInicialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float")>  _
		Public Property TasaNominal() As System.Nullable(Of Double)
			Get
				Return Me._TasaNominal
			End Get
			Set
				If (Me._TasaNominal.Equals(value) = false) Then
					Me.OnTasaNominalChanging(value)
					Me.SendPropertyChanging
					Me._TasaNominal = value
					Me.SendPropertyChanged("TasaNominal")
					Me.OnTasaNominalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRepo", Storage:="_Repo", DbType:="Bit NOT NULL")>  _
		Public Property Repo() As Boolean
			Get
				Return Me._Repo
			End Get
			Set
				If ((Me._Repo = value)  _
							= false) Then
					Me.OnRepoChanging(value)
					Me.SendPropertyChanging
					Me._Repo = value
					Me.SendPropertyChanged("Repo")
					Me.OnRepoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidacionesOrdenesOF")>  _
	Partial Public Class LiquidacionesOrdenesOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Objeto As String
		
		Private _Ordinaria As Boolean
		
		Private _ComisionPactada As Double
		
		Private _IDOrdenesOF As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnObjetoChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnComisionPactadaChanging(value As Double)
    End Sub
    Partial Private Sub OnComisionPactadaChanged()
    End Sub
    Partial Private Sub OnIDOrdenesOFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenesOFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjeto", Storage:="_Objeto", DbType:="char(3) NOT NULL")>  _
		Public Property Objeto() As String
			Get
				Return Me._Objeto
			End Get
			Set
				If (String.Equals(Me._Objeto, value) = false) Then
					Me.OnObjetoChanging(value)
					Me.SendPropertyChanging
					Me._Objeto = value
					Me.SendPropertyChanged("Objeto")
					Me.OnObjetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
		Public Property Ordinaria() As Boolean
			Get
				Return Me._Ordinaria
			End Get
			Set
				If ((Me._Ordinaria = value)  _
							= false) Then
					Me.OnOrdinariaChanging(value)
					Me.SendPropertyChanging
					Me._Ordinaria = value
					Me.SendPropertyChanged("Ordinaria")
					Me.OnOrdinariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionPactada", Storage:="_ComisionPactada", DbType:="Float NOT NULL")>  _
		Public Property ComisionPactada() As Double
			Get
				Return Me._ComisionPactada
			End Get
			Set
				If ((Me._ComisionPactada = value)  _
							= false) Then
					Me.OnComisionPactadaChanging(value)
					Me.SendPropertyChanging
					Me._ComisionPactada = value
					Me.SendPropertyChanged("ComisionPactada")
					Me.OnComisionPactadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenesOF", Storage:="_IDOrdenesOF", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property IDOrdenesOF() As Integer
			Get
				Return Me._IDOrdenesOF
			End Get
			Set
				If (Object.Equals(Me._IDOrdenesOF, value) = false) Then
					Me.OnIDOrdenesOFChanging(value)
					Me.SendPropertyChanging
					Me._IDOrdenesOF = value
					Me.SendPropertyChanged("IDOrdenesOF")
					Me.OnIDOrdenesOFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblconsultarcantidadOF")>  _
	Partial Public Class consultarcantidadOF
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CantidadLiq As System.Nullable(Of Double)
		
		Private _CantidadOrden As System.Nullable(Of Double)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCantidadLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadLiqChanged()
    End Sub
    Partial Private Sub OnCantidadOrdenChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadOrdenChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadLiq", Storage:="_CantidadLiq", DbType:="Float", IsPrimaryKey:=true)>  _
		Public Property CantidadLiq() As System.Nullable(Of Double)
			Get
				Return Me._CantidadLiq
			End Get
			Set
				If (Me._CantidadLiq.Equals(value) = false) Then
					Me.OnCantidadLiqChanging(value)
					Me.SendPropertyChanging
					Me._CantidadLiq = value
					Me.SendPropertyChanged("CantidadLiq")
					Me.OnCantidadLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadOrden", Storage:="_CantidadOrden", DbType:="Float")>  _
		Public Property CantidadOrden() As System.Nullable(Of Double)
			Get
				Return Me._CantidadOrden
			End Get
			Set
				If (Me._CantidadOrden.Equals(value) = false) Then
					Me.OnCantidadOrdenChanging(value)
					Me.SendPropertyChanging
					Me._CantidadOrden = value
					Me.SendPropertyChanged("CantidadOrden")
					Me.OnCantidadOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class tblRespuestaValidacionesTraslado
		
		Private _IdOperacion As Integer
		
		Private _Parcial As Integer
		
		Private _ClaseOrden As String
		
		Private _Liquidacion As System.Nullable(Of Date)
		
		Private _strOrdenFirma As String
		
		Private _Mensaje As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOperacion", Storage:="_IdOperacion", DbType:="Int", CanBeNull:=true)>  _
		Public Property IdOperacion() As Integer
			Get
				Return Me._IdOperacion
			End Get
			Set
				If (Object.Equals(Me._IdOperacion, value) = false) Then
					Me._IdOperacion = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", DbType:="Int", CanBeNull:=true)>  _
		Public Property Parcial() As Integer
			Get
				Return Me._Parcial
			End Get
			Set
				If (Object.Equals(Me._Parcial, value) = false) Then
					Me._Parcial = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1)")>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me._ClaseOrden = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_Liquidacion", DbType:="Datetime")>  _
		Public Property Liquidacion() As System.Nullable(Of Date)
			Get
				Return Me._Liquidacion
			End Get
			Set
				If (Me._Liquidacion.Equals(value) = false) Then
					Me._Liquidacion = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOrdenFirma", DbType:="Varchar(100)", CanBeNull:=false)>  _
		Public Property strOrdenFirma() As String
			Get
				Return Me._strOrdenFirma
			End Get
			Set
				If (String.Equals(Me._strOrdenFirma, value) = false) Then
					Me._strOrdenFirma = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mensaje", DbType:="Varchar(5000)", CanBeNull:=false)>  _
		Public Property Mensaje() As String
			Get
				Return Me._Mensaje
			End Get
			Set
				If (String.Equals(Me._Mensaje, value) = false) Then
					Me._Mensaje = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me._pstrUsuarioConexion = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me._pstrInfoConexion = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class uspOyDNet_Utilidades_CampoTablaResult
		
		Private _Resultado As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(100)")>  _
		Public Property Resultado() As String
			Get
				Return Me._Resultado
			End Get
			Set
				If (String.Equals(Me._Resultado, value) = false) Then
					Me._Resultado = value
				End If
			End Set
		End Property
	End Class
End Namespace

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOyDCITI")>
Partial Public Class OyDCitiBankDatacontext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAuditoria(instance As OyDCitiBank.Auditoria)
    End Sub
    Partial Private Sub UpdateAuditoria(instance As OyDCitiBank.Auditoria)
    End Sub
    Partial Private Sub DeleteAuditoria(instance As OyDCitiBank.Auditoria)
    End Sub
    Partial Private Sub InsertItemCombo(instance As OyDCitiBank.ItemCombo)
    End Sub
    Partial Private Sub UpdateItemCombo(instance As OyDCitiBank.ItemCombo)
    End Sub
    Partial Private Sub DeleteItemCombo(instance As OyDCitiBank.ItemCombo)
    End Sub
    Partial Private Sub InsertConsecutivosDocumento(instance As OyDCitiBank.ConsecutivosDocumento)
    End Sub
    Partial Private Sub UpdateConsecutivosDocumento(instance As OyDCitiBank.ConsecutivosDocumento)
    End Sub
    Partial Private Sub DeleteConsecutivosDocumento(instance As OyDCitiBank.ConsecutivosDocumento)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property ExcepcionesRDIP() As System.Data.Linq.Table(Of OyDCitiBank.ExcepcionesRDI)
        Get
            Return Me.GetTable(Of OyDCitiBank.ExcepcionesRDI)
        End Get
    End Property

    Public ReadOnly Property Auditorias() As System.Data.Linq.Table(Of OyDCitiBank.Auditoria)
        Get
            Return Me.GetTable(Of OyDCitiBank.Auditoria)
        End Get
    End Property

    Public ReadOnly Property ItemCombos() As System.Data.Linq.Table(Of OyDCitiBank.ItemCombo)
        Get
            Return Me.GetTable(Of OyDCitiBank.ItemCombo)
        End Get
    End Property

    Public ReadOnly Property CodificacionContable() As System.Data.Linq.Table(Of OyDCitiBank.CodificacionContabl)
        Get
            Return Me.GetTable(Of OyDCitiBank.CodificacionContabl)
        End Get
    End Property

    Public ReadOnly Property ConsecutivosDocumentos() As System.Data.Linq.Table(Of OyDCitiBank.ConsecutivosDocumento)
        Get
            Return Me.GetTable(Of OyDCitiBank.ConsecutivosDocumento)
        End Get
    End Property

    Private Sub InsertExcepcionesRDI(ByVal obj As OyDCitiBank.ExcepcionesRDI)
        Dim p1 As Integer = obj.idRegistro
        Me.usp_ExcepcionesRDIP_Modificar_OyDNet(p1, obj.Comentario, obj.UsuarioComentario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.idRegistro = p1
    End Sub

    Private Sub UpdateExcepcionesRDI(ByVal obj As OyDCitiBank.ExcepcionesRDI)
        Dim p1 As Integer = obj.idRegistro
        Me.usp_ExcepcionesRDIP_Modificar_OyDNet(p1, obj.Comentario, obj.UsuarioComentario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.idRegistro = p1
    End Sub

    Private Sub DeleteExcepcionesRDI(ByVal obj As OyDCitiBank.ExcepcionesRDI)
        Me.usp_ExcepcionesRDIP_Eliminar_OyDNet(obj.idRegistro, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertCodificacionContabl(ByVal obj As OyDCitiBank.CodificacionContabl)
        Dim p1 As Integer = obj.IDCodificacion
        Me.uspOyDNet_CitiBank_CodificacionContable_Actualizar(p1, obj.Modulo, obj.TipoOperacion, obj.UsarFecha, obj.TipoCliente, obj.Branch, CType(obj.CuentaCosmos, System.Nullable(Of Decimal)), obj.CodigoTransaccion, obj.IndicadorMvto, obj.NroLote, obj.DetalleAdicional, obj.TextoDetalle, obj.NroReferencia, CType(obj.PorOperacion, System.Nullable(Of Boolean)), obj.VlrAReportar, obj.Producto, obj.NroBase, CType(obj.SucursalContable, System.Nullable(Of Boolean)), obj.ConsecutivoTesoreria, CType(obj.Actualizacion, System.Nullable(Of Date)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDCodificacion = p1
    End Sub

    Private Sub UpdateCodificacionContabl(ByVal obj As OyDCitiBank.CodificacionContabl)
        Dim p1 As Integer = obj.IDCodificacion
        Me.uspOyDNet_CitiBank_CodificacionContable_Actualizar(p1, obj.Modulo, obj.TipoOperacion, obj.UsarFecha, obj.TipoCliente, obj.Branch, CType(obj.CuentaCosmos, System.Nullable(Of Decimal)), obj.CodigoTransaccion, obj.IndicadorMvto, obj.NroLote, obj.DetalleAdicional, obj.TextoDetalle, obj.NroReferencia, CType(obj.PorOperacion, System.Nullable(Of Boolean)), obj.VlrAReportar, obj.Producto, obj.NroBase, CType(obj.SucursalContable, System.Nullable(Of Boolean)), obj.ConsecutivoTesoreria, CType(obj.Actualizacion, System.Nullable(Of Date)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDCodificacion = p1
    End Sub

    Private Sub DeleteCodificacionContabl(ByVal obj As OyDCitiBank.CodificacionContabl)
        Me.uspOyDNet_CitiBank_CodificacionContable_Eliminar(obj.IDCodificacion, obj.Modulo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spA2utils_CargarCombos")>
    Public Function spA2utils_CargarCombos(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ListaNombreCombos", DbType:="VarChar(500)")> ByVal listaNombreCombos As String) As ISingleResult(Of OyDCitiBank.ItemCombo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), listaNombreCombos)
        Return CType(result.ReturnValue, ISingleResult(Of OyDCitiBank.ItemCombo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ExcepcionesRDIP_Modificar_OyDNet")>
    Public Function usp_ExcepcionesRDIP_Modificar_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngidRegistro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrComentario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrUsuarioComentario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngidRegistro, pstrComentario, pstrUsuarioComentario, infosesion, pintErrorPersonalizado)
        plngidRegistro = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ExcepcionesRDIP_Eliminar_OyDNet")>
    Public Function usp_ExcepcionesRDIP_Eliminar_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidRegistro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngidRegistro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ExcepcionesRDIP_Consultar_OyDNet")>
    Public Function usp_ExcepcionesRDIP_Consultar_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrUsuarioAdvertencia As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmRegistro As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pstrClasificacionRiesgoEspecie As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pstrPerfilInversionistaIR As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaComentario As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDCitiBank.ExcepcionesRDI)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngidOrden, pstrClaseOrden, pstrUsuarioAdvertencia, pstrIdEspecie, pdtmRegistro, plngIDComitente, pstrClasificacionRiesgoEspecie, pstrPerfilInversionistaIR, pdtmFechaComentario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDCitiBank.ExcepcionesRDI))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ExcepcionesRDIP_Filtrar")>
    Public Function uspOyDNet_ExcepcionesRDIP_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDCitiBank.ExcepcionesRDI)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDCitiBank.ExcepcionesRDI))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CitiBank_CodificacionContable_Actualizar")>
    Public Function uspOyDNet_CitiBank_CodificacionContable_Actualizar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngIDCodificacion As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrModulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrUsarFecha As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrTipoCliente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngBranch As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="decimal")> ByVal pnumCuentaCosmos As System.Nullable(Of Decimal),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigoTransaccion As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrIndicadorMvto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNroLote As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrDetalleAdicional As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrTextoDetalle As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrNroReferencia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogPorOperacion As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrVlrAReportar As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrProducto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrNroBase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogSucursalContable As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrConsecutivoTesoreria As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmActualizacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDCodificacion, pstrModulo, pstrTipoOperacion, pstrUsarFecha, pstrTipoCliente, plngBranch, pnumCuentaCosmos, plngCodigoTransaccion, pstrIndicadorMvto, plngNroLote, pstrDetalleAdicional, pstrTextoDetalle, pstrNroReferencia, plogPorOperacion, pstrVlrAReportar, pstrProducto, pstrNroBase, plogSucursalContable, pstrConsecutivoTesoreria, pdtmActualizacion, pstrUsuario, infosesion, pintErrorPersonalizado)
        plngIDCodificacion = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CitiBank_CodificacionContable_Consultar")>
    Public Function uspOyDNet_CitiBank_CodificacionContable_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDCodificacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDCitiBank.CodificacionContabl)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDCodificacion, pstrModulo, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDCitiBank.CodificacionContabl))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CitiBank_CodificacionContable_Filtrar")>
    Public Function uspOyDNet_CitiBank_CodificacionContable_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDCitiBank.CodificacionContabl)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDCitiBank.CodificacionContabl))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CitiBank_ListaConsecutivos")>
    Public Function uspOyDNet_CitiBank_ListaConsecutivos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OyDCitiBank.ConsecutivosDocumento)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of OyDCitiBank.ConsecutivosDocumento))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CitiBank_CodificacionContable_Eliminar")>
    Public Function uspOyDNet_CitiBank_CodificacionContable_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pstrModulo, pstrUsuario, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Clientes_SaldoDisponible_ConsultarSaldo")>
    Public Function uspOyDNet_Clientes_SaldoDisponible_ConsultarSaldo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pbitSaldoDisponibleChequeado", DbType:="Bit")> ByVal boolSaldoDisponibleChequeado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar")> ByVal pstrCodigoCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFecha As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Money")> ByRef pcurSaldoCorte As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), boolSaldoDisponibleChequeado, pstrCodigoCliente, pdtmFecha, pcurSaldoCorte, infosesion, pintErrorPersonalizado)
        pcurSaldoCorte = CType(result.GetParameterValue(3), System.Nullable(Of Decimal))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_TrasladarSaldo_ConsultarPendientePorAprobar")>
    Public Function uspOyDNet_TrasladarSaldo_ConsultarPendientePorAprobar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Money NOT NULL")> ByRef pcurValorPendientePA As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pcurValorPendientePA, infosesion, pintErrorPersonalizado)
        pcurValorPendientePA = CType(result.GetParameterValue(1), System.Nullable(Of Decimal))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_TrasladarSaldo_GrabarNota")>
    Public Function uspOyDNet_TrasladarSaldo_GrabarNota(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrTipoNota As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Money NOT NULL")> ByVal pcurValorATrasladar As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdCuentaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmDocumento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintModuloDestino As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar")> ByVal pstrNombreCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNota, pstrNombreConsecutivo, plngIDComitente, pcurValorATrasladar, pstrIdCuentaContable, pdtmDocumento, pintModuloDestino, pstrNombreCliente, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function
End Class

Namespace OyDCitiBank

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblExcepcionesRDIP")>
    Partial Public Class ExcepcionesRDI
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _idRegistro As Integer

        Private _idOrden As System.Nullable(Of System.Int32)

        Private _ClaseOrden As String

        Private _UsuarioAdvertencia As String

        Private _IdEspecie As String

        Private _Registro As System.Nullable(Of System.DateTime)

        Private _IDComitente As String

        Private _Nombre As String

        Private _ClasificacionRiesgoEspecie As Integer

        Private _PerfilInversionistaIR As System.Nullable(Of System.Int32)

        Private _Comentario As String

        Private _NuevoComentario As String

        Private _UsuarioComentario As String

        Private _FechaComentario As System.Nullable(Of Date)

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnidRegistroChanging(value As Integer)
        End Sub
        Partial Private Sub OnidRegistroChanged()
        End Sub
        Partial Private Sub OnidOrdenChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnidOrdenChanged()
        End Sub
        Partial Private Sub OnClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnClaseOrdenChanged()
        End Sub
        Partial Private Sub OnUsuarioAdvertenciaChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioAdvertenciaChanged()
        End Sub
        Partial Private Sub OnIdEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnIdEspecieChanged()
        End Sub
        Partial Private Sub OnRegistroChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnRegistroChanged()
        End Sub
        Partial Private Sub OnIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnClasificacionRiesgoEspecieChanging(value As Integer)
        End Sub
        Partial Private Sub OnClasificacionRiesgoEspecieChanged()
        End Sub
        Partial Private Sub OnPerfilInversionistaIRChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnPerfilInversionistaIRChanged()
        End Sub
        Partial Private Sub OnComentarioChanging(value As String)
        End Sub
        Partial Private Sub OnComentarioChanged()
        End Sub
        Partial Private Sub OnNuevoComentarioChanging(value As String)
        End Sub
        Partial Private Sub OnNuevoComentarioChanged()
        End Sub
        Partial Private Sub OnUsuarioComentarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioComentarioChanged()
        End Sub
        Partial Private Sub OnFechaComentarioChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaComentarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidRegistro", Storage:="_idRegistro", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property idRegistro() As Integer
            Get
                Return Me._idRegistro
            End Get
            Set
                If (Object.Equals(Me._idRegistro, Value) = False) Then
                    Me.OnidRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._idRegistro = Value
                    Me.SendPropertyChanged("idRegistro")
                    Me.OnidRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidOrden", Storage:="_idOrden", DbType:="Int NULL", CanBeNull:=True)>
        Public Property idOrden() As System.Nullable(Of System.Int32)
            Get
                Return Me._idOrden
            End Get
            Set
                If (Object.Equals(Me._idOrden, Value) = False) Then
                    Me.OnidOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._idOrden = Value
                    Me.SendPropertyChanged("idOrden")
                    Me.OnidOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Char(1) NULL")>
        Public Property ClaseOrden() As String
            Get
                Return Me._ClaseOrden
            End Get
            Set
                If (String.Equals(Me._ClaseOrden, Value) = False) Then
                    Me.OnClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClaseOrden = Value
                    Me.SendPropertyChanged("ClaseOrden")
                    Me.OnClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioAdvertencia", Storage:="_UsuarioAdvertencia", DbType:="Varchar(30) NULL")>
        Public Property UsuarioAdvertencia() As String
            Get
                Return Me._UsuarioAdvertencia
            End Get
            Set
                If (String.Equals(Me._UsuarioAdvertencia, Value) = False) Then
                    Me.OnUsuarioAdvertenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UsuarioAdvertencia = Value
                    Me.SendPropertyChanged("UsuarioAdvertencia")
                    Me.OnUsuarioAdvertenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_IdEspecie", DbType:="Varchar(15) NULL")>
        Public Property IdEspecie() As String
            Get
                Return Me._IdEspecie
            End Get
            Set
                If (String.Equals(Me._IdEspecie, Value) = False) Then
                    Me.OnIdEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdEspecie = Value
                    Me.SendPropertyChanged("IdEspecie")
                    Me.OnIdEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmRegistro", Storage:="_Registro", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property Registro() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Registro
            End Get
            Set
                If (Object.Equals(Me._Registro, Value) = False) Then
                    Me.OnRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Registro = Value
                    Me.SendPropertyChanged("Registro")
                    Me.OnRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NULL")>
        Public Property IDComitente() As String
            Get
                Return Me._IDComitente
            End Get
            Set
                If (String.Equals(Me._IDComitente, Value) = False) Then
                    Me.OnIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitente = Value
                    Me.SendPropertyChanged("IDComitente")
                    Me.OnIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="varchar(50) NULL")>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacionRiesgoEspecie", Storage:="_ClasificacionRiesgoEspecie", DbType:="Int NULL", CanBeNull:=True)>
        Public Property ClasificacionRiesgoEspecie() As Integer
            Get
                Return Me._ClasificacionRiesgoEspecie
            End Get
            Set
                If (Object.Equals(Me._ClasificacionRiesgoEspecie, Value) = False) Then
                    Me.OnClasificacionRiesgoEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClasificacionRiesgoEspecie = Value
                    Me.SendPropertyChanged("ClasificacionRiesgoEspecie")
                    Me.OnClasificacionRiesgoEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfilInversionistaIR", Storage:="_PerfilInversionistaIR", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property PerfilInversionistaIR() As System.Nullable(Of System.Int32)
            Get
                Return Me._PerfilInversionistaIR
            End Get
            Set
                If (Object.Equals(Me._PerfilInversionistaIR, Value) = False) Then
                    Me.OnPerfilInversionistaIRChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PerfilInversionistaIR = Value
                    Me.SendPropertyChanged("PerfilInversionistaIR")
                    Me.OnPerfilInversionistaIRChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComentario", Storage:="_Comentario", DbType:="Varchar(255)")>
        Public Property Comentario() As String
            Get
                Return Me._Comentario
            End Get
            Set
                If (String.Equals(Me._Comentario, Value) = False) Then
                    Me.OnComentarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Comentario = Value
                    Me.SendPropertyChanged("Comentario")
                    Me.OnComentarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNuevoComentario", Storage:="_NuevoComentario", DbType:="Varchar(255)")>
        Public Property NuevoComentario() As String
            Get
                Return Me._NuevoComentario
            End Get
            Set
                If (String.Equals(Me._NuevoComentario, Value) = False) Then
                    Me.OnNuevoComentarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NuevoComentario = Value
                    Me.SendPropertyChanged("NuevoComentario")
                    Me.OnNuevoComentarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioComentario", Storage:="_UsuarioComentario", DbType:="Varchar(30)")>
        Public Property UsuarioComentario() As String
            Get
                Return Me._UsuarioComentario
            End Get
            Set
                If (String.Equals(Me._UsuarioComentario, Value) = False) Then
                    Me.OnUsuarioComentarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UsuarioComentario = Value
                    Me.SendPropertyChanged("UsuarioComentario")
                    Me.OnUsuarioComentarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaComentario", Storage:="_FechaComentario", DbType:="Datetime")>
        Public Property FechaComentario() As System.Nullable(Of Date)
            Get
                Return Me._FechaComentario
            End Get
            Set
                If (Me._FechaComentario.Equals(Value) = False) Then
                    Me.OnFechaComentarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaComentario = Value
                    Me.SendPropertyChanged("FechaComentario")
                    Me.OnFechaComentarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class Auditoria
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Servidor As String

        Private _Maquina As String

        Private _DirIPMaquina As String

        Private _Browser As String

        Private _ErrorPersonalizado As Byte

        Private _ID As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnServidorChanging(value As String)
        End Sub
        Partial Private Sub OnServidorChanged()
        End Sub
        Partial Private Sub OnMaquinaChanging(value As String)
        End Sub
        Partial Private Sub OnMaquinaChanged()
        End Sub
        Partial Private Sub OnDirIPMaquinaChanging(value As String)
        End Sub
        Partial Private Sub OnDirIPMaquinaChanged()
        End Sub
        Partial Private Sub OnBrowserChanging(value As String)
        End Sub
        Partial Private Sub OnBrowserChanged()
        End Sub
        Partial Private Sub OnErrorPersonalizadoChanging(value As Byte)
        End Sub
        Partial Private Sub OnErrorPersonalizadoChanged()
        End Sub
        Partial Private Sub OnIDChanging(value As String)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Servidor", DbType:="VarChar(50)", CanBeNull:=False)>
        Public Property Servidor() As String
            Get
                Return Me._Servidor
            End Get
            Set
                If (String.Equals(Me._Servidor, Value) = False) Then
                    Me.OnServidorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Servidor = Value
                    Me.SendPropertyChanged("Servidor")
                    Me.OnServidorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maquina", DbType:="VarChar(50)", CanBeNull:=False)>
        Public Property Maquina() As String
            Get
                Return Me._Maquina
            End Get
            Set
                If (String.Equals(Me._Maquina, Value) = False) Then
                    Me.OnMaquinaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Maquina = Value
                    Me.SendPropertyChanged("Maquina")
                    Me.OnMaquinaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirIPMaquina", DbType:="VarChar(50)", CanBeNull:=False)>
        Public Property DirIPMaquina() As String
            Get
                Return Me._DirIPMaquina
            End Get
            Set
                If (String.Equals(Me._DirIPMaquina, Value) = False) Then
                    Me.OnDirIPMaquinaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DirIPMaquina = Value
                    Me.SendPropertyChanged("DirIPMaquina")
                    Me.OnDirIPMaquinaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Browser", DbType:="VarChar(250)", CanBeNull:=False)>
        Public Property Browser() As String
            Get
                Return Me._Browser
            End Get
            Set
                If (String.Equals(Me._Browser, Value) = False) Then
                    Me.OnBrowserChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Browser = Value
                    Me.SendPropertyChanged("Browser")
                    Me.OnBrowserChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorPersonalizado")>
        Public Property ErrorPersonalizado() As Byte
            Get
                Return Me._ErrorPersonalizado
            End Get
            Set
                If ((Me._ErrorPersonalizado = Value) _
                            = False) Then
                    Me.OnErrorPersonalizadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ErrorPersonalizado = Value
                    Me.SendPropertyChanged("ErrorPersonalizado")
                    Me.OnErrorPersonalizadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property ID() As String
            Get
                Return Me._ID
            End Get
            Set
                If (String.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ItemCombo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Categoria As String

        Private _ID As Integer

        Private _Descripcion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnCategoriaChanging(value As String)
        End Sub
        Partial Private Sub OnCategoriaChanged()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property Categoria() As String
            Get
                Return Me._Categoria
            End Get
            Set
                If (String.Equals(Me._Categoria, Value) = False) Then
                    Me.OnCategoriaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Categoria = Value
                    Me.SendPropertyChanged("Categoria")
                    Me.OnCategoriaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCodificacionContable")>
    Partial Public Class CodificacionContabl
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDCodificacion As Integer

        Private _IDComisionista As Integer

        Private _IDSucComisionista As Integer

        Private _Modulo As String

        Private _TipoOperacion As String

        Private _UsarFecha As String

        Private _TipoCliente As String

        Private _Branch As Integer

        Private _CuentaCosmos As System.Nullable(Of Decimal)

        Private _CodigoTransaccion As Integer

        Private _IndicadorMvto As String

        Private _NroLote As Integer

        Private _DetalleAdicional As String

        Private _TextoDetalle As String

        Private _NroReferencia As String

        Private _PorOperacion As System.Nullable(Of Boolean)

        Private _VlrAReportar As String

        Private _Producto As String

        Private _NroBase As String

        Private _SucursalContable As System.Nullable(Of Boolean)

        Private _ConsecutivoTesoreria As String

        Private _Actualizacion As Date

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDCodificacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDCodificacionChanged()
        End Sub
        Partial Private Sub OnIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDComisionistaChanged()
        End Sub
        Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDSucComisionistaChanged()
        End Sub
        Partial Private Sub OnModuloChanging(value As String)
        End Sub
        Partial Private Sub OnModuloChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnUsarFechaChanging(value As String)
        End Sub
        Partial Private Sub OnUsarFechaChanged()
        End Sub
        Partial Private Sub OnTipoClienteChanging(value As String)
        End Sub
        Partial Private Sub OnTipoClienteChanged()
        End Sub
        Partial Private Sub OnBranchChanging(value As Integer)
        End Sub
        Partial Private Sub OnBranchChanged()
        End Sub
        Partial Private Sub OnCuentaCosmosChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnCuentaCosmosChanged()
        End Sub
        Partial Private Sub OnCodigoTransaccionChanging(value As Integer)
        End Sub
        Partial Private Sub OnCodigoTransaccionChanged()
        End Sub
        Partial Private Sub OnIndicadorMvtoChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorMvtoChanged()
        End Sub
        Partial Private Sub OnNroLoteChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroLoteChanged()
        End Sub
        Partial Private Sub OnDetalleAdicionalChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleAdicionalChanged()
        End Sub
        Partial Private Sub OnTextoDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnTextoDetalleChanged()
        End Sub
        Partial Private Sub OnNroReferenciaChanging(value As String)
        End Sub
        Partial Private Sub OnNroReferenciaChanged()
        End Sub
        Partial Private Sub OnPorOperacionChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnPorOperacionChanged()
        End Sub
        Partial Private Sub OnVlrAReportarChanging(value As String)
        End Sub
        Partial Private Sub OnVlrAReportarChanged()
        End Sub
        Partial Private Sub OnProductoChanging(value As String)
        End Sub
        Partial Private Sub OnProductoChanged()
        End Sub
        Partial Private Sub OnNroBaseChanging(value As String)
        End Sub
        Partial Private Sub OnNroBaseChanged()
        End Sub
        Partial Private Sub OnSucursalContableChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSucursalContableChanged()
        End Sub
        Partial Private Sub OnConsecutivoTesoreriaChanging(value As String)
        End Sub
        Partial Private Sub OnConsecutivoTesoreriaChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCodificacion", Storage:="_IDCodificacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDCodificacion() As Integer
            Get
                Return Me._IDCodificacion
            End Get
            Set
                If (Object.Equals(Me._IDCodificacion, Value) = False) Then
                    Me.OnIDCodificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDCodificacion = Value
                    Me.SendPropertyChanged("IDCodificacion")
                    Me.OnIDCodificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property IDComisionista() As Integer
            Get
                Return Me._IDComisionista
            End Get
            Set
                If (Object.Equals(Me._IDComisionista, Value) = False) Then
                    Me.OnIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComisionista = Value
                    Me.SendPropertyChanged("IDComisionista")
                    Me.OnIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property IDSucComisionista() As Integer
            Get
                Return Me._IDSucComisionista
            End Get
            Set
                If (Object.Equals(Me._IDSucComisionista, Value) = False) Then
                    Me.OnIDSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucComisionista = Value
                    Me.SendPropertyChanged("IDSucComisionista")
                    Me.OnIDSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="Varchar(2)")>
        Public Property Modulo() As String
            Get
                Return Me._Modulo
            End Get
            Set
                If (String.Equals(Me._Modulo, Value) = False) Then
                    Me.OnModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modulo = Value
                    Me.SendPropertyChanged("Modulo")
                    Me.OnModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(2)")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsarFecha", Storage:="_UsarFecha", DbType:="Varchar(2)")>
        Public Property UsarFecha() As String
            Get
                Return Me._UsarFecha
            End Get
            Set
                If (String.Equals(Me._UsarFecha, Value) = False) Then
                    Me.OnUsarFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UsarFecha = Value
                    Me.SendPropertyChanged("UsarFecha")
                    Me.OnUsarFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCliente", Storage:="_TipoCliente", DbType:="Varchar(2)")>
        Public Property TipoCliente() As String
            Get
                Return Me._TipoCliente
            End Get
            Set
                If (String.Equals(Me._TipoCliente, Value) = False) Then
                    Me.OnTipoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoCliente = Value
                    Me.SendPropertyChanged("TipoCliente")
                    Me.OnTipoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngBranch", Storage:="_Branch", DbType:="Int", CanBeNull:=True)>
        Public Property Branch() As Integer
            Get
                Return Me._Branch
            End Get
            Set
                If (Object.Equals(Me._Branch, Value) = False) Then
                    Me.OnBranchChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Branch = Value
                    Me.SendPropertyChanged("Branch")
                    Me.OnBranchChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numCuentaCosmos", Storage:="_CuentaCosmos", DbType:="Decimal")>
        Public Property CuentaCosmos() As System.Nullable(Of Decimal)
            Get
                Return Me._CuentaCosmos
            End Get
            Set
                If (Me._CuentaCosmos.Equals(Value) = False) Then
                    Me.OnCuentaCosmosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaCosmos = Value
                    Me.SendPropertyChanged("CuentaCosmos")
                    Me.OnCuentaCosmosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoTransaccion", Storage:="_CodigoTransaccion", DbType:="Int", CanBeNull:=True)>
        Public Property CodigoTransaccion() As Integer
            Get
                Return Me._CodigoTransaccion
            End Get
            Set
                If (Object.Equals(Me._CodigoTransaccion, Value) = False) Then
                    Me.OnCodigoTransaccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTransaccion = Value
                    Me.SendPropertyChanged("CodigoTransaccion")
                    Me.OnCodigoTransaccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorMvto", Storage:="_IndicadorMvto", DbType:="Varchar(2)")>
        Public Property IndicadorMvto() As String
            Get
                Return Me._IndicadorMvto
            End Get
            Set
                If (String.Equals(Me._IndicadorMvto, Value) = False) Then
                    Me.OnIndicadorMvtoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IndicadorMvto = Value
                    Me.SendPropertyChanged("IndicadorMvto")
                    Me.OnIndicadorMvtoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroLote", Storage:="_NroLote", DbType:="Int", CanBeNull:=True)>
        Public Property NroLote() As Integer
            Get
                Return Me._NroLote
            End Get
            Set
                If (Object.Equals(Me._NroLote, Value) = False) Then
                    Me.OnNroLoteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroLote = Value
                    Me.SendPropertyChanged("NroLote")
                    Me.OnNroLoteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleAdicional", Storage:="_DetalleAdicional", DbType:="Varchar(2)")>
        Public Property DetalleAdicional() As String
            Get
                Return Me._DetalleAdicional
            End Get
            Set
                If (String.Equals(Me._DetalleAdicional, Value) = False) Then
                    Me.OnDetalleAdicionalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DetalleAdicional = Value
                    Me.SendPropertyChanged("DetalleAdicional")
                    Me.OnDetalleAdicionalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTextoDetalle", Storage:="_TextoDetalle", DbType:="Varchar(255)")>
        Public Property TextoDetalle() As String
            Get
                Return Me._TextoDetalle
            End Get
            Set
                If (String.Equals(Me._TextoDetalle, Value) = False) Then
                    Me.OnTextoDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TextoDetalle = Value
                    Me.SendPropertyChanged("TextoDetalle")
                    Me.OnTextoDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroReferencia", Storage:="_NroReferencia", DbType:="Varchar(2)")>
        Public Property NroReferencia() As String
            Get
                Return Me._NroReferencia
            End Get
            Set
                If (String.Equals(Me._NroReferencia, Value) = False) Then
                    Me.OnNroReferenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroReferencia = Value
                    Me.SendPropertyChanged("NroReferencia")
                    Me.OnNroReferenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPorOperacion", Storage:="_PorOperacion", DbType:="Bit")>
        Public Property PorOperacion() As System.Nullable(Of Boolean)
            Get
                Return Me._PorOperacion
            End Get
            Set
                If (Me._PorOperacion.Equals(Value) = False) Then
                    Me.OnPorOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorOperacion = Value
                    Me.SendPropertyChanged("PorOperacion")
                    Me.OnPorOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strVlrAReportar", Storage:="_VlrAReportar", DbType:="Varchar(2)")>
        Public Property VlrAReportar() As String
            Get
                Return Me._VlrAReportar
            End Get
            Set
                If (String.Equals(Me._VlrAReportar, Value) = False) Then
                    Me.OnVlrAReportarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._VlrAReportar = Value
                    Me.SendPropertyChanged("VlrAReportar")
                    Me.OnVlrAReportarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strProducto", Storage:="_Producto", DbType:="Varchar(5)")>
        Public Property Producto() As String
            Get
                Return Me._Producto
            End Get
            Set
                If (String.Equals(Me._Producto, Value) = False) Then
                    Me.OnProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Producto = Value
                    Me.SendPropertyChanged("Producto")
                    Me.OnProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroBase", Storage:="_NroBase", DbType:="Varchar(10)")>
        Public Property NroBase() As String
            Get
                Return Me._NroBase
            End Get
            Set
                If (String.Equals(Me._NroBase, Value) = False) Then
                    Me.OnNroBaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroBase = Value
                    Me.SendPropertyChanged("NroBase")
                    Me.OnNroBaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSucursalContable", Storage:="_SucursalContable", DbType:="Bit")>
        Public Property SucursalContable() As System.Nullable(Of Boolean)
            Get
                Return Me._SucursalContable
            End Get
            Set
                If (Me._SucursalContable.Equals(Value) = False) Then
                    Me.OnSucursalContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SucursalContable = Value
                    Me.SendPropertyChanged("SucursalContable")
                    Me.OnSucursalContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConsecutivoTesoreria", Storage:="_ConsecutivoTesoreria", DbType:="Varchar(15)")>
        Public Property ConsecutivoTesoreria() As String
            Get
                Return Me._ConsecutivoTesoreria
            End Get
            Set
                If (String.Equals(Me._ConsecutivoTesoreria, Value) = False) Then
                    Me.OnConsecutivoTesoreriaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ConsecutivoTesoreria = Value
                    Me.SendPropertyChanged("ConsecutivoTesoreria")
                    Me.OnConsecutivoTesoreriaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>
        Public Property Actualizacion() As Date
            Get
                Return Me._Actualizacion
            End Get
            Set
                If ((Me._Actualizacion = Value) _
                            = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ConsecutivosDocumento
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _strDocumento As String

        Private _strNombreConsecutivo As String

        Private _strDescripcion As String

        Private _intIDConsecutivoDocumento As Integer

        Private _strTipoCuenta As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnstrDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDocumentoChanged()
        End Sub
        Partial Private Sub OnstrNombreConsecutivoChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreConsecutivoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionChanged()
        End Sub
        Partial Private Sub OnintIDConsecutivoDocumentoChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDConsecutivoDocumentoChanged()
        End Sub
        Partial Private Sub OnstrTipoCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoCuentaChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDocumento", DbType:="VarChar(15) NOT NULL", CanBeNull:=False)>
        Public Property strDocumento() As String
            Get
                Return Me._strDocumento
            End Get
            Set
                If (String.Equals(Me._strDocumento, Value) = False) Then
                    Me.OnstrDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDocumento = Value
                    Me.SendPropertyChanged("strDocumento")
                    Me.OnstrDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreConsecutivo", DbType:="VarChar(15) NOT NULL", CanBeNull:=False)>
        Public Property strNombreConsecutivo() As String
            Get
                Return Me._strNombreConsecutivo
            End Get
            Set
                If (String.Equals(Me._strNombreConsecutivo, Value) = False) Then
                    Me.OnstrNombreConsecutivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreConsecutivo = Value
                    Me.SendPropertyChanged("strNombreConsecutivo")
                    Me.OnstrNombreConsecutivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
        Public Property strDescripcion() As String
            Get
                Return Me._strDescripcion
            End Get
            Set
                If (String.Equals(Me._strDescripcion, Value) = False) Then
                    Me.OnstrDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcion = Value
                    Me.SendPropertyChanged("strDescripcion")
                    Me.OnstrDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConsecutivoDocumento", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDConsecutivoDocumento() As Integer
            Get
                Return Me._intIDConsecutivoDocumento
            End Get
            Set
                If ((Me._intIDConsecutivoDocumento = Value) _
                            = False) Then
                    Me.OnintIDConsecutivoDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDConsecutivoDocumento = Value
                    Me.SendPropertyChanged("intIDConsecutivoDocumento")
                    Me.OnintIDConsecutivoDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCuenta", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
        Public Property strTipoCuenta() As String
            Get
                Return Me._strTipoCuenta
            End Get
            Set
                If (String.Equals(Me._strTipoCuenta, Value) = False) Then
                    Me.OnstrTipoCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoCuenta = Value
                    Me.SendPropertyChanged("strTipoCuenta")
                    Me.OnstrTipoCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

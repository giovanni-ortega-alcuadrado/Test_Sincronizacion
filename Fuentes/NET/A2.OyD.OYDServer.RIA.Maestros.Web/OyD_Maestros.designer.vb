'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYDPlus")>  _
Partial Public Class OyDDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertViewClientes_Exentos_Consultar(instance As ViewClientes_Exentos_Consultar)
    End Sub
  Partial Private Sub UpdateViewClientes_Exentos_Consultar(instance As ViewClientes_Exentos_Consultar)
    End Sub
  Partial Private Sub DeleteViewClientes_Exentos_Consultar(instance As ViewClientes_Exentos_Consultar)
    End Sub
  Partial Private Sub UpdateConceptosConsecutivo(instance As ConceptosConsecutivo)
    End Sub
  Partial Private Sub InsertLlenarlistas(instance As Llenarlistas)
    End Sub
  Partial Private Sub UpdateLlenarlistas(instance As Llenarlistas)
    End Sub
  Partial Private Sub DeleteLlenarlistas(instance As Llenarlistas)
    End Sub
  Partial Private Sub InsertLlenarlistaConcepto(instance As LlenarlistaConcepto)
    End Sub
  Partial Private Sub UpdateLlenarlistaConcepto(instance As LlenarlistaConcepto)
    End Sub
  Partial Private Sub DeleteLlenarlistaConcepto(instance As LlenarlistaConcepto)
    End Sub
  Partial Private Sub InsertArchivo(instance As Archivo)
    End Sub
  Partial Private Sub UpdateArchivo(instance As Archivo)
    End Sub
  Partial Private Sub DeleteArchivo(instance As Archivo)
    End Sub
  Partial Private Sub InsertAuditoria(instance As Auditoria)
    End Sub
  Partial Private Sub UpdateAuditoria(instance As Auditoria)
    End Sub
  Partial Private Sub DeleteAuditoria(instance As Auditoria)
    End Sub
  Partial Private Sub UpdateConsecutivosUsuario(instance As ConsecutivosUsuario)
    End Sub
  Partial Private Sub InserttmpCCostos(instance As tmpCCostos)
    End Sub
  Partial Private Sub UpdatetmpCCostos(instance As tmpCCostos)
    End Sub
  Partial Private Sub DeletetmpCCostos(instance As tmpCCostos)
    End Sub
  Partial Private Sub InsertItemCombo(instance As ItemCombo)
    End Sub
  Partial Private Sub UpdateItemCombo(instance As ItemCombo)
    End Sub
  Partial Private Sub DeleteItemCombo(instance As ItemCombo)
    End Sub
  Partial Private Sub InsertListaUsuario(instance As ListaUsuario)
    End Sub
  Partial Private Sub UpdateListaUsuario(instance As ListaUsuario)
    End Sub
  Partial Private Sub DeleteListaUsuario(instance As ListaUsuario)
    End Sub
  Partial Private Sub InsertConsultaExiste(instance As ConsultaExiste)
    End Sub
  Partial Private Sub UpdateConsultaExiste(instance As ConsultaExiste)
    End Sub
  Partial Private Sub DeleteConsultaExiste(instance As ConsultaExiste)
    End Sub
  Partial Private Sub InsertCuentasDeceval(instance As CuentasDeceval)
    End Sub
  Partial Private Sub UpdateCuentasDeceval(instance As CuentasDeceval)
    End Sub
  Partial Private Sub DeleteCuentasDeceval(instance As CuentasDeceval)
    End Sub
  Partial Private Sub InsertListaBeneficiarios(instance As ListaBeneficiarios)
    End Sub
  Partial Private Sub UpdateListaBeneficiarios(instance As ListaBeneficiarios)
    End Sub
  Partial Private Sub DeleteListaBeneficiarios(instance As ListaBeneficiarios)
    End Sub
  Partial Private Sub UpdateConsultaNombre(instance As ConsultaNombre)
    End Sub
  Partial Private Sub DeleteConsultaNombre(instance As ConsultaNombre)
    End Sub
  Partial Private Sub InsertSaldosBancoMes(instance As SaldosBancoMes)
    End Sub
  Partial Private Sub UpdateSaldosBancoMes(instance As SaldosBancoMes)
    End Sub
  Partial Private Sub DeleteSaldosBancoMes(instance As SaldosBancoMes)
    End Sub
  Partial Private Sub InsertMovimientosBancos(instance As MovimientosBancos)
    End Sub
  Partial Private Sub UpdateMovimientosBancos(instance As MovimientosBancos)
    End Sub
  Partial Private Sub DeleteMovimientosBancos(instance As MovimientosBancos)
    End Sub
  Partial Private Sub InsertListaConfigLEO(instance As ListaConfigLEO)
    End Sub
  Partial Private Sub UpdateListaConfigLEO(instance As ListaConfigLEO)
    End Sub
  Partial Private Sub DeleteListaConfigLEO(instance As ListaConfigLEO)
    End Sub
  Partial Private Sub InsertListaBancosRelacionadosAsociados(instance As ListaBancosRelacionadosAsociados)
    End Sub
  Partial Private Sub UpdateListaBancosRelacionadosAsociados(instance As ListaBancosRelacionadosAsociados)
    End Sub
  Partial Private Sub DeleteListaBancosRelacionadosAsociados(instance As ListaBancosRelacionadosAsociados)
    End Sub
  Partial Private Sub InsertValidacionEliminarRegistro(instance As ValidacionEliminarRegistro)
    End Sub
  Partial Private Sub UpdateValidacionEliminarRegistro(instance As ValidacionEliminarRegistro)
    End Sub
  Partial Private Sub DeleteValidacionEliminarRegistro(instance As ValidacionEliminarRegistro)
    End Sub
  Partial Private Sub InserttblMetapalabras(instance As tblMetapalabras)
    End Sub
  Partial Private Sub UpdatetblMetapalabras(instance As tblMetapalabras)
    End Sub
  Partial Private Sub DeletetblMetapalabras(instance As tblMetapalabras)
    End Sub
  Partial Private Sub InsertAmortizacionesEspeci(instance As AmortizacionesEspeci)
    End Sub
  Partial Private Sub UpdateAmortizacionesEspeci(instance As AmortizacionesEspeci)
    End Sub
  Partial Private Sub DeleteAmortizacionesEspeci(instance As AmortizacionesEspeci)
    End Sub
  Partial Private Sub InsertDetalleGrupoEconomico(instance As DetalleGrupoEconomico)
    End Sub
  Partial Private Sub UpdateDetalleGrupoEconomico(instance As DetalleGrupoEconomico)
    End Sub
  Partial Private Sub DeleteDetalleGrupoEconomico(instance As DetalleGrupoEconomico)
    End Sub
  Partial Private Sub DeleteComisionesBroker(instance As ComisionesBroker)
    End Sub
  Partial Private Sub InsertPermisosFormatosExportar(instance As PermisosFormatosExportar)
    End Sub
  Partial Private Sub DeletePermisosFormatosExportar(instance As PermisosFormatosExportar)
    End Sub
  Partial Private Sub InsertUsuariosPermisosFormatos(instance As UsuariosPermisosFormatos)
    End Sub
  Partial Private Sub UpdateUsuariosPermisosFormatos(instance As UsuariosPermisosFormatos)
    End Sub
  Partial Private Sub DeleteUsuariosPermisosFormatos(instance As UsuariosPermisosFormatos)
    End Sub
  Partial Private Sub InsertPaise(instance As Paise)
    End Sub
  Partial Private Sub UpdatePaise(instance As Paise)
    End Sub
  Partial Private Sub DeletePaise(instance As Paise)
    End Sub
  Partial Private Sub InsertDepartamento(instance As Departamento)
    End Sub
  Partial Private Sub UpdateDepartamento(instance As Departamento)
    End Sub
  Partial Private Sub DeleteDepartamento(instance As Departamento)
    End Sub
  Partial Private Sub InsertCiudade(instance As Ciudade)
    End Sub
  Partial Private Sub UpdateCiudade(instance As Ciudade)
    End Sub
  Partial Private Sub DeleteCiudade(instance As Ciudade)
    End Sub
  Partial Private Sub InsertListadoActualizarLEO(instance As ListadoActualizarLEO)
    End Sub
  Partial Private Sub UpdateListadoActualizarLEO(instance As ListadoActualizarLEO)
    End Sub
  Partial Private Sub DeleteListadoActualizarLEO(instance As ListadoActualizarLEO)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Sucursales() As System.Data.Linq.Table(Of Sucursale)
		Get
			Return Me.GetTable(Of Sucursale)
		End Get
	End Property
	
	Public ReadOnly Property TiposEntidad() As System.Data.Linq.Table(Of TiposEntida)
		Get
			Return Me.GetTable(Of TiposEntida)
		End Get
	End Property
	
	Public ReadOnly Property ProductosValores() As System.Data.Linq.Table(Of ProductosValore)
		Get
			Return Me.GetTable(Of ProductosValore)
		End Get
	End Property
	
	Public ReadOnly Property ConceptosInactividad() As System.Data.Linq.Table(Of ConceptosInactivida)
		Get
			Return Me.GetTable(Of ConceptosInactivida)
		End Get
	End Property
	
	Public ReadOnly Property TipoReferencias() As System.Data.Linq.Table(Of TipoReferencia)
		Get
			Return Me.GetTable(Of TipoReferencia)
		End Get
	End Property
	
	Public ReadOnly Property DoctosRequeridos() As System.Data.Linq.Table(Of DoctosRequerido)
		Get
			Return Me.GetTable(Of DoctosRequerido)
		End Get
	End Property
	
	Public ReadOnly Property Codigos_CIIU() As System.Data.Linq.Table(Of Codigos_CII)
		Get
			Return Me.GetTable(Of Codigos_CII)
		End Get
	End Property
	
	Public ReadOnly Property Profesiones() As System.Data.Linq.Table(Of Profesione)
		Get
			Return Me.GetTable(Of Profesione)
		End Get
	End Property
	
	Public ReadOnly Property Custodio() As System.Data.Linq.Table(Of Custodi)
		Get
			Return Me.GetTable(Of Custodi)
		End Get
	End Property
	
	Public ReadOnly Property Bolsas() As System.Data.Linq.Table(Of Bolsa)
		Get
			Return Me.GetTable(Of Bolsa)
		End Get
	End Property
	
	Public ReadOnly Property Clasificaciones() As System.Data.Linq.Table(Of Clasificacion)
		Get
			Return Me.GetTable(Of Clasificacion)
		End Get
	End Property
	
	Public ReadOnly Property Comisionistas() As System.Data.Linq.Table(Of Comisionista)
		Get
			Return Me.GetTable(Of Comisionista)
		End Get
	End Property
	
	Public ReadOnly Property BancosNacionales() As System.Data.Linq.Table(Of BancosNacionale)
		Get
			Return Me.GetTable(Of BancosNacionale)
		End Get
	End Property
	
	Public ReadOnly Property RelacionesCodBancos() As System.Data.Linq.Table(Of RelacionesCodBanco)
		Get
			Return Me.GetTable(Of RelacionesCodBanco)
		End Get
	End Property
	
	Public ReadOnly Property ConsecutivosDocumentos() As System.Data.Linq.Table(Of ConsecutivosDocumento)
		Get
			Return Me.GetTable(Of ConsecutivosDocumento)
		End Get
	End Property
	
	Public ReadOnly Property CuentasContablesOyD() As System.Data.Linq.Table(Of CuentasContablesOy)
		Get
			Return Me.GetTable(Of CuentasContablesOy)
		End Get
	End Property
	
	Public ReadOnly Property Inhabilitados() As System.Data.Linq.Table(Of Inhabilitado)
		Get
			Return Me.GetTable(Of Inhabilitado)
		End Get
	End Property
	
	Public ReadOnly Property Empleados() As System.Data.Linq.Table(Of Empleado)
		Get
			Return Me.GetTable(Of Empleado)
		End Get
	End Property
	
	Public ReadOnly Property PrefijosFacturas() As System.Data.Linq.Table(Of PrefijosFactura)
		Get
			Return Me.GetTable(Of PrefijosFactura)
		End Get
	End Property
	
	Public ReadOnly Property DepositosExtranjeros() As System.Data.Linq.Table(Of DepositosExtranjero)
		Get
			Return Me.GetTable(Of DepositosExtranjero)
		End Get
	End Property
	
	Public ReadOnly Property Consecutivos() As System.Data.Linq.Table(Of Consecutivo)
		Get
			Return Me.GetTable(Of Consecutivo)
		End Get
	End Property
	
	Public ReadOnly Property ConceptosTesoreria() As System.Data.Linq.Table(Of ConceptosTesoreri)
		Get
			Return Me.GetTable(Of ConceptosTesoreri)
		End Get
	End Property
	
	Public ReadOnly Property ClientesExternos() As System.Data.Linq.Table(Of ClientesExterno)
		Get
			Return Me.GetTable(Of ClientesExterno)
		End Get
	End Property
	
	Public ReadOnly Property UsuariosSucursales() As System.Data.Linq.Table(Of UsuariosSucursale)
		Get
			Return Me.GetTable(Of UsuariosSucursale)
		End Get
	End Property
	
	Public ReadOnly Property ClientesFondosPensiones() As System.Data.Linq.Table(Of ClientesFondosPensione)
		Get
			Return Me.GetTable(Of ClientesFondosPensione)
		End Get
	End Property
	
	Public ReadOnly Property ViewClientes_Exentos() As System.Data.Linq.Table(Of ViewClientes_Exento)
		Get
			Return Me.GetTable(Of ViewClientes_Exento)
		End Get
	End Property
	
	Public ReadOnly Property ViewClientes_Exentos_Consultars() As System.Data.Linq.Table(Of ViewClientes_Exentos_Consultar)
		Get
			Return Me.GetTable(Of ViewClientes_Exentos_Consultar)
		End Get
	End Property
	
	Public ReadOnly Property ConceptosConsecutivos() As System.Data.Linq.Table(Of ConceptosConsecutivo)
		Get
			Return Me.GetTable(Of ConceptosConsecutivo)
		End Get
	End Property
	
	Public ReadOnly Property Llenarlistas() As System.Data.Linq.Table(Of Llenarlistas)
		Get
			Return Me.GetTable(Of Llenarlistas)
		End Get
	End Property
	
	Public ReadOnly Property LlenarlistaConceptos() As System.Data.Linq.Table(Of LlenarlistaConcepto)
		Get
			Return Me.GetTable(Of LlenarlistaConcepto)
		End Get
	End Property
	
	Public ReadOnly Property DiasNoHabiles() As System.Data.Linq.Table(Of DiasNoHabile)
		Get
			Return Me.GetTable(Of DiasNoHabile)
		End Get
	End Property
	
	Public ReadOnly Property Archivos() As System.Data.Linq.Table(Of Archivo)
		Get
			Return Me.GetTable(Of Archivo)
		End Get
	End Property
	
	Public ReadOnly Property Auditorias() As System.Data.Linq.Table(Of Auditoria)
		Get
			Return Me.GetTable(Of Auditoria)
		End Get
	End Property
	
	Public ReadOnly Property ConsecutivosUsuarios() As System.Data.Linq.Table(Of ConsecutivosUsuario)
		Get
			Return Me.GetTable(Of ConsecutivosUsuario)
		End Get
	End Property
	
	Public ReadOnly Property Tarifas() As System.Data.Linq.Table(Of Tarifa)
		Get
			Return Me.GetTable(Of Tarifa)
		End Get
	End Property
	
	Public ReadOnly Property DetalleTarifas() As System.Data.Linq.Table(Of DetalleTarifa)
		Get
			Return Me.GetTable(Of DetalleTarifa)
		End Get
	End Property
	
	Public ReadOnly Property Monedas() As System.Data.Linq.Table(Of Moneda)
		Get
			Return Me.GetTable(Of Moneda)
		End Get
	End Property
	
	Public ReadOnly Property MonedaValos() As System.Data.Linq.Table(Of MonedaValo)
		Get
			Return Me.GetTable(Of MonedaValo)
		End Get
	End Property
	
	Public ReadOnly Property TipoPersonaPorDcto() As System.Data.Linq.Table(Of TipoPersonaPorDct)
		Get
			Return Me.GetTable(Of TipoPersonaPorDct)
		End Get
	End Property
	
	Public ReadOnly Property Mesas() As System.Data.Linq.Table(Of Mesa)
		Get
			Return Me.GetTable(Of Mesa)
		End Get
	End Property
	
	Public ReadOnly Property Receptores() As System.Data.Linq.Table(Of Receptore)
		Get
			Return Me.GetTable(Of Receptore)
		End Get
	End Property
	
	Public ReadOnly Property Oficinas() As System.Data.Linq.Table(Of Oficinas)
		Get
			Return Me.GetTable(Of Oficinas)
		End Get
	End Property
	
	Public ReadOnly Property tmpCCostos() As System.Data.Linq.Table(Of tmpCCostos)
		Get
			Return Me.GetTable(Of tmpCCostos)
		End Get
	End Property
	
	Public ReadOnly Property ReceptoresSistemas() As System.Data.Linq.Table(Of ReceptoresSistema)
		Get
			Return Me.GetTable(Of ReceptoresSistema)
		End Get
	End Property
	
	Public ReadOnly Property UsuariosFechaCierre() As System.Data.Linq.Table(Of UsuariosFechaCierr)
		Get
			Return Me.GetTable(Of UsuariosFechaCierr)
		End Get
	End Property
	
	Public ReadOnly Property CodigosOtrosSistemas() As System.Data.Linq.Table(Of CodigosOtrosSistema)
		Get
			Return Me.GetTable(Of CodigosOtrosSistema)
		End Get
	End Property
	
	Public ReadOnly Property ItemCombos() As System.Data.Linq.Table(Of ItemCombo)
		Get
			Return Me.GetTable(Of ItemCombo)
		End Get
	End Property
	
	Public ReadOnly Property ListaUsuarios() As System.Data.Linq.Table(Of ListaUsuario)
		Get
			Return Me.GetTable(Of ListaUsuario)
		End Get
	End Property
	
	Public ReadOnly Property ConsultaExistes() As System.Data.Linq.Table(Of ConsultaExiste)
		Get
			Return Me.GetTable(Of ConsultaExiste)
		End Get
	End Property
	
	Public ReadOnly Property Instalacion() As System.Data.Linq.Table(Of Instalacio)
		Get
			Return Me.GetTable(Of Instalacio)
		End Get
	End Property
	
	Public ReadOnly Property CuentasDecevalPorAgrupador() As System.Data.Linq.Table(Of CuentasDecevalPorAgrupado)
		Get
			Return Me.GetTable(Of CuentasDecevalPorAgrupado)
		End Get
	End Property
	
	Public ReadOnly Property CuentasDecevals() As System.Data.Linq.Table(Of CuentasDeceval)
		Get
			Return Me.GetTable(Of CuentasDeceval)
		End Get
	End Property
	
	Public ReadOnly Property ListaBeneficiarios() As System.Data.Linq.Table(Of ListaBeneficiarios)
		Get
			Return Me.GetTable(Of ListaBeneficiarios)
		End Get
	End Property
	
	Public ReadOnly Property ConsultaNombres() As System.Data.Linq.Table(Of ConsultaNombre)
		Get
			Return Me.GetTable(Of ConsultaNombre)
		End Get
	End Property
	
	Public ReadOnly Property Ordenes() As System.Data.Linq.Table(Of Ordene)
		Get
			Return Me.GetTable(Of Ordene)
		End Get
	End Property
	
	Public ReadOnly Property ResolucionesFacturas() As System.Data.Linq.Table(Of ResolucionesFactura)
		Get
			Return Me.GetTable(Of ResolucionesFactura)
		End Get
	End Property
	
	Public ReadOnly Property CuentasBancarias() As System.Data.Linq.Table(Of Banco)
		Get
			Return Me.GetTable(Of Banco)
		End Get
	End Property
	
	Public ReadOnly Property BancoSaldosBancoMes() As System.Data.Linq.Table(Of SaldosBancoMes)
		Get
			Return Me.GetTable(Of SaldosBancoMes)
		End Get
	End Property
	
	Public ReadOnly Property MovimientosBancos() As System.Data.Linq.Table(Of MovimientosBancos)
		Get
			Return Me.GetTable(Of MovimientosBancos)
		End Get
	End Property
	
	Public ReadOnly Property ConfigLEO() As System.Data.Linq.Table(Of ConfigLE)
		Get
			Return Me.GetTable(Of ConfigLE)
		End Get
	End Property
	
	Public ReadOnly Property ListaConfigLEO() As System.Data.Linq.Table(Of ListaConfigLEO)
		Get
			Return Me.GetTable(Of ListaConfigLEO)
		End Get
	End Property
	
	Public ReadOnly Property Usuarios_Seleccionar() As System.Data.Linq.Table(Of Usuarios_Selecciona)
		Get
			Return Me.GetTable(Of Usuarios_Selecciona)
		End Get
	End Property
	
	Public ReadOnly Property ClienteAgrupador() As System.Data.Linq.Table(Of ClienteAgrupado)
		Get
			Return Me.GetTable(Of ClienteAgrupado)
		End Get
	End Property
	
	Public ReadOnly Property DetalleClienteAgrupador() As System.Data.Linq.Table(Of DetalleClienteAgrupado)
		Get
			Return Me.GetTable(Of DetalleClienteAgrupado)
		End Get
	End Property
	
	Public ReadOnly Property ClasificacionesCiiu() As System.Data.Linq.Table(Of ClasificacionesCii)
		Get
			Return Me.GetTable(Of ClasificacionesCii)
		End Get
	End Property
	
	Public ReadOnly Property BolsaCostos() As System.Data.Linq.Table(Of BolsaCosto)
		Get
			Return Me.GetTable(Of BolsaCosto)
		End Get
	End Property
	
	Public ReadOnly Property BloqueoSaldoClientes() As System.Data.Linq.Table(Of BloqueoSaldoCliente)
		Get
			Return Me.GetTable(Of BloqueoSaldoCliente)
		End Get
	End Property
	
	Public ReadOnly Property Bancos_BancosNacionalesRelacionados() As System.Data.Linq.Table(Of Bancos_BancosNacionalesRelacionado)
		Get
			Return Me.GetTable(Of Bancos_BancosNacionalesRelacionado)
		End Get
	End Property
	
	Public ReadOnly Property ListaBancosRelacionadosAsociados() As System.Data.Linq.Table(Of ListaBancosRelacionadosAsociados)
		Get
			Return Me.GetTable(Of ListaBancosRelacionadosAsociados)
		End Get
	End Property
	
	Public ReadOnly Property ComisionEspecies() As System.Data.Linq.Table(Of ComisionEspecie)
		Get
			Return Me.GetTable(Of ComisionEspecie)
		End Get
	End Property
	
	Public ReadOnly Property ValidacionEliminarRegistro() As System.Data.Linq.Table(Of ValidacionEliminarRegistro)
		Get
			Return Me.GetTable(Of ValidacionEliminarRegistro)
		End Get
	End Property
	
	Public ReadOnly Property Plantillas() As System.Data.Linq.Table(Of Plantilla)
		Get
			Return Me.GetTable(Of Plantilla)
		End Get
	End Property
	
	Public ReadOnly Property tblMetapalabras() As System.Data.Linq.Table(Of tblMetapalabras)
		Get
			Return Me.GetTable(Of tblMetapalabras)
		End Get
	End Property
	
	Public ReadOnly Property PlantillaBancos() As System.Data.Linq.Table(Of PlantillaBanco)
		Get
			Return Me.GetTable(Of PlantillaBanco)
		End Get
	End Property
	
	Public ReadOnly Property DestinoInversion() As System.Data.Linq.Table(Of DestinoInversion)
		Get
			Return Me.GetTable(Of DestinoInversion)
		End Get
	End Property
	
	Public ReadOnly Property AmortizacionesEspecis() As System.Data.Linq.Table(Of AmortizacionesEspeci)
		Get
			Return Me.GetTable(Of AmortizacionesEspeci)
		End Get
	End Property
	
	Public ReadOnly Property GrupoEconomicos() As System.Data.Linq.Table(Of GrupoEconomicos)
		Get
			Return Me.GetTable(Of GrupoEconomicos)
		End Get
	End Property
	
	Public ReadOnly Property DetalleGrupoEconomicos() As System.Data.Linq.Table(Of DetalleGrupoEconomico)
		Get
			Return Me.GetTable(Of DetalleGrupoEconomico)
		End Get
	End Property
	
	Public ReadOnly Property ClasificacionRiesgos() As System.Data.Linq.Table(Of ClasificacionRiesgo)
		Get
			Return Me.GetTable(Of ClasificacionRiesgo)
		End Get
	End Property
	
	Public ReadOnly Property ClasificacionTipoCliente() As System.Data.Linq.Table(Of ClasificacionRiesgoTipoCliente)
		Get
			Return Me.GetTable(Of ClasificacionRiesgoTipoCliente)
		End Get
	End Property
	
	Public ReadOnly Property ComisionesBroker() As System.Data.Linq.Table(Of ComisionesBroker)
		Get
			Return Me.GetTable(Of ComisionesBroker)
		End Get
	End Property
	
	Public ReadOnly Property PerfilesRiesgos() As System.Data.Linq.Table(Of PerfilesRiesgo)
		Get
			Return Me.GetTable(Of PerfilesRiesgo)
		End Get
	End Property
	
	Public ReadOnly Property CarterasColectivasClientesGMF() As System.Data.Linq.Table(Of CarterasColectivasClientesGMF)
		Get
			Return Me.GetTable(Of CarterasColectivasClientesGMF)
		End Get
	End Property
	
	Public ReadOnly Property EmpleadosSistemas() As System.Data.Linq.Table(Of EmpleadoSistema)
		Get
			Return Me.GetTable(Of EmpleadoSistema)
		End Get
	End Property
	
	Public ReadOnly Property PermisosFormatosExportar() As System.Data.Linq.Table(Of PermisosFormatosExportar)
		Get
			Return Me.GetTable(Of PermisosFormatosExportar)
		End Get
	End Property
	
	Public ReadOnly Property UsuariosPermisosFormatos() As System.Data.Linq.Table(Of UsuariosPermisosFormatos)
		Get
			Return Me.GetTable(Of UsuariosPermisosFormatos)
		End Get
	End Property
	
	Public ReadOnly Property ConfiguracionReceptores() As System.Data.Linq.Table(Of ConfiguracionReceptores)
		Get
			Return Me.GetTable(Of ConfiguracionReceptores)
		End Get
	End Property
	
	Public ReadOnly Property Paises() As System.Data.Linq.Table(Of Paise)
		Get
			Return Me.GetTable(Of Paise)
		End Get
	End Property
	
	Public ReadOnly Property Departamentos() As System.Data.Linq.Table(Of Departamento)
		Get
			Return Me.GetTable(Of Departamento)
		End Get
	End Property
	
	Public ReadOnly Property Ciudades() As System.Data.Linq.Table(Of Ciudade)
		Get
			Return Me.GetTable(Of Ciudade)
		End Get
	End Property
	
	Public ReadOnly Property BancosTasasRendimientos() As System.Data.Linq.Table(Of BancosTasasRendimientos)
		Get
			Return Me.GetTable(Of BancosTasasRendimientos)
		End Get
	End Property
	
	Public ReadOnly Property ConsecutivosVsUsuarios() As System.Data.Linq.Table(Of ConsecutivosVsUsuarios)
		Get
			Return Me.GetTable(Of ConsecutivosVsUsuarios)
		End Get
	End Property
	
	Public ReadOnly Property ConceptosVSConsecutivos() As System.Data.Linq.Table(Of ConceptosVSConsecutivos)
		Get
			Return Me.GetTable(Of ConceptosVSConsecutivos)
		End Get
	End Property
	
	Public ReadOnly Property CuentasCRCC() As System.Data.Linq.Table(Of CuentasCRCC)
		Get
			Return Me.GetTable(Of CuentasCRCC)
		End Get
	End Property
	
	Public ReadOnly Property TesoreriaConsecutivosEquivalencias() As System.Data.Linq.Table(Of TesoreriaConsecutivosEquivalencias)
		Get
			Return Me.GetTable(Of TesoreriaConsecutivosEquivalencias)
		End Get
	End Property
	
	Public ReadOnly Property TiposCuentasRecaudadoras() As System.Data.Linq.Table(Of TiposCuentasRecaudadoras)
		Get
			Return Me.GetTable(Of TiposCuentasRecaudadoras)
		End Get
	End Property
	
	Public ReadOnly Property CuentasBancariasPorConcepto() As System.Data.Linq.Table(Of CuentasBancariasPorConcepto)
		Get
			Return Me.GetTable(Of CuentasBancariasPorConcepto)
		End Get
	End Property
	
	Public ReadOnly Property CodigosAjustes() As System.Data.Linq.Table(Of CodigosAjustes)
		Get
			Return Me.GetTable(Of CodigosAjustes)
		End Get
	End Property
	
	Public ReadOnly Property Clientes_Responsables() As System.Data.Linq.Table(Of Clientes_Responsables)
		Get
			Return Me.GetTable(Of Clientes_Responsables)
		End Get
	End Property
	
	Public ReadOnly Property EncabezadoResponsable() As System.Data.Linq.Table(Of EncabezadoResponsable)
		Get
			Return Me.GetTable(Of EncabezadoResponsable)
		End Get
	End Property
	
	Public ReadOnly Property tblClientes_Relacionados() As System.Data.Linq.Table(Of Clientes_Relacionados)
		Get
			Return Me.GetTable(Of Clientes_Relacionados)
		End Get
	End Property
	
	Public ReadOnly Property EncabezadoRelacionado() As System.Data.Linq.Table(Of EncabezadoRelacionado)
		Get
			Return Me.GetTable(Of EncabezadoRelacionado)
		End Get
	End Property
	
	Public ReadOnly Property CodigosTransaccion() As System.Data.Linq.Table(Of CodigosTransaccion)
		Get
			Return Me.GetTable(Of CodigosTransaccion)
		End Get
	End Property
	
	Public ReadOnly Property ListadoActualizarLEO() As System.Data.Linq.Table(Of ListadoActualizarLEO)
		Get
			Return Me.GetTable(Of ListadoActualizarLEO)
		End Get
	End Property
	
	Private Sub InsertSucursale(ByVal obj As Sucursale)
		Dim p1 As Integer = obj.IDSucursal
		Dim p2 As Integer = obj.IDSuc
		Me.uspOyDNet_Maestros_Sucursales_Actualizar(obj.IDComisionista, obj.IDSucComisionista, p1, obj.Nombre, CType(obj.PorcentajePatrimonioTecnico,System.Nullable(Of Double)), obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDSucursal = p1
		obj.IDSuc = p2
	End Sub
	
	Private Sub UpdateSucursale(ByVal obj As Sucursale)
		Dim p1 As Integer = obj.IDSucursal
		Dim p2 As Integer = obj.IDSuc
		Me.uspOyDNet_Maestros_Sucursales_Actualizar(obj.IDComisionista, obj.IDSucComisionista, p1, obj.Nombre, CType(obj.PorcentajePatrimonioTecnico,System.Nullable(Of Double)), obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDSucursal = p1
		obj.IDSuc = p2
	End Sub
	
	Private Sub DeleteSucursale(ByVal obj As Sucursale)
		Me.uspOyDNet_Maestros_Sucursales_Eliminar(obj.IDSuc, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertTiposEntida(ByVal obj As TiposEntida)
		Dim p1 As Integer = obj.IDTipoEntidad
		Dim p2 As System.Nullable(Of Short) = obj.IdTipoEntidadI
		Me.uspOyDNet_Maestros_TiposEntidad_Actualizar(obj.IDComisionista, obj.IDSucComisionista, p1, obj.Nombre, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDTipoEntidad = p1
		obj.IdTipoEntidadI = p2.GetValueOrDefault
	End Sub
	
	Private Sub UpdateTiposEntida(ByVal obj As TiposEntida)
		Dim p1 As Integer = obj.IDTipoEntidad
		Dim p2 As System.Nullable(Of Short) = obj.IdTipoEntidadI
		Me.uspOyDNet_Maestros_TiposEntidad_Actualizar(obj.IDComisionista, obj.IDSucComisionista, p1, obj.Nombre, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDTipoEntidad = p1
		obj.IdTipoEntidadI = p2.GetValueOrDefault
	End Sub
	
	Private Sub DeleteTiposEntida(ByVal obj As TiposEntida)
		Me.uspOyDNet_Maestros_TiposEntidad_Eliminar(CType(obj.IdTipoEntidadI,System.Nullable(Of Short)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertProductosValore(ByVal obj As ProductosValore)
		Dim p1 As Integer = obj.IDTipoProducto
		Dim p2 As System.Nullable(Of System.int32) = obj.Orden
		Dim p3 As System.Nullable(Of Short) = obj.IdProductoValores
		Me.uspOyDNet_Maestros_ProductosValores_Actualizar(p1, obj.Descripcion, p2, obj.Usuario, p3, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDTipoProducto = p1
		obj.Orden = p2
		obj.IdProductoValores = p3.GetValueOrDefault
	End Sub
	
	Private Sub UpdateProductosValore(ByVal obj As ProductosValore)
		Dim p1 As Integer = obj.IDTipoProducto
		Dim p2 As System.Nullable(Of System.int32) = obj.Orden
		Dim p3 As System.Nullable(Of Short) = obj.IdProductoValores
		Me.uspOyDNet_Maestros_ProductosValores_Actualizar(p1, obj.Descripcion, p2, obj.Usuario, p3, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDTipoProducto = p1
		obj.Orden = p2
		obj.IdProductoValores = p3.GetValueOrDefault
	End Sub
	
	Private Sub DeleteProductosValore(ByVal obj As ProductosValore)
		Me.uspOyDNet_Maestros_ProductosValores_Eliminar(CType(obj.IdProductoValores,System.Nullable(Of Short)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConceptosInactivida(ByVal obj As ConceptosInactivida)
		Me.uspOyDNet_Maestros_ConceptosInactividad_Actualizar(obj.IDComisionista, obj.IDSucComisionista, obj.ID, CType(obj.Actividad,System.Nullable(Of Boolean)), obj.Nombre, obj.Usuario, CType(obj.IdConceptoInactividad,System.Nullable(Of Short)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateConceptosInactivida(ByVal obj As ConceptosInactivida)
		Me.uspOyDNet_Maestros_ConceptosInactividad_Actualizar(obj.IDComisionista, obj.IDSucComisionista, obj.ID, CType(obj.Actividad,System.Nullable(Of Boolean)), obj.Nombre, obj.Usuario, CType(obj.IdConceptoInactividad,System.Nullable(Of Short)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteConceptosInactivida(ByVal obj As ConceptosInactivida)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_ConceptosInactividad_Eliminar(CType(obj.IdConceptoInactividad,System.Nullable(Of Short)), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertTipoReferencia(ByVal obj As TipoReferencia)
		Dim p1 As Integer = obj.IDCodigo
		Me.uspOyDNet_Maestros_TipoReferencias_Actualizar(p1, obj.IDCodigoRetorno, obj.Descripcion, obj.tipoClasificacion, CType(obj.Formulario1,System.Nullable(Of Boolean)), CType(obj.Formulario2,System.Nullable(Of Boolean)), CType(obj.Formulario3,System.Nullable(Of Boolean)), CType(obj.Formulario4,System.Nullable(Of Boolean)), CType(obj.Formulario5,System.Nullable(Of Boolean)), CType(obj.CalculaIVA,System.Nullable(Of Boolean)), CType(obj.Mensajes,System.Nullable(Of Boolean)), CType(obj.CalculaRetencion,System.Nullable(Of Boolean)), CType(obj.CantidadNegociada,System.Nullable(Of Decimal)), CType(obj.NroMesesDctoTransporte,System.Nullable(Of Byte)), obj.Consecutivo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCodigo = p1
	End Sub
	
	Private Sub UpdateTipoReferencia(ByVal obj As TipoReferencia)
		Dim p1 As Integer = obj.IDCodigo
		Me.uspOyDNet_Maestros_TipoReferencias_Actualizar(p1, obj.IDCodigoRetorno, obj.Descripcion, obj.tipoClasificacion, CType(obj.Formulario1,System.Nullable(Of Boolean)), CType(obj.Formulario2,System.Nullable(Of Boolean)), CType(obj.Formulario3,System.Nullable(Of Boolean)), CType(obj.Formulario4,System.Nullable(Of Boolean)), CType(obj.Formulario5,System.Nullable(Of Boolean)), CType(obj.CalculaIVA,System.Nullable(Of Boolean)), CType(obj.Mensajes,System.Nullable(Of Boolean)), CType(obj.CalculaRetencion,System.Nullable(Of Boolean)), CType(obj.CantidadNegociada,System.Nullable(Of Decimal)), CType(obj.NroMesesDctoTransporte,System.Nullable(Of Byte)), obj.Consecutivo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCodigo = p1
	End Sub
	
	Private Sub DeleteTipoReferencia(ByVal obj As TipoReferencia)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_TipoReferencias_Eliminar(obj.IDCodigo, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertDoctosRequerido(ByVal obj As DoctosRequerido)
		Dim p1 As System.Nullable(Of Short) = obj.IDDocumento
		Dim p2 As System.Nullable(Of System.int32) = obj.AplicaA
		Me.uspOyDNet_Maestros_DoctosRequeridos_Actualizar(p1, obj.CodigoDocto, obj.NombreDocumento, CType(obj.Requerido,System.Nullable(Of Boolean)), CType(obj.FechaIniVigencia,System.Nullable(Of Boolean)), CType(obj.FechaFinVigencia,System.Nullable(Of Boolean)), CType(obj.DocuActivo,System.Nullable(Of Boolean)), obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDocumento = p1.GetValueOrDefault
		obj.AplicaA = p2
	End Sub
	
	Private Sub UpdateDoctosRequerido(ByVal obj As DoctosRequerido)
		Dim p1 As System.Nullable(Of Short) = obj.IDDocumento
		Dim p2 As System.Nullable(Of System.int32) = obj.AplicaA
		Me.uspOyDNet_Maestros_DoctosRequeridos_Actualizar(p1, obj.CodigoDocto, obj.NombreDocumento, CType(obj.Requerido,System.Nullable(Of Boolean)), CType(obj.FechaIniVigencia,System.Nullable(Of Boolean)), CType(obj.FechaFinVigencia,System.Nullable(Of Boolean)), CType(obj.DocuActivo,System.Nullable(Of Boolean)), obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDocumento = p1.GetValueOrDefault
		obj.AplicaA = p2
	End Sub
	
	Private Sub DeleteDoctosRequerido(ByVal obj As DoctosRequerido)
		Me.uspOyDNet_Maestros_DoctosRequeridos_Eliminar(CType(obj.IDDocumento,System.Nullable(Of Short)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCodigos_CII(ByVal obj As Codigos_CII)
		Dim p1 As Integer = obj.IDCodigoCIIU
		Me.uspOyDNet_Maestros_Codigos_CIIU_Actualizar(obj.Codigo, obj.Descripcion, p1, obj.Usuario, CType(obj.ClasificacionCIIU,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.TasaRteCREE,System.Nullable(Of Decimal)))
		obj.IDCodigoCIIU = p1
	End Sub
	
	Private Sub UpdateCodigos_CII(ByVal obj As Codigos_CII)
		Dim p1 As Integer = obj.IDCodigoCIIU
		Me.uspOyDNet_Maestros_Codigos_CIIU_Actualizar(obj.Codigo, obj.Descripcion, p1, obj.Usuario, CType(obj.ClasificacionCIIU,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.TasaRteCREE,System.Nullable(Of Decimal)))
		obj.IDCodigoCIIU = p1
	End Sub
	
	Private Sub DeleteCodigos_CII(ByVal obj As Codigos_CII)
		Me.uspOyDNet_Maestros_Codigos_CIIU_Eliminar(obj.IDCodigoCIIU, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertProfesione(ByVal obj As Profesione)
		Dim p1 As Integer = obj.CodigoProfesion
		Dim p2 As Integer = obj.IDProfesion
		Me.uspOyDNet_Maestros_Profesiones_Actualizar(p1, obj.Nombre, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.CodigoProfesion = p1
		obj.IDProfesion = p2
	End Sub
	
	Private Sub UpdateProfesione(ByVal obj As Profesione)
		Dim p1 As Integer = obj.CodigoProfesion
		Dim p2 As Integer = obj.IDProfesion
		Me.uspOyDNet_Maestros_Profesiones_Actualizar(p1, obj.Nombre, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.CodigoProfesion = p1
		obj.IDProfesion = p2
	End Sub
	
	Private Sub DeleteProfesione(ByVal obj As Profesione)
		Me.uspOyDNet_Maestros_Profesiones_Eliminar(obj.IDProfesion, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCustodi(ByVal obj As Custodi)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_Custodio_Actualizar(p1, obj.Nombre, CType(obj.Local,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub UpdateCustodi(ByVal obj As Custodi)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_Custodio_Actualizar(p1, obj.Nombre, CType(obj.Local,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub DeleteCustodi(ByVal obj As Custodi)
		Me.uspOyDNet_Maestros_Custodio_Eliminar(obj.ID, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertBolsa(ByVal obj As Bolsa)
		Dim p1 As Integer = obj.intIDBolsa
		Me.uspOyDNet_Maestros_Bolsas_Actualizar(obj.IDComisionista, obj.IDSucComisionista, obj.IdBolsa, obj.Nombre, obj.IDPoblacion, CType(obj.NroDocumento,System.Nullable(Of Decimal)), obj.Usuario, CType(obj.MercadoIntegrado,System.Nullable(Of Boolean)), CType(obj.Activa,System.Nullable(Of Boolean)), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.intIDBolsa = p1
	End Sub
	
	Private Sub UpdateBolsa(ByVal obj As Bolsa)
		Dim p1 As Integer = obj.intIDBolsa
		Me.uspOyDNet_Maestros_Bolsas_Actualizar(obj.IDComisionista, obj.IDSucComisionista, obj.IdBolsa, obj.Nombre, obj.IDPoblacion, CType(obj.NroDocumento,System.Nullable(Of Decimal)), obj.Usuario, CType(obj.MercadoIntegrado,System.Nullable(Of Boolean)), CType(obj.Activa,System.Nullable(Of Boolean)), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.intIDBolsa = p1
	End Sub
	
	Private Sub DeleteBolsa(ByVal obj As Bolsa)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Bolsas_Eliminar(obj.intIDBolsa, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertClasificacion(ByVal obj As Clasificacion)
		Me.uspOyDNet_Maestros_Clasificaciones_Actualizar(obj.Código, obj.Nombre, CType(obj.EsGrupo,System.Nullable(Of Boolean)), CType(obj.EsSector,System.Nullable(Of Boolean)), obj.IDPerteneceA, obj.AplicaA, obj.Nemo, obj.Usuario, obj.IDClasificacion, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateClasificacion(ByVal obj As Clasificacion)
		Me.uspOyDNet_Maestros_Clasificaciones_Actualizar(obj.Código, obj.Nombre, CType(obj.EsGrupo,System.Nullable(Of Boolean)), CType(obj.EsSector,System.Nullable(Of Boolean)), obj.IDPerteneceA, obj.AplicaA, obj.Nemo, obj.Usuario, obj.IDClasificacion, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteClasificacion(ByVal obj As Clasificacion)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Clasificaciones_Eliminar(obj.IDClasificacion, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertComisionista(ByVal obj As Comisionista)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IDComisionista
		Me.uspOyDNet_Maestros_Comisionistas_Actualizar(obj.IdBolsa, p1, CType(obj.NroDocumento,System.Nullable(Of Decimal)), obj.Nombre, obj.RepresentanteLegal, obj.Telefono1, obj.Telefono2, obj.Fax1, obj.Fax2, obj.Direccion, obj.Internet, obj.EMail, obj.IDPoblacion, obj.IDDepartamento, obj.IDPais, obj.Notas, obj.Usuario, p2, obj.intIdTipoEntidad, CType(obj.logActivo,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IDComisionista = p2
	End Sub
	
	Private Sub UpdateComisionista(ByVal obj As Comisionista)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IDComisionista
		Me.uspOyDNet_Maestros_Comisionistas_Actualizar(obj.IdBolsa, p1, CType(obj.NroDocumento,System.Nullable(Of Decimal)), obj.Nombre, obj.RepresentanteLegal, obj.Telefono1, obj.Telefono2, obj.Fax1, obj.Fax2, obj.Direccion, obj.Internet, obj.EMail, obj.IDPoblacion, obj.IDDepartamento, obj.IDPais, obj.Notas, obj.Usuario, p2, obj.intIdTipoEntidad, CType(obj.logActivo,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IDComisionista = p2
	End Sub
	
	Private Sub DeleteComisionista(ByVal obj As Comisionista)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Comisionistas_Eliminar(obj.IDComisionista, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertBancosNacionale(ByVal obj As BancosNacionale)
		Dim p1 As Integer = obj.Id
		Dim p2 As Integer = obj.IDBancoNacional
		Me.uspOyDNet_Maestros_BancosNacionales_Actualizar(p1, obj.CodACH, obj.Nombre, obj.Usuario, p2, obj.NroDocumento, obj.DigitoChequeo, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Id = p1
		obj.IDBancoNacional = p2
	End Sub
	
	Private Sub UpdateBancosNacionale(ByVal obj As BancosNacionale)
		Dim p1 As Integer = obj.Id
		Dim p2 As Integer = obj.IDBancoNacional
		Me.uspOyDNet_Maestros_BancosNacionales_Actualizar(p1, obj.CodACH, obj.Nombre, obj.Usuario, p2, obj.NroDocumento, obj.DigitoChequeo, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Id = p1
		obj.IDBancoNacional = p2
	End Sub
	
	Private Sub DeleteBancosNacionale(ByVal obj As BancosNacionale)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_BancosNacionales_Eliminar(obj.IDBancoNacional, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertRelacionesCodBanco(ByVal obj As RelacionesCodBanco)
		Dim p1 As System.Nullable(Of Integer) = obj.intIDRelacionCodBanco
		Me.uspOyDNet_Maestros_RelacionesCodBancos_Actualizar(obj.IdCodBanco, obj.RelTecno, obj.Usuario, obj.InfoSesion, p1, CType(Nothing, System.Nullable(Of Byte)))
		obj.intIDRelacionCodBanco = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdateRelacionesCodBanco(ByVal obj As RelacionesCodBanco)
		Dim p1 As System.Nullable(Of Integer) = obj.intIDRelacionCodBanco
		Me.uspOyDNet_Maestros_RelacionesCodBancos_Actualizar(obj.IdCodBanco, obj.RelTecno, obj.Usuario, obj.InfoSesion, p1, CType(Nothing, System.Nullable(Of Byte)))
		obj.intIDRelacionCodBanco = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeleteRelacionesCodBanco(ByVal obj As RelacionesCodBanco)
		Me.uspOyDNet_Maestros_RelacionesCodBancos_Eliminar(obj.IdCodBanco, obj.RelTecno, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConsecutivosDocumento(ByVal obj As ConsecutivosDocumento)
		Dim p1 As Integer = obj.IDConsecutivoDocumento
		Me.uspOyDNet_Maestros_ConsecutivosDocumentos_Actualizar(obj.Documento, obj.NombreConsecutivo, obj.Descripcion, CType(obj.Cliente,System.Nullable(Of Boolean)), CType(obj.CuentaContable,System.Nullable(Of Boolean)), obj.CuentaContable1, obj.Usuario, obj.PermiteCliente, obj.TipoCuenta, CType(obj.IdTarifa,System.Nullable(Of Decimal)), obj.Signo, obj.sucursalConciliacion, CType(obj.IdSucursalSuvalor,System.Nullable(Of Decimal)), CType(obj.Concepto,System.Nullable(Of Boolean)), obj.ComprobanteContable, CType(obj.IncluidoEnExtractoBanco,System.Nullable(Of Boolean)), CType(obj.IncluidoEnExtractoCliente,System.Nullable(Of Boolean)), obj.IdMoneda, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.Compania, obj.logExentoGMF)
		obj.IDConsecutivoDocumento = p1
	End Sub
	
	Private Sub UpdateConsecutivosDocumento(ByVal obj As ConsecutivosDocumento)
		Dim p1 As Integer = obj.IDConsecutivoDocumento
		Me.uspOyDNet_Maestros_ConsecutivosDocumentos_Actualizar(obj.Documento, obj.NombreConsecutivo, obj.Descripcion, CType(obj.Cliente,System.Nullable(Of Boolean)), CType(obj.CuentaContable,System.Nullable(Of Boolean)), obj.CuentaContable1, obj.Usuario, obj.PermiteCliente, obj.TipoCuenta, CType(obj.IdTarifa,System.Nullable(Of Decimal)), obj.Signo, obj.sucursalConciliacion, CType(obj.IdSucursalSuvalor,System.Nullable(Of Decimal)), CType(obj.Concepto,System.Nullable(Of Boolean)), obj.ComprobanteContable, CType(obj.IncluidoEnExtractoBanco,System.Nullable(Of Boolean)), CType(obj.IncluidoEnExtractoCliente,System.Nullable(Of Boolean)), obj.IdMoneda, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, Integer), obj.logExentoGMF)
		obj.IDConsecutivoDocumento = p1
	End Sub
	
	Private Sub DeleteConsecutivosDocumento(ByVal obj As ConsecutivosDocumento)
		Me.uspOyDNet_Maestros_ConsecutivosDocumentos_Eliminar(obj.IDConsecutivoDocumento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCuentasContablesOy(ByVal obj As CuentasContablesOy)
		Dim p1 As Integer = obj.IDCuentaContable
		Me.uspOyDNet_Maestros_CuentasContables_Actualizar(obj.ID, obj.Nombre, obj.Naturaleza, obj.DctoAsociado, CType(obj.CuentaTerceros,System.Nullable(Of Boolean)), CType(Nothing, System.Nullable(Of Boolean)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCuentaContable = p1
	End Sub
	
	Private Sub UpdateCuentasContablesOy(ByVal obj As CuentasContablesOy)
		Dim p1 As Integer = obj.IDCuentaContable
		Me.uspOyDNet_Maestros_CuentasContables_Actualizar(obj.ID, obj.Nombre, obj.Naturaleza, obj.DctoAsociado, CType(obj.CuentaTerceros,System.Nullable(Of Boolean)), CType(Nothing, System.Nullable(Of Boolean)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCuentaContable = p1
	End Sub
	
	Private Sub DeleteCuentasContablesOy(ByVal obj As CuentasContablesOy)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_CuentasContables_Eliminar(obj.IDCuentaContable, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertInhabilitado(ByVal obj As Inhabilitado)
		Dim p1 As Integer = obj.IDInhabilitado
		Me.uspOyDNet_Maestros_Inhabilitados_Actualizar(obj.tipoidentificacion, obj.nrodocumento, obj.nombre, obj.idconcepto, CType(obj.ingreso,System.Nullable(Of Date)), obj.usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDInhabilitado = p1
	End Sub
	
	Private Sub UpdateInhabilitado(ByVal obj As Inhabilitado)
		Dim p1 As Integer = obj.IDInhabilitado
		Me.uspOyDNet_Maestros_Inhabilitados_Actualizar(obj.tipoidentificacion, obj.nrodocumento, obj.nombre, obj.idconcepto, CType(obj.ingreso,System.Nullable(Of Date)), obj.usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDInhabilitado = p1
	End Sub
	
	Private Sub DeleteInhabilitado(ByVal obj As Inhabilitado)
		Me.uspOyDNet_Maestros_Inhabilitados_Eliminar(obj.IDInhabilitado, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    'Private Sub InsertEmpleado(ByVal obj As Empleado)
    '	Dim p1 As Integer = obj.IDEmpleado
    '	Me.uspOyDNet_Maestros_Empleados_Actualizar(p1, obj.Nombre, obj.NroDocumento, obj.IDReceptor, obj.Login, obj.IDCargo, obj.AccesoOperadorBolsa, obj.Usuario, CType(obj.Activo,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.strEmail, obj.Maquinas, obj.TipoIdentificacion)
    '	obj.IDEmpleado = p1
    'End Sub

    Private Sub UpdateEmpleado(ByVal obj As Empleado)
		Dim p1 As Integer = obj.IDEmpleado
		Me.uspOyDNet_Maestros_Empleados_Actualizar(p1, obj.Nombre, obj.NroDocumento, obj.IDReceptor, obj.Login, obj.IDCargo, obj.AccesoOperadorBolsa, obj.Usuario, CType(obj.Activo,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.strEmail, obj.Maquinas, obj.TipoIdentificacion)
		obj.IDEmpleado = p1
	End Sub
	
	Private Sub DeleteEmpleado(ByVal obj As Empleado)
		Me.uspOyDNet_Maestros_Empleados_Eliminar(obj.IDEmpleado, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertPrefijosFactura(ByVal obj As PrefijosFactura)
		Me.uspOyDNet_Maestros_PrefijosFacturas_Actualizar(obj.Prefijo, obj.NombreConsecutivo, obj.Descripcion, obj.Tipo, obj.NombreCuenta, obj.TextoResolucion, obj.IntervaloRes, obj.ResponsabilidadIVA, obj.Usuario, CType(obj.FechaVencimiento,System.Nullable(Of Date)), CType(obj.Alarma,System.Nullable(Of Boolean)), obj.IDCodigoResolucion, obj.IDPrefijoFacturas, obj.SucursalAplica, obj.Resolucion, obj.Vigiladopor, CType(obj.FechaDesde,System.Nullable(Of Date)), CType(obj.FechaHasta,System.Nullable(Of Date)), obj.numDiasPreviosNoti, obj.numCantConsPrevNoti, obj.numDiasPeriodicidadNoti, obj.DestinatariosNoti, CType(obj.FechaUltNoti,System.Nullable(Of Date)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdatePrefijosFactura(ByVal obj As PrefijosFactura)
		Me.uspOyDNet_Maestros_PrefijosFacturas_Actualizar(obj.Prefijo, obj.NombreConsecutivo, obj.Descripcion, obj.Tipo, obj.NombreCuenta, obj.TextoResolucion, obj.IntervaloRes, obj.ResponsabilidadIVA, obj.Usuario, CType(obj.FechaVencimiento,System.Nullable(Of Date)), CType(obj.Alarma,System.Nullable(Of Boolean)), obj.IDCodigoResolucion, obj.IDPrefijoFacturas, obj.SucursalAplica, obj.Resolucion, obj.Vigiladopor, CType(obj.FechaDesde,System.Nullable(Of Date)), CType(obj.FechaHasta,System.Nullable(Of Date)), obj.numDiasPreviosNoti, obj.numCantConsPrevNoti, obj.numDiasPeriodicidadNoti, obj.DestinatariosNoti, CType(obj.FechaUltNoti,System.Nullable(Of Date)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeletePrefijosFactura(ByVal obj As PrefijosFactura)
		Me.uspOyDNet_Maestros_PrefijosFacturas_Eliminar(obj.IDPrefijoFacturas, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertDepositosExtranjero(ByVal obj As DepositosExtranjero)
		Dim p1 As Integer = obj.IDdeposito
		Me.uspOyDNet_Maestros_DepositosExtranjeros_Actualizar(p1, obj.Nombre, obj.IDPais, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDdeposito = p1
	End Sub
	
	Private Sub UpdateDepositosExtranjero(ByVal obj As DepositosExtranjero)
		Dim p1 As Integer = obj.IDdeposito
		Me.uspOyDNet_Maestros_DepositosExtranjeros_Actualizar(p1, obj.Nombre, obj.IDPais, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDdeposito = p1
	End Sub
	
	Private Sub DeleteDepositosExtranjero(ByVal obj As DepositosExtranjero)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_DepositosExtranjeros_Eliminar(obj.IDdeposito, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertConsecutivo(ByVal obj As Consecutivo)
		Dim p1 As Integer = obj.IdConsecutivos
		Me.uspOyDNet_Maestros_Consecutivos_Actualizar(obj.IDOwner, obj.NombreConsecutivo, obj.Descripcion, obj.Minimo, obj.Maximo, obj.Actual, obj.Usuario, CType(obj.Activo,System.Nullable(Of Boolean)), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdConsecutivos = p1
	End Sub
	
	Private Sub UpdateConsecutivo(ByVal obj As Consecutivo)
		Dim p1 As Integer = obj.IdConsecutivos
		Me.uspOyDNet_Maestros_Consecutivos_Actualizar(obj.IDOwner, obj.NombreConsecutivo, obj.Descripcion, obj.Minimo, obj.Maximo, obj.Actual, obj.Usuario, CType(obj.Activo,System.Nullable(Of Boolean)), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdConsecutivos = p1
	End Sub
	
	Private Sub DeleteConsecutivo(ByVal obj As Consecutivo)
		Me.uspOyDNet_Maestros_Consecutivos_Eliminar(obj.IdConsecutivos, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConceptosTesoreri(ByVal obj As ConceptosTesoreri)
		Dim p1 As Integer = obj.IDConcepto
		Me.uspOyDNet_Maestros_ConceptosTesoreria_Actualizar(p1, obj.Detalle, obj.AplicaA, obj.Usuario, obj.CuentaContable, CType(obj.Activo,System.Nullable(Of Boolean)), obj.ParametroContable, obj.NitTercero, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.ManejaCliente, obj.TipoMovimientoTesoreria, obj.Retencion, obj.CuentaContableAux, CType(obj.ManejaDiferido,System.Nullable(Of Boolean)), obj.TipoMovimientoDiferido, obj.CuentaContableCRDiferido, obj.CuentaContableDBDiferido, obj.TipoNitDebito, obj.TipoNitCredito, CType(obj.ManejaNotaDBCR,System.Nullable(Of Boolean)), obj.TipoMovimientoCRDB, obj.TipoNitDiferidoDebito, obj.TipoNitDiferidoCredito)
		obj.IDConcepto = p1
	End Sub
	
	Private Sub UpdateConceptosTesoreri(ByVal obj As ConceptosTesoreri)
		Dim p1 As Integer = obj.IDConcepto
		Me.uspOyDNet_Maestros_ConceptosTesoreria_Actualizar(p1, obj.Detalle, obj.AplicaA, obj.Usuario, obj.CuentaContable, CType(obj.Activo,System.Nullable(Of Boolean)), obj.ParametroContable, obj.NitTercero, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.ManejaCliente, obj.TipoMovimientoTesoreria, obj.Retencion, obj.CuentaContableAux, CType(obj.ManejaDiferido,System.Nullable(Of Boolean)), obj.TipoMovimientoDiferido, obj.CuentaContableCRDiferido, obj.CuentaContableDBDiferido, obj.TipoNitDebito, obj.TipoNitCredito, CType(obj.ManejaNotaDBCR,System.Nullable(Of Boolean)), obj.TipoMovimientoCRDB, obj.TipoNitDiferidoDebito, obj.TipoNitDiferidoCredito)
		obj.IDConcepto = p1
	End Sub
	
	Private Sub DeleteConceptosTesoreri(ByVal obj As ConceptosTesoreri)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_ConceptosTesoreria_Eliminar(obj.IDConcepto, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertClientesExterno(ByVal obj As ClientesExterno)
		Dim p1 As Integer = obj.IDClienteExt
		Me.uspOyDNet_Maestros_ClientesExternos_Actualizar(obj.ID, obj.Nombre, obj.Vendedor, obj.IDDepositoExtranjero, obj.NumeroCuenta, obj.NombreTitular, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClienteExt = p1
	End Sub
	
	Private Sub UpdateClientesExterno(ByVal obj As ClientesExterno)
		Dim p1 As Integer = obj.IDClienteExt
		Me.uspOyDNet_Maestros_ClientesExternos_Actualizar(obj.ID, obj.Nombre, obj.Vendedor, obj.IDDepositoExtranjero, obj.NumeroCuenta, obj.NombreTitular, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClienteExt = p1
	End Sub
	
	Private Sub DeleteClientesExterno(ByVal obj As ClientesExterno)
		Me.uspOyDNet_Maestros_ClientesExternos_Eliminar(obj.IDClienteExt, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertUsuariosSucursale(ByVal obj As UsuariosSucursale)
		Dim p1 As Integer = obj.IDUsuariosSucursales
		Me.uspOyDNet_Maestros_UsuariosSucursales_Actualizar(obj.Nombre_Usuario, obj.Receptor, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.Prioridad)
		obj.IDUsuariosSucursales = p1
	End Sub
	
	Private Sub UpdateUsuariosSucursale(ByVal obj As UsuariosSucursale)
		Dim p1 As Integer = obj.IDUsuariosSucursales
		Me.uspOyDNet_Maestros_UsuariosSucursales_Actualizar(obj.Nombre_Usuario, obj.Receptor, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.Prioridad)
		obj.IDUsuariosSucursales = p1
	End Sub
	
	Private Sub DeleteUsuariosSucursale(ByVal obj As UsuariosSucursale)
		Me.uspOyDNet_Maestros_UsuariosSucursales_Eliminar(obj.IDUsuariosSucursales, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertClientesFondosPensione(ByVal obj As ClientesFondosPensione)
		Dim p1 As Integer = obj.IDClientesfondospensiones
		Me.uspOyDNet_Maestros_ClientesFondosPensiones_Actualizar(obj.Comitente, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClientesfondospensiones = p1
	End Sub
	
	Private Sub UpdateClientesFondosPensione(ByVal obj As ClientesFondosPensione)
		Dim p1 As Integer = obj.IDClientesfondospensiones
		Me.uspOyDNet_Maestros_ClientesFondosPensiones_Actualizar(obj.Comitente, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClientesfondospensiones = p1
	End Sub
	
	Private Sub DeleteClientesFondosPensione(ByVal obj As ClientesFondosPensione)
		Me.uspOyDNet_Maestros_ClientesFondosPensiones_Eliminar(obj.IDClientesfondospensiones, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertViewClientes_Exento(ByVal obj As ViewClientes_Exento)
		Dim p1 As Integer = obj.IDClientesfondospensiones
		Me.uspOyDNet_Maestros_ClientesFondosPensiones_Actualizar(obj.Comitente, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClientesfondospensiones = p1
	End Sub
	
	Private Sub UpdateViewClientes_Exento(ByVal obj As ViewClientes_Exento)
		Dim p1 As Integer = obj.IDClientesfondospensiones
		Me.uspOyDNet_Maestros_ClientesFondosPensiones_Actualizar(obj.Comitente, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClientesfondospensiones = p1
	End Sub
	
	Private Sub DeleteViewClientes_Exento(ByVal obj As ViewClientes_Exento)
		Me.uspOyDNet_Maestros_ClientesFondosPensiones_Eliminar(obj.IDClientesfondospensiones, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConceptosConsecutivo(ByVal obj As ConceptosConsecutivo)
		Dim p1 As Integer = obj.IDConceptosconsecutivos
		Me.uspOyDNet_Maestros_ConceptosConsecutivos_Actualizar(obj.Consecutivo, obj.Concepto, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDConceptosconsecutivos = p1
	End Sub
	
	Private Sub DeleteConceptosConsecutivo(ByVal obj As ConceptosConsecutivo)
		Me.uspOyDNet_Maestros_ConceptosConsecutivos_Eliminar(obj.Consecutivo, obj.Concepto, obj.IDConceptosconsecutivos, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertDiasNoHabile(ByVal obj As DiasNoHabile)
		Dim p1 As Integer = obj.IDDiaNoHabil
		Me.uspOyDNet_Maestros_DiasNoHabiles_Actualizar(CType(obj.NoHabil,System.Nullable(Of Date)), CType(obj.Activo,System.Nullable(Of Boolean)), obj.Usuario, obj.IdPais, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDiaNoHabil = p1
	End Sub
	
	Private Sub UpdateDiasNoHabile(ByVal obj As DiasNoHabile)
		Dim p1 As Integer = obj.IDDiaNoHabil
		Me.uspOyDNet_Maestros_DiasNoHabiles_Actualizar(CType(obj.NoHabil,System.Nullable(Of Date)), CType(obj.Activo,System.Nullable(Of Boolean)), obj.Usuario, obj.IdPais, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDiaNoHabil = p1
	End Sub
	
	Private Sub DeleteDiasNoHabile(ByVal obj As DiasNoHabile)
		Me.uspOyDNet_Maestros_DiasNoHabiles_Eliminar(obj.IDDiaNoHabil, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConsecutivosUsuario(ByVal obj As ConsecutivosUsuario)
		Dim p1 As Integer = obj.IDConsecutivosUsuarios
		Me.uspOyDNet_Maestros_ConsecutivosUsuarios_Actualizar(obj.Usuario_Consecutivo, obj.Nombre_Consecutivo, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDConsecutivosUsuarios = p1
	End Sub
	
	Private Sub DeleteConsecutivosUsuario(ByVal obj As ConsecutivosUsuario)
		Me.uspOyDNet_Maestros_ConsecutivosUsuarios_Eliminar(obj.Usuario_Consecutivo, obj.Nombre_Consecutivo, obj.IDConsecutivosUsuarios, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertTarifa(ByVal obj As Tarifa)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IDTarifas
		Me.uspOyDNet_Maestros_Tarifas_Actualizar(obj.Aprobacion, p1, obj.Nombre, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IDTarifas = p2
	End Sub
	
	Private Sub UpdateTarifa(ByVal obj As Tarifa)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IDTarifas
		Me.uspOyDNet_Maestros_Tarifas_Actualizar(obj.Aprobacion, p1, obj.Nombre, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IDTarifas = p2
	End Sub
	
	Private Sub DeleteTarifa(ByVal obj As Tarifa)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Tarifas_Eliminar(obj.Aprobacion, obj.Nombre, obj.Usuario, obj.ID, p1, obj.IDTarifas, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertDetalleTarifa(ByVal obj As DetalleTarifa)
		Dim p1 As Integer = obj.Codigo
		Dim p2 As Integer = obj.IDDetalleTarifas
		Me.uspOyDNet_Maestros_DetalleTarifas_Actualizar(obj.Aprobacion, p1, CType(obj.FechaValor,System.Nullable(Of Date)), CType(obj.Valor,System.Nullable(Of Decimal)), obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Codigo = p1
		obj.IDDetalleTarifas = p2
	End Sub
	
	Private Sub UpdateDetalleTarifa(ByVal obj As DetalleTarifa)
		Dim p1 As Integer = obj.Codigo
		Dim p2 As Integer = obj.IDDetalleTarifas
		Me.uspOyDNet_Maestros_DetalleTarifas_Actualizar(obj.Aprobacion, p1, CType(obj.FechaValor,System.Nullable(Of Date)), CType(obj.Valor,System.Nullable(Of Decimal)), obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Codigo = p1
		obj.IDDetalleTarifas = p2
	End Sub
	
	Private Sub DeleteDetalleTarifa(ByVal obj As DetalleTarifa)
		Me.uspOyDNet_Maestros_DetalleTarifas_Eliminar(obj.Aprobacion, obj.Codigo, CType(obj.FechaValor,System.Nullable(Of Date)), obj.Usuario, obj.IDDetalleTarifas, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertMoneda(ByVal obj As Moneda)
		Dim p1 As Integer = obj.Codigo
		Me.uspOyDNet_Maestros_Monedas_Actualizar(p1, obj.Codigo_internacional, obj.Descripcion, CType(obj.Convercion_Dolar,System.Nullable(Of Boolean)), CType(obj.Nro_Decimales,System.Nullable(Of Byte)), obj.Dias_Cumplimiento, CType(obj.ValorBase_IVA,System.Nullable(Of Double)), obj.Usuario, CType(obj.Mercado_Integrado,System.Nullable(Of Boolean)), obj.CodDivisa, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.StrCodSuper, obj.strNacionalidad)
		obj.Codigo = p1
	End Sub
	
	Private Sub UpdateMoneda(ByVal obj As Moneda)
		Dim p1 As Integer = obj.Codigo
		Me.uspOyDNet_Maestros_Monedas_Actualizar(p1, obj.Codigo_internacional, obj.Descripcion, CType(obj.Convercion_Dolar,System.Nullable(Of Boolean)), CType(obj.Nro_Decimales,System.Nullable(Of Byte)), obj.Dias_Cumplimiento, CType(obj.ValorBase_IVA,System.Nullable(Of Double)), obj.Usuario, CType(obj.Mercado_Integrado,System.Nullable(Of Boolean)), obj.CodDivisa, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.StrCodSuper, obj.strNacionalidad)
		obj.Codigo = p1
	End Sub
	
	Private Sub DeleteMoneda(ByVal obj As Moneda)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Monedas_Eliminar(obj.Codigo, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertMonedaValo(ByVal obj As MonedaValo)
		Dim p1 As Integer = obj.Codigo
		Dim p2 As Integer = obj.IDMonedavalor
		Me.uspOyDNet_Maestros_MonedaValor_Actualizar(p1, CType(obj.FechaValor,System.Nullable(Of Date)), CType(obj.Valor_Moneda_Local,System.Nullable(Of Decimal)), CType(obj.Base_IVA_Diario,System.Nullable(Of Decimal)), obj.Usuario, p2, obj.NroRegistro, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Codigo = p1
		obj.IDMonedavalor = p2
	End Sub
	
	Private Sub UpdateMonedaValo(ByVal obj As MonedaValo)
		Dim p1 As Integer = obj.Codigo
		Dim p2 As Integer = obj.IDMonedavalor
		Me.uspOyDNet_Maestros_MonedaValor_Actualizar(p1, CType(obj.FechaValor,System.Nullable(Of Date)), CType(obj.Valor_Moneda_Local,System.Nullable(Of Decimal)), CType(obj.Base_IVA_Diario,System.Nullable(Of Decimal)), obj.Usuario, p2, obj.NroRegistro, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Codigo = p1
		obj.IDMonedavalor = p2
	End Sub
	
	Private Sub DeleteMonedaValo(ByVal obj As MonedaValo)
		Me.uspOyDNet_Maestros_MonedaValor_Eliminar(obj.IDMonedavalor, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertTipoPersonaPorDct(ByVal obj As TipoPersonaPorDct)
		Me.uspOyDNet_Maestros_TipoPersonaPorDcto_Actualizar(obj.ID, obj.TipoIdentificacion, obj.IDTipoPersona, CType(obj.menored,System.Nullable(Of Short)), CType(obj.mayored,System.Nullable(Of Short)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateTipoPersonaPorDct(ByVal obj As TipoPersonaPorDct)
		Me.uspOyDNet_Maestros_TipoPersonaPorDcto_Actualizar(obj.ID, obj.TipoIdentificacion, obj.IDTipoPersona, CType(obj.menored,System.Nullable(Of Short)), CType(obj.mayored,System.Nullable(Of Short)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteTipoPersonaPorDct(ByVal obj As TipoPersonaPorDct)
		Me.uspOyDNet_Maestros_TipoPersonaPorDcto_Eliminar(obj.ID, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertMesa(ByVal obj As Mesa)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IdMesa
		Me.uspOyDNet_Maestros_Mesas_Actualizar(p1, obj.Nombre, obj.Ccostos, obj.CuentaContable, obj.IdPoblacion, obj.GerenteMesa, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IdMesa = p2
	End Sub
	
	Private Sub UpdateMesa(ByVal obj As Mesa)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IdMesa
		Me.uspOyDNet_Maestros_Mesas_Actualizar(p1, obj.Nombre, obj.Ccostos, obj.CuentaContable, obj.IdPoblacion, obj.GerenteMesa, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IdMesa = p2
	End Sub
	
	Private Sub DeleteMesa(ByVal obj As Mesa)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Mesas_Eliminar(obj.IdMesa, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertReceptore(ByVal obj As Receptore)
		Dim p1 As Integer = obj.IdReceptores
		Me.uspOyDNet_Maestros_Receptores_Actualizar(obj.Sucursal, obj.Codigo, obj.Nombre, CType(obj.Activo,System.Nullable(Of Boolean)), obj.Tipo, obj.Centro_costos, obj.Login, obj.SucursalContable, CType(obj.Lider_Mesa,System.Nullable(Of Boolean)), obj.Codigo_Mesa, obj.Numero_Documento, obj.E_Mail, obj.IDReceptorSafyr, obj.Usuario, p1, obj.IdOficina, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdReceptores = p1
	End Sub
	
	Private Sub UpdateReceptore(ByVal obj As Receptore)
		Dim p1 As Integer = obj.IdReceptores
		Me.uspOyDNet_Maestros_Receptores_Actualizar(obj.Sucursal, obj.Codigo, obj.Nombre, CType(obj.Activo,System.Nullable(Of Boolean)), obj.Tipo, obj.Centro_costos, obj.Login, obj.SucursalContable, CType(obj.Lider_Mesa,System.Nullable(Of Boolean)), obj.Codigo_Mesa, obj.Numero_Documento, obj.E_Mail, obj.IDReceptorSafyr, obj.Usuario, p1, obj.IdOficina, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdReceptores = p1
	End Sub
	
	Private Sub DeleteReceptore(ByVal obj As Receptore)
		Me.uspOyDNet_Maestros_Receptores_Eliminar(obj.IdReceptores, obj.Codigo, CType(obj.Accion,System.Nullable(Of Char)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertOficinas(ByVal obj As Oficinas)
		Dim p1 As Integer = obj.intID
		Me.uspOyDNet_Maestros_Oficina_Actualizar(obj.IdOficina, obj.NomOficina, obj.IdSucursal, CType(obj.Seleccionada,System.Nullable(Of Boolean)), obj.CentroCostos, obj.Telefono, obj.IdCiudad, obj.NombreOficina, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.intID = p1
	End Sub
	
	Private Sub UpdateOficinas(ByVal obj As Oficinas)
		Dim p1 As Integer = obj.intID
		Me.uspOyDNet_Maestros_Oficina_Actualizar(obj.IdOficina, obj.NomOficina, obj.IdSucursal, CType(obj.Seleccionada,System.Nullable(Of Boolean)), obj.CentroCostos, obj.Telefono, obj.IdCiudad, obj.NombreOficina, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.intID = p1
	End Sub
	
	Private Sub DeleteOficinas(ByVal obj As Oficinas)
		Me.uspOyDNet_Maestros_Oficina_Eliminar(obj.IdOficina, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertReceptoresSistema(ByVal obj As ReceptoresSistema)
		Dim p1 As Integer = obj.IDReceptoresSistemas
		Me.uspOyDNet_Maestros_ReceptoresSistemas_Actualizar(obj.Codigo, obj.Codigo_Sistema, obj.Valor_Sistema, obj.Usuario, p1, CType(obj.MontoLimite,System.Nullable(Of Double)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDReceptoresSistemas = p1
	End Sub
	
	Private Sub UpdateReceptoresSistema(ByVal obj As ReceptoresSistema)
		Dim p1 As Integer = obj.IDReceptoresSistemas
		Me.uspOyDNet_Maestros_ReceptoresSistemas_Actualizar(obj.Codigo, obj.Codigo_Sistema, obj.Valor_Sistema, obj.Usuario, p1, CType(obj.MontoLimite,System.Nullable(Of Double)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDReceptoresSistemas = p1
	End Sub
	
	Private Sub DeleteReceptoresSistema(ByVal obj As ReceptoresSistema)
		Me.uspOyDNet_Maestros_ReceptoresSistemas_Eliminar(obj.IDReceptoresSistemas, CType(Nothing, System.Nullable(Of Char)), obj.Codigo, obj.Codigo_Sistema, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertUsuariosFechaCierr(ByVal obj As UsuariosFechaCierr)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_UsuariosFechaCierre_Actualizar(obj.Nombre_Usuario, obj.Modulo, CType(obj.Fecha_Cierre,System.Nullable(Of Date)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub UpdateUsuariosFechaCierr(ByVal obj As UsuariosFechaCierr)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_UsuariosFechaCierre_Actualizar(obj.Nombre_Usuario, obj.Modulo, CType(obj.Fecha_Cierre,System.Nullable(Of Date)), obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub DeleteUsuariosFechaCierr(ByVal obj As UsuariosFechaCierr)
		Me.uspOyDNet_Maestros_UsuariosFechaCierre_Eliminar(obj.ID, obj.Nombre_Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCodigosOtrosSistema(ByVal obj As CodigosOtrosSistema)
		Dim p1 As Integer = obj.Id
		Me.uspOyDNet_Maestros_CodigosOtrosSistemas_Actualizar(p1, obj.Comitente, obj.Sistema, obj.CodigoSistema, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Id = p1
	End Sub
	
	Private Sub UpdateCodigosOtrosSistema(ByVal obj As CodigosOtrosSistema)
		Dim p1 As Integer = obj.Id
		Me.uspOyDNet_Maestros_CodigosOtrosSistemas_Actualizar(p1, obj.Comitente, obj.Sistema, obj.CodigoSistema, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Id = p1
	End Sub
	
	Private Sub DeleteCodigosOtrosSistema(ByVal obj As CodigosOtrosSistema)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_CodigosOtrosSistemas_Eliminar(obj.Id, obj.Comitente, obj.Sistema, obj.CodigoSistema, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertInstalacio(ByVal obj As Instalacio)
		Dim p1 As Integer = obj.IDInstalacion
		Me.uspOyDNet_Maestros_Instalacion_Actualizar(obj.IDBolsa, obj.IdPoblacion, obj.Linea1, obj.Enca11, obj.Enca21, obj.Enca31, obj.Enca41, obj.Enca12, obj.Enca22, obj.Enca32, obj.Enca42, obj.Observacion1, obj.Observacion2, CType(obj.ClientesAutomatico,System.Nullable(Of Boolean)), CType(obj.ClientesCedula,System.Nullable(Of Boolean)), CType(obj.EncaFac,System.Nullable(Of Boolean)), CType(obj.EncaFacBca,System.Nullable(Of Boolean)), CType(obj.EncaTit,System.Nullable(Of Boolean)), CType(obj.EncaEgr,System.Nullable(Of Boolean)), CType(obj.EncaCaj,System.Nullable(Of Boolean)), CType(obj.EncaNot,System.Nullable(Of Boolean)), CType(obj.EncaExt,System.Nullable(Of Boolean)), CType(obj.RCLineas,System.Nullable(Of Boolean)), CType(obj.CELineas,System.Nullable(Of Boolean)), CType(obj.NCLineas,System.Nullable(Of Boolean)), CType(obj.TITLineas,System.Nullable(Of Boolean)), CType(obj.FacLineas,System.Nullable(Of Boolean)), CType(obj.FacBcaLineas,System.Nullable(Of Boolean)), CType(obj.EXTLineas,System.Nullable(Of Boolean)), CType(obj.Receptores,System.Nullable(Of Boolean)), CType(obj.FechaOrden,System.Nullable(Of Boolean)), CType(obj.Usuario,System.Nullable(Of Boolean)), CType(obj.ValSobregiroCE,System.Nullable(Of Boolean)), obj.Resolucion, CType(obj.IvaComision,System.Nullable(Of Double)), obj.NombreCuenta, CType(obj.SerBolsaFijo,System.Nullable(Of Double)), CType(obj.SerBolsaFijoAcciones,System.Nullable(Of Double)), CType(obj.TopeSerBolsaFijoAcciones,System.Nullable(Of Double)), CType(obj.EncaCus,System.Nullable(Of Boolean)), CType(obj.CusLineas,System.Nullable(Of Boolean)), CType(obj.UsuarioEntregas,System.Nullable(Of Boolean)), CType(obj.UsuarioRecibido,System.Nullable(Of Boolean)), CType(obj.UsuarioCustodia,System.Nullable(Of Boolean)), CType(obj.UsuarioSobrantes,System.Nullable(Of Boolean)), obj.IVA, obj.RteFuente, obj.NitComisionista, obj.Servidor, obj.BaseDatos, obj.Owner, obj.ServidorBus, obj.BaseDatosBus, obj.OwnerBus, obj.Compania, obj.DepositoExtranjero, obj.CustodioLocal, obj.IdContraparteOTC, CType(obj.ValorContrato,System.Nullable(Of Double)), obj.CodigoIMC, CType(obj.ReteIva,System.Nullable(Of Double)), CType(obj.ValorInicial,System.Nullable(Of Double)), CType(obj.GMS,System.Nullable(Of Double)), CType(obj.CargarReceptorCliente,System.Nullable(Of Boolean)), CType(obj.Cierre,System.Nullable(Of Date)), obj.UltimaVersion, CType(obj.TasaInicial,System.Nullable(Of Double)), CType(obj.AplazarOTC,System.Nullable(Of Boolean)), CType(obj.CuentasBancarias,System.Nullable(Of Boolean)), CType(obj.RepresentanteLegal,System.Nullable(Of Boolean)), CType(obj.FechaLimite,System.Nullable(Of Date)), CType(obj.Actualizacion,System.Nullable(Of Date)), obj.strUsuario, obj.DiaSemana, CType(obj.PorcentajeGarantia,System.Nullable(Of Double)), CType(obj.TarifaRteFuente,System.Nullable(Of Double)), CType(obj.ImpDocTesoreria,System.Nullable(Of Boolean)), obj.TipoEntidad, obj.CodigoEntidad, CType(obj.RteComision,System.Nullable(Of Double)), CType(obj.RteICA,System.Nullable(Of Double)), obj.CodigoEntidadUIAF, obj.TipoEntidadUIAF, CType(obj.ValidaCuentaSuperVal,System.Nullable(Of Boolean)), CType(obj.ValSobregiroNC,System.Nullable(Of Boolean)), obj.Tipo, obj.CtaContable, obj.CCosto, obj.CtaContableContraparte, obj.CCostoContraparte, CType(obj.ReporteExtractoClientePedirRangos,System.Nullable(Of Boolean)), obj.CtaContableClientes, obj.URL, obj.Path, CType(obj.Ordenantes,System.Nullable(Of Boolean)), obj.ReceptorSuc, CType(obj.ClientesAgrupados,System.Nullable(Of Boolean)), obj.PathActualiza, CType(obj.DatosFinancieros,System.Nullable(Of Boolean)), CType(obj.ConceptoDetalleTesoreriaManual,System.Nullable(Of Boolean)), obj.NroUsu, obj.ServidorNacional, obj.strCompania, obj.CompaniaM, obj.Multicuenta, CType(obj.MaximoValor,System.Nullable(Of Decimal)), obj.DefensorCliente, obj.UrlReportesBus, obj.RutaReportesBus, CType(obj.GMFInferior,System.Nullable(Of Double)), obj.CtaContableContraparteNotasCxC, obj.tipoNotasCxC, CType(obj.PorcentajeNoConstitutivoDeRenta,System.Nullable(Of Decimal)), obj.CtaContableTrasladoDB, obj.CtaContableTrasladoCR, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDInstalacion = p1
	End Sub
	
	Private Sub UpdateInstalacio(ByVal obj As Instalacio)
		Dim p1 As Integer = obj.IDInstalacion
		Me.uspOyDNet_Maestros_Instalacion_Actualizar(obj.IDBolsa, obj.IdPoblacion, obj.Linea1, obj.Enca11, obj.Enca21, obj.Enca31, obj.Enca41, obj.Enca12, obj.Enca22, obj.Enca32, obj.Enca42, obj.Observacion1, obj.Observacion2, CType(obj.ClientesAutomatico,System.Nullable(Of Boolean)), CType(obj.ClientesCedula,System.Nullable(Of Boolean)), CType(obj.EncaFac,System.Nullable(Of Boolean)), CType(obj.EncaFacBca,System.Nullable(Of Boolean)), CType(obj.EncaTit,System.Nullable(Of Boolean)), CType(obj.EncaEgr,System.Nullable(Of Boolean)), CType(obj.EncaCaj,System.Nullable(Of Boolean)), CType(obj.EncaNot,System.Nullable(Of Boolean)), CType(obj.EncaExt,System.Nullable(Of Boolean)), CType(obj.RCLineas,System.Nullable(Of Boolean)), CType(obj.CELineas,System.Nullable(Of Boolean)), CType(obj.NCLineas,System.Nullable(Of Boolean)), CType(obj.TITLineas,System.Nullable(Of Boolean)), CType(obj.FacLineas,System.Nullable(Of Boolean)), CType(obj.FacBcaLineas,System.Nullable(Of Boolean)), CType(obj.EXTLineas,System.Nullable(Of Boolean)), CType(obj.Receptores,System.Nullable(Of Boolean)), CType(obj.FechaOrden,System.Nullable(Of Boolean)), CType(obj.Usuario,System.Nullable(Of Boolean)), CType(obj.ValSobregiroCE,System.Nullable(Of Boolean)), obj.Resolucion, CType(obj.IvaComision,System.Nullable(Of Double)), obj.NombreCuenta, CType(obj.SerBolsaFijo,System.Nullable(Of Double)), CType(obj.SerBolsaFijoAcciones,System.Nullable(Of Double)), CType(obj.TopeSerBolsaFijoAcciones,System.Nullable(Of Double)), CType(obj.EncaCus,System.Nullable(Of Boolean)), CType(obj.CusLineas,System.Nullable(Of Boolean)), CType(obj.UsuarioEntregas,System.Nullable(Of Boolean)), CType(obj.UsuarioRecibido,System.Nullable(Of Boolean)), CType(obj.UsuarioCustodia,System.Nullable(Of Boolean)), CType(obj.UsuarioSobrantes,System.Nullable(Of Boolean)), obj.IVA, obj.RteFuente, obj.NitComisionista, obj.Servidor, obj.BaseDatos, obj.Owner, obj.ServidorBus, obj.BaseDatosBus, obj.OwnerBus, obj.Compania, obj.DepositoExtranjero, obj.CustodioLocal, obj.IdContraparteOTC, CType(obj.ValorContrato,System.Nullable(Of Double)), obj.CodigoIMC, CType(obj.ReteIva,System.Nullable(Of Double)), CType(obj.ValorInicial,System.Nullable(Of Double)), CType(obj.GMS,System.Nullable(Of Double)), CType(obj.CargarReceptorCliente,System.Nullable(Of Boolean)), CType(obj.Cierre,System.Nullable(Of Date)), obj.UltimaVersion, CType(obj.TasaInicial,System.Nullable(Of Double)), CType(obj.AplazarOTC,System.Nullable(Of Boolean)), CType(obj.CuentasBancarias,System.Nullable(Of Boolean)), CType(obj.RepresentanteLegal,System.Nullable(Of Boolean)), CType(obj.FechaLimite,System.Nullable(Of Date)), CType(obj.Actualizacion,System.Nullable(Of Date)), obj.strUsuario, obj.DiaSemana, CType(obj.PorcentajeGarantia,System.Nullable(Of Double)), CType(obj.TarifaRteFuente,System.Nullable(Of Double)), CType(obj.ImpDocTesoreria,System.Nullable(Of Boolean)), obj.TipoEntidad, obj.CodigoEntidad, CType(obj.RteComision,System.Nullable(Of Double)), CType(obj.RteICA,System.Nullable(Of Double)), obj.CodigoEntidadUIAF, obj.TipoEntidadUIAF, CType(obj.ValidaCuentaSuperVal,System.Nullable(Of Boolean)), CType(obj.ValSobregiroNC,System.Nullable(Of Boolean)), obj.Tipo, obj.CtaContable, obj.CCosto, obj.CtaContableContraparte, obj.CCostoContraparte, CType(obj.ReporteExtractoClientePedirRangos,System.Nullable(Of Boolean)), obj.CtaContableClientes, obj.URL, obj.Path, CType(obj.Ordenantes,System.Nullable(Of Boolean)), obj.ReceptorSuc, CType(obj.ClientesAgrupados,System.Nullable(Of Boolean)), obj.PathActualiza, CType(obj.DatosFinancieros,System.Nullable(Of Boolean)), CType(obj.ConceptoDetalleTesoreriaManual,System.Nullable(Of Boolean)), obj.NroUsu, obj.ServidorNacional, obj.strCompania, obj.CompaniaM, obj.Multicuenta, CType(obj.MaximoValor,System.Nullable(Of Decimal)), obj.DefensorCliente, obj.UrlReportesBus, obj.RutaReportesBus, CType(obj.GMFInferior,System.Nullable(Of Double)), obj.CtaContableContraparteNotasCxC, obj.tipoNotasCxC, CType(obj.PorcentajeNoConstitutivoDeRenta,System.Nullable(Of Decimal)), obj.CtaContableTrasladoDB, obj.CtaContableTrasladoCR, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDInstalacion = p1
	End Sub
	
	Private Sub DeleteInstalacio(ByVal obj As Instalacio)
		Me.uspOyDNet_Maestros_Instalacion_Eliminar(obj.IDInstalacion, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCuentasDecevalPorAgrupado(ByVal obj As CuentasDecevalPorAgrupado)
		Dim p1 As Integer = obj.IDCuentasDeceval
		Me.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Actualizar(obj.TipoIdComitente, obj.NroDocumento, obj.Comitente, obj.CuentaDeceval, obj.Conector1, obj.TipoIdBenef1, CType(obj.NroDocBenef1,System.Nullable(Of Decimal)), obj.Conector2, obj.TipoIdBenef2, CType(obj.NroDocBenef2,System.Nullable(Of Decimal)), obj.Deposito, obj.Usuario, CType(obj.CuentaPorCliente,System.Nullable(Of Boolean)), obj.intermedia, obj.CuentaPrincipalDCV, CType(obj.Activa,System.Nullable(Of Boolean)), p1, obj.Prefijo, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCuentasDeceval = p1
	End Sub
	
	Private Sub UpdateCuentasDecevalPorAgrupado(ByVal obj As CuentasDecevalPorAgrupado)
		Dim p1 As Integer = obj.IDCuentasDeceval
		Me.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Actualizar(obj.TipoIdComitente, obj.NroDocumento, obj.Comitente, obj.CuentaDeceval, obj.Conector1, obj.TipoIdBenef1, CType(obj.NroDocBenef1,System.Nullable(Of Decimal)), obj.Conector2, obj.TipoIdBenef2, CType(obj.NroDocBenef2,System.Nullable(Of Decimal)), obj.Deposito, obj.Usuario, CType(obj.CuentaPorCliente,System.Nullable(Of Boolean)), obj.intermedia, obj.CuentaPrincipalDCV, CType(obj.Activa,System.Nullable(Of Boolean)), p1, obj.Prefijo, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCuentasDeceval = p1
	End Sub
	
	Private Sub DeleteCuentasDecevalPorAgrupado(ByVal obj As CuentasDecevalPorAgrupado)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Eliminar(obj.Comitente, obj.CuentaDeceval, obj.IDCuentasDeceval, obj.Deposito, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertConsultaNombre(ByVal obj As ConsultaNombre)
		Me.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Unificar(CType(obj.IDRetira,System.Nullable(Of Integer)), CType(obj.Accion,System.Nullable(Of Char)), CType(obj.IDUnifica,System.Nullable(Of Integer)), obj.Deposito, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertOrdene(ByVal obj As Ordene)
		Dim p1 As Integer = obj.IDOrdenes
		Me.uspOyDNet_Maestros_Ordenes_Actualizar(obj.Tipo, obj.Clase, obj.ID, obj.Version, CType(obj.Ordinaria,System.Nullable(Of Boolean)), obj.Objeto, CType(obj.Repo,System.Nullable(Of Boolean)), CType(obj.Renovacion,System.Nullable(Of Boolean)), obj.IDComitente, obj.IDOrdenante, CType(obj.ComisionPactada,System.Nullable(Of Double)), obj.CondicionesNegociacion, obj.TipoLimite, obj.FormaPago, CType(obj.Orden,System.Nullable(Of Date)), CType(obj.VigenciaHasta,System.Nullable(Of Date)), obj.Instrucciones, obj.Notas, obj.Estado, CType(obj.Fecha_Estado,System.Nullable(Of Date)), CType(obj.Sistema,System.Nullable(Of Date)), obj.UBICACIONTITULO, obj.TipoInversion, obj.Usuario, obj.IDPreliquidacion, obj.IDProducto, CType(obj.CostoAdicionalesOrden,System.Nullable(Of Double)), obj.IdBolsa, obj.UsuarioIngreso, obj.NegocioEspecial, CType(obj.Eca,System.Nullable(Of Boolean)), obj.OrdenEscrito, obj.ConsecutivoSwap, obj.Ejecucion, obj.Duracion, CType(obj.CantidadMinima,System.Nullable(Of Decimal)), CType(obj.PrecioStop,System.Nullable(Of Decimal)), CType(obj.CantidadVisible,System.Nullable(Of Decimal)), obj.HoraVigencia, obj.EstadoLEO, obj.UsuarioOperador, obj.CanalRecepcion, obj.MedioVerificable, CType(obj.FechaHoraRecepcion,System.Nullable(Of Date)), obj.SitioIngreso, obj.Seteada, obj.Folio, obj.TipoOrdenPreOrdenes, obj.NroOrdenPreOrdenes, CType(obj.Impresion,System.Nullable(Of Boolean)), obj.Impresiones, obj.PreordenDetalle, obj.EstadoOrdenBus, p1, obj.IpOrigen, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDOrdenes = p1
	End Sub
	
	Private Sub UpdateOrdene(ByVal obj As Ordene)
		Dim p1 As Integer = obj.IDOrdenes
		Me.uspOyDNet_Maestros_Ordenes_Actualizar(obj.Tipo, obj.Clase, obj.ID, obj.Version, CType(obj.Ordinaria,System.Nullable(Of Boolean)), obj.Objeto, CType(obj.Repo,System.Nullable(Of Boolean)), CType(obj.Renovacion,System.Nullable(Of Boolean)), obj.IDComitente, obj.IDOrdenante, CType(obj.ComisionPactada,System.Nullable(Of Double)), obj.CondicionesNegociacion, obj.TipoLimite, obj.FormaPago, CType(obj.Orden,System.Nullable(Of Date)), CType(obj.VigenciaHasta,System.Nullable(Of Date)), obj.Instrucciones, obj.Notas, obj.Estado, CType(obj.Fecha_Estado,System.Nullable(Of Date)), CType(obj.Sistema,System.Nullable(Of Date)), obj.UBICACIONTITULO, obj.TipoInversion, obj.Usuario, obj.IDPreliquidacion, obj.IDProducto, CType(obj.CostoAdicionalesOrden,System.Nullable(Of Double)), obj.IdBolsa, obj.UsuarioIngreso, obj.NegocioEspecial, CType(obj.Eca,System.Nullable(Of Boolean)), obj.OrdenEscrito, obj.ConsecutivoSwap, obj.Ejecucion, obj.Duracion, CType(obj.CantidadMinima,System.Nullable(Of Decimal)), CType(obj.PrecioStop,System.Nullable(Of Decimal)), CType(obj.CantidadVisible,System.Nullable(Of Decimal)), obj.HoraVigencia, obj.EstadoLEO, obj.UsuarioOperador, obj.CanalRecepcion, obj.MedioVerificable, CType(obj.FechaHoraRecepcion,System.Nullable(Of Date)), obj.SitioIngreso, obj.Seteada, obj.Folio, obj.TipoOrdenPreOrdenes, obj.NroOrdenPreOrdenes, CType(obj.Impresion,System.Nullable(Of Boolean)), obj.Impresiones, obj.PreordenDetalle, obj.EstadoOrdenBus, p1, obj.IpOrigen, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDOrdenes = p1
	End Sub
	
	Private Sub DeleteOrdene(ByVal obj As Ordene)
		Me.uspOyDNet_Maestros_Ordenes_Eliminar(obj.IDOrdenes, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertResolucionesFactura(ByVal obj As ResolucionesFactura)
		Dim p1 As Integer = obj.IDCodigoResolucion
		Me.uspOyDNet_Maestros_ResolucionesFacturas_Actualizar(p1, CType(obj.NumeroResolucion,System.Nullable(Of Long)), obj.DescripcionResolucion, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCodigoResolucion = p1
	End Sub
	
	Private Sub UpdateResolucionesFactura(ByVal obj As ResolucionesFactura)
		Dim p1 As Integer = obj.IDCodigoResolucion
		Me.uspOyDNet_Maestros_ResolucionesFacturas_Actualizar(p1, CType(obj.NumeroResolucion,System.Nullable(Of Long)), obj.DescripcionResolucion, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCodigoResolucion = p1
	End Sub
	
	Private Sub DeleteResolucionesFactura(ByVal obj As ResolucionesFactura)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_ResolucionesFacturas_Eliminar(obj.IDCodigoResolucion, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertBanco(ByVal obj As Banco)
		Dim p1 As Integer = obj.IDBanco
		Me.uspOyDNet_Maestros_Cuentasbancarias_Actualizar(obj.ID, obj.Nombre, obj.NombreSucursal, obj.NroCuenta, obj.Telefono1, obj.Telefono2, obj.Fax1, obj.Fax2, obj.Direccion, obj.Internet, CType(obj.ChequeraAutomatica,System.Nullable(Of Boolean)), obj.NombreConsecutivo, obj.IDPoblacion, obj.IDDepartamento, obj.IDPais, obj.NombreGerente, obj.NombreCajero, obj.NombrePortero, CType(obj.Creacion,System.Nullable(Of Date)), obj.IDOwner, obj.IdCuentaCtble, CType(obj.CtaActiva,System.Nullable(Of Boolean)), obj.Usuario, obj.Reporte, CType(obj.CobroGMF,System.Nullable(Of Boolean)), obj.TipoCta, obj.TipoCuenta, obj.IdCodBanco, p1, obj.IdMoneda, obj.idSucursal, obj.IDFormato, obj.lngNumCheque, obj.IDFormatoActual, obj.Compania, obj.xmlDetalleGrid, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.CuentaContableAuxiliar, obj.lngTipoCuentaRecaudadora, obj.lngIDComitente)
		obj.IDBanco = p1
	End Sub
	
	Private Sub UpdateBanco(ByVal obj As Banco)
		Dim p1 As Integer = obj.IDBanco
		Me.uspOyDNet_Maestros_Cuentasbancarias_Actualizar(obj.ID, obj.Nombre, obj.NombreSucursal, obj.NroCuenta, obj.Telefono1, obj.Telefono2, obj.Fax1, obj.Fax2, obj.Direccion, obj.Internet, CType(obj.ChequeraAutomatica,System.Nullable(Of Boolean)), obj.NombreConsecutivo, obj.IDPoblacion, obj.IDDepartamento, obj.IDPais, obj.NombreGerente, obj.NombreCajero, obj.NombrePortero, CType(obj.Creacion,System.Nullable(Of Date)), obj.IDOwner, obj.IdCuentaCtble, CType(obj.CtaActiva,System.Nullable(Of Boolean)), obj.Usuario, obj.Reporte, CType(obj.CobroGMF,System.Nullable(Of Boolean)), obj.TipoCta, obj.TipoCuenta, obj.IdCodBanco, p1, obj.IdMoneda, obj.idSucursal, obj.IDFormato, obj.lngNumCheque, obj.IDFormatoActual, obj.Compania, obj.xmlDetalleGrid, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.CuentaContableAuxiliar, obj.lngTipoCuentaRecaudadora, obj.lngIDComitente)
		obj.IDBanco = p1
	End Sub
	
	Private Sub DeleteBanco(ByVal obj As Banco)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Cuentasbancarias_Eliminar(p1, obj.ID, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertConfigLE(ByVal obj As ConfigLE)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_ConfigLEO_Actualizar(p1, obj.Nombre, obj.Usuario, obj.Index, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub UpdateConfigLE(ByVal obj As ConfigLE)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_ConfigLEO_Actualizar(p1, obj.Nombre, obj.Usuario, obj.Index, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub DeleteConfigLE(ByVal obj As ConfigLE)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_ConfigLEO_Actualizar(p1, obj.Nombre, obj.Usuario, obj.Index, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub InsertUsuarios_Selecciona(ByVal obj As Usuarios_Selecciona)
		Me.uspOyDNet_Maestros_Usuarios_Seleccionar_Actualizar(obj.Id, obj.Login, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateUsuarios_Selecciona(ByVal obj As Usuarios_Selecciona)
		Me.uspOyDNet_Maestros_Usuarios_Seleccionar_Actualizar(obj.Id, obj.Login, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteUsuarios_Selecciona(ByVal obj As Usuarios_Selecciona)
		Me.uspOyDNet_Maestros_Usuarios_Seleccionar_Eliminar(obj.Id, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertClienteAgrupado(ByVal obj As ClienteAgrupado)
		Dim p1 As Integer = obj.IDClienteAgrupador
		Me.uspOyDNet_Maestros_ClienteAgrupador_Actualizar(obj.IDAgrupador, obj.NroDocumento, obj.TipoIdentificacion, obj.idComitenteLider, obj.NombreAgrupador, obj.Nombre, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClienteAgrupador = p1
	End Sub
	
	Private Sub UpdateClienteAgrupado(ByVal obj As ClienteAgrupado)
		Dim p1 As Integer = obj.IDClienteAgrupador
		Me.uspOyDNet_Maestros_ClienteAgrupador_Actualizar(obj.IDAgrupador, obj.NroDocumento, obj.TipoIdentificacion, obj.idComitenteLider, obj.NombreAgrupador, obj.Nombre, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClienteAgrupador = p1
	End Sub
	
	Private Sub DeleteClienteAgrupado(ByVal obj As ClienteAgrupado)
		Me.uspOyDNet_Maestros_ClienteAgrupador_Eliminar(obj.IDClienteAgrupador, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertDetalleClienteAgrupado(ByVal obj As DetalleClienteAgrupado)
		Me.uspOyDNet_Maestros_DetalleClienteAgrupador_Actualizar(obj.Id, obj.Nombre, obj.DireccionEnvio, obj.idReceptor, obj.IDSucCliente, obj.IDDetalleClienteAgrupador, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateDetalleClienteAgrupado(ByVal obj As DetalleClienteAgrupado)
		Me.uspOyDNet_Maestros_DetalleClienteAgrupador_Actualizar(obj.Id, obj.Nombre, obj.DireccionEnvio, obj.idReceptor, obj.IDSucCliente, obj.IDDetalleClienteAgrupador, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteDetalleClienteAgrupado(ByVal obj As DetalleClienteAgrupado)
		Me.uspOyDNet_Maestros_DetalleClienteAgrupador_Eliminar(obj.IDDetalleClienteAgrupador, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertClasificacionesCii(ByVal obj As ClasificacionesCii)
		Dim p1 As Integer = obj.IDClasificacionCiiu
		Me.uspOyDNet_Maestros_ClasificacionesCiiu_Actualizar(obj.ID, obj.Nombre, obj.Tipo, obj.IDPerteneceA, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClasificacionCiiu = p1
	End Sub
	
	Private Sub UpdateClasificacionesCii(ByVal obj As ClasificacionesCii)
		Dim p1 As Integer = obj.IDClasificacionCiiu
		Me.uspOyDNet_Maestros_ClasificacionesCiiu_Actualizar(obj.ID, obj.Nombre, obj.Tipo, obj.IDPerteneceA, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDClasificacionCiiu = p1
	End Sub
	
	Private Sub DeleteClasificacionesCii(ByVal obj As ClasificacionesCii)
		Me.uspOyDNet_Maestros_ClasificacionesCiiu_Eliminar(obj.IDClasificacionCiiu, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertBolsaCosto(ByVal obj As BolsaCosto)
		Dim p1 As Integer = obj.IDBolsaCostos
		Me.uspOyDNet_Maestros_BolsaCostos_Actualizar(p1, obj.Id, obj.Descripcion, CType(obj.PorcentajeCosto,System.Nullable(Of Double)), CType(obj.CostoPesos,System.Nullable(Of Double)), CType(obj.Actualizado,System.Nullable(Of Boolean)), obj.Usuario, CType(obj.Actualizacion,System.Nullable(Of Date)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDBolsaCostos = p1
	End Sub
	
	Private Sub UpdateBolsaCosto(ByVal obj As BolsaCosto)
		Dim p1 As Integer = obj.IDBolsaCostos
		Me.uspOyDNet_Maestros_BolsaCostos_Actualizar(p1, obj.Id, obj.Descripcion, CType(obj.PorcentajeCosto,System.Nullable(Of Double)), CType(obj.CostoPesos,System.Nullable(Of Double)), CType(obj.Actualizado,System.Nullable(Of Boolean)), obj.Usuario, CType(obj.Actualizacion,System.Nullable(Of Date)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDBolsaCostos = p1
	End Sub
	
	Private Sub DeleteBolsaCosto(ByVal obj As BolsaCosto)
		Me.uspOyDNet_Maestros_BolsaCostos_Eliminar(obj.IDBolsaCostos, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertBloqueoSaldoCliente(ByVal obj As BloqueoSaldoCliente)
		Dim p1 As Integer = obj.IdRegistro
		Me.uspOyDNet_Maestros_BloqueoSaldoClientes_Actualizar(p1, obj.IDComitente, obj.MotivoBloqueoSaldo, CType(obj.ValorBloqueado,System.Nullable(Of Decimal)), obj.Naturaleza, CType(obj.FechaBloqueo,System.Nullable(Of Date)), obj.DetalleBloqueo, obj.intIDCompania, obj.intIDEncargo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdRegistro = p1
	End Sub
	
	Private Sub UpdateBloqueoSaldoCliente(ByVal obj As BloqueoSaldoCliente)
		Dim p1 As Integer = obj.IdRegistro
		Me.uspOyDNet_Maestros_BloqueoSaldoClientes_Actualizar(p1, obj.IDComitente, obj.MotivoBloqueoSaldo, CType(obj.ValorBloqueado,System.Nullable(Of Decimal)), obj.Naturaleza, CType(obj.FechaBloqueo,System.Nullable(Of Date)), obj.DetalleBloqueo, obj.intIDCompania, obj.intIDEncargo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdRegistro = p1
	End Sub
	
	Private Sub DeleteBloqueoSaldoCliente(ByVal obj As BloqueoSaldoCliente)
		Me.uspOyDNet_Maestros_BloqueoSaldoClientes_Eliminar(obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertBancos_BancosNacionalesRelacionado(ByVal obj As Bancos_BancosNacionalesRelacionado)
		Dim p1 As Integer = obj.IDBancosNacionalesR
		Me.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Actualizar(obj.IDBanco, obj.IdBancoNacional, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDBancosNacionalesR = p1
	End Sub
	
	Private Sub UpdateBancos_BancosNacionalesRelacionado(ByVal obj As Bancos_BancosNacionalesRelacionado)
		Dim p1 As Integer = obj.IDBancosNacionalesR
		Me.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Actualizar(obj.IDBanco, obj.IdBancoNacional, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDBancosNacionalesR = p1
	End Sub
	
	Private Sub DeleteBancos_BancosNacionalesRelacionado(ByVal obj As Bancos_BancosNacionalesRelacionado)
		Me.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Eliminar(obj.IDBancosNacionalesR, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertComisionEspecie(ByVal obj As ComisionEspecie)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_ComisionEspecies_Actualizar(p1, obj.IDEspecie, CType(obj.Comision,System.Nullable(Of Decimal)), CType(obj.PorcentajeComision,System.Nullable(Of Decimal)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub UpdateComisionEspecie(ByVal obj As ComisionEspecie)
		Dim p1 As Integer = obj.ID
		Me.uspOyDNet_Maestros_ComisionEspecies_Actualizar(p1, obj.IDEspecie, CType(obj.Comision,System.Nullable(Of Decimal)), CType(obj.PorcentajeComision,System.Nullable(Of Decimal)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
	End Sub
	
	Private Sub DeleteComisionEspecie(ByVal obj As ComisionEspecie)
		Me.uspOyDNet_Maestros_ComisionEspecies_Eliminar(obj.ID, obj.InfoSesion, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertPlantilla(ByVal obj As Plantilla)
		Dim p1 As System.Nullable(Of Integer) = obj.intID
		Me.uspOyDNet_Maestros_Plantilla_Actualizar(p1, obj.strCodigo, obj.strMensaje, obj.strUsuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.intID = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdatePlantilla(ByVal obj As Plantilla)
		Dim original As Plantilla = CType(Plantillas.GetOriginalEntityState(obj),Plantilla)
		Dim p1 As System.Nullable(Of Integer) = original.intID
		Me.uspOyDNet_Maestros_Plantilla_Actualizar(p1, obj.strCodigo, obj.strMensaje, obj.strUsuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		original.intID = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeletePlantilla(ByVal obj As Plantilla)
		Me.uspOyDNet_Maestros_Plantillas_Eliminar(CType(obj.intID,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertPlantillaBanco(ByVal obj As PlantillaBanco)
		Dim p1 As System.Nullable(Of Integer) = obj.Id
		Me.uspOyDNet_Maestros_PlantillaBanco_Actualizar(p1, CType(obj.IdBanco,System.Nullable(Of Integer)), CType(obj.IdPlantilla,System.Nullable(Of Integer)), obj.strDescripcion, obj.strExtension, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Id = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdatePlantillaBanco(ByVal obj As PlantillaBanco)
		Dim p1 As System.Nullable(Of Integer) = obj.Id
		Me.uspOyDNet_Maestros_PlantillaBanco_Actualizar(p1, CType(obj.IdBanco,System.Nullable(Of Integer)), CType(obj.IdPlantilla,System.Nullable(Of Integer)), obj.strDescripcion, obj.strExtension, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Id = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeletePlantillaBanco(ByVal obj As PlantillaBanco)
		Me.uspOyDNet_Maestros_PlantillaBanco_Eliminar(CType(obj.Id,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertDestinoInversion(ByVal obj As DestinoInversion)
		Dim p1 As Integer = obj.IDDestinoInversion
		Me.uspOyDNet_Maestros_DestinoInversion_Actualizar(p1, obj.IDDestino, obj.NombreDestino, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDestinoInversion = p1
	End Sub
	
	Private Sub UpdateDestinoInversion(ByVal obj As DestinoInversion)
		Dim p1 As Integer = obj.IDDestinoInversion
		Me.uspOyDNet_Maestros_DestinoInversion_Actualizar(p1, obj.IDDestino, obj.NombreDestino, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDestinoInversion = p1
	End Sub
	
	Private Sub DeleteDestinoInversion(ByVal obj As DestinoInversion)
		Me.uspOyDNet_Maestros_DestinoInversion_Eliminar(obj.IDDestinoInversion, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertGrupoEconomicos(ByVal obj As GrupoEconomicos)
		Dim p1 As System.Nullable(Of Integer) = obj.IdGrupoEconomico
		Me.uspOyDNet_Maestros_Gruposeconomicos_Actualizar(p1, obj.NombreGrupo, obj.ComitenteLider, obj.IdsComitentes, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdGrupoEconomico = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdateGrupoEconomicos(ByVal obj As GrupoEconomicos)
		Dim p1 As System.Nullable(Of Integer) = obj.IdGrupoEconomico
		Me.uspOyDNet_Maestros_Gruposeconomicos_Actualizar(p1, obj.NombreGrupo, obj.ComitenteLider, obj.IdsComitentes, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdGrupoEconomico = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeleteGrupoEconomicos(ByVal obj As GrupoEconomicos)
		Dim original As GrupoEconomicos = CType(GrupoEconomicos.GetOriginalEntityState(obj),GrupoEconomicos)
		Me.uspOyDNet_Maestros_Gruposeconomicos_Eliminar(CType(original.IdGrupoEconomico,System.Nullable(Of Integer)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertClasificacionRiesgo(ByVal obj As ClasificacionRiesgo)
		Dim p1 As Integer = obj.IdClasificacionRiesgo
		Me.uspOyDNet_Maestros_ClasificacionRiesgos_Actualizar(p1, obj.IdTipoClasificacionRiesgo, obj.Prefijo, obj.Detalle, CType(obj.GenerarAlerta,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion)
		obj.IdClasificacionRiesgo = p1
	End Sub
	
	Private Sub UpdateClasificacionRiesgo(ByVal obj As ClasificacionRiesgo)
		Dim p1 As Integer = obj.IdClasificacionRiesgo
		Me.uspOyDNet_Maestros_ClasificacionRiesgos_Actualizar(p1, obj.IdTipoClasificacionRiesgo, obj.Prefijo, obj.Detalle, CType(obj.GenerarAlerta,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion)
		obj.IdClasificacionRiesgo = p1
	End Sub
	
	Private Sub DeleteClasificacionRiesgo(ByVal obj As ClasificacionRiesgo)
		Me.uspOyDNet_Maestros_ClasificacionRiesgos_Eliminar(obj.IdClasificacionRiesgo, CType(Nothing, String), obj.InfoSesion)
	End Sub
	
	Private Sub InsertClasificacionRiesgoTipoCliente(ByVal obj As ClasificacionRiesgoTipoCliente)
		Dim p1 As Integer = obj.ID
		Dim p2 As System.Nullable(Of System.int32) = obj.Codigo
		Me.uspOyDNet_MaestrosClasificacionTipoCliente_Actualizar(p1, p2, obj.ClasificacionTipoCliente, obj.Usuario, obj.InfoSesion)
		obj.ID = p1
		obj.Codigo = p2
	End Sub
	
	Private Sub UpdateClasificacionRiesgoTipoCliente(ByVal obj As ClasificacionRiesgoTipoCliente)
		Dim p1 As Integer = obj.ID
		Dim p2 As System.Nullable(Of System.int32) = obj.Codigo
		Me.uspOyDNet_MaestrosClasificacionTipoCliente_Actualizar(p1, p2, obj.ClasificacionTipoCliente, obj.Usuario, obj.InfoSesion)
		obj.ID = p1
		obj.Codigo = p2
	End Sub
	
	Private Sub DeleteClasificacionRiesgoTipoCliente(ByVal obj As ClasificacionRiesgoTipoCliente)
		Me.uspOyDNet_MaestrosClasificacionTipoCliente_Eliminar(obj.Codigo, CType(Nothing, String), obj.InfoSesion)
	End Sub
	
	Private Sub InsertComisionesBroker(ByVal obj As ComisionesBroker)
		Me.uspOyDNet_Maestros_ComisionesBroker_Actualizar(obj.Retorno, CType(obj.ValorComision,System.Nullable(Of Double)), obj.Email, obj.Equivalencia, obj.Usuario, obj.InfoSesion)
	End Sub
	
	Private Sub UpdateComisionesBroker(ByVal obj As ComisionesBroker)
		Me.uspOyDNet_Maestros_ComisionesBroker_Actualizar(obj.Retorno, CType(obj.ValorComision,System.Nullable(Of Double)), obj.Email, obj.Equivalencia, obj.Usuario, obj.InfoSesion)
	End Sub
	
	Private Sub InsertPerfilesRiesgo(ByVal obj As PerfilesRiesgo)
		Dim p1 As Integer = obj.PerfilRiesgo
		Me.uspOyDNet_Maestros_PerfilesRiesgo_Actualizar(p1, obj.TipoPerfil, obj.IDDescPerfil, obj.CalificacionPerfil, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
		obj.PerfilRiesgo = p1
	End Sub
	
	Private Sub UpdatePerfilesRiesgo(ByVal obj As PerfilesRiesgo)
		Dim p1 As Integer = obj.PerfilRiesgo
		Me.uspOyDNet_Maestros_PerfilesRiesgo_Actualizar(p1, obj.TipoPerfil, obj.IDDescPerfil, obj.CalificacionPerfil, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
		obj.PerfilRiesgo = p1
	End Sub
	
	Private Sub DeletePerfilesRiesgo(ByVal obj As PerfilesRiesgo)
		Me.uspOyDNet_Maestros_PerfilesRiesgo_Eliminar(obj.PerfilRiesgo, CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCarterasColectivasClientesGMF(ByVal obj As CarterasColectivasClientesGMF)
		Dim p1 As Integer = obj.IDCarterasColectivasClientesGMF
		Me.uspOyDNet_MaestrosCarterasColectivasGMF_Actualizar(p1, obj.TipoIdentificacion, obj.NroDocumento, obj.Nombre, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCarterasColectivasClientesGMF = p1
	End Sub
	
	Private Sub UpdateCarterasColectivasClientesGMF(ByVal obj As CarterasColectivasClientesGMF)
		Dim p1 As Integer = obj.IDCarterasColectivasClientesGMF
		Me.uspOyDNet_MaestrosCarterasColectivasGMF_Actualizar(p1, obj.TipoIdentificacion, obj.NroDocumento, obj.Nombre, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCarterasColectivasClientesGMF = p1
	End Sub
	
	Private Sub DeleteCarterasColectivasClientesGMF(ByVal obj As CarterasColectivasClientesGMF)
		Me.uspOyDNet_MaestrosCarterasColectivasGMF_Eliminar(obj.TipoIdentificacion, obj.NroDocumento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    'Private Sub InsertEmpleadoSistema(ByVal obj As EmpleadoSistema)
    '	Me.uspOyDNet_EmpleadosSistemas_Actualizar(obj.ID, obj.IDEmpleado, obj.Sistema, obj.CodigoMapeo, obj.Valor, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    'End Sub

    Private Sub UpdateEmpleadoSistema(ByVal obj As EmpleadoSistema)
		Me.uspOyDNet_EmpleadosSistemas_Actualizar(obj.ID, obj.IDEmpleado, obj.Sistema, obj.CodigoMapeo, obj.Valor, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteEmpleadoSistema(ByVal obj As EmpleadoSistema)
		Me.uspOyDNet_EmpleadosSistemas_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdatePermisosFormatosExportar(ByVal obj As PermisosFormatosExportar)
		Me.uspOyDNet_FormatosXUsuarios_Consultar(CType(Nothing, String), CType(Nothing, System.Nullable(Of Boolean)), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String))
	End Sub
	
	Private Sub InsertConfiguracionReceptores(ByVal obj As ConfiguracionReceptores)
		Dim p1 As Integer = obj.IdReceptores
		Me.uspOyDNet_Receptores_Actualizar(obj.Sucursal, obj.Codigo, obj.Nombre, CType(obj.Activo,System.Nullable(Of Boolean)), obj.Tipo, obj.Centro_costos, obj.Login, obj.SucursalContable, CType(obj.Lider_Mesa,System.Nullable(Of Boolean)), obj.Codigo_Mesa, obj.Numero_Documento, obj.E_Mail, obj.IDReceptorSafyr, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdReceptores = p1
	End Sub
	
	Private Sub UpdateConfiguracionReceptores(ByVal obj As ConfiguracionReceptores)
		Dim p1 As Integer = obj.IdReceptores
		Me.uspOyDNet_Receptores_Actualizar(obj.Sucursal, obj.Codigo, obj.Nombre, CType(obj.Activo,System.Nullable(Of Boolean)), obj.Tipo, obj.Centro_costos, obj.Login, obj.SucursalContable, CType(obj.Lider_Mesa,System.Nullable(Of Boolean)), obj.Codigo_Mesa, obj.Numero_Documento, obj.E_Mail, obj.IDReceptorSafyr, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IdReceptores = p1
	End Sub
	
	Private Sub DeleteConfiguracionReceptores(ByVal obj As ConfiguracionReceptores)
		Me.uspOyDNet_Receptores_Eliminar(obj.IdReceptores, obj.Codigo, CType(obj.Accion,System.Nullable(Of Char)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertBancosTasasRendimientos(ByVal obj As BancosTasasRendimientos)
		Me.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub UpdateBancosTasasRendimientos(ByVal obj As BancosTasasRendimientos)
		Me.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub DeleteBancosTasasRendimientos(ByVal obj As BancosTasasRendimientos)
		Me.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub InsertConsecutivosVsUsuarios(ByVal obj As ConsecutivosVsUsuarios)
		Me.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub UpdateConsecutivosVsUsuarios(ByVal obj As ConsecutivosVsUsuarios)
		Me.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub DeleteConsecutivosVsUsuarios(ByVal obj As ConsecutivosVsUsuarios)
		Me.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub InsertConceptosVSConsecutivos(ByVal obj As ConceptosVSConsecutivos)
		Me.uspOyDNet_Maestros_ConceptosVsConsecutivos_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub UpdateConceptosVSConsecutivos(ByVal obj As ConceptosVSConsecutivos)
		Me.uspOyDNet_Maestros_ConceptosVsConsecutivos_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub DeleteConceptosVSConsecutivos(ByVal obj As ConceptosVSConsecutivos)
		Me.uspOyDNet_Maestros_ConceptosVsConsecutivos_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub InsertCuentasCRCC(ByVal obj As CuentasCRCC)
		Me.uspOyDNet_Clientes_CuentasCRCC_Actualizar(obj.IDtblCuentasCRCC, obj.IDComitente, obj.CuentaCRCC, obj.TipoDeOferta, CType(Nothing, System.Nullable(Of Date)), obj.MiembroLiquidador, obj.CodigoEntorno, obj.Cuenta, obj.SubCuenta, obj.Titular, obj.NroDocumento, obj.Estado, obj.TipoPersona, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateCuentasCRCC(ByVal obj As CuentasCRCC)
		Me.uspOyDNet_Clientes_CuentasCRCC_Actualizar(obj.IDtblCuentasCRCC, obj.IDComitente, obj.CuentaCRCC, obj.TipoDeOferta, CType(Nothing, System.Nullable(Of Date)), obj.MiembroLiquidador, obj.CodigoEntorno, obj.Cuenta, obj.SubCuenta, obj.Titular, obj.NroDocumento, obj.Estado, obj.TipoPersona, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteCuentasCRCC(ByVal obj As CuentasCRCC)
		Me.uspOyDNet_Clientes_CuentasCRCC_Eliminar(CType(Nothing, Integer), CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertTesoreriaConsecutivosEquivalencias(ByVal obj As TesoreriaConsecutivosEquivalencias)
		Dim p1 As Integer = obj.IDTesoreriaConsecutivosEquivalencias
		Me.uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Actualizar(obj.NombreConsecutivoCE, obj.NombreConsecutivoRC, obj.NombreConsecutivoNotas, p1, obj.UsuarioInsercion, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
		obj.IDTesoreriaConsecutivosEquivalencias = p1
	End Sub
	
	Private Sub UpdateTesoreriaConsecutivosEquivalencias(ByVal obj As TesoreriaConsecutivosEquivalencias)
		Dim p1 As Integer = obj.IDTesoreriaConsecutivosEquivalencias
		Me.uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Actualizar(obj.NombreConsecutivoCE, obj.NombreConsecutivoRC, obj.NombreConsecutivoNotas, p1, obj.UsuarioInsercion, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
		obj.IDTesoreriaConsecutivosEquivalencias = p1
	End Sub
	
	Private Sub DeleteTesoreriaConsecutivosEquivalencias(ByVal obj As TesoreriaConsecutivosEquivalencias)
		Me.uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Eliminar(obj.IDTesoreriaConsecutivosEquivalencias, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    Private Sub InsertClientes_Responsables(ByVal obj As Clientes_Responsables)
		Me.uspOyDNet_Maestros_ClientesResponsables_Actualizar(obj.IDComitente, obj.TipoIdentificacion_Responsable, obj.NroDocumento_Responsable, obj.Nombre_Responsable, obj.Telefono1_Responsable, obj.Email_Responsable, obj.IDPoblacion, obj.IDDepartamento, obj.IdPais, obj.Tipo_Responsable, obj.Cargo_Responsable, CType(obj.Activo,System.Nullable(Of Boolean)), obj.strXml_Detalles, obj.IDClientes_Responsable, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateClientes_Responsables(ByVal obj As Clientes_Responsables)
		Me.uspOyDNet_Maestros_ClientesResponsables_Actualizar(obj.IDComitente, obj.TipoIdentificacion_Responsable, obj.NroDocumento_Responsable, obj.Nombre_Responsable, obj.Telefono1_Responsable, obj.Email_Responsable, obj.IDPoblacion, obj.IDDepartamento, obj.IdPais, obj.Tipo_Responsable, obj.Cargo_Responsable, CType(obj.Activo,System.Nullable(Of Boolean)), obj.strXml_Detalles, obj.IDClientes_Responsable, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteClientes_Responsables(ByVal obj As Clientes_Responsables)
		Me.uspOyDNet_Maestros_ClientesResponsables_Eliminar(obj.IDClientes_Responsable, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertEncabezadoResponsable(ByVal obj As EncabezadoResponsable)
		Me.uspOyDNet_Maestros_EncabezadoResponsable_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateEncabezadoResponsable(ByVal obj As EncabezadoResponsable)
		Me.uspOyDNet_Maestros_EncabezadoResponsable_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteEncabezadoResponsable(ByVal obj As EncabezadoResponsable)
		Me.uspOyDNet_Maestros_EncabezadoResponsable_Eliminar(CType(Nothing, System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertClientes_Relacionados(ByVal obj As Clientes_Relacionados)
		Me.spOyDNet_IngresarClientes_Relacionados(obj.IDComitente_Relacionado, CType(Nothing, System.Nullable(Of Boolean)), obj.strXml_Detalles, obj.strAccion, obj.IDClientes_Relacionados, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateClientes_Relacionados(ByVal obj As Clientes_Relacionados)
		Me.spOyDNet_IngresarClientes_Relacionados(obj.IDComitente_Relacionado, CType(Nothing, System.Nullable(Of Boolean)), obj.strXml_Detalles, obj.strAccion, obj.IDClientes_Relacionados, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteClientes_Relacionados(ByVal obj As Clientes_Relacionados)
		Me.uspOyDNet_Maestros_ClientesRelacionados_Eliminar(obj.IDClientes_Relacionados, obj.IDComitente, obj.strXml_Detalles, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertEncabezadoRelacionado(ByVal obj As EncabezadoRelacionado)
		Me.uspOyDNet_Maestros_EncabezadoRelacionado_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateEncabezadoRelacionado(ByVal obj As EncabezadoRelacionado)
		Me.uspOyDNet_Maestros_EncabezadoRelacionado_Actualizar(CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteEncabezadoRelacionado(ByVal obj As EncabezadoRelacionado)
		Me.uspOyDNet_Maestros_EncabezadoRelacionado_Actualizar(obj.IdEncabezado, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CodigosTransaccion_Actualizar")>  _
	Public Function uspOyDNet_CodigosTransaccion_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrTransaccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrDetalleRC As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoTransaccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrAccion, plngCodigo, pstrTransaccion, pstrDetalleRC, pstrTipoTransaccion, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CodigosTransaccion_Eliminar", IsComposable:=true)>  _
	Public Function uspOyDNet_CodigosTransaccion_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Object
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngCodigo, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Object)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CodigosTransaccion_Consultar")>  _
	Public Function uspOyDNet_CodigosTransaccion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrTransaccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrDetalleRC As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoTransaccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CodigosTransaccion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngCodigo, pstrTransaccion, pstrDetalleRC, pstrTipoTransaccion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CodigosTransaccion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CodigosTransaccion_Filtrar")>  _
	Public Function uspOyDNet_CodigosTransaccion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CodigosTransaccion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CodigosTransaccion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CodigosAjustes_Actualizar")>  _
	Public Function usp_CodigosAjustes_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pstrCodTransaccion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConceptoAnterior As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdOwner As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrCodTransaccion, pstrDescripcion, plngIdConcepto, plngIdConceptoAnterior, pstrIdOwner, pstrAccion, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ValidarConceptosTesoreria")>  _
	Public Function uspOyDNet_ValidarConceptosTesoreria(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDConcepto, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CodigosAjustes_Eliminar")>  _
	Public Function usp_CodigosAjustes_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pstrCodTransaccion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrCodTransaccion, plngIdConcepto, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CodigosAjustes_Consultar")>  _
	Public Function usp_CodigosAjustes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodTransaccion", DbType:="float")> ByVal strCodTransaccion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIdOwner", DbType:="varchar(15)")> ByVal strIdOwner As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CodigosAjustes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strCodTransaccion, strDescripcion, strIdOwner, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CodigosAjustes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CodigosAjustes_Filtrar")>  _
	Public Function usp_CodigosAjustes_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CodigosAjustes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CodigosAjustes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CuentasbancariasPorConcepto_Actualizar")>  _
	Public Function usp_CuentasbancariasPorConcepto_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdCuentaBancaria As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCodigoBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConceptoAnterior As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCuentaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngIdCuentaBancaria, plngIDCodigoBanco, plngIdConcepto, plngIdConceptoAnterior, pstrCuentaContable, pstrAccion, pstrUsuario, infosesion, pintErrorPersonalizado, pstrMsgValidacion)
		plngID = CType(result.GetParameterValue(0),Integer)
		pstrMsgValidacion = CType(result.GetParameterValue(10),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CuentasbancariasPorConcepto_RETIRAR")>  _
	Public Function usp_CuentasbancariasPorConcepto_RETIRAR(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdCuentaBancaria As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCodigoBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, plngIdCuentaBancaria, plngIDCodigoBanco, plngIdConcepto, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CuentasbancariasPorConcepto_Consultar")>  _
	Public Function usp_CuentasbancariasPorConcepto_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIdCuentaBancaria", DbType:="int")> ByVal lngIdCuentaBancaria As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCuentaContable", DbType:="varchar(20)")> ByVal strCuentaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasBancariasPorConcepto)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIdCuentaBancaria, strCuentaContable, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasBancariasPorConcepto))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_CuentasbancariasPorConcepto_Filtrar")>  _
	Public Function usp_CuentasbancariasPorConcepto_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasBancariasPorConcepto)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasBancariasPorConcepto))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Sucursales_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Sucursales_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSucComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentajePatrimonioTecnico As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDSuc As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComisionista, plngIDSucComisionista, plngID, pstrNombre, pdblPorcentajePatrimonioTecnico, pstrUsuario, pintIDSuc, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(2),Integer)
		pintIDSuc = CType(result.GetParameterValue(6),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Sucursales_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Sucursales_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDSuc As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDSuc, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Sucursales_Consultar")>  _
	Public Function uspOyDNet_Maestros_Sucursales_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Sucursale)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Sucursale))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Sucursales_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Sucursales_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Sucursale)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Sucursale))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposEntidad_Actualizar")>  _
	Public Function uspOyDNet_Maestros_TiposEntidad_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSucComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByRef pintIdTipoEntidad As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComisionista, plngIDSucComisionista, plngID, pstrNombre, pstrUsuario, pintIdTipoEntidad, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(2),Integer)
		pintIdTipoEntidad = CType(result.GetParameterValue(5),System.Nullable(Of Short))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposEntidad_Eliminar")>  _
	Public Function uspOyDNet_Maestros_TiposEntidad_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintIdTipoEntidad As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdTipoEntidad, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposEntidad_Consultar")>  _
	Public Function uspOyDNet_Maestros_TiposEntidad_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TiposEntida)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TiposEntida))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposEntidad_Filtrar")>  _
	Public Function uspOyDNet_Maestros_TiposEntidad_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TiposEntida)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TiposEntida))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ProductosValores_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ProductosValores_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngIDTipoProducto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintOrden As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByRef pintIdProductoValores As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDTipoProducto, pstrDescripcion, pintOrden, pstrUsuario, pintIdProductoValores, infosesion, pintErrorPersonalizado)
		plngIDTipoProducto = CType(result.GetParameterValue(0),Integer)
		pintOrden = CType(result.GetParameterValue(2),System.Nullable(Of System.int32))
		pintIdProductoValores = CType(result.GetParameterValue(4),System.Nullable(Of Short))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ProductosValores_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ProductosValores_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintIdProductoValores As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdProductoValores, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ProductosValores_Consultar")>  _
	Public Function uspOyDNet_Maestros_ProductosValores_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDTipoProducto", DbType:="int")> ByVal lngIDTipoProducto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pintOrden", DbType:="int")> ByVal intOrden As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ProductosValore)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDTipoProducto, strDescripcion, intOrden, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ProductosValore))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ProductosValores_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ProductosValores_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ProductosValore)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ProductosValore))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosInactividad_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConceptosInactividad_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSucComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActividad As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintIdConceptoInactividad As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComisionista, plngIDSucComisionista, plngID, plogActividad, pstrNombre, pstrUsuario, pintIdConceptoInactividad, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosInactividad_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ConceptosInactividad_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintIdConceptoInactividad As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdConceptoInactividad, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosInactividad_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConceptosInactividad_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosInactivida)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosInactivida))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosInactividad_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConceptosInactividad_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosInactivida)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosInactivida))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Custodio_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Custodio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLocal As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, plogLocal, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Custodio_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Custodio_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Custodio_Consultar")>  _
	Public Function uspOyDNet_Maestros_Custodio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Custodi)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Custodi))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Custodio_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Custodio_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Custodi)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Custodi))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Profesiones_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Profesiones_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDProfesion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrUsuario, pintIDProfesion, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		pintIDProfesion = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Profesiones_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Profesiones_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDProfesion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDProfesion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Profesiones_Consultar")>  _
	Public Function uspOyDNet_Maestros_Profesiones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Profesione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Profesione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Profesiones_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Profesiones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Profesione)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Profesione))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Codigos_CIIU_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Codigos_CIIU_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDCodigoCIIU As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngClasificacionCIIU As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Numeric(9, 6)")> ByVal dblTasaRteCREE As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCodigo, pstrDescripcion, pintIDCodigoCIIU, pstrUsuario, plngClasificacionCIIU, infosesion, pintErrorPersonalizado, dblTasaRteCREE)
		pintIDCodigoCIIU = CType(result.GetParameterValue(2),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Codigos_CIIU_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Codigos_CIIU_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCodigoCIIU As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCodigoCIIU, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Codigos_CIIU_Consultar")>  _
	Public Function uspOyDNet_Maestros_Codigos_CIIU_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigo", DbType:="varchar(10)")> ByVal strCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(255)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Codigos_CII)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strCodigo, strDescripcion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Codigos_CII))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Codigos_CIIU_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Codigos_CIIU_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Codigos_CII)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Codigos_CII))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DoctosRequeridos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_DoctosRequeridos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByRef plngid As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCodDocto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombreDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pbitRequerido As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pbitFechaIniVigenciaDocto As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pbitFechaFinVigenciaDocto As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pbitDocuActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef plngAplicaA As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngid, pstrCodDocto, pstrNombreDocumento, pbitRequerido, pbitFechaIniVigenciaDocto, pbitFechaFinVigenciaDocto, pbitDocuActivo, pstrUsuario, plngAplicaA, infosesion, pintErrorPersonalizado)
		plngid = CType(result.GetParameterValue(0),System.Nullable(Of Short))
		plngAplicaA = CType(result.GetParameterValue(8),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DoctosRequeridos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_DoctosRequeridos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal plngid As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngid, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DoctosRequeridos_Consultar")>  _
	Public Function uspOyDNet_Maestros_DoctosRequeridos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodDocto", DbType:="varchar(20)")> ByVal strCodDocto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreDocumento", DbType:="varchar(100)")> ByVal strNombreDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DoctosRequerido)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strCodDocto, strNombreDocumento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DoctosRequerido))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DoctosRequeridos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_DoctosRequeridos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DoctosRequerido)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DoctosRequerido))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoReferencias_Actualizar")>  _
	Public Function uspOyDNet_Maestros_TipoReferencias_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrtipoClasificacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFormulario1 As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFormulario2 As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFormulario3 As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFormulario4 As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFormulario5 As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCalculaIVA As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogMensajes As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCalculaRetencion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pdblCantidadNegociada As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintNroMesesDctoTransporte As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(9)")> ByVal pstrConsecutivo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrID, pstrDescripcion, pstrtipoClasificacion, plogFormulario1, plogFormulario2, plogFormulario3, plogFormulario4, plogFormulario5, plogCalculaIVA, plogMensajes, plogCalculaRetencion, pdblCantidadNegociada, pintNroMesesDctoTransporte, pstrConsecutivo, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoReferencias_Eliminar")>  _
	Public Function uspOyDNet_Maestros_TipoReferencias_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2000)")> ByRef pstrMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrUsuario, pstrMsg, infosesion, pintErrorPersonalizado)
		pstrMsg = CType(result.GetParameterValue(2),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoReferencias_Consultar")>  _
	Public Function uspOyDNet_Maestros_TipoReferencias_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrID", DbType:="varchar(2)")> ByVal strID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TipoReferencia)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strID, strDescripcion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TipoReferencia))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoReferencias_Filtrar")>  _
	Public Function uspOyDNet_Maestros_TipoReferencias_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TipoReferencia)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TipoReferencia))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spA2utils_CargarCombos")>  _
	Public Function spA2utils_CargarCombos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal listaNombreCombos As String) As ISingleResult(Of ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), listaNombreCombos)
		Return CType(result.ReturnValue,ISingleResult(Of ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bolsas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Bolsas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSucComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPoblacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal plngNroDocumento As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogMercadoIntegrado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActiva As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDBolsa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComisionista, plngIDSucComisionista, plngId, pstrNombre, plngIDPoblacion, plngNroDocumento, pstrUsuario, plogMercadoIntegrado, plogActiva, pintIDBolsa, infosesion, pintErrorPersonalizado)
		pintIDBolsa = CType(result.GetParameterValue(9),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bolsas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Bolsas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDBolsa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBolsa, pstrUsuario, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(2),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bolsas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Bolsas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngId", DbType:="int")> ByVal lngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(25)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPoblacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal plngNroDocumento As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogMercadoIntegrado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Bolsa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngId, strNombre, plngIDPoblacion, plngNroDocumento, plogMercadoIntegrado, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Bolsa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bolsas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Bolsas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Bolsa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Bolsa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Clasificaciones_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Clasificaciones_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEsGrupo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEsSector As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPerteneceA As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrAplicaA As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrNemo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClasificacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, plogEsGrupo, plogEsSector, plngIDPerteneceA, pstrAplicaA, pstrNemo, pstrUsuario, pintIDClasificacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Clasificaciones_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Clasificaciones_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClasificacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClasificacion, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Clasificaciones_Consultar")>  _
	Public Function uspOyDNet_Maestros_Clasificaciones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrAplicaA", DbType:="Varchar(1)")> ByVal strAplicaA As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogEsGrupo", DbType:="bit")> ByVal logEsGrupo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogEsSector", DbType:="bit")> ByVal logEsSector As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDPerteneceA", DbType:="Int")> ByVal lngIDPerteneceA As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Clasificacion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strAplicaA, logEsGrupo, logEsSector, lngIDPerteneceA, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Clasificacion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Clasificaciones_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Clasificaciones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Clasificacion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Clasificacion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Comisionistas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Comisionistas_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdBolsa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal plngNroDocumento As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrRepresentanteLegal As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrFax1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrFax2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDireccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrInternet As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPoblacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDepartamento As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPais As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNotas As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDComisionista As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Smallint")> ByVal pintIdTipoEntidad As System.Nullable(Of int16),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdBolsa, plngID, plngNroDocumento, pstrNombre, pstrRepresentanteLegal, pstrTelefono1, pstrTelefono2, pstrFax1, pstrFax2, pstrDireccion, pstrInternet, pstrEMail, plngIDPoblacion, plngIDDepartamento, plngIDPais, pstrNotas, pstrUsuario, pintIDComisionista, pintIdTipoEntidad, plogActivo, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(1),Integer)
		pintIDComisionista = CType(result.GetParameterValue(17),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Comisionistas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Comisionistas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDComisionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDComisionista, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Comisionistas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Comisionistas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(80)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrRepresentanteLegal As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Comisionista)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, pstrRepresentanteLegal, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Comisionista))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Comisionistas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Comisionistas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Comisionista)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Comisionista))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BancosNacionales_Actualizar")>  _
	Public Function uspOyDNet_Maestros_BancosNacionales_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrCodACH As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDBancoNacional As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrDigitoChequeo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrCodACH, pstrNombre, pstrUsuario, pintIDBancoNacional, pstrNroDocumento, pstrDigitoChequeo, infosesion, pintErrorPersonalizado)
		plngId = CType(result.GetParameterValue(0),Integer)
		pintIDBancoNacional = CType(result.GetParameterValue(4),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BancosNacionales_Eliminar")>  _
	Public Function uspOyDNet_Maestros_BancosNacionales_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDBancoNacional As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBancoNacional, pstrUsuario, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(2),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BancosNacionales_Consultar")>  _
	Public Function uspOyDNet_Maestros_BancosNacionales_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngId", DbType:="int")> ByVal lngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BancosNacionale)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngId, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BancosNacionale))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BancosNacionales_Filtrar")>  _
	Public Function uspOyDNet_Maestros_BancosNacionales_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BancosNacionale)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BancosNacionale))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_RelacionesCodBancosBancosNacionale_Consultar")>  _
	Public Function uspOyDNet_Maestros_RelacionesCodBancosBancosNacionale_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDBancoNacional As int32, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of RelacionesCodBanco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBancoNacional, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of RelacionesCodBanco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_RelacionesCodBancos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_RelacionesCodBancos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdCodBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrRelTecno As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDRelacionCodBanco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdCodBanco, pstrRelTecno, pstrUsuario, infosesion, pintIDRelacionCodBanco, pintErrorPersonalizado)
		pintIDRelacionCodBanco = CType(result.GetParameterValue(4),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_RelacionesCodBancos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_RelacionesCodBancos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdCodBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrRelTecno As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdCodBanco, pstrRelTecno, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_RelacionesCodBancos_Consultar")>  _
	Public Function uspOyDNet_Maestros_RelacionesCodBancos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of RelacionesCodBanco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of RelacionesCodBanco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_RelacionesCodBancos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_RelacionesCodBancos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of RelacionesCodBanco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of RelacionesCodBanco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosDocumentos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosDocumentos_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCliente As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCuentaContable As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCuentaContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrPermiteCliente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdTarifa As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrSigno As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrsucursalConciliacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdSucursalSuvalor As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogConcepto As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrComprobanteContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pLogIncluidoEnExtractoBanco As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pLogIncluidoEnExtractoCliente As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdMoneda As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDConsecutivoDocumento As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCompania As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogExentoGMF As System.Nullable(of System.Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrDocumento, pstrNombreConsecutivo, pstrDescripcion, plogCliente, plogCuentaContable, pstrCuentaContable, pstrUsuario, pstrPermiteCliente, pstrTipoCuenta, plngIdTarifa, pstrSigno, pstrsucursalConciliacion, plngIdSucursalSuvalor, plogConcepto, pstrComprobanteContable, pLogIncluidoEnExtractoBanco, pLogIncluidoEnExtractoCliente, plngIdMoneda, pintIDConsecutivoDocumento, infosesion, pintErrorPersonalizado, pintIDCompania, plogExentoGMF)
		pintIDConsecutivoDocumento = CType(result.GetParameterValue(18),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosDocumentos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosDocumentos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDConsecutivoDocumento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDConsecutivoDocumento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosDocumentos_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosDocumentos_Consultar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDocumento", DbType:="varchar(15)")> ByVal strDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreConsecutivo", DbType:="varchar(15)")> ByVal strNombreConsecutivo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogCuentaContable", DbType:="bit")> ByVal logCuentaContable As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCuentaContable", DbType:="varchar(20)")> ByVal strCuentaContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrPermiteCliente", DbType:="varchar(1)")> ByVal strPermiteCliente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrTipoCuenta", DbType:="varchar(1)")> ByVal strTipoCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrsucursalConciliacion", DbType:="varchar(4)")> ByVal strsucursalConciliacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIdSucursalSuvalor", DbType:="int")> ByVal lngIdSucursalSuvalor As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogConcepto", DbType:="bit")> ByVal logConcepto As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrComprobanteContable", DbType:="varchar(15)")> ByVal strComprobanteContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pLogIncluidoEnExtractoBanco", DbType:="bit")> ByVal LogIncluidoEnExtractoBanco As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pLogIncluidoEnExtractoCliente", DbType:="bit")> ByVal LogIncluidoEnExtractoCliente As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIdMoneda", DbType:="int")> ByVal lngIdMoneda As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsecutivosDocumento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strDocumento, strNombreConsecutivo, strDescripcion, logCuentaContable, strCuentaContable, strPermiteCliente, strTipoCuenta, strsucursalConciliacion, lngIdSucursalSuvalor, logConcepto, strComprobanteContable, LogIncluidoEnExtractoBanco, LogIncluidoEnExtractoCliente, lngIdMoneda, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsecutivosDocumento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosDocumentos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosDocumentos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsecutivosDocumento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsecutivosDocumento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_ConsecutivosDocumentos")>  _
	Public Function uspOyDNet_Buscador_ConsecutivosDocumentos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsecutivosDocumento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreConsecutivo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsecutivosDocumento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasContables_Actualizar")>  _
	Public Function uspOyDNet_Maestros_CuentasContables_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrNaturaleza As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrDctoAsociado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCuentaTerceros As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCCostos As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDCuentaContable As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrID, pstrNombre, pstrNaturaleza, pstrDctoAsociado, plogCuentaTerceros, plogCCostos, pstrUsuario, pintIDCuentaContable, infosesion, pintErrorPersonalizado)
		pintIDCuentaContable = CType(result.GetParameterValue(7),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasContables_Eliminar")>  _
	Public Function uspOyDNet_Maestros_CuentasContables_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCuentaContable As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCuentaContable, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasContables_Consultar")>  _
	Public Function uspOyDNet_Maestros_CuentasContables_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrID", DbType:="varchar(15)")> ByVal strID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNaturaleza", DbType:="char(1)")> ByVal strNaturaleza As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDctoAsociado", DbType:="varchar(2)")> ByVal strDctoAsociado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasContablesOy)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strID, strNombre, strNaturaleza, strDctoAsociado, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasContablesOy))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasContables_Filtrar")>  _
	Public Function uspOyDNet_Maestros_CuentasContables_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByRef pstrTipo As String) As ISingleResult(Of CuentasContablesOy)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado, pstrTipo)
		pstrTipo = CType(result.GetParameterValue(3),String)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasContablesOy))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesExternos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClientesExternos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrVendedor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDepositoExtranjero As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNumeroCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreTitular As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDClienteExt As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrVendedor, plngIDDepositoExtranjero, pstrNumeroCuenta, pstrNombreTitular, pstrUsuario, pintIDClienteExt, infosesion, pintErrorPersonalizado)
		pintIDClienteExt = CType(result.GetParameterValue(7),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesExternos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClientesExternos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClienteExt As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClienteExt, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesExternos_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClientesExternos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="char(17)")> ByVal lngID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrVendedor", DbType:="varchar(30)")> ByVal strVendedor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDDepositoExtranjero", DbType:="int")> ByVal lngIDDepositoExtranjero As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNumeroCuenta", DbType:="varchar(20)")> ByVal strNumeroCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreTitular", DbType:="varchar(50)")> ByVal strNombreTitular As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClientesExterno)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strVendedor, lngIDDepositoExtranjero, strNumeroCuenta, strNombreTitular, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClientesExterno))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesExternos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClientesExternos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClientesExterno)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClientesExterno))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosTesoreria_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConceptosTesoreria_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pLngIDConcepto As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrDetalle As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pStrAplicaA As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrCuentaContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrParametroContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNitTercero As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrManejaCliente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoMovimientoTesoreria As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrRetencion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrCuentaContableAux As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogManejaDiferido As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoMovimientoDiferido As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrCuentaContableCRDiferido As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrCuentaContableDBDiferido As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoNitDebito As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoNitCredito As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogManejaNotaDBCR As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoMovimientoCRDB As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoNitDiferidoDebito As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoNitDiferidoCredito As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pLngIDConcepto, pstrDetalle, pStrAplicaA, pstrUsuario, pstrCuentaContable, plogActivo, pstrParametroContable, pstrNitTercero, infosesion, pintErrorPersonalizado, pstrManejaCliente, pstrTipoMovimientoTesoreria, pstrRetencion, pstrCuentaContableAux, plogManejaDiferido, pstrTipoMovimientoDiferido, pstrCuentaContableCRDiferido, pstrCuentaContableDBDiferido, pstrTipoNitDebito, pstrTipoNitCredito, plogManejaNotaDBCR, pstrTipoMovimientoCRDB, pstrTipoNitDiferidoDebito, pstrTipoNitDiferidoCredito)
		pLngIDConcepto = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosTesoreria_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ConceptosTesoreria_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLngIDConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pLngIDConcepto, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosTesoreria_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConceptosTesoreria_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pLngIDConcepto", DbType:="int")> ByVal LngIDConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDetalle", DbType:="varchar(80)")> ByVal strDetalle As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pStrAplicaA", DbType:="varchar(15)")> ByVal StrAplicaA As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosTesoreri)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), LngIDConcepto, strDetalle, StrAplicaA, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosTesoreri))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosTesoreria_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConceptosTesoreria_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosTesoreri)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosTesoreri))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Consecutivos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Consecutivos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDOwner As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngMinimo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngMaximo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngActual As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdConsecutivos As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDOwner, pstrNombreConsecutivo, pstrDescripcion, plngMinimo, plngMaximo, plngActual, pstrUsuario, plogActivo, pintIdConsecutivos, infosesion, pintErrorPersonalizado)
		pintIdConsecutivos = CType(result.GetParameterValue(8),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Consecutivos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Consecutivos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdConsecutivos As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdConsecutivos, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Consecutivos_Consultar")>  _
	Public Function uspOyDNet_Maestros_Consecutivos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIDOwner", DbType:="varchar(15)")> ByVal strIDOwner As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreConsecutivo", DbType:="varchar(15)")> ByVal strNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Consecutivo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strIDOwner, strNombreConsecutivo, strDescripcion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Consecutivo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Consecutivos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Consecutivos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Consecutivo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Consecutivo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DepositosExtranjeros_Actualizar")>  _
	Public Function uspOyDNet_Maestros_DepositosExtranjeros_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPais As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, plngIDPais, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DepositosExtranjeros_Eliminar")>  _
	Public Function uspOyDNet_Maestros_DepositosExtranjeros_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2000)")> ByRef pstrMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrMsg, infosesion, pintErrorPersonalizado)
		pstrMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DepositosExtranjeros_Consultar")>  _
	Public Function uspOyDNet_Maestros_DepositosExtranjeros_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDPais", DbType:="int")> ByVal lngIDPais As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DepositosExtranjero)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, lngIDPais, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DepositosExtranjero))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DepositosExtranjeros_Filtrar")>  _
	Public Function uspOyDNet_Maestros_DepositosExtranjeros_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DepositosExtranjero)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DepositosExtranjero))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PrefijosFacturas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_PrefijosFacturas_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrPrefijo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNombreCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pStrTextoResolucion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pStrIntervaloRes As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pStrResponsabilidadIVA As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaVencimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAlarma As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCodigoResolucion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPrefijoFacturas As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngSucursalAplica As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(150)")> ByVal pstrResolucion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR (8000)")> ByVal pstrVigiladopor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaDesde As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaHasta As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngnumDiasPreviosNoti As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngnumCantConsPrevNoti As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngnumDiasPeriodicidadNoti As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR (8000)")> ByVal pstrDestinatariosNoti As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaUltNoti As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrPrefijo, pstrNombreConsecutivo, pstrDescripcion, pstrTipo, pstrNombreCuenta, pStrTextoResolucion, pStrIntervaloRes, pStrResponsabilidadIVA, pstrUsuario, pdtmFechaVencimiento, plogAlarma, plngIDCodigoResolucion, pintIDPrefijoFacturas, plngSucursalAplica, pstrResolucion, pstrVigiladopor, pdtmFechaDesde, pdtmFechaHasta, plngnumDiasPreviosNoti, plngnumCantConsPrevNoti, plngnumDiasPeriodicidadNoti, pstrDestinatariosNoti, pdtmFechaUltNoti, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PrefijosFacturas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_PrefijosFacturas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPrefijoFacturas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPrefijoFacturas, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PrefijosFacturas_Consultar")>  _
	Public Function uspOyDNet_Maestros_PrefijosFacturas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrPrefijo", DbType:="varchar(5)")> ByVal strPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of PrefijosFactura)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strPrefijo, strDescripcion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of PrefijosFactura))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PrefijosFacturas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_PrefijosFacturas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of PrefijosFactura)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of PrefijosFactura))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Empleados_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Empleados_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(250)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrLogin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCargo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAccesoOperadorBolsa As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrEmail As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(300)")> ByVal pstrMaquinas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoIdentificacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrNroDocumento, pstrIDReceptor, pstrLogin, plngIDCargo, plogAccesoOperadorBolsa, pstrUsuario, plogActivo, infosesion, pintErrorPersonalizado, pstrEmail, pstrMaquinas, pstrTipoIdentificacion)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Empleados_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Empleados_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Empleados_Consultar")>  _
	Public Function uspOyDNet_Maestros_Empleados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(250)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNroDocumento", DbType:="varchar(20)")> ByVal strNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Empleado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strNroDocumento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Empleado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Empleados_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Empleados_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Empleado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Empleado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Inhabilitados_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Inhabilitados_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(3)")> ByVal pstrtipoidentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal plngnrodocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrnombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidconcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmingreso As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrusuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDInhabilitado As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrtipoidentificacion, plngnrodocumento, pstrnombre, plngidconcepto, pdtmingreso, pstrusuario, pintIDInhabilitado, infosesion, pintErrorPersonalizado)
		pintIDInhabilitado = CType(result.GetParameterValue(6),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Inhabilitados_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Inhabilitados_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDInhabilitado As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDInhabilitado, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Inhabilitados_Consultar")>  _
	Public Function uspOyDNet_Maestros_Inhabilitados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngnrodocumento", DbType:="varchar(15)")> ByVal lngnrodocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrnombre", DbType:="varchar(50)")> ByVal strnombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Inhabilitado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngnrodocumento, strnombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Inhabilitado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Inhabilitados_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Inhabilitados_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Inhabilitado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Inhabilitado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosSucursales_Actualizar")>  _
	Public Function uspOyDNet_Maestros_UsuariosSucursales_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuarioApp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDUsuariosSucursales As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPrioridad As System.Nullable(Of System.int32)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuarioApp, pstrIDReceptor, pstrUsuario, pintIDUsuariosSucursales, infosesion, pintErrorPersonalizado, pintPrioridad)
		pintIDUsuariosSucursales = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosSucursales_Eliminar")>  _
	Public Function uspOyDNet_Maestros_UsuariosSucursales_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDUsuariosSucursales As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDUsuariosSucursales, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosSucursales_Consultar")>  _
	Public Function uspOyDNet_Maestros_UsuariosSucursales_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrUsuarioApp", DbType:="varchar(60)")> ByVal strUsuarioApp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIDReceptor", DbType:="varchar(4)")> ByVal strIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of UsuariosSucursale)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strUsuarioApp, strIDReceptor, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of UsuariosSucursale))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosSucursales_Filtrar")>  _
	Public Function uspOyDNet_Maestros_UsuariosSucursales_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of UsuariosSucursale)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of UsuariosSucursale))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesFondosPensiones_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClientesFondosPensiones_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDClientesfondospensiones As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, pintIDClientesfondospensiones, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDClientesfondospensiones = CType(result.GetParameterValue(1),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesFondosPensiones_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClientesFondosPensiones_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClientesfondospensiones As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClientesfondospensiones, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesFondosPensiones_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClientesFondosPensiones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ViewClientes_Exento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ViewClientes_Exento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesFondosPensiones_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClientesFondosPensiones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ViewClientes_Exento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ViewClientes_Exento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesFondosPensiones_Consultar_Builder")>  _
	Public Function uspOyDNet_Maestros_ClientesFondosPensiones_Consultar_Builder(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ViewClientes_Exentos_Consultar)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ViewClientes_Exentos_Consultar))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosConsecutivos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConceptosConsecutivos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal intlngIDConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDConceptosconsecutivos As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreConsecutivo, intlngIDConcepto, pstrUsuario, pintIDConceptosconsecutivos, infosesion, pintErrorPersonalizado)
		pintIDConceptosconsecutivos = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosConsecutivos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ConceptosConsecutivos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreConsecutivo", DbType:="varchar(15)")> ByVal strNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal intlngIDConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDConceptosconsecutivos As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strNombreConsecutivo, intlngIDConcepto, pintIDConceptosconsecutivos, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosConsecutivos_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConceptosConsecutivos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreConsecutivo", DbType:="varchar(15)")> ByVal strNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDetalleConcepto", DbType:="varchar(20)")> ByVal strDetalleConcepto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosConsecutivo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strNombreConsecutivo, strDetalleConcepto, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosConsecutivo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosConsecutivos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConceptosConsecutivos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosConsecutivo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosConsecutivo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosConsecutivos_Disponiblesconsecutivo")>  _
	Public Function uspOyDNet_Maestros_ConceptosConsecutivos_Disponiblesconsecutivo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of LlenarlistaConcepto)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrConsecutivo, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of LlenarlistaConcepto))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosConsecutivos_Disponiblesconcepto")>  _
	Public Function uspOyDNet_Maestros_ConceptosConsecutivos_Disponiblesconcepto(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intlngIDconcepto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of LlenarlistaConcepto)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), intlngIDconcepto, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of LlenarlistaConcepto))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosUsuarios_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosUsuarios_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuarioConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDConsecutivosUsuarios As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuarioConsecutivo, pstrNombreConsecutivo, pstrUsuario, pintIDConsecutivosUsuarios, infosesion, pintErrorPersonalizado)
		pintIDConsecutivosUsuarios = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosUsuarios_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosUsuarios_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuarioConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDConsecutivosUsuarios As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuarioConsecutivo, pstrNombreConsecutivo, pintIDConsecutivosUsuarios, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosUsuarios_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosUsuarios_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrUsuarioConsecutivo", DbType:="varchar(60)")> ByVal strUsuarioConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsecutivosUsuario)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strUsuarioConsecutivo, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsecutivosUsuario))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosUsuarios_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosUsuarios_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsecutivosUsuario)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsecutivosUsuario))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosUsuarios_Disponiblesconsecutivo")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosUsuarios_Disponiblesconsecutivo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ListaUsuario)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ListaUsuario))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosUsuarios_DisponiblesUsuarios")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosUsuarios_DisponiblesUsuarios(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ListaUsuario)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrConsecutivo, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ListaUsuario))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DiasNoHabiles_Actualizar")>  _
	Public Function uspOyDNet_Maestros_DiasNoHabiles_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmNoHabil As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdPais As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDDiaNoHabil As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pdtmNoHabil, plogActivo, pstrUsuario, plngIdPais, pintIDDiaNoHabil, infosesion, pintErrorPersonalizado)
		pintIDDiaNoHabil = CType(result.GetParameterValue(4),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DiasNoHabiles_Eliminar")>  _
	Public Function uspOyDNet_Maestros_DiasNoHabiles_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDiaNoHabil As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDDiaNoHabil, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DiasNoHabiles_Consultar")>  _
	Public Function uspOyDNet_Maestros_DiasNoHabiles_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdtmNoHabil", DbType:="datetime")> ByVal dtmNoHabil As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogActivo", DbType:="bit")> ByVal logActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIdPais", DbType:="Int")> ByVal lngIdPais As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DiasNoHabile)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), dtmNoHabil, logActivo, lngIdPais, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DiasNoHabile))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DiasNoHabiles_Filtrar")>  _
	Public Function uspOyDNet_Maestros_DiasNoHabiles_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DiasNoHabile)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DiasNoHabile))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DiasNoHabiles_ValoresPorDefecto")>  _
	Public Function uspOyDNet_Maestros_DiasNoHabiles_ValoresPorDefecto(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Tarifas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Tarifas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal Aprobacion As Byte, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pStrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDTarifas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), Aprobacion, plngID, pStrNombre, pstrUsuario, pintIDTarifas, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(1),Integer)
		pintIDTarifas = CType(result.GetParameterValue(4),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Tarifas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Tarifas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal Aprobacion As Byte, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pStrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDTarifas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), Aprobacion, pStrNombre, pstrUsuario, plngID, strMsg, pintIDTarifas, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Tarifas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Tarifas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal Filtro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pStrNombre", DbType:="varchar(50)")> ByVal StrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Tarifa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), Filtro, lngID, StrNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Tarifa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Tarifas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Tarifas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Tarifa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Tarifa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleTarifas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_DetalleTarifas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal Aprobacion As Byte, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaValor As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurValor As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDDetalleTarifas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), Aprobacion, plngID, pdtmFechaValor, pcurValor, pstrUsuario, pintIDDetalleTarifas, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(1),Integer)
		pintIDDetalleTarifas = CType(result.GetParameterValue(5),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleTarifas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_DetalleTarifas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal Aprobacion As Byte, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaValor As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDetalleTarifas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), Aprobacion, plngID, pdtmFechaValor, pstrUsuario, pintIDDetalleTarifas, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleTarifas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_DetalleTarifas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DetalleTarifa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DetalleTarifa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleTarifas_Tarifa_Consultar")>  _
	Public Function uspOyDNet_Maestros_DetalleTarifas_Tarifa_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal Filtro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DetalleTarifa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), Filtro, lngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DetalleTarifa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Monedas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Monedas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogDivideDolar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintNroDecimales As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintDiasCumplimiento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorBaseIVA As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogMercadoIntegrado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByVal pstrCodDivisa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pStrCodSuper As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrNacionalidad As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrID, pstrDescripcion, plogDivideDolar, pintNroDecimales, pintDiasCumplimiento, pdblValorBaseIVA, pstrUsuario, plogMercadoIntegrado, pstrCodDivisa, infosesion, pintErrorPersonalizado, pStrCodSuper, pstrNacionalidad)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Validar_Monedas_Validar")>  _
	Public Function uspOyDNet_Validar_Monedas_Validar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdMoneda As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrCodigoMoneda As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef pstrMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdMoneda, pstrCodigoMoneda, pstrMsg, infosesion, pintErrorPersonalizado)
		pstrMsg = CType(result.GetParameterValue(2),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Monedas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Monedas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Monedas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Monedas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Moneda)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, pstrID, pstrDescripcion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Moneda))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Monedas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Monedas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Moneda)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Moneda))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_MonedaValor_Moneda_Consultar")>  _
	Public Function uspOyDNet_Maestros_MonedaValor_Moneda_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDMoneda As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of MonedaValo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDMoneda, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of MonedaValo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_MonedaValor_Actualizar")>  _
	Public Function uspOyDNet_Maestros_MonedaValor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngIDMoneda As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaValor As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurValorMonedaLocal As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurBaseIVADiario As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDMonedavalor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pNroRegistro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDMoneda, pdtmFechaValor, pcurValorMonedaLocal, pcurBaseIVADiario, pstrUsuario, pintIDMonedavalor, pNroRegistro, infosesion, pintErrorPersonalizado)
		plngIDMoneda = CType(result.GetParameterValue(0),Integer)
		pintIDMonedavalor = CType(result.GetParameterValue(5),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_MonedaValor_Eliminar")>  _
	Public Function uspOyDNet_Maestros_MonedaValor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDMonedavalor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDMonedavalor, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_MonedaValor_Filtrar")>  _
	Public Function uspOyDNet_Maestros_MonedaValor_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of MonedaValo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of MonedaValo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoPersonaPorDcto_Actualizar")>  _
	Public Function uspOyDNet_Maestros_TipoPersonaPorDcto_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDTipoPersona As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintmenored As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintmayored As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrTipoIdentificacion, plngIDTipoPersona, pintmenored, pintmayored, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoPersonaPorDcto_Eliminar")>  _
	Public Function uspOyDNet_Maestros_TipoPersonaPorDcto_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoPersonaPorDcto_Consultar")>  _
	Public Function uspOyDNet_Maestros_TipoPersonaPorDcto_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TipoPersonaPorDct)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TipoPersonaPorDct))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TipoPersonaPorDcto_Filtrar")>  _
	Public Function uspOyDNet_Maestros_TipoPersonaPorDcto_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TipoPersonaPorDct)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TipoPersonaPorDct))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Mesas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Mesas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCcostos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pStrCuentaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdPoblacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrGerenteMesa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdMesa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrCcostos, pStrCuentaContable, plngIdPoblacion, pstrGerenteMesa, pstrUsuario, pintIdMesa, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		pintIdMesa = CType(result.GetParameterValue(7),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Mesas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Mesas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdMesa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdMesa, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Mesas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Mesas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Mesa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Mesa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Mesas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Mesas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Mesa)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Mesa))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Receptores_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Receptores_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngSucReceptor As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoReceptor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCcostos As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrLogin As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrSucursalContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLiderMesa As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdMesa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrIDReceptorSafyr As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdReceptores As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdOficina As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngSucReceptor, pstrID, pstrNombre, plogActivo, pstrTipoReceptor, pstrCcostos, pstrLogin, pstrSucursalContable, plogLiderMesa, plngIdMesa, pstrNroDocumento, pstrEMail, pstrIDReceptorSafyr, pstrUsuario, pintIdReceptores, plngIdOficina, infosesion, pintErrorPersonalizado)
		pintIdReceptores = CType(result.GetParameterValue(14),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Receptores_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Receptores_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdReceptores As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdReceptores, pstrID, pstrAccion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Receptores_Consultar")>  _
	Public Function uspOyDNet_Maestros_Receptores_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngSucReceptor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdMesa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrID", DbType:="varchar(4)")> ByVal strID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Receptore)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngSucReceptor, plngIdMesa, pstrNombre, strID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Receptore))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Receptores_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Receptores_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Receptore)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Receptore))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Oficina_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Oficina_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNomOficina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdSucursal As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pbySeleccionada As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCentroCostos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrTelefono As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdCiudad As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreOficina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdOficinas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrNomOficina, plngIdSucursal, pbySeleccionada, pstrCentroCostos, pstrTelefono, plngIdCiudad, pstrNombreOficina, pstrUsuario, pintIdOficinas, infosesion, pintErrorPersonalizado)
		pintIdOficinas = CType(result.GetParameterValue(9),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Oficina_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Oficina_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Oficinas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Oficinas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngOficina As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNomOficina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Oficinas)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngOficina, pstrNomOficina, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Oficinas))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Oficinas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Oficinas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Oficinas)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Oficinas))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spConsultarCCosto_ENCUENTA")>  _
	Public Function spConsultarCCosto_ENCUENTA(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal pstrID As String) As ISingleResult(Of tmpCCostos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrID)
		Return CType(result.ReturnValue,ISingleResult(Of tmpCCostos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ReceptoresSistemas_Receptore_Consultar")>  _
	Public Function uspOyDNet_Maestros_ReceptoresSistemas_Receptore_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal strID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ReceptoresSistema)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ReceptoresSistema))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ReceptoresSistemas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ReceptoresSistemas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCodigoSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrValorSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDReceptoresSistemas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pcurMontoLimite As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrID, pstrCodigoSistema, pstrValorSistema, pstrUsuario, pintIDReceptoresSistemas, pcurMontoLimite, infosesion, pintErrorPersonalizado)
		pintIDReceptoresSistemas = CType(result.GetParameterValue(4),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ReceptoresSistemas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ReceptoresSistemas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDReceptoresSistemas As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCodigoSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDReceptoresSistemas, pstrAccion, pstrIDReceptor, pstrCodigoSistema, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ReceptoresSistemas_Consultar")>  _
	Public Function uspOyDNet_Maestros_ReceptoresSistemas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrID", DbType:="varchar(4)")> ByVal strID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigoSistema", DbType:="varchar(20)")> ByVal strCodigoSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ReceptoresSistema)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strID, strCodigoSistema, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ReceptoresSistema))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ReceptoresSistemas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ReceptoresSistemas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ReceptoresSistema)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ReceptoresSistema))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosFechaCierre_Actualizar")>  _
	Public Function uspOyDNet_Maestros_UsuariosFechaCierre_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuarioApp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCierre As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuarioApp, pstrModulo, pdtmCierre, pstrUsuario, plngID, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(4),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosFechaCierre_Eliminar")>  _
	Public Function uspOyDNet_Maestros_UsuariosFechaCierre_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuarioApp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrUsuarioApp, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosFechaCierre_Consultar")>  _
	Public Function uspOyDNet_Maestros_UsuariosFechaCierre_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrUsuarioApp", DbType:="varchar(60)")> ByVal strUsuarioApp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of UsuariosFechaCierr)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strUsuarioApp, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of UsuariosFechaCierr))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_UsuariosFechaCierre_Filtrar")>  _
	Public Function uspOyDNet_Maestros_UsuariosFechaCierre_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of UsuariosFechaCierr)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of UsuariosFechaCierr))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Receptores_ConsultarEliminar")>  _
	Public Function uspOyDNet_Maestros_Receptores_ConsultarEliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsultaExiste)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrID, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsultaExiste))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CodigosOtrosSistemas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_CodigosOtrosSistemas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrCodigoSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, plngIDComitente, pstrSistema, pstrCodigoSistema, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngId = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CodigosOtrosSistemas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_CodigosOtrosSistemas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrCodigoSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, plngIDComitente, pstrSistema, pstrCodigoSistema, pstrUsuario, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(5),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CodigosOtrosSistemas_Consultar")>  _
	Public Function uspOyDNet_Maestros_CodigosOtrosSistemas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigoSistema", DbType:="varchar(30)")> ByVal strCodigoSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CodigosOtrosSistema)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDComitente, strCodigoSistema, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CodigosOtrosSistema))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CodigosOtrosSistemas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_CodigosOtrosSistemas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CodigosOtrosSistema)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CodigosOtrosSistema))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Instalacion_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Instalacion_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdPoblacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrLinea1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca11 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca21 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca31 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca41 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca12 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca22 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca32 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(80)")> ByVal pstrEnca42 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(135)")> ByVal pstrObservacion1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(135)")> ByVal pstrObservacion2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogClientesAutomatico As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogClientesCedula As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaFac As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaFacBca As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaTit As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaEgr As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaCaj As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaNot As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaExt As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogRCLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCELineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogNCLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogTITLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFacLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFacBcaLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEXTLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pLogReceptores As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFechaOrden As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogUsuario As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogValSobregiroCE As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrResolucion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblIvaComision As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNombreCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblSerBolsaFijo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblSerBolsaFijoAcciones As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTopeSerBolsaFijoAcciones As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEncaCus As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCusLineas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogUsuarioEntregas As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogUsuarioRecibido As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogUsuarioCustodia As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogUsuarioSobrantes As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIVA As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintRteFuente As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNitComisionista As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrServidor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrBaseDatos As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrOwner As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrServidorBus As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrBaseDatosBus As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrOwnerBus As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCompania As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrDepositoExtranjero As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrCustodioLocal As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIdContraparteOTC As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorContrato As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngCodigoIMC As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblReteIva As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorInicial As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pintGMS As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCargarReceptorCliente As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCierre As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrUltimaVersion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaInicial As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAplazarOTC As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCuentasBancarias As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogRepresentanteLegal As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaLimite As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmActualizacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiaSemana As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentajeGarantia As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTarifaRteFuente As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogImpDocTesoreria As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoEntidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrCodigoEntidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblRteComision As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblRteICA As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrCodigoEntidadUIAF As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrTipoEntidadUIAF As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogValidaCuentaSuperVal As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogValSobregiroNC As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrTipo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCtaContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCCosto As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCtaContableContraparte As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCCostoContraparte As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogReporteExtractoClientePedirRangos As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrCtaContableClientes As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrURL As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrPath As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogOrdenantes As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrReceptorSuc As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogClientesAgrupados As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrPathActualiza As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogDatosFinancieros As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogConceptoDetalleTesoreriaManual As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrNroUsu As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrServidorNacional As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCompania As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCompaniaM As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrMulticuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pdblMaximoValor As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrDefensorCliente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(250)")> ByVal pstrUrlReportesBus As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(250)")> ByVal pstrRutaReportesBus As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblGMFInferior As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCtaContableContraparteNotasCxC As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrtipoNotasCxC As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallmoney")> ByVal pcurPorcentajeNoConstitutivoDeRenta As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCtaContableTrasladoDB As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrCtaContableTrasladoCR As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDInstalacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDBolsa, plngIdPoblacion, pstrLinea1, pstrEnca11, pstrEnca21, pstrEnca31, pstrEnca41, pstrEnca12, pstrEnca22, pstrEnca32, pstrEnca42, pstrObservacion1, pstrObservacion2, plogClientesAutomatico, plogClientesCedula, plogEncaFac, plogEncaFacBca, plogEncaTit, plogEncaEgr, plogEncaCaj, plogEncaNot, plogEncaExt, plogRCLineas, plogCELineas, plogNCLineas, plogTITLineas, plogFacLineas, plogFacBcaLineas, plogEXTLineas, pLogReceptores, plogFechaOrden, plogUsuario, plogValSobregiroCE, pstrResolucion, pdblIvaComision, pstrNombreCuenta, pdblSerBolsaFijo, pdblSerBolsaFijoAcciones, pdblTopeSerBolsaFijoAcciones, plogEncaCus, plogCusLineas, plogUsuarioEntregas, plogUsuarioRecibido, plogUsuarioCustodia, plogUsuarioSobrantes, pintIVA, pintRteFuente, pstrNitComisionista, pstrServidor, pstrBaseDatos, pstrOwner, pstrServidorBus, pstrBaseDatosBus, pstrOwnerBus, plngCompania, pstrDepositoExtranjero, pstrCustodioLocal, plngIdContraparteOTC, pdblValorContrato, plngCodigoIMC, pdblReteIva, pdblValorInicial, pintGMS, plogCargarReceptorCliente, pdtmCierre, pstrUltimaVersion, pdblTasaInicial, plogAplazarOTC, plogCuentasBancarias, plogRepresentanteLegal, pdtmFechaLimite, pdtmActualizacion, pstrUsuario, plngDiaSemana, pdblPorcentajeGarantia, pdblTarifaRteFuente, plogImpDocTesoreria, pstrTipoEntidad, pstrCodigoEntidad, pdblRteComision, pdblRteICA, pstrCodigoEntidadUIAF, pstrTipoEntidadUIAF, plogValidaCuentaSuperVal, plogValSobregiroNC, pstrTipo, pstrCtaContable, pstrCCosto, pstrCtaContableContraparte, pstrCCostoContraparte, plogReporteExtractoClientePedirRangos, pstrCtaContableClientes, pstrURL, pstrPath, plogOrdenantes, pstrReceptorSuc, plogClientesAgrupados, pstrPathActualiza, plogDatosFinancieros, plogConceptoDetalleTesoreriaManual, pstrNroUsu, pstrServidorNacional, pstrCompania, pstrCompaniaM, pstrMulticuenta, pdblMaximoValor, pstrDefensorCliente, pstrUrlReportesBus, pstrRutaReportesBus, pdblGMFInferior, pstrCtaContableContraparteNotasCxC, pstrtipoNotasCxC, pcurPorcentajeNoConstitutivoDeRenta, pstrCtaContableTrasladoDB, pstrCtaContableTrasladoCR, pintIDInstalacion, infosesion, pintErrorPersonalizado)
		pintIDInstalacion = CType(result.GetParameterValue(115),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Instalacion_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Instalacion_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDInstalacion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDInstalacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Instalacion_Consultar")>  _
	Public Function uspOyDNet_Maestros_Instalacion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Instalacio)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Instalacio))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Instalacion_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Instalacion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Instalacio)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Instalacio))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Actualizar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidCuentaDeceval As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrConector1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdBenef1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal plngNroDocBenef1 As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pStrConector2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdBenef2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal plngNroDocBenef2 As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrDeposito As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pStrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCuentaPorCliente As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pidIntermedia As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrCuentaPrincipalDCV As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActiva As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDCuentasDeceval As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrPrefijo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoIdComitente, pstrNroDocumento, plngIDComitente, plngidCuentaDeceval, pstrConector1, pstrTipoIdBenef1, plngNroDocBenef1, pStrConector2, pstrTipoIdBenef2, plngNroDocBenef2, pstrDeposito, pStrUsuario, plogCuentaPorCliente, pidIntermedia, pstrCuentaPrincipalDCV, plogActiva, pintIDCuentasDeceval, pstrPrefijo, infosesion, pintErrorPersonalizado)
		pintIDCuentasDeceval = CType(result.GetParameterValue(16),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Eliminar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidCuentaDeceval As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCuentasDeceval As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, plngidCuentaDeceval, pintIDCuentasDeceval, pstrDeposito, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Consultar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidCuentaDeceval As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasDecevalPorAgrupado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDComitente, plngidCuentaDeceval, pstrDeposito, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasDecevalPorAgrupado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Filtrar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasDecevalPorAgrupado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasDecevalPorAgrupado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Deceval_Consultar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Deceval_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipoIdentificacion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasDeceval)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, pstrTipoIdentificacion, pstrNroDocumento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasDeceval))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Consultar_Beneficiarios")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Consultar_Beneficiarios(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ListaBeneficiarios)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ListaBeneficiarios))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Unificar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Unificar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDRetira As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDUnifica As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDRetira, pstrAccion, plngIDUnifica, pstrDeposito, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Consultar_Unificar")>  _
	Public Function uspOyDNet_Maestros_CuentasDecevalPorAgrupador_Consultar_Unificar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDRetira As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsultaNombre)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDRetira, pstrAccion, pstrDeposito, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsultaNombre))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ordenes_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Ordenes_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogOrdinaria As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(3)")> ByVal pstrObjeto As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogRepo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogRenovacion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDOrdenante As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblComisionPactada As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(3)")> ByVal pstrCondicionesNegociacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoLimite As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrFormaPago As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmOrden As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVigenciaHasta As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrInstrucciones As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrNotas As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrEstado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEstado As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmSistema As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrUBICACIONTITULO As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoInversion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPreliquidacion As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDProducto As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblCostoAdicionalesOrden As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdBolsa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(60)")> ByVal pstrUsuarioIngreso As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrNegocioEspecial As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEca As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrOrdenEscrito As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngConsecutivoSwap As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrEjecucion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrDuracion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal pdblCantidadMinima As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal pdblPrecioStop As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal pdblCantidadVisible As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8)")> ByVal pstrHoraVigencia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrEstadoLEO As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuarioOperador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrCanalRecepcion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrMedioVerificable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaHoraRecepcion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrSitioIngreso As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plogSeteada As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrFolio As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOrdenPreOrdenes As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngNroOrdenPreOrdenes As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogImpresion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngImpresiones As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPreordenDetalle As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrEstadoOrdenBus As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDOrdenes As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrIpOrigen As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, plngVersion, plogOrdinaria, pstrObjeto, plogRepo, plogRenovacion, plngIDComitente, plngIDOrdenante, pdblComisionPactada, pstrCondicionesNegociacion, pstrTipoLimite, pstrFormaPago, pdtmOrden, pdtmVigenciaHasta, pstrInstrucciones, pstrNotas, pstrEstado, pdtmEstado, pdtmSistema, pstrUBICACIONTITULO, pstrTipoInversion, pstrUsuario, plngIDPreliquidacion, plngIDProducto, pdblCostoAdicionalesOrden, plngIdBolsa, pstrUsuarioIngreso, pstrNegocioEspecial, plogEca, pstrOrdenEscrito, plngConsecutivoSwap, pstrEjecucion, pstrDuracion, pdblCantidadMinima, pdblPrecioStop, pdblCantidadVisible, pstrHoraVigencia, pstrEstadoLEO, pstrUsuarioOperador, pstrCanalRecepcion, pstrMedioVerificable, pdtmFechaHoraRecepcion, pstrSitioIngreso, plogSeteada, pstrFolio, pstrTipoOrdenPreOrdenes, plngNroOrdenPreOrdenes, plogImpresion, plngImpresiones, pintPreordenDetalle, pstrEstadoOrdenBus, pintIDOrdenes, pstrIpOrigen, infosesion, pintErrorPersonalizado)
		pintIDOrdenes = CType(result.GetParameterValue(53),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ordenes_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Ordenes_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDOrdenes As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDOrdenes, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ordenes_Consultar")>  _
	Public Function uspOyDNet_Maestros_Ordenes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Ordene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Ordene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ordenes_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Ordenes_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Ordene)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Ordene))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ResolucionesFacturas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ResolucionesFacturas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngIDCodigoResolucion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bigint")> ByVal plngIDNumeroResolucion As System.Nullable(Of Long), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(260)")> ByVal pstrDescripcionResolucion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDCodigoResolucion, plngIDNumeroResolucion, pstrDescripcionResolucion, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngIDCodigoResolucion = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ResolucionesFacturas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ResolucionesFacturas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDCodigoResolucion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDCodigoResolucion, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ResolucionesFacturas_Consultar")>  _
	Public Function uspOyDNet_Maestros_ResolucionesFacturas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDNumeroResolucion", DbType:="bigint")> ByVal lngIDNumeroResolucion As System.Nullable(Of Long), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(260)")> ByVal pstrDescripcionResolucion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ResolucionesFactura)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDNumeroResolucion, pstrDescripcionResolucion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ResolucionesFactura))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ResolucionesFacturas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ResolucionesFacturas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ResolucionesFactura)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ResolucionesFactura))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Cuentasbancarias_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Cuentasbancarias_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreSucursal As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNroCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrFax1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrFax2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrDireccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrInternet As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogChequeraAutomatica As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNombreConsecutivo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPoblacion As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDepartamento As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPais As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreGerente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreCajero As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombrePortero As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCreacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDOwner As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroCtaCtble As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCtaActiva As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreReporte As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCobroGFM As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(16)")> ByVal pstrTipoCta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdCodBanco As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDBanco As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdMoneda As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngidSucursal As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLngIdFormato As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngActual As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pLngIdFormatoActual As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCompania As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NULL")> ByVal pxmlDetalleGrid As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCuentaContableAuxiliar As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngTipoCuentaRecaudadora As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrNombreSucursal, pstrNroCuenta, pstrTelefono1, pstrTelefono2, pstrFax1, pstrFax2, pstrDireccion, pstrInternet, plogChequeraAutomatica, pstrNombreConsecutivo, plngIDPoblacion, plngIDDepartamento, plngIDPais, pstrNombreGerente, pstrNombreCajero, pstrNombrePortero, pdtmCreacion, pstrIDOwner, pstrNroCtaCtble, plogCtaActiva, pstrUsuario, pstrNombreReporte, plogCobroGFM, pstrTipoCta, pstrTipoCuenta, plngIdCodBanco, pintIDBanco, plngIdMoneda, plngidSucursal, pLngIdFormato, plngActual, pLngIdFormatoActual, pintIDCompania, pxmlDetalleGrid, infosesion, pintErrorPersonalizado, pstrCuentaContableAuxiliar, plngTipoCuentaRecaudadora, plngIDComitente)
		pintIDBanco = CType(result.GetParameterValue(28),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Cuentasbancarias_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Cuentasbancarias_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strMsg, plngId, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(0),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Cuentasbancarias_Consultar")>  _
	Public Function uspOyDNet_Maestros_Cuentasbancarias_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreSucursal", DbType:="varchar(50)")> ByVal strNombreSucursal As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDCia", DbType:="int")> ByVal lngIDCia As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrNroCuenta As String) As ISingleResult(Of Banco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strNombreSucursal, lngIDCia, infosesion, pintErrorPersonalizado, pstrNroCuenta)
		Return CType(result.ReturnValue,ISingleResult(Of Banco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Cuentasbancarias_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Cuentasbancarias_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Banco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Banco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_SaldosBancoMes_Consultar")>  _
	Public Function uspOyDNet_Maestros_SaldosBancoMes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of SaldosBancoMes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintBanco, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of SaldosBancoMes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_MovimientosBancos_Consultar")>  _
	Public Function uspOyDNet_Maestros_MovimientosBancos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of MovimientosBancos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDBanco, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of MovimientosBancos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfigLEO_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConfigLEO_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIndex As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrUsuario, pintIndex, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfigLEO_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ConfigLEO_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDConfigLEO As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDConfigLEO, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfigLEO_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConfigLEO_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConfigLE)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConfigLE))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfigLEO_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConfigLEO_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConfigLE)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConfigLE))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfigLEO_Filtrar_Disponible")>  _
	Public Function uspOyDNet_Maestros_ConfigLEO_Filtrar_Disponible(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ListaConfigLEO)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ListaConfigLEO))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Usuarios_Seleccionar_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Usuarios_Seleccionar_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrLogin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrLogin, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Usuarios_Seleccionar_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Usuarios_Seleccionar_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Usuarios_Seleccionar_Consultar")>  _
	Public Function uspOyDNet_Maestros_Usuarios_Seleccionar_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngId", DbType:="int")> ByVal lngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrLogin", DbType:="varchar(60)")> ByVal strLogin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Usuarios_Selecciona)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngId, strLogin, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Usuarios_Selecciona))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Usuarios_Seleccionar_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Usuarios_Seleccionar_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Usuarios_Selecciona)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Usuarios_Selecciona))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClienteAgrupador_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClienteAgrupador_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDAgrupador As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngidComitenteLider As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreAgrupador As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDClienteAgrupador As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDAgrupador, pstrNroDocumento, pstrTipoIdentificacion, plngidComitenteLider, pstrNombreAgrupador, pstrNombre, pstrUsuario, pintIDClienteAgrupador, infosesion, pintErrorPersonalizado)
		pintIDClienteAgrupador = CType(result.GetParameterValue(7),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClienteAgrupador_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClienteAgrupador_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClienteAgrupador As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClienteAgrupador, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClienteAgrupador_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClienteAgrupador_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNroDocumento", DbType:="varchar(15)")> ByVal strNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombreAgrupador", DbType:="varchar(50)")> ByVal strNombreAgrupador As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClienteAgrupado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strNroDocumento, strNombreAgrupador, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClienteAgrupado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClienteAgrupador_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClienteAgrupador_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClienteAgrupado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClienteAgrupado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleClienteAgrupador_Actualizar")>  _
	Public Function uspOyDNet_Maestros_DetalleClienteAgrupador_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDireccionEnvio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstridReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrIDSucCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDDetalleClienteAgrupador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngId, pstrNombre, pstrDireccionEnvio, pstridReceptor, pstrIDSucCliente, pintIDDetalleClienteAgrupador, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleClienteAgrupador_Eliminar")>  _
	Public Function uspOyDNet_Maestros_DetalleClienteAgrupador_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDDetalleClienteAgrupador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDDetalleClienteAgrupador, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleClienteAgrupador_Consultar")>  _
	Public Function uspOyDNet_Maestros_DetalleClienteAgrupador_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngId", DbType:="char(17)")> ByVal lngId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDireccionEnvio", DbType:="varchar(50)")> ByVal strDireccionEnvio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstridReceptor", DbType:="varchar(4)")> ByVal stridReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIDSucCliente", DbType:="varchar(3)")> ByVal strIDSucCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DetalleClienteAgrupado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngId, strNombre, strDireccionEnvio, stridReceptor, strIDSucCliente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DetalleClienteAgrupado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleClienteAgrupador_Filtrar")>  _
	Public Function uspOyDNet_Maestros_DetalleClienteAgrupador_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DetalleClienteAgrupado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DetalleClienteAgrupado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionesCiiu_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionesCiiu_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngTipo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPerteneceA As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDClasificacionCiiu As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, plngTipo, plngIDPerteneceA, pstrUsuario, pintIDClasificacionCiiu, infosesion, pintErrorPersonalizado)
		pintIDClasificacionCiiu = CType(result.GetParameterValue(5),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionesCiiu_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionesCiiu_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClasificacionCiiu As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClasificacionCiiu, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionesCiiu_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionesCiiu_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(100)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngTipo", DbType:="int")> ByVal lngTipo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDPerteneceA", DbType:="int")> ByVal lngIDPerteneceA As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClasificacionesCii)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, lngTipo, lngIDPerteneceA, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClasificacionesCii))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionesCiiu_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionesCiiu_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClasificacionesCii)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClasificacionesCii))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ClasificacionesCIIUPorTipo_Consultar")>  _
	Public Function usp_ClasificacionesCIIUPorTipo_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngTipo", DbType:="int")> ByVal lngTipo As Integer) As ISingleResult(Of ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngTipo)
		Return CType(result.ReturnValue,ISingleResult(Of ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BolsaCostos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_BolsaCostos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDBolsaCostos As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentajeCosto As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblCostoPesos As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActualizado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smalldatetime")> ByVal pdtmActualizacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBolsaCostos, plngId, pstrDescripcion, pdblPorcentajeCosto, pdblCostoPesos, plogActualizado, pstrUsuario, pdtmActualizacion, infosesion, pintErrorPersonalizado)
		pintIDBolsaCostos = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BolsaCostos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_BolsaCostos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDBolsaCostos As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBolsaCostos, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BolsaCostos_Consultar")>  _
	Public Function uspOyDNet_Maestros_BolsaCostos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngId", DbType:="int")> ByVal lngId As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="Varchar(25)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BolsaCosto)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngId, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BolsaCosto))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BolsaCostos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_BolsaCostos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BolsaCosto)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BolsaCosto))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BloqueoSaldoClientes_Actualizar")>  _
	Public Function uspOyDNet_Maestros_BloqueoSaldoClientes_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngIdRegistro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrMotivoBloqueoSaldo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurValorBloqueado As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrNaturaleza As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaBloqueo As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(255)")> ByVal pstrDetalleBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCompania As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEncargo As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdRegistro, plngIDComitente, pstrMotivoBloqueoSaldo, pcurValorBloqueado, pstrNaturaleza, pdtmFechaBloqueo, pstrDetalleBloqueo, pintIDCompania, pintIDEncargo, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngIdRegistro = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BloqueoSaldoClientes_Eliminar")>  _
	Public Function uspOyDNet_Maestros_BloqueoSaldoClientes_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BloqueoSaldoClientes_Consultar")>  _
	Public Function uspOyDNet_Maestros_BloqueoSaldoClientes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNaturaleza", DbType:="varchar(2)")> ByVal strNaturaleza As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BloqueoSaldoCliente)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDComitente, strNaturaleza, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BloqueoSaldoCliente))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BloqueoSaldoClientes_Filtrar")>  _
	Public Function uspOyDNet_Maestros_BloqueoSaldoClientes_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BloqueoSaldoCliente)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BloqueoSaldoCliente))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdBancoNacional As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDBancosNacionalesR As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDBanco, plngIdBancoNacional, pstrUsuario, pintIDBancosNacionalesR, infosesion, pintErrorPersonalizado)
		pintIDBancosNacionalesR = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDBancosNacionalesR As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBancosNacionalesR, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Consultar")>  _
	Public Function uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDBanco", DbType:="int")> ByVal lngIDBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Bancos_BancosNacionalesRelacionado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDBanco, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Bancos_BancosNacionalesRelacionado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Bancos_BancosNacionalesRelacionados_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Bancos_BancosNacionalesRelacionado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Bancos_BancosNacionalesRelacionado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BancosRelacionados_Asociados")>  _
	Public Function uspOyDNet_Maestros_BancosRelacionados_Asociados(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDBanco", DbType:="int")> ByVal lngIDBanco As Integer) As ISingleResult(Of ListaBancosRelacionadosAsociados)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDBanco)
		Return CType(result.ReturnValue,ISingleResult(Of ListaBancosRelacionadosAsociados))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ComisionEspecies_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ComisionEspecies_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="decimal")> ByVal pdblComision As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="decimal")> ByVal pdblPorcentajeComision As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrIDEspecie, pdblComision, pdblPorcentajeComision, pstrUsuario, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ComisionEspecies_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ComisionEspecies_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, infosesion, pstrUsuario, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ComisionEspecies_Consultar")>  _
	Public Function uspOyDNet_Maestros_ComisionEspecies_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIDEspecie", DbType:="varchar(15)")> ByVal strIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ComisionEspecie)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strIDEspecie, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ComisionEspecie))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ComisionEspecies_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ComisionEspecies_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ComisionEspecie)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ComisionEspecie))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ValidarEliminarRegistro")>  _
	Public Function uspOyDNet_Maestros_ValidarEliminarRegistro(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrTablas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrCampos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrValores As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ValidacionEliminarRegistro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTablas, pstrCampos, pstrValores, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ValidacionEliminarRegistro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ValidarDuplicidadRegistro")>  _
	Public Function uspOyDNet_Maestros_ValidarDuplicidadRegistro(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrCampos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrValores As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ValidacionEliminarRegistro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreTabla, pstrCampos, pstrValores, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ValidacionEliminarRegistro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spLLenarCboContraparteOTC_OyDNet")>  _
	Public Function spLLenarCboContraparteOTC_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNITComisionista As String) As ISingleResult(Of ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNITComisionista)
		Return CType(result.ReturnValue,ISingleResult(Of ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_Valida4porlmil_OyDNet")>  _
	Public Function usp_Valida4porlmil_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByRef strvalor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrParametro, strvalor)
		strvalor = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_Plantilla_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Plantilla_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrMensaje As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pstrCodigo, pstrMensaje, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintID = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_Plantillas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Plantillas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Plantilla)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Plantilla))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_Plantilla_Consultar")>  _
	Public Function uspOyDNet_Maestros_Plantilla_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Plantilla)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pstrCodigo, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Plantilla))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_Plantillas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Plantillas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspListaMetapalabras")>  _
	Public Function uspListaMetapalabras(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal strSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of tblMetapalabras)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strSistema, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of tblMetapalabras))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_PlantillaBanco_Actualizar")>  _
	Public Function uspOyDNet_Maestros_PlantillaBanco_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pIdBanco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pIdPlantilla As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NChar(10)")> ByVal pstrExtension As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pIdBanco, pIdPlantilla, pstrDescripcion, pstrExtension, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintID = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_PlantillaBanco_Consultar")>  _
	Public Function uspOyDNet_Maestros_PlantillaBanco_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pIdBanco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pIdPlantilla As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NChar(10)")> ByVal pstrExtension As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of PlantillaBanco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pIdBanco, pIdPlantilla, pstrDescripcion, pstrExtension, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of PlantillaBanco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_PlantillaBanco_Eliminar")>  _
	Public Function uspOyDNet_Maestros_PlantillaBanco_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="Notificacion.uspOyDNet_Maestros_PlantillaBanco_Filtrar")>  _
	Public Function uspOyDNet_Maestros_PlantillaBanco_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of PlantillaBanco)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of PlantillaBanco))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ConsultarSaldoBloqueoRecursosclientes_OyDNet")>  _
	Public Function usp_ConsultarSaldoBloqueoRecursosclientes_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByRef pcurSaldo As System.Nullable(Of System.Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEncargo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFecha As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pcurSaldo, plngIDComitente, pintIDEncargo, pdtmFecha, pstrInfoSesion, pintErrorPersonalizado)
		pcurSaldo = CType(result.GetParameterValue(0),System.Nullable(Of System.Decimal))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DestinoInversion_Actualizar")>  _
	Public Function uspOyDNet_Maestros_DestinoInversion_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDDestinoInversion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDestino As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pStrNombreDestino As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDDestinoInversion, plngIDDestino, pStrNombreDestino, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDDestinoInversion = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DestinoInversion_Eliminar")>  _
	Public Function uspOyDNet_Maestros_DestinoInversion_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDestinoInversion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDDestinoInversion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DestinoInversion_Consultar")>  _
	Public Function uspOyDNet_Maestros_DestinoInversion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDDestino", DbType:="int")> ByVal lngIDDestino As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pStrNombreDestino", DbType:="varchar(50)")> ByVal StrNombreDestino As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DestinoInversion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDDestino, StrNombreDestino, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DestinoInversion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DestinoInversion_Filtrar")>  _
	Public Function uspOyDNet_Maestros_DestinoInversion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DestinoInversion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DestinoInversion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spCargarDocumentosRequeridos_OyDNet")>  _
	Public Function spCargarDocumentosRequeridos_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DoctosRequerido)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrTipoIdentificacion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DoctosRequerido))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesISIN_Amortizaciones_Eliminar")>  _
	Public Function uspOyDNet_Maestros_EspeciesISIN_Amortizaciones_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdAmortizacionEspecie As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdAmortizacionEspecie, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesISIN_Amortizaciones_Actualizar")>  _
	Public Function uspOyDNet_Maestros_EspeciesISIN_Amortizaciones_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDIsinFungible As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal dtmFechaAmortizacionEspecie As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal dblPorcentajeAmortizacionEspecie As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDIsinFungible, dtmFechaAmortizacionEspecie, dblPorcentajeAmortizacionEspecie, pstrUsuario, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesISIN_Importar_Amortizaciones")>  _
	Public Function uspOyDNet_Maestros_EspeciesISIN_Importar_Amortizaciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDIsinFungible As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Xml")> ByVal pxmlAmortizaciones As System.Xml.Linq.XElement, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of uspOyDNet_Maestros_EspeciesISIN_Importar_AmortizacionesResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDIsinFungible, pxmlAmortizaciones, pstrUsuario, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of uspOyDNet_Maestros_EspeciesISIN_Importar_AmortizacionesResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Gruposeconomicos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Gruposeconomicos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByRef plngIDGrupoEconommico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(600)")> ByVal pstrNombreGrupo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrClienteLider As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrIdsComitentes As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal InfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDGrupoEconommico, pstrNombreGrupo, pstrClienteLider, pstrIdsComitentes, pstrUsuario, InfoSesion, pintErrorPersonalizado)
		plngIDGrupoEconommico = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Gruposeconomicos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Gruposeconomicos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal plngIDGrupoEconomico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal InfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDGrupoEconomico, pstrUsuario, InfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesGruposEconomicos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClientesGruposEconomicos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of GrupoEconomicos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of GrupoEconomicos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesGruposEconomicos_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClientesGruposEconomicos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal lngIDGrupoEconomico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal strNombreGrupo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal lngidComitenteLider As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of GrupoEconomicos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDGrupoEconomico, strNombreGrupo, lngidComitenteLider, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of GrupoEconomicos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DetalleGruposEconomicos_Consultar")>  _
	Public Function uspOyDNet_Maestros_DetalleGruposEconomicos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDGrupoEconomico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of DetalleGrupoEconomico)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDGrupoEconomico, pstrUsuario, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of DetalleGrupoEconomico))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionRiesgos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionRiesgos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdClasificacionRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdTipoClasificacionRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrDetalle As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogGenerarAlerta As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdClasificacionRiesgo, pintIdTipoClasificacionRiesgo, pstrPrefijo, pstrDetalle, plogGenerarAlerta, pstrUsuario, infosesion)
		pintIdClasificacionRiesgo = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionRiesgos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionRiesgos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdClasificacionRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef PstrMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdClasificacionRiesgo, PstrMsg, infosesion)
		PstrMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionRiesgos_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionRiesgos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdClasificacionRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdTipoClasificacionRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrDetalle As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClasificacionRiesgo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdClasificacionRiesgo, pintIdTipoClasificacionRiesgo, pstrPrefijo, pstrDetalle, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClasificacionRiesgo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasificacionRiesgos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClasificacionRiesgos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClasificacionRiesgo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClasificacionRiesgo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_LEO_Insertar")>  _
	Public Function uspOyDNet_LEO_Insertar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogNuevo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal InfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plogNuevo, pstrUsuario, InfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosClasificacionTipoCliente_Actualizar")>  _
	Public Function uspOyDNet_MaestrosClasificacionTipoCliente_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintCodigo As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrClasificacionTipoCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pintCodigo, pstrClasificacionTipoCliente, pstrUsuario, infosesion)
		plngID = CType(result.GetParameterValue(0),Integer)
		pintCodigo = CType(result.GetParameterValue(1),System.Nullable(Of System.int32))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosClasificacionTipoCliente_Eliminar")>  _
	Public Function uspOyDNet_MaestrosClasificacionTipoCliente_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintCodigo As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef PstrMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintCodigo, PstrMsg, infosesion)
		PstrMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosClasificacionTipoCliente_Consultar")>  _
	Public Function uspOyDNet_MaestrosClasificacionTipoCliente_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintCodigo As System.Nullable(Of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrClasificacionTipoCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClasificacionRiesgoTipoCliente)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintCodigo, pstrClasificacionTipoCliente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClasificacionRiesgoTipoCliente))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosClasificacionTipoCliente_Filtrar")>  _
	Public Function uspOyDNet_MaestrosClasificacionTipoCliente_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ClasificacionRiesgoTipoCliente)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ClasificacionRiesgoTipoCliente))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ComisionesBroker_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ComisionesBroker_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrBroker As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorComision As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(200)")> ByVal pstrEmail As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrEquivalencia As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrBroker, pdblValorComision, pstrEmail, pstrEquivalencia, pstrUsuario, infosesion)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ComisionesBroker_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ComisionesBroker_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrFuente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ComisionesBroker)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, pstrFuente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ComisionesBroker))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PerfilesRiesgo_Actualizar")>  _
	Public Function uspOyDNet_Maestros_PerfilesRiesgo_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDPerfilRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDTipoPerfil As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal plngIDDescPerfil As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="decimal(5,2)")> ByVal pnumCalificacion As Decimal, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPerfilRiesgo, plngIDTipoPerfil, plngIDDescPerfil, pnumCalificacion, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDPerfilRiesgo = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PerfilesRiesgo_Eliminar")>  _
	Public Function uspOyDNet_Maestros_PerfilesRiesgo_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPerfilRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPerfilRiesgo, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PerfilesRiesgo_Consultar")>  _
	Public Function uspOyDNet_Maestros_PerfilesRiesgo_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPerfilRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDTipoPerfil As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of PerfilesRiesgo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPerfilRiesgo, plngIDTipoPerfil, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of PerfilesRiesgo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_PerfilesRiesgo_Filtrar")>  _
	Public Function uspOyDNet_Maestros_PerfilesRiesgo_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of PerfilesRiesgo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of PerfilesRiesgo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosCarterasColectivasGMF_Actualizar")>  _
	Public Function uspOyDNet_MaestrosCarterasColectivasGMF_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDCarterasColectivasClientesGMF As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCarterasColectivasClientesGMF, pstrTipoIdentificacion, pstrNroDocumento, pstrNombre, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDCarterasColectivasClientesGMF = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosCarterasColectivasGMF_Eliminar")>  _
	Public Function uspOyDNet_MaestrosCarterasColectivasGMF_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoIdentificacion, pstrNroDocumento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosCarterasColectivasGMF_Consultar")>  _
	Public Function uspOyDNet_MaestrosCarterasColectivasGMF_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CarterasColectivasClientesGMF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoIdentificacion, pstrNroDocumento, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CarterasColectivasClientesGMF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_MaestrosCarterasColectivasGMF_Filtrar")>  _
	Public Function uspOyDNet_MaestrosCarterasColectivasGMF_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CarterasColectivasClientesGMF)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CarterasColectivasClientesGMF))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EmpleadosSistemas_Actualizar")>  _
	Public Function uspOyDNet_EmpleadosSistemas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEmpleado As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrCodigoMapeo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrValor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrinfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pintIDEmpleado, pstrSistema, pstrCodigoMapeo, pstrValor, pstrUsuario, pstrinfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EmpleadosSistemas_Eliminar")>  _
	Public Function uspOyDNet_EmpleadosSistemas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrinfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pstrUsuario, pstrinfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EmpleadosSistemas_Consultar")>  _
	Public Function uspOyDNet_EmpleadosSistemas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDEmpleado As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrinfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of EmpleadoSistema)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEmpleado, pstrUsuario, pstrinfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of EmpleadoSistema))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FormatosXUsuarios_Consultar")>  _
	Public Function uspOyDNet_FormatosXUsuarios_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrTipoBusqueda As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(200)")> ByVal pstrObjetoBusqueda As String) As ISingleResult(Of PermisosFormatosExportar)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuario, plogActivo, pstrSistema, pstrTipoBusqueda, pstrObjetoBusqueda)
		Return CType(result.ReturnValue,ISingleResult(Of PermisosFormatosExportar))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_FormatosXUsuarios_Grabar")>  _
	Public Function uspOyDNet_FormatosXUsuarios_Grabar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlPermisosAsignados As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAsignar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100) NULL")> ByVal pstrUsuarioActualizacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1000) NULL")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000) NULL")> ByRef pstrMsgValidacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60) NULL")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10) NULL")> ByVal pstrSistema As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrTipoBusqueda As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(200)")> ByVal pstrObjetoBusqueda As String) As ISingleResult(Of PermisosFormatosExportar)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pxmlPermisosAsignados, plogAsignar, pstrUsuario, pstrUsuarioActualizacion, pstrInfosesion, pintErrorPersonalizado, pstrMsgValidacion, pstrMaquina, pstrSistema, pstrTipoBusqueda, pstrObjetoBusqueda)
		pstrMsgValidacion = CType(result.GetParameterValue(6),String)
		Return CType(result.ReturnValue,ISingleResult(Of PermisosFormatosExportar))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2Utils_ConsultarUsuarios")>  _
	Public Function uspA2Utils_ConsultarUsuarios() As ISingleResult(Of UsuariosPermisosFormatos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of UsuariosPermisosFormatos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Receptores_Actualizar")>  _
	Public Function uspOyDNet_Receptores_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngSucReceptor As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoReceptor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrCcostos As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrLogin As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrSucursalContable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLiderMesa As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdMesa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNroDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrIDReceptorSafyr As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdReceptores As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngSucReceptor, pstrID, pstrNombre, plogActivo, pstrTipoReceptor, pstrCcostos, pstrLogin, pstrSucursalContable, plogLiderMesa, plngIdMesa, pstrNroDocumento, pstrEMail, pstrIDReceptorSafyr, pstrUsuario, pintIdReceptores, infosesion, pintErrorPersonalizado)
		pintIdReceptores = CType(result.GetParameterValue(14),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Receptores_Eliminar")>  _
	Public Function uspOyDNet_Receptores_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdReceptores As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdReceptores, pstrID, pstrAccion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Receptores_Filtrar")>  _
	Public Function uspOyDNet_Receptores_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConfiguracionReceptores)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConfiguracionReceptores))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Receptores_Consultar")>  _
	Public Function uspOyDNet_Receptores_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngSucReceptor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdMesa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrID", DbType:="varchar(4)")> ByVal strID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConfiguracionReceptores)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngSucReceptor, plngIdMesa, pstrNombre, strID, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConfiguracionReceptores))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Paises_Consultar")>  _
	Public Function uspOyDNet_Maestros_Paises_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(40)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Paise)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Paise))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Paises_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Paises_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Paise)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Paise))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DepartamentosPaise_Consultar")>  _
	Public Function uspOyDNet_Maestros_DepartamentosPaise_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPais As int32, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Departamento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPais, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Departamento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Departamentos_Consultar")>  _
	Public Function uspOyDNet_Maestros_Departamentos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(40)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Departamento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Departamento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Departamentos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Departamentos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Departamento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Departamento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ciudades_Consultar")>  _
	Public Function uspOyDNet_Maestros_Ciudades_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(40)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigo_DANE", DbType:="varchar(6)")> ByVal strCodigo_DANE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDdepartamento", DbType:="int")> ByVal lngIDdepartamento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Ciudade)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strCodigo_DANE, lngIDdepartamento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Ciudade))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ciudades_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Ciudades_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Ciudade)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Ciudade))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BancosTasasRendimientos_Consultar")>  _
	Public Function uspOyDNet_Maestros_BancosTasasRendimientos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDBanco As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of BancosTasasRendimientos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDBanco, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of BancosTasasRendimientos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosVsUsuarios_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCompanias As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuarioProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConsecutivosVsUsuarios)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrModulo, pintIDCompanias, pstrUsuarioProceso, pstrNombreConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConsecutivosVsUsuarios))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConsecutivosVsUsuarios_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NULL")> ByVal pxmlConseutivosXUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrModulo, pxmlConseutivosXUsuario, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(5),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function FuncionPorDefinir() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosVSConsecutivos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConceptosVSConsecutivos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ConceptosVSConsecutivos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDConcepto, pstrNombreConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ConceptosVSConsecutivos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosVsConsecutivos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ConceptosVsConsecutivos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NULL")> ByVal pxmlConceptosXConsecutivos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrModulo, pxmlConceptosXConsecutivos, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(5),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Actualizar")>  _
	Public Function uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNombreConsecutivoCE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNombreConsecutivoRC As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNombreConsecutivoNotas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pIDTesoreriaConsecutivosEquivalencias As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreConsecutivoCE, pstrNombreConsecutivoRC, pstrNombreConsecutivoNotas, pIDTesoreriaConsecutivosEquivalencias, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		pIDTesoreriaConsecutivosEquivalencias = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Filtrar")>  _
	Public Function uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TesoreriaConsecutivosEquivalencias)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TesoreriaConsecutivosEquivalencias))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Eliminar")>  _
	Public Function uspOyDNet_Maestros_TesoreriaConsecutivosEquivalencias_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDTesoreriaConsecutivosEquivalencias As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDTesoreriaConsecutivosEquivalencias, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposCuentasRecaudadoras_Actualizar")>  _
	Public Function uspOyDNet_Maestros_TiposCuentasRecaudadoras_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDTiposCuentasRecaudadoras As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoReciboCaja As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrRegistrarCheques As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrManejoComisiones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrManejoTraslado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pblnDetalleFecha As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pblnDetalleReferencia As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pblnDetalleNombreTransaccion As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(40)")> ByVal pstrDetallePersonalizado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pblnCuentaCentralizadora As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDTiposCuentasRecaudadoras, pstrTipoCuenta, pstrTipoReciboCaja, pstrRegistrarCheques, pstrManejoComisiones, pstrManejoTraslado, pblnDetalleFecha, pblnDetalleReferencia, pblnDetalleNombreTransaccion, pstrDetallePersonalizado, pblnCuentaCentralizadora, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIDTiposCuentasRecaudadoras = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(14),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposCuentasRecaudadoras_Eliminar")>  _
	Public Function uspOyDNet_Maestros_TiposCuentasRecaudadoras_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDTiposCuentasRecaudadoras As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDTiposCuentasRecaudadoras, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposCuentasRecaudadoras_Filtrar")>  _
	Public Function uspOyDNet_Maestros_TiposCuentasRecaudadoras_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TiposCuentasRecaudadoras)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TiposCuentasRecaudadoras))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposCuentasRecaudadoras_Consultar")>  _
	Public Function uspOyDNet_Maestros_TiposCuentasRecaudadoras_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCodigo As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoReciboCaja As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrRegistrarCheques As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrManejoComisiones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrManejoTraslado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TiposCuentasRecaudadoras)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintCodigo, pstrTipoCuenta, pstrTipoReciboCaja, pstrRegistrarCheques, pstrManejoComisiones, pstrManejoTraslado, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of TiposCuentasRecaudadoras))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Clientes_CuentasCRCC_Actualizar")>  _
	Public Function uspOyDNet_Clientes_CuentasCRCC_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDtblCuentasCRCC As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrCuentaCRCC As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoDeOferta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaCreacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrMiembroLiquidador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrCodigoEntorno As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrSubCuenta As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrTitular As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNroDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrEstado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrTipoPersona As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDtblCuentasCRCC, plngIDComitente, pstrCuentaCRCC, pstrTipoDeOferta, pdtmFechaCreacion, pstrMiembroLiquidador, pstrCodigoEntorno, pstrCuenta, pstrSubCuenta, pstrTitular, pstrNroDocumento, pstrEstado, pstrTipoPersona, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Clientes_CuentasCRCC_Eliminar")>  _
	Public Function uspOyDNet_Clientes_CuentasCRCC_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDtblCuentasCRCC As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDtblCuentasCRCC, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Clientes_CuentasCRCC_Consultar")>  _
	Public Function uspOyDNet_Clientes_CuentasCRCC_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCuenta", DbType:="varchar(25)")> ByVal strCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasCRCC)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strCuenta, lngIDComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasCRCC))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_CuentasCRCC_Filtrar")>  _
	Public Function uspOyDNet_Maestros_CuentasCRCC_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CuentasCRCC)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CuentasCRCC))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesResponsables_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClientesResponsables_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrNombre_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(25)")> ByVal pstrTelefono1_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(55)")> ByVal pstrEmail_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPoblacion As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDepartamento As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdPais As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipo_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50)")> ByVal pstrCargo_Responsable As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX)")> ByVal pstrXml_Detalles As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDClientes_Responsable As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, pstrTipoIdentificacion_Responsable, pstrNroDocumento_Responsable, pstrNombre_Responsable, pstrTelefono1_Responsable, pstrEmail_Responsable, plngIDPoblacion, plngIDDepartamento, plngIdPais, pstrTipo_Responsable, pstrCargo_Responsable, plogActivo, pstrXml_Detalles, pintIDClientes_Responsable, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesResponsables_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClientesResponsables_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClientes_Responsable As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClientes_Responsable, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesResponsables_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClientesResponsables_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Clientes_Responsables)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Clientes_Responsables))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesResponsables_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClientesResponsables_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Clientes_Responsables)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Clientes_Responsables))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoResponsable_Actualizar")>  _
	Public Function uspOyDNet_Maestros_EncabezadoResponsable_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion_Responsable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento_Responsable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrNombre_Responsable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDClientes_Responsable As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, pstrTipoIdentificacion_Responsable, pstrNroDocumento_Responsable, pstrNombre_Responsable, pintIDClientes_Responsable, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoResponsable_Eliminar")>  _
	Public Function uspOyDNet_Maestros_EncabezadoResponsable_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDClientes_Responsable As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClientes_Responsable, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoCResponsable_Consultar")>  _
	Public Function uspOyDNet_Maestros_EncabezadoCResponsable_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIdEncabezado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of EncabezadoResponsable)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdEncabezado, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of EncabezadoResponsable))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoCResponsable_Filtrar")>  _
	Public Function uspOyDNet_Maestros_EncabezadoCResponsable_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of EncabezadoResponsable)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of EncabezadoResponsable))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spClientes_Responsables_Consultar_comitente")>  _
	Public Function spClientes_Responsables_Consultar_comitente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogEncontro As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, plogEncontro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		plogEncontro = CType(result.GetParameterValue(1),System.Nullable(Of Boolean))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_BloqueoSaldoClientes_ObtenerSaldoEncargo")>  _
	Public Function uspOyDNet_Maestros_BloqueoSaldoClientes_ObtenerSaldoEncargo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblSaldo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDEncargo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DATETIME")> ByVal pdtmFecha As System.Nullable(of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pdblSaldo, pintIDEncargo, pdtmFecha, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		pdblSaldo = CType(result.GetParameterValue(0),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOyDNet_IngresarClientes_Relacionados")>  _
	Public Function spOyDNet_IngresarClientes_Relacionados(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente_Relacionado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLider As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX)")> ByVal pstrXml_Detalles As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDClientes_Relacionados As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente_Relacionado, plogLider, pstrXml_Detalles, pstrAccion, pintIDClientes_Relacionados, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesRelacionados_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClientesRelacionados_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDClientes_Relacionados As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX)")> ByVal pstrXml_Detalles As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClientes_Relacionados, plngIDComitente, pstrXml_Detalles, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesRelacionados_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClientesRelacionados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDComitente", DbType:="char(17)")> ByVal lngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Clientes_Relacionados)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDComitente, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Clientes_Relacionados))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClientesRelacionados_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClientesRelacionados_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of Clientes_Relacionados)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of Clientes_Relacionados))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoRelacionado_Actualizar")>  _
	Public Overloads Function uspOyDNet_Maestros_EncabezadoRelacionado_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipoIdentificacion_Responsable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento_Responsable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrNombre_Responsable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDClientes_Responsable As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, pstrTipoIdentificacion_Responsable, pstrNroDocumento_Responsable, pstrNombre_Responsable, pintIDClientes_Responsable, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoRelacionado_Eliminar")>  _
	Public Overloads Function uspOyDNet_Maestros_EncabezadoRelacionado_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIdEncabezado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdEncabezado, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoCRelacionado_Consultar")>  _
	Public Function uspOyDNet_Maestros_EncabezadoCRelacionado_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIdEncabezado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of EncabezadoRelacionado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIdEncabezado, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of EncabezadoRelacionado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EncabezadoCRelacionado_Filtrar")>  _
	Public Function uspOyDNet_Maestros_EncabezadoCRelacionado_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of EncabezadoRelacionado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of EncabezadoRelacionado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOyDNet_ClientesRelacionados_validar")>  _
	Public Function spOyDNet_ClientesRelacionados_validar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17) NOT NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogEncontro As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, plogEncontro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		plogEncontro = CType(result.GetParameterValue(1),System.Nullable(Of Boolean))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spOyDNet_ClientesRelacionados_ConsultarTP")>  _
	Public Function spOyDNet_ClientesRelacionados_ConsultarTP(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17) NOT NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogEncontro As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDComitente, plogEncontro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		plogEncontro = CType(result.GetParameterValue(1),System.Nullable(Of Boolean))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_OrdenesLEO_Consultar")>  _
	Public Function usp_OyD_OrdenesLEO_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrOperador As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaOrden As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDLLEO As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of ListadoActualizarLEO)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrOperador, pdtmFechaOrden, plngIDLLEO, pstrIDReceptor, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of ListadoActualizarLEO))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_OrdenesLEO_DatosOrden")>  _
	Public Function usp_OyD_OrdenesLEO_DatosOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrDatoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrLEO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByRef STR_DETALLE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipo, pstrClase, plngID, pstrDatoReceptor, pstrLEO, STR_DETALLE, pstrUsuario, infosesion, pintErrorPersonalizado)
		STR_DETALLE = CType(result.GetParameterValue(5),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_OrdenesLEO_TipoOrden")>  _
	Public Function usp_OyD_OrdenesLEO_TipoOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByRef pstrTipoLEO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoLEO, pstrUsuario, infosesion, pintErrorPersonalizado)
		pstrTipoLEO = CType(result.GetParameterValue(0),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_OrdenesEstadoLEO_Actualizar")>  _
	Public Function usp_OyD_OrdenesEstadoLEO_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrEstadoLEO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pChkUndo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaEstadoLEO As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDOrden, pstrTipo, pstrClase, pstrEstadoLEO, pChkUndo, pdtmFechaEstadoLEO, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblSucursales")>  _
Partial Public Class Sucursale
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDSucursal As Integer
	
	Private _Nombre As String
	
	Private _PorcentajePatrimonioTecnico As System.Nullable(Of Double)
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDSuc As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucursalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucursalChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnPorcentajePatrimonioTecnicoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcentajePatrimonioTecnicoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDSucChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDSucursal", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucursal() As Integer
		Get
			Return Me._IDSucursal
		End Get
		Set
			If (Object.Equals(Me._IDSucursal, value) = false) Then
				Me.OnIDSucursalChanging(value)
				Me.SendPropertyChanging
				Me._IDSucursal = value
				Me.SendPropertyChanged("IDSucursal")
				Me.OnIDSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajePatrimonioTecnico", Storage:="_PorcentajePatrimonioTecnico", DbType:="Float")>  _
	Public Property PorcentajePatrimonioTecnico() As System.Nullable(Of Double)
		Get
			Return Me._PorcentajePatrimonioTecnico
		End Get
		Set
			If (Me._PorcentajePatrimonioTecnico.Equals(value) = false) Then
				Me.OnPorcentajePatrimonioTecnicoChanging(value)
				Me.SendPropertyChanging
				Me._PorcentajePatrimonioTecnico = value
				Me.SendPropertyChanged("PorcentajePatrimonioTecnico")
				Me.OnPorcentajePatrimonioTecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDSuc", Storage:="_IDSuc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDSuc() As Integer
		Get
			Return Me._IDSuc
		End Get
		Set
			If (Object.Equals(Me._IDSuc, value) = false) Then
				Me.OnIDSucChanging(value)
				Me.SendPropertyChanging
				Me._IDSuc = value
				Me.SendPropertyChanged("IDSuc")
				Me.OnIDSucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTiposEntidad")>  _
Partial Public Class TiposEntida
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDTipoEntidad As Integer
	
	Private _Nombre As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IdTipoEntidadI As Short
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDTipoEntidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTipoEntidadChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdTipoEntidadIChanging(value As Short)
    End Sub
    Partial Private Sub OnIdTipoEntidadIChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDTipoEntidad", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDTipoEntidad() As Integer
		Get
			Return Me._IDTipoEntidad
		End Get
		Set
			If (Object.Equals(Me._IDTipoEntidad, value) = false) Then
				Me.OnIDTipoEntidadChanging(value)
				Me.SendPropertyChanging
				Me._IDTipoEntidad = value
				Me.SendPropertyChanged("IDTipoEntidad")
				Me.OnIDTipoEntidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoEntidad", Storage:="_IdTipoEntidadI", AutoSync:=AutoSync.OnInsert, DbType:="Smallint NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdTipoEntidadI() As Short
		Get
			Return Me._IdTipoEntidadI
		End Get
		Set
			If ((Me._IdTipoEntidadI = value)  _
						= false) Then
				Me.OnIdTipoEntidadIChanging(value)
				Me.SendPropertyChanging
				Me._IdTipoEntidadI = value
				Me.SendPropertyChanged("IdTipoEntidadI")
				Me.OnIdTipoEntidadIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TblProductosValores")>  _
Partial Public Class ProductosValore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDTipoProducto As Integer
	
	Private _Descripcion As String
	
	Private _Orden As System.Nullable(Of System.int32)
	
	Private _Usuario As String
	
	Private _Actualizacion As System.Nullable(Of Date)
	
	Private _IdProductoValores As Short
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDTipoProductoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTipoProductoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnIdProductoValoresChanging(value As Short)
    End Sub
    Partial Private Sub OnIdProductoValoresChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDTipoProducto", Storage:="_IDTipoProducto", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDTipoProducto() As Integer
		Get
			Return Me._IDTipoProducto
		End Get
		Set
			If (Object.Equals(Me._IDTipoProducto, value) = false) Then
				Me.OnIDTipoProductoChanging(value)
				Me.SendPropertyChanging
				Me._IDTipoProducto = value
				Me.SendPropertyChanged("IDTipoProducto")
				Me.OnIDTipoProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intOrden", Storage:="_Orden", DbType:="Int", CanBeNull:=true)>  _
	Public Property Orden() As System.Nullable(Of System.int32)
		Get
			Return Me._Orden
		End Get
		Set
			If (Object.Equals(Me._Orden, value) = false) Then
				Me.OnOrdenChanging(value)
				Me.SendPropertyChanging
				Me._Orden = value
				Me.SendPropertyChanged("Orden")
				Me.OnOrdenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime")>  _
	Public Property Actualizacion() As System.Nullable(Of Date)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Me._Actualizacion.Equals(value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdProductoValores", Storage:="_IdProductoValores", AutoSync:=AutoSync.OnInsert, DbType:="Smallint NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdProductoValores() As Short
		Get
			Return Me._IdProductoValores
		End Get
		Set
			If ((Me._IdProductoValores = value)  _
						= false) Then
				Me.OnIdProductoValoresChanging(value)
				Me.SendPropertyChanging
				Me._IdProductoValores = value
				Me.SendPropertyChanged("IdProductoValores")
				Me.OnIdProductoValoresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConceptosInactividad")>  _
Partial Public Class ConceptosInactivida
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As Integer
	
	Private _Actividad As Boolean
	
	Private _Nombre As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IdConceptoInactividad As Short
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnActividadChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActividadChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdConceptoInactividadChanging(value As Short)
    End Sub
    Partial Private Sub OnIdConceptoInactividadChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActividad", Storage:="_Actividad", DbType:="Bit NOT NULL")>  _
	Public Property Actividad() As Boolean
		Get
			Return Me._Actividad
		End Get
		Set
			If ((Me._Actividad = value)  _
						= false) Then
				Me.OnActividadChanging(value)
				Me.SendPropertyChanging
				Me._Actividad = value
				Me.SendPropertyChanged("Actividad")
				Me.OnActividadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdConceptoInactividad", Storage:="_IdConceptoInactividad", AutoSync:=AutoSync.OnInsert, DbType:="Smallint NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdConceptoInactividad() As Short
		Get
			Return Me._IdConceptoInactividad
		End Get
		Set
			If ((Me._IdConceptoInactividad = value)  _
						= false) Then
				Me.OnIdConceptoInactividadChanging(value)
				Me.SendPropertyChanging
				Me._IdConceptoInactividad = value
				Me.SendPropertyChanged("IdConceptoInactividad")
				Me.OnIdConceptoInactividadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTipoReferencias")>  _
Partial Public Class TipoReferencia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDCodigo As Integer
	
	Private _IDCodigoRetorno As String
	
	Private _Descripcion As String
	
	Private _tipoClasificacion As String
	
	Private _Formulario1 As Boolean
	
	Private _Formulario2 As Boolean
	
	Private _Formulario3 As Boolean
	
	Private _Formulario4 As Boolean
	
	Private _Formulario5 As Boolean
	
	Private _CalculaIVA As Boolean
	
	Private _Mensajes As Boolean
	
	Private _CalculaRetencion As Boolean
	
	Private _CantidadNegociada As System.Nullable(Of Decimal)
	
	Private _NroMesesDctoTransporte As System.Nullable(Of Byte)
	
	Private _Consecutivo As String
	
	Private _Usuario As String
	
	Private _Msg As String
	
	Private _Actualizacion As Date
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoChanged()
    End Sub
    Partial Private Sub OnIDCodigoRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnIDCodigoRetornoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OntipoClasificacionChanging(value As String)
    End Sub
    Partial Private Sub OntipoClasificacionChanged()
    End Sub
    Partial Private Sub OnFormulario1Changing(value As Boolean)
    End Sub
    Partial Private Sub OnFormulario1Changed()
    End Sub
    Partial Private Sub OnFormulario2Changing(value As Boolean)
    End Sub
    Partial Private Sub OnFormulario2Changed()
    End Sub
    Partial Private Sub OnFormulario3Changing(value As Boolean)
    End Sub
    Partial Private Sub OnFormulario3Changed()
    End Sub
    Partial Private Sub OnFormulario4Changing(value As Boolean)
    End Sub
    Partial Private Sub OnFormulario4Changed()
    End Sub
    Partial Private Sub OnFormulario5Changing(value As Boolean)
    End Sub
    Partial Private Sub OnFormulario5Changed()
    End Sub
    Partial Private Sub OnCalculaIVAChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCalculaIVAChanged()
    End Sub
    Partial Private Sub OnMensajesChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMensajesChanged()
    End Sub
    Partial Private Sub OnCalculaRetencionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCalculaRetencionChanged()
    End Sub
    Partial Private Sub OnCantidadNegociadaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadNegociadaChanged()
    End Sub
    Partial Private Sub OnNroMesesDctoTransporteChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnNroMesesDctoTransporteChanged()
    End Sub
    Partial Private Sub OnConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnConsecutivoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDCodigo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCodigo() As Integer
		Get
			Return Me._IDCodigo
		End Get
		Set
			If (Object.Equals(Me._IDCodigo, value) = false) Then
				Me.OnIDCodigoChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigo = value
				Me.SendPropertyChanged("IDCodigo")
				Me.OnIDCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strID", Storage:="_IDCodigoRetorno", DbType:="Varchar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property IDCodigoRetorno() As String
		Get
			Return Me._IDCodigoRetorno
		End Get
		Set
			If (String.Equals(Me._IDCodigoRetorno, value) = false) Then
				Me.OnIDCodigoRetornoChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigoRetorno = value
				Me.SendPropertyChanged("IDCodigoRetorno")
				Me.OnIDCodigoRetornoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strtipoClasificacion", Storage:="_tipoClasificacion", DbType:="Varchar(1)")>  _
	Public Property tipoClasificacion() As String
		Get
			Return Me._tipoClasificacion
		End Get
		Set
			If (String.Equals(Me._tipoClasificacion, value) = false) Then
				Me.OntipoClasificacionChanging(value)
				Me.SendPropertyChanging
				Me._tipoClasificacion = value
				Me.SendPropertyChanged("tipoClasificacion")
				Me.OntipoClasificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFormulario1", Storage:="_Formulario1", DbType:="Bit NOT NULL")>  _
	Public Property Formulario1() As Boolean
		Get
			Return Me._Formulario1
		End Get
		Set
			If ((Me._Formulario1 = value)  _
						= false) Then
				Me.OnFormulario1Changing(value)
				Me.SendPropertyChanging
				Me._Formulario1 = value
				Me.SendPropertyChanged("Formulario1")
				Me.OnFormulario1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFormulario2", Storage:="_Formulario2", DbType:="Bit NOT NULL")>  _
	Public Property Formulario2() As Boolean
		Get
			Return Me._Formulario2
		End Get
		Set
			If ((Me._Formulario2 = value)  _
						= false) Then
				Me.OnFormulario2Changing(value)
				Me.SendPropertyChanging
				Me._Formulario2 = value
				Me.SendPropertyChanged("Formulario2")
				Me.OnFormulario2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFormulario3", Storage:="_Formulario3", DbType:="Bit NOT NULL")>  _
	Public Property Formulario3() As Boolean
		Get
			Return Me._Formulario3
		End Get
		Set
			If ((Me._Formulario3 = value)  _
						= false) Then
				Me.OnFormulario3Changing(value)
				Me.SendPropertyChanging
				Me._Formulario3 = value
				Me.SendPropertyChanged("Formulario3")
				Me.OnFormulario3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFormulario4", Storage:="_Formulario4", DbType:="Bit NOT NULL")>  _
	Public Property Formulario4() As Boolean
		Get
			Return Me._Formulario4
		End Get
		Set
			If ((Me._Formulario4 = value)  _
						= false) Then
				Me.OnFormulario4Changing(value)
				Me.SendPropertyChanging
				Me._Formulario4 = value
				Me.SendPropertyChanged("Formulario4")
				Me.OnFormulario4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFormulario5", Storage:="_Formulario5", DbType:="Bit NOT NULL")>  _
	Public Property Formulario5() As Boolean
		Get
			Return Me._Formulario5
		End Get
		Set
			If ((Me._Formulario5 = value)  _
						= false) Then
				Me.OnFormulario5Changing(value)
				Me.SendPropertyChanging
				Me._Formulario5 = value
				Me.SendPropertyChanged("Formulario5")
				Me.OnFormulario5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCalculaIVA", Storage:="_CalculaIVA", DbType:="Bit NOT NULL")>  _
	Public Property CalculaIVA() As Boolean
		Get
			Return Me._CalculaIVA
		End Get
		Set
			If ((Me._CalculaIVA = value)  _
						= false) Then
				Me.OnCalculaIVAChanging(value)
				Me.SendPropertyChanging
				Me._CalculaIVA = value
				Me.SendPropertyChanged("CalculaIVA")
				Me.OnCalculaIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMensajes", Storage:="_Mensajes", DbType:="Bit NOT NULL")>  _
	Public Property Mensajes() As Boolean
		Get
			Return Me._Mensajes
		End Get
		Set
			If ((Me._Mensajes = value)  _
						= false) Then
				Me.OnMensajesChanging(value)
				Me.SendPropertyChanging
				Me._Mensajes = value
				Me.SendPropertyChanged("Mensajes")
				Me.OnMensajesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCalculaRetencion", Storage:="_CalculaRetencion", DbType:="Bit NOT NULL")>  _
	Public Property CalculaRetencion() As Boolean
		Get
			Return Me._CalculaRetencion
		End Get
		Set
			If ((Me._CalculaRetencion = value)  _
						= false) Then
				Me.OnCalculaRetencionChanging(value)
				Me.SendPropertyChanging
				Me._CalculaRetencion = value
				Me.SendPropertyChanged("CalculaRetencion")
				Me.OnCalculaRetencionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadNegociada", Storage:="_CantidadNegociada", DbType:="Money")>  _
	Public Property CantidadNegociada() As System.Nullable(Of Decimal)
		Get
			Return Me._CantidadNegociada
		End Get
		Set
			If (Me._CantidadNegociada.Equals(value) = false) Then
				Me.OnCantidadNegociadaChanging(value)
				Me.SendPropertyChanging
				Me._CantidadNegociada = value
				Me.SendPropertyChanged("CantidadNegociada")
				Me.OnCantidadNegociadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroMesesDctoTransporte", Storage:="_NroMesesDctoTransporte", DbType:="Tinyint")>  _
	Public Property NroMesesDctoTransporte() As System.Nullable(Of Byte)
		Get
			Return Me._NroMesesDctoTransporte
		End Get
		Set
			If (Me._NroMesesDctoTransporte.Equals(value) = false) Then
				Me.OnNroMesesDctoTransporteChanging(value)
				Me.SendPropertyChanging
				Me._NroMesesDctoTransporte = value
				Me.SendPropertyChanged("NroMesesDctoTransporte")
				Me.OnNroMesesDctoTransporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConsecutivo", Storage:="_Consecutivo", DbType:="Varchar(9)")>  _
	Public Property Consecutivo() As String
		Get
			Return Me._Consecutivo
		End Get
		Set
			If (String.Equals(Me._Consecutivo, value) = false) Then
				Me.OnConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._Consecutivo = value
				Me.SendPropertyChanged("Consecutivo")
				Me.OnConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000) NULL")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDoctosRequeridos")>  _
Partial Public Class DoctosRequerido
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDDocumento As Short
	
	Private _CodigoDocto As String
	
	Private _NombreDocumento As String
	
	Private _Requerido As System.Nullable(Of Boolean)
	
	Private _FechaIniVigencia As System.Nullable(Of Boolean)
	
	Private _FechaFinVigencia As System.Nullable(Of Boolean)
	
	Private _DocuActivo As System.Nullable(Of Boolean)
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _FechaEntrega As System.Nullable(Of DateTime)
	
	Private _FechaInicioVigencia As System.Nullable(Of DateTime)
	
	Private _FechaFinDeVigencia As System.Nullable(Of DateTime)
	
	Private _AplicaA As System.Nullable(Of System.int32)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDDocumentoChanging(value As Short)
    End Sub
    Partial Private Sub OnIDDocumentoChanged()
    End Sub
    Partial Private Sub OnCodigoDoctoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoDoctoChanged()
    End Sub
    Partial Private Sub OnNombreDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDocumentoChanged()
    End Sub
    Partial Private Sub OnRequeridoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRequeridoChanged()
    End Sub
    Partial Private Sub OnFechaIniVigenciaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFechaIniVigenciaChanged()
    End Sub
    Partial Private Sub OnFechaFinVigenciaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFechaFinVigenciaChanged()
    End Sub
    Partial Private Sub OnDocuActivoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDocuActivoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnFechaEntregaChanging(value As System.Nullable(Of DateTime))
    End Sub
    Partial Private Sub OnFechaEntregaChanged()
    End Sub
    Partial Private Sub OnFechaInicioVigenciaChanging(value As System.Nullable(Of DateTime))
    End Sub
    Partial Private Sub OnFechaInicioVigenciaChanged()
    End Sub
    Partial Private Sub OnFechaFinDeVigenciaChanging(value As System.Nullable(Of DateTime))
    End Sub
    Partial Private Sub OnFechaFinDeVigenciaChanged()
    End Sub
    Partial Private Sub OnAplicaAChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnAplicaAChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngid", Storage:="_IDDocumento", AutoSync:=AutoSync.OnInsert, DbType:="Smallint NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDDocumento() As Short
		Get
			Return Me._IDDocumento
		End Get
		Set
			If ((Me._IDDocumento = value)  _
						= false) Then
				Me.OnIDDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._IDDocumento = value
				Me.SendPropertyChanged("IDDocumento")
				Me.OnIDDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodDocto", Storage:="_CodigoDocto", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CodigoDocto() As String
		Get
			Return Me._CodigoDocto
		End Get
		Set
			If (String.Equals(Me._CodigoDocto, value) = false) Then
				Me.OnCodigoDoctoChanging(value)
				Me.SendPropertyChanging
				Me._CodigoDocto = value
				Me.SendPropertyChanged("CodigoDocto")
				Me.OnCodigoDoctoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreDocumento", Storage:="_NombreDocumento", DbType:="Varchar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreDocumento() As String
		Get
			Return Me._NombreDocumento
		End Get
		Set
			If (String.Equals(Me._NombreDocumento, value) = false) Then
				Me.OnNombreDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NombreDocumento = value
				Me.SendPropertyChanged("NombreDocumento")
				Me.OnNombreDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitRequerido", Storage:="_Requerido", DbType:="Bit NOT NULL")>  _
	Public Property Requerido() As System.Nullable(Of Boolean)
		Get
			Return Me._Requerido
		End Get
		Set
			If (Me._Requerido.Equals(value) = false) Then
				Me.OnRequeridoChanging(value)
				Me.SendPropertyChanging
				Me._Requerido = value
				Me.SendPropertyChanged("Requerido")
				Me.OnRequeridoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaIniVigenciaDocto", Storage:="_FechaIniVigencia", DbType:="Bit NOT NULL")>  _
	Public Property FechaIniVigencia() As System.Nullable(Of Boolean)
		Get
			Return Me._FechaIniVigencia
		End Get
		Set
			If (Me._FechaIniVigencia.Equals(value) = false) Then
				Me.OnFechaIniVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaIniVigencia = value
				Me.SendPropertyChanged("FechaIniVigencia")
				Me.OnFechaIniVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaFinVigenciaDocto", Storage:="_FechaFinVigencia", DbType:="Bit NOT NULL")>  _
	Public Property FechaFinVigencia() As System.Nullable(Of Boolean)
		Get
			Return Me._FechaFinVigencia
		End Get
		Set
			If (Me._FechaFinVigencia.Equals(value) = false) Then
				Me.OnFechaFinVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaFinVigencia = value
				Me.SendPropertyChanged("FechaFinVigencia")
				Me.OnFechaFinVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitDocuActivo", Storage:="_DocuActivo", DbType:="Bit NOT NULL")>  _
	Public Property DocuActivo() As System.Nullable(Of Boolean)
		Get
			Return Me._DocuActivo
		End Get
		Set
			If (Me._DocuActivo.Equals(value) = false) Then
				Me.OnDocuActivoChanging(value)
				Me.SendPropertyChanging
				Me._DocuActivo = value
				Me.SendPropertyChanged("DocuActivo")
				Me.OnDocuActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEntrega", Storage:="_FechaEntrega", DbType:="DateTime", CanBeNull:=true)>  _
	Public Property FechaEntrega() As System.Nullable(Of DateTime)
		Get
			Return Me._FechaEntrega
		End Get
		Set
			If (Object.Equals(Me._FechaEntrega, value) = false) Then
				Me.OnFechaEntregaChanging(value)
				Me.SendPropertyChanging
				Me._FechaEntrega = value
				Me.SendPropertyChanged("FechaEntrega")
				Me.OnFechaEntregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmIniVigencia", Storage:="_FechaInicioVigencia", DbType:="DateTime", CanBeNull:=true)>  _
	Public Property FechaInicioVigencia() As System.Nullable(Of DateTime)
		Get
			Return Me._FechaInicioVigencia
		End Get
		Set
			If (Object.Equals(Me._FechaInicioVigencia, value) = false) Then
				Me.OnFechaInicioVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaInicioVigencia = value
				Me.SendPropertyChanged("FechaInicioVigencia")
				Me.OnFechaInicioVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFinVigencia", Storage:="_FechaFinDeVigencia", DbType:="DateTime", CanBeNull:=true)>  _
	Public Property FechaFinDeVigencia() As System.Nullable(Of DateTime)
		Get
			Return Me._FechaFinDeVigencia
		End Get
		Set
			If (Object.Equals(Me._FechaFinDeVigencia, value) = false) Then
				Me.OnFechaFinDeVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaFinDeVigencia = value
				Me.SendPropertyChanged("FechaFinDeVigencia")
				Me.OnFechaFinDeVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngAplicaA", Storage:="_AplicaA", DbType:="Int", CanBeNull:=true)>  _
	Public Property AplicaA() As System.Nullable(Of System.int32)
		Get
			Return Me._AplicaA
		End Get
		Set
			If (Object.Equals(Me._AplicaA, value) = false) Then
				Me.OnAplicaAChanging(value)
				Me.SendPropertyChanging
				Me._AplicaA = value
				Me.SendPropertyChanged("AplicaA")
				Me.OnAplicaAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCodigos_CIIU")>  _
Partial Public Class Codigos_CII
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codigo As String
	
	Private _Descripcion As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDCodigoCIIU As Integer
	
	Private _ClasificacionCIIU As System.Nullable(Of Integer)
	
	Private _TasaRteCREE As System.Nullable(Of Decimal)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCodigoCIIUChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoCIIUChanged()
    End Sub
    Partial Private Sub OnClasificacionCIIUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClasificacionCIIUChanged()
    End Sub
    Partial Private Sub OnTasaRteCREEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTasaRteCREEChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo", Storage:="_Codigo", DbType:="Varchar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCodigoCIIU", Storage:="_IDCodigoCIIU", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCodigoCIIU() As Integer
		Get
			Return Me._IDCodigoCIIU
		End Get
		Set
			If (Object.Equals(Me._IDCodigoCIIU, value) = false) Then
				Me.OnIDCodigoCIIUChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigoCIIU = value
				Me.SendPropertyChanged("IDCodigoCIIU")
				Me.OnIDCodigoCIIUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngClasificacionCIIU", Storage:="_ClasificacionCIIU", DbType:="Int")>  _
	Public Property ClasificacionCIIU() As System.Nullable(Of Integer)
		Get
			Return Me._ClasificacionCIIU
		End Get
		Set
			If (Me._ClasificacionCIIU.Equals(value) = false) Then
				Me.OnClasificacionCIIUChanging(value)
				Me.SendPropertyChanging
				Me._ClasificacionCIIU = value
				Me.SendPropertyChanged("ClasificacionCIIU")
				Me.OnClasificacionCIIUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaRteCREE", Storage:="_TasaRteCREE", DbType:="Numeric(9,6) NULL")>  _
	Public Property TasaRteCREE() As System.Nullable(Of Decimal)
		Get
			Return Me._TasaRteCREE
		End Get
		Set
			If (Me._TasaRteCREE.Equals(value) = false) Then
				Me.OnTasaRteCREEChanging(value)
				Me.SendPropertyChanging
				Me._TasaRteCREE = value
				Me.SendPropertyChanged("TasaRteCREE")
				Me.OnTasaRteCREEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblProfesiones")>  _
Partial Public Class Profesione
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _CodigoProfesion As Integer
	
	Private _Nombre As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDProfesion As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCodigoProfesionChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoProfesionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDProfesionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDProfesionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_CodigoProfesion", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property CodigoProfesion() As Integer
		Get
			Return Me._CodigoProfesion
		End Get
		Set
			If (Object.Equals(Me._CodigoProfesion, value) = false) Then
				Me.OnCodigoProfesionChanging(value)
				Me.SendPropertyChanging
				Me._CodigoProfesion = value
				Me.SendPropertyChanged("CodigoProfesion")
				Me.OnCodigoProfesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDProfesion", Storage:="_IDProfesion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDProfesion() As Integer
		Get
			Return Me._IDProfesion
		End Get
		Set
			If (Object.Equals(Me._IDProfesion, value) = false) Then
				Me.OnIDProfesionChanging(value)
				Me.SendPropertyChanging
				Me._IDProfesion = value
				Me.SendPropertyChanged("IDProfesion")
				Me.OnIDProfesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCustodio")>  _
Partial Public Class Custodi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _Local As Boolean
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLocal", Storage:="_Local", DbType:="Bit NOT NULL")>  _
	Public Property Local() As Boolean
		Get
			Return Me._Local
		End Get
		Set
			If ((Me._Local = value)  _
						= false) Then
				Me.OnLocalChanging(value)
				Me.SendPropertyChanging
				Me._Local = value
				Me.SendPropertyChanged("Local")
				Me.OnLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBolsas")>  _
Partial Public Class Bolsa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IdBolsa As Integer
	
	Private _Nombre As String
	
	Private _IDPoblacion As Integer
	
	Private _NroDocumento As System.Nullable(Of Decimal)
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _MercadoIntegrado As Boolean
	
	Private _Activa As System.Nullable(Of Boolean)
	
	Private _Msg As String
	
	Private _intIDBolsa As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBolsaChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIDPoblacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPoblacionChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnMercadoIntegradoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMercadoIntegradoChanged()
    End Sub
    Partial Private Sub OnActivaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActivaChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnintIDBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDBolsaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_IdBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdBolsa() As Integer
		Get
			Return Me._IdBolsa
		End Get
		Set
			If (Object.Equals(Me._IdBolsa, value) = false) Then
				Me.OnIdBolsaChanging(value)
				Me.SendPropertyChanging
				Me._IdBolsa = value
				Me.SendPropertyChanged("IdBolsa")
				Me.OnIdBolsaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPoblacion", Storage:="_IDPoblacion", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPoblacion() As Integer
		Get
			Return Me._IDPoblacion
		End Get
		Set
			If (Object.Equals(Me._IDPoblacion, value) = false) Then
				Me.OnIDPoblacionChanging(value)
				Me.SendPropertyChanging
				Me._IDPoblacion = value
				Me.SendPropertyChanged("IDPoblacion")
				Me.OnIDPoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="Numeric")>  _
	Public Property NroDocumento() As System.Nullable(Of Decimal)
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (Me._NroDocumento.Equals(value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMercadoIntegrado", Storage:="_MercadoIntegrado", DbType:="Bit NOT NULL")>  _
	Public Property MercadoIntegrado() As Boolean
		Get
			Return Me._MercadoIntegrado
		End Get
		Set
			If ((Me._MercadoIntegrado = value)  _
						= false) Then
				Me.OnMercadoIntegradoChanging(value)
				Me.SendPropertyChanging
				Me._MercadoIntegrado = value
				Me.SendPropertyChanged("MercadoIntegrado")
				Me.OnMercadoIntegradoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActiva", Storage:="_Activa", DbType:="Bit")>  _
	Public Property Activa() As System.Nullable(Of Boolean)
		Get
			Return Me._Activa
		End Get
		Set
			If (Me._Activa.Equals(value) = false) Then
				Me.OnActivaChanging(value)
				Me.SendPropertyChanging
				Me._Activa = value
				Me.SendPropertyChanged("Activa")
				Me.OnActivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDBolsa", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property intIDBolsa() As Integer
		Get
			Return Me._intIDBolsa
		End Get
		Set
			If (Object.Equals(Me._intIDBolsa, value) = false) Then
				Me.OnintIDBolsaChanging(value)
				Me.SendPropertyChanging
				Me._intIDBolsa = value
				Me.SendPropertyChanged("intIDBolsa")
				Me.OnintIDBolsaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClasificaciones")>  _
Partial Public Class Clasificacion
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Código As Integer
	
	Private _Nombre As String
	
	Private _EsGrupo As Boolean
	
	Private _EsSector As Boolean
	
	Private _IDPerteneceA As Integer
	
	Private _NombrePerteneceA As String
	
	Private _AplicaA As String
	
	Private _Nemo As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDClasificacion As Integer
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _EsSubgrupo As Boolean
	
	Private _EsSubsector As Boolean
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCódigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCódigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnEsGrupoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsGrupoChanged()
    End Sub
    Partial Private Sub OnEsSectorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsSectorChanged()
    End Sub
    Partial Private Sub OnIDPerteneceAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPerteneceAChanged()
    End Sub
    Partial Private Sub OnNombrePerteneceAChanging(value As String)
    End Sub
    Partial Private Sub OnNombrePerteneceAChanged()
    End Sub
    Partial Private Sub OnAplicaAChanging(value As String)
    End Sub
    Partial Private Sub OnAplicaAChanged()
    End Sub
    Partial Private Sub OnNemoChanging(value As String)
    End Sub
    Partial Private Sub OnNemoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDClasificacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClasificacionChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnEsSubgrupoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsSubgrupoChanged()
    End Sub
    Partial Private Sub OnEsSubsectorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsSubsectorChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Código", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Código() As Integer
		Get
			Return Me._Código
		End Get
		Set
			If (Object.Equals(Me._Código, value) = false) Then
				Me.OnCódigoChanging(value)
				Me.SendPropertyChanging
				Me._Código = value
				Me.SendPropertyChanged("Código")
				Me.OnCódigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsGrupo", Storage:="_EsGrupo", DbType:="Bit NOT NULL")>  _
	Public Property EsGrupo() As Boolean
		Get
			Return Me._EsGrupo
		End Get
		Set
			If ((Me._EsGrupo = value)  _
						= false) Then
				Me.OnEsGrupoChanging(value)
				Me.SendPropertyChanging
				Me._EsGrupo = value
				Me.SendPropertyChanged("EsGrupo")
				Me.OnEsGrupoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsSector", Storage:="_EsSector", DbType:="Bit NOT NULL")>  _
	Public Property EsSector() As Boolean
		Get
			Return Me._EsSector
		End Get
		Set
			If ((Me._EsSector = value)  _
						= false) Then
				Me.OnEsSectorChanging(value)
				Me.SendPropertyChanging
				Me._EsSector = value
				Me.SendPropertyChanged("EsSector")
				Me.OnEsSectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPerteneceA", Storage:="_IDPerteneceA", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPerteneceA() As Integer
		Get
			Return Me._IDPerteneceA
		End Get
		Set
			If (Object.Equals(Me._IDPerteneceA, value) = false) Then
				Me.OnIDPerteneceAChanging(value)
				Me.SendPropertyChanging
				Me._IDPerteneceA = value
				Me.SendPropertyChanged("IDPerteneceA")
				Me.OnIDPerteneceAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombrePerteneceA", DbType:="Varchar(50)")>  _
	Public Property NombrePerteneceA() As String
		Get
			Return Me._NombrePerteneceA
		End Get
		Set
			If (String.Equals(Me._NombrePerteneceA, value) = false) Then
				Me.OnNombrePerteneceAChanging(value)
				Me.SendPropertyChanging
				Me._NombrePerteneceA = value
				Me.SendPropertyChanged("NombrePerteneceA")
				Me.OnNombrePerteneceAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAplicaA", Storage:="_AplicaA", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property AplicaA() As String
		Get
			Return Me._AplicaA
		End Get
		Set
			If (String.Equals(Me._AplicaA, value) = false) Then
				Me.OnAplicaAChanging(value)
				Me.SendPropertyChanging
				Me._AplicaA = value
				Me.SendPropertyChanged("AplicaA")
				Me.OnAplicaAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNemo", Storage:="_Nemo", DbType:="Varchar(2)")>  _
	Public Property Nemo() As String
		Get
			Return Me._Nemo
		End Get
		Set
			If (String.Equals(Me._Nemo, value) = false) Then
				Me.OnNemoChanging(value)
				Me.SendPropertyChanging
				Me._Nemo = value
				Me.SendPropertyChanged("Nemo")
				Me.OnNemoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClasificacion", Storage:="_IDClasificacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClasificacion() As Integer
		Get
			Return Me._IDClasificacion
		End Get
		Set
			If (Object.Equals(Me._IDClasificacion, value) = false) Then
				Me.OnIDClasificacionChanging(value)
				Me.SendPropertyChanging
				Me._IDClasificacion = value
				Me.SendPropertyChanged("IDClasificacion")
				Me.OnIDClasificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsSubgrupo", DbType:="Bit NOT NULL")>  _
	Public Property EsSubgrupo() As Boolean
		Get
			Return Me._EsSubgrupo
		End Get
		Set
			If ((Me._EsSubgrupo = value)  _
						= false) Then
				Me.OnEsSubgrupoChanging(value)
				Me.SendPropertyChanging
				Me._EsSubgrupo = value
				Me.SendPropertyChanged("EsSubgrupo")
				Me.OnEsSubgrupoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsSubsector", DbType:="Bit NOT NULL")>  _
	Public Property EsSubsector() As Boolean
		Get
			Return Me._EsSubsector
		End Get
		Set
			If ((Me._EsSubsector = value)  _
						= false) Then
				Me.OnEsSubsectorChanging(value)
				Me.SendPropertyChanging
				Me._EsSubsector = value
				Me.SendPropertyChanged("EsSubsector")
				Me.OnEsSubsectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblComisionistas")>  _
Partial Public Class Comisionista
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdBolsa As Integer
	
	Private _ID As Integer
	
	Private _NroDocumento As Decimal
	
	Private _Nombre As String
	
	Private _RepresentanteLegal As String
	
	Private _Telefono1 As String
	
	Private _Telefono2 As String
	
	Private _Fax1 As String
	
	Private _Fax2 As String
	
	Private _Direccion As String
	
	Private _Internet As String
	
	Private _EMail As String
	
	Private _IDPoblacion As Integer
	
	Private _IDDepartamento As Integer
	
	Private _IDPais As Integer
	
	Private _Notas As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDComisionista As Integer
	
	Private _Msg As String
	
	Private _NombrePoblacion As String
	
	Private _InfoSesion As String
	
	Private _intIdTipoEntidad As System.Nullable(Of int16)
	
	Private _strDescripcionTipoEntidad As String
	
	Private _logActivo As Boolean
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBolsaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnRepresentanteLegalChanging(value As String)
    End Sub
    Partial Private Sub OnRepresentanteLegalChanged()
    End Sub
    Partial Private Sub OnTelefono1Changing(value As String)
    End Sub
    Partial Private Sub OnTelefono1Changed()
    End Sub
    Partial Private Sub OnTelefono2Changing(value As String)
    End Sub
    Partial Private Sub OnTelefono2Changed()
    End Sub
    Partial Private Sub OnFax1Changing(value As String)
    End Sub
    Partial Private Sub OnFax1Changed()
    End Sub
    Partial Private Sub OnFax2Changing(value As String)
    End Sub
    Partial Private Sub OnFax2Changed()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnInternetChanging(value As String)
    End Sub
    Partial Private Sub OnInternetChanged()
    End Sub
    Partial Private Sub OnEMailChanging(value As String)
    End Sub
    Partial Private Sub OnEMailChanged()
    End Sub
    Partial Private Sub OnIDPoblacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPoblacionChanged()
    End Sub
    Partial Private Sub OnIDDepartamentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnNotasChanging(value As String)
    End Sub
    Partial Private Sub OnNotasChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnNombrePoblacionChanging(value As String)
    End Sub
    Partial Private Sub OnNombrePoblacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnintIdTipoEntidadChanging(value As System.Nullable(Of int16))
    End Sub
    Partial Private Sub OnintIdTipoEntidadChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoEntidadChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoEntidadChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdBolsa", Storage:="_IdBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdBolsa() As Integer
		Get
			Return Me._IdBolsa
		End Get
		Set
			If (Object.Equals(Me._IdBolsa, value) = false) Then
				Me.OnIdBolsaChanging(value)
				Me.SendPropertyChanging
				Me._IdBolsa = value
				Me.SendPropertyChanged("IdBolsa")
				Me.OnIdBolsaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="Numeric NOT NULL")>  _
	Public Property NroDocumento() As Decimal
		Get
			Return Me._NroDocumento
		End Get
		Set
			If ((Me._NroDocumento = value)  _
						= false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRepresentanteLegal", Storage:="_RepresentanteLegal", DbType:="Varchar(50)")>  _
	Public Property RepresentanteLegal() As String
		Get
			Return Me._RepresentanteLegal
		End Get
		Set
			If (String.Equals(Me._RepresentanteLegal, value) = false) Then
				Me.OnRepresentanteLegalChanging(value)
				Me.SendPropertyChanging
				Me._RepresentanteLegal = value
				Me.SendPropertyChanged("RepresentanteLegal")
				Me.OnRepresentanteLegalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono1", Storage:="_Telefono1", DbType:="Varchar(25)")>  _
	Public Property Telefono1() As String
		Get
			Return Me._Telefono1
		End Get
		Set
			If (String.Equals(Me._Telefono1, value) = false) Then
				Me.OnTelefono1Changing(value)
				Me.SendPropertyChanging
				Me._Telefono1 = value
				Me.SendPropertyChanged("Telefono1")
				Me.OnTelefono1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono2", Storage:="_Telefono2", DbType:="Varchar(25)")>  _
	Public Property Telefono2() As String
		Get
			Return Me._Telefono2
		End Get
		Set
			If (String.Equals(Me._Telefono2, value) = false) Then
				Me.OnTelefono2Changing(value)
				Me.SendPropertyChanging
				Me._Telefono2 = value
				Me.SendPropertyChanged("Telefono2")
				Me.OnTelefono2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFax1", Storage:="_Fax1", DbType:="Varchar(25)")>  _
	Public Property Fax1() As String
		Get
			Return Me._Fax1
		End Get
		Set
			If (String.Equals(Me._Fax1, value) = false) Then
				Me.OnFax1Changing(value)
				Me.SendPropertyChanging
				Me._Fax1 = value
				Me.SendPropertyChanged("Fax1")
				Me.OnFax1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFax2", Storage:="_Fax2", DbType:="Varchar(25)")>  _
	Public Property Fax2() As String
		Get
			Return Me._Fax2
		End Get
		Set
			If (String.Equals(Me._Fax2, value) = false) Then
				Me.OnFax2Changing(value)
				Me.SendPropertyChanging
				Me._Fax2 = value
				Me.SendPropertyChanged("Fax2")
				Me.OnFax2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccion", Storage:="_Direccion", DbType:="Varchar(50)")>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInternet", Storage:="_Internet", DbType:="Varchar(50)")>  _
	Public Property Internet() As String
		Get
			Return Me._Internet
		End Get
		Set
			If (String.Equals(Me._Internet, value) = false) Then
				Me.OnInternetChanging(value)
				Me.SendPropertyChanging
				Me._Internet = value
				Me.SendPropertyChanged("Internet")
				Me.OnInternetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEMail", Storage:="_EMail", DbType:="Varchar(50)")>  _
	Public Property EMail() As String
		Get
			Return Me._EMail
		End Get
		Set
			If (String.Equals(Me._EMail, value) = false) Then
				Me.OnEMailChanging(value)
				Me.SendPropertyChanging
				Me._EMail = value
				Me.SendPropertyChanged("EMail")
				Me.OnEMailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPoblacion", Storage:="_IDPoblacion", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPoblacion() As Integer
		Get
			Return Me._IDPoblacion
		End Get
		Set
			If (Object.Equals(Me._IDPoblacion, value) = false) Then
				Me.OnIDPoblacionChanging(value)
				Me.SendPropertyChanging
				Me._IDPoblacion = value
				Me.SendPropertyChanged("IDPoblacion")
				Me.OnIDPoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDepartamento", Storage:="_IDDepartamento", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDDepartamento() As Integer
		Get
			Return Me._IDDepartamento
		End Get
		Set
			If (Object.Equals(Me._IDDepartamento, value) = false) Then
				Me.OnIDDepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._IDDepartamento = value
				Me.SendPropertyChanged("IDDepartamento")
				Me.OnIDDepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPais", Storage:="_IDPais", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPais() As Integer
		Get
			Return Me._IDPais
		End Get
		Set
			If (Object.Equals(Me._IDPais, value) = false) Then
				Me.OnIDPaisChanging(value)
				Me.SendPropertyChanging
				Me._IDPais = value
				Me.SendPropertyChanged("IDPais")
				Me.OnIDPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotas", Storage:="_Notas", DbType:="Varchar(50)")>  _
	Public Property Notas() As String
		Get
			Return Me._Notas
		End Get
		Set
			If (String.Equals(Me._Notas, value) = false) Then
				Me.OnNotasChanging(value)
				Me.SendPropertyChanging
				Me._Notas = value
				Me.SendPropertyChanged("Notas")
				Me.OnNotasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDComisionista", Storage:="_IDComisionista", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombrePoblacion", Storage:="_NombrePoblacion", DbType:="Varchar(50)")>  _
	Public Property NombrePoblacion() As String
		Get
			Return Me._NombrePoblacion
		End Get
		Set
			If (String.Equals(Me._NombrePoblacion, value) = false) Then
				Me.OnNombrePoblacionChanging(value)
				Me.SendPropertyChanging
				Me._NombrePoblacion = value
				Me.SendPropertyChanged("NombrePoblacion")
				Me.OnNombrePoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdTipoEntidad", DbType:="Smallint NOT null", CanBeNull:=false)>  _
	Public Property intIdTipoEntidad() As System.Nullable(Of int16)
		Get
			Return Me._intIdTipoEntidad
		End Get
		Set
			If (Object.Equals(Me._intIdTipoEntidad, value) = false) Then
				Me.OnintIdTipoEntidadChanging(value)
				Me.SendPropertyChanging
				Me._intIdTipoEntidad = value
				Me.SendPropertyChanged("intIdTipoEntidad")
				Me.OnintIdTipoEntidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoEntidad", DbType:="Varchar(max)")>  _
	Public Property strDescripcionTipoEntidad() As String
		Get
			Return Me._strDescripcionTipoEntidad
		End Get
		Set
			If (String.Equals(Me._strDescripcionTipoEntidad, value) = false) Then
				Me.OnstrDescripcionTipoEntidadChanging(value)
				Me.SendPropertyChanging
				Me._strDescripcionTipoEntidad = value
				Me.SendPropertyChanged("strDescripcionTipoEntidad")
				Me.OnstrDescripcionTipoEntidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="bit")>  _
	Public Property logActivo() As Boolean
		Get
			Return Me._logActivo
		End Get
		Set
			If ((Me._logActivo = value)  _
						= false) Then
				Me.OnlogActivoChanging(value)
				Me.SendPropertyChanging
				Me._logActivo = value
				Me.SendPropertyChanged("logActivo")
				Me.OnlogActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBancosNacionales")>  _
Partial Public Class BancosNacionale
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Id As Integer
	
	Private _CodACH As String
	
	Private _Nombre As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDBancoNacional As Integer
	
	Private _NroDocumento As String
	
	Private _DigitoChequeo As String
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
	Private _RelacionesCodBancos As EntitySet(Of RelacionesCodBanco)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnCodACHChanging(value As String)
    End Sub
    Partial Private Sub OnCodACHChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDBancoNacionalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBancoNacionalChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnDigitoChequeoChanging(value As String)
    End Sub
    Partial Private Sub OnDigitoChequeoChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RelacionesCodBancos = New EntitySet(Of RelacionesCodBanco)(AddressOf Me.attach_RelacionesCodBancos, AddressOf Me.detach_RelacionesCodBancos)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_Id", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If (Object.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodACH", Storage:="_CodACH", DbType:="Varchar(15)")>  _
	Public Property CodACH() As String
		Get
			Return Me._CodACH
		End Get
		Set
			If (String.Equals(Me._CodACH, value) = false) Then
				Me.OnCodACHChanging(value)
				Me.SendPropertyChanging
				Me._CodACH = value
				Me.SendPropertyChanged("CodACH")
				Me.OnCodACHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBancoNacional", Storage:="_IDBancoNacional", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDBancoNacional() As Integer
		Get
			Return Me._IDBancoNacional
		End Get
		Set
			If (Object.Equals(Me._IDBancoNacional, value) = false) Then
				Me.OnIDBancoNacionalChanging(value)
				Me.SendPropertyChanging
				Me._IDBancoNacional = value
				Me.SendPropertyChanged("IDBancoNacional")
				Me.OnIDBancoNacionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Char(15)")>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDigitoChequeo", Storage:="_DigitoChequeo", DbType:="Char(1)")>  _
	Public Property DigitoChequeo() As String
		Get
			Return Me._DigitoChequeo
		End Get
		Set
			If (String.Equals(Me._DigitoChequeo, value) = false) Then
				Me.OnDigitoChequeoChanging(value)
				Me.SendPropertyChanging
				Me._DigitoChequeo = value
				Me.SendPropertyChanged("DigitoChequeo")
				Me.OnDigitoChequeoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BancosNacionale_RelacionesCodBanco", Storage:="_RelacionesCodBancos", ThisKey:="Id", OtherKey:="IdCodBanco")>  _
	Public Property RelacionesCodBancos() As EntitySet(Of RelacionesCodBanco)
		Get
			Return Me._RelacionesCodBancos
		End Get
		Set
			Me._RelacionesCodBancos.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_RelacionesCodBancos(ByVal entity As RelacionesCodBanco)
		Me.SendPropertyChanging
		entity.BancosNacionale = Me
	End Sub
	
	Private Sub detach_RelacionesCodBancos(ByVal entity As RelacionesCodBanco)
		Me.SendPropertyChanging
		entity.BancosNacionale = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblRelacionesCodBancos")>  _
Partial Public Class RelacionesCodBanco
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdComisionista As Integer
	
	Private _IdSucComisionista As Integer
	
	Private _IdCodBanco As Integer
	
	Private _RelTecno As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _intIDRelacionCodBanco As Integer
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
	Private _BancosNacionale As EntityRef(Of BancosNacionale)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdComisionistaChanged()
    End Sub
    Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdCodBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCodBancoChanged()
    End Sub
    Partial Private Sub OnRelTecnoChanging(value As String)
    End Sub
    Partial Private Sub OnRelTecnoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnintIDRelacionCodBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDRelacionCodBancoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BancosNacionale = CType(Nothing, EntityRef(Of BancosNacionale))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdComisionista", Storage:="_IdComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdComisionista() As Integer
		Get
			Return Me._IdComisionista
		End Get
		Set
			If (Object.Equals(Me._IdComisionista, value) = false) Then
				Me.OnIdComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdComisionista = value
				Me.SendPropertyChanged("IdComisionista")
				Me.OnIdComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdSucComisionista() As Integer
		Get
			Return Me._IdSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IdSucComisionista, value) = false) Then
				Me.OnIdSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdSucComisionista = value
				Me.SendPropertyChanged("IdSucComisionista")
				Me.OnIdSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdCodBanco", Storage:="_IdCodBanco", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdCodBanco() As Integer
		Get
			Return Me._IdCodBanco
		End Get
		Set
			If (Object.Equals(Me._IdCodBanco, value) = false) Then
				Me.OnIdCodBancoChanging(value)
				Me.SendPropertyChanging
				Me._IdCodBanco = value
				Me.SendPropertyChanged("IdCodBanco")
				Me.OnIdCodBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRelTecno", Storage:="_RelTecno", DbType:="Varchar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property RelTecno() As String
		Get
			Return Me._RelTecno
		End Get
		Set
			If (String.Equals(Me._RelTecno, value) = false) Then
				Me.OnRelTecnoChanging(value)
				Me.SendPropertyChanging
				Me._RelTecno = value
				Me.SendPropertyChanged("RelTecno")
				Me.OnRelTecnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDRelacionCodBanco", AutoSync:=AutoSync.OnInsert, DbType:="Int", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property intIDRelacionCodBanco() As Integer
		Get
			Return Me._intIDRelacionCodBanco
		End Get
		Set
			If ((Me._intIDRelacionCodBanco = value)  _
						= false) Then
				Me.OnintIDRelacionCodBancoChanging(value)
				Me.SendPropertyChanging
				Me._intIDRelacionCodBanco = value
				Me.SendPropertyChanged("intIDRelacionCodBanco")
				Me.OnintIDRelacionCodBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BancosNacionale_RelacionesCodBanco", Storage:="_BancosNacionale", ThisKey:="IdCodBanco", OtherKey:="Id", IsForeignKey:=true)>  _
	Public Property BancosNacionale() As BancosNacionale
		Get
			Return Me._BancosNacionale.Entity
		End Get
		Set
			Dim previousValue As BancosNacionale = Me._BancosNacionale.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BancosNacionale.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BancosNacionale.Entity = Nothing
					previousValue.RelacionesCodBancos.Remove(Me)
				End If
				Me._BancosNacionale.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RelacionesCodBancos.Add(Me)
					Me._IdCodBanco = value.Id
				Else
					Me._IdCodBanco = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("BancosNacionale")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConsecutivosDocumentos")>  _
Partial Public Class ConsecutivosDocumento
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Documento As String
	
	Private _NombreConsecutivo As String
	
	Private _Descripcion As String
	
	Private _Cliente As Boolean
	
	Private _CuentaContable As Boolean
	
	Private _CuentaContable1 As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _PermiteCliente As String
	
	Private _TipoCuenta As String
	
	Private _IdTarifa As System.Nullable(Of Decimal)
	
	Private _Signo As String
	
	Private _sucursalConciliacion As String
	
	Private _IdSucursalSuvalor As System.Nullable(Of Decimal)
	
	Private _Concepto As System.Nullable(Of Boolean)
	
	Private _ComprobanteContable As String
	
	Private _IncluidoEnExtractoBanco As Boolean
	
	Private _IncluidoEnExtractoCliente As System.Nullable(Of Boolean)
	
	Private _IdMoneda As System.Nullable(Of System.int32)
	
	Private _IDConsecutivoDocumento As Integer
	
	Private _InfoSesion As String
	
	Private _Compania As Integer
	
	Private _NombreCompania As String
	
	Private _logExentoGMF As System.Nullable(of System.Boolean)
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnCuentaContableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCuentaContableChanged()
    End Sub
    Partial Private Sub OnCuentaContable1Changing(value As String)
    End Sub
    Partial Private Sub OnCuentaContable1Changed()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnPermiteClienteChanging(value As String)
    End Sub
    Partial Private Sub OnPermiteClienteChanged()
    End Sub
    Partial Private Sub OnTipoCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCuentaChanged()
    End Sub
    Partial Private Sub OnIdTarifaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIdTarifaChanged()
    End Sub
    Partial Private Sub OnSignoChanging(value As String)
    End Sub
    Partial Private Sub OnSignoChanged()
    End Sub
    Partial Private Sub OnsucursalConciliacionChanging(value As String)
    End Sub
    Partial Private Sub OnsucursalConciliacionChanged()
    End Sub
    Partial Private Sub OnIdSucursalSuvalorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIdSucursalSuvalorChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnComprobanteContableChanging(value As String)
    End Sub
    Partial Private Sub OnComprobanteContableChanged()
    End Sub
    Partial Private Sub OnIncluidoEnExtractoBancoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIncluidoEnExtractoBancoChanged()
    End Sub
    Partial Private Sub OnIncluidoEnExtractoClienteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIncluidoEnExtractoClienteChanged()
    End Sub
    Partial Private Sub OnIdMonedaChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIdMonedaChanged()
    End Sub
    Partial Private Sub OnIDConsecutivoDocumentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConsecutivoDocumentoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnCompaniaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCompaniaChanged()
    End Sub
    Partial Private Sub OnNombreCompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCompaniaChanged()
    End Sub
    Partial Private Sub OnlogExentoGMFChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogExentoGMFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDocumento", Storage:="_Documento", DbType:="Varchar(15) NOT NULL")>  _
	Public Property Documento() As String
		Get
			Return Me._Documento
		End Get
		Set
			If (String.Equals(Me._Documento, value) = false) Then
				Me.OnDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._Documento = value
				Me.SendPropertyChanged("Documento")
				Me.OnDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_NombreConsecutivo", DbType:="Varchar(15) NOT NULL")>  _
	Public Property NombreConsecutivo() As String
		Get
			Return Me._NombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivo, value) = false) Then
				Me.OnNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivo = value
				Me.SendPropertyChanged("NombreConsecutivo")
				Me.OnNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCliente", Storage:="_Cliente", DbType:="Bit NOT NULL")>  _
	Public Property Cliente() As Boolean
		Get
			Return Me._Cliente
		End Get
		Set
			If ((Me._Cliente = value)  _
						= false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCuentaContable", Storage:="_CuentaContable", DbType:="Bit NOT NULL")>  _
	Public Property CuentaContable() As Boolean
		Get
			Return Me._CuentaContable
		End Get
		Set
			If ((Me._CuentaContable = value)  _
						= false) Then
				Me.OnCuentaContableChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContable = value
				Me.SendPropertyChanged("CuentaContable")
				Me.OnCuentaContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable1", DbType:="Varchar(20)")>  _
	Public Property CuentaContable1() As String
		Get
			Return Me._CuentaContable1
		End Get
		Set
			If (String.Equals(Me._CuentaContable1, value) = false) Then
				Me.OnCuentaContable1Changing(value)
				Me.SendPropertyChanging
				Me._CuentaContable1 = value
				Me.SendPropertyChanged("CuentaContable1")
				Me.OnCuentaContable1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPermiteCliente", Storage:="_PermiteCliente", DbType:="Varchar(1)")>  _
	Public Property PermiteCliente() As String
		Get
			Return Me._PermiteCliente
		End Get
		Set
			If (String.Equals(Me._PermiteCliente, value) = false) Then
				Me.OnPermiteClienteChanging(value)
				Me.SendPropertyChanging
				Me._PermiteCliente = value
				Me.SendPropertyChanged("PermiteCliente")
				Me.OnPermiteClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCuenta", Storage:="_TipoCuenta", DbType:="Varchar(1) NOT NULL")>  _
	Public Property TipoCuenta() As String
		Get
			Return Me._TipoCuenta
		End Get
		Set
			If (String.Equals(Me._TipoCuenta, value) = false) Then
				Me.OnTipoCuentaChanging(value)
				Me.SendPropertyChanging
				Me._TipoCuenta = value
				Me.SendPropertyChanged("TipoCuenta")
				Me.OnTipoCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdTarifa", Storage:="_IdTarifa", DbType:="Int")>  _
	Public Property IdTarifa() As System.Nullable(Of Decimal)
		Get
			Return Me._IdTarifa
		End Get
		Set
			If (Me._IdTarifa.Equals(value) = false) Then
				Me.OnIdTarifaChanging(value)
				Me.SendPropertyChanging
				Me._IdTarifa = value
				Me.SendPropertyChanged("IdTarifa")
				Me.OnIdTarifaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSigno", Storage:="_Signo", DbType:="Varchar(5)")>  _
	Public Property Signo() As String
		Get
			Return Me._Signo
		End Get
		Set
			If (String.Equals(Me._Signo, value) = false) Then
				Me.OnSignoChanging(value)
				Me.SendPropertyChanging
				Me._Signo = value
				Me.SendPropertyChanged("Signo")
				Me.OnSignoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strsucursalConciliacion", Storage:="_sucursalConciliacion", DbType:="Varchar(4)")>  _
	Public Property sucursalConciliacion() As String
		Get
			Return Me._sucursalConciliacion
		End Get
		Set
			If (String.Equals(Me._sucursalConciliacion, value) = false) Then
				Me.OnsucursalConciliacionChanging(value)
				Me.SendPropertyChanging
				Me._sucursalConciliacion = value
				Me.SendPropertyChanged("sucursalConciliacion")
				Me.OnsucursalConciliacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucursalSuvalor", Storage:="_IdSucursalSuvalor", DbType:="Int")>  _
	Public Property IdSucursalSuvalor() As System.Nullable(Of Decimal)
		Get
			Return Me._IdSucursalSuvalor
		End Get
		Set
			If (Me._IdSucursalSuvalor.Equals(value) = false) Then
				Me.OnIdSucursalSuvalorChanging(value)
				Me.SendPropertyChanging
				Me._IdSucursalSuvalor = value
				Me.SendPropertyChanged("IdSucursalSuvalor")
				Me.OnIdSucursalSuvalorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logConcepto", Storage:="_Concepto", DbType:="Bit")>  _
	Public Property Concepto() As System.Nullable(Of Boolean)
		Get
			Return Me._Concepto
		End Get
		Set
			If (Me._Concepto.Equals(value) = false) Then
				Me.OnConceptoChanging(value)
				Me.SendPropertyChanging
				Me._Concepto = value
				Me.SendPropertyChanged("Concepto")
				Me.OnConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComprobanteContable", Storage:="_ComprobanteContable", DbType:="Varchar(15)")>  _
	Public Property ComprobanteContable() As String
		Get
			Return Me._ComprobanteContable
		End Get
		Set
			If (String.Equals(Me._ComprobanteContable, value) = false) Then
				Me.OnComprobanteContableChanging(value)
				Me.SendPropertyChanging
				Me._ComprobanteContable = value
				Me.SendPropertyChanged("ComprobanteContable")
				Me.OnComprobanteContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LogIncluidoEnExtractoBanco", Storage:="_IncluidoEnExtractoBanco", DbType:="Bit NOT NULL")>  _
	Public Property IncluidoEnExtractoBanco() As Boolean
		Get
			Return Me._IncluidoEnExtractoBanco
		End Get
		Set
			If ((Me._IncluidoEnExtractoBanco = value)  _
						= false) Then
				Me.OnIncluidoEnExtractoBancoChanging(value)
				Me.SendPropertyChanging
				Me._IncluidoEnExtractoBanco = value
				Me.SendPropertyChanged("IncluidoEnExtractoBanco")
				Me.OnIncluidoEnExtractoBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LogIncluidoEnExtractoCliente", Storage:="_IncluidoEnExtractoCliente", DbType:="Bit NULL")>  _
	Public Property IncluidoEnExtractoCliente() As System.Nullable(Of Boolean)
		Get
			Return Me._IncluidoEnExtractoCliente
		End Get
		Set
			If (Me._IncluidoEnExtractoCliente.Equals(value) = false) Then
				Me.OnIncluidoEnExtractoClienteChanging(value)
				Me.SendPropertyChanging
				Me._IncluidoEnExtractoCliente = value
				Me.SendPropertyChanged("IncluidoEnExtractoCliente")
				Me.OnIncluidoEnExtractoClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdMoneda", Storage:="_IdMoneda", DbType:="Int NULL", CanBeNull:=true)>  _
	Public Property IdMoneda() As System.Nullable(Of System.int32)
		Get
			Return Me._IdMoneda
		End Get
		Set
			If (Object.Equals(Me._IdMoneda, value) = false) Then
				Me.OnIdMonedaChanging(value)
				Me.SendPropertyChanging
				Me._IdMoneda = value
				Me.SendPropertyChanged("IdMoneda")
				Me.OnIdMonedaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConsecutivoDocumento", Storage:="_IDConsecutivoDocumento", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDConsecutivoDocumento() As Integer
		Get
			Return Me._IDConsecutivoDocumento
		End Get
		Set
			If (Object.Equals(Me._IDConsecutivoDocumento, value) = false) Then
				Me.OnIDConsecutivoDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._IDConsecutivoDocumento = value
				Me.SendPropertyChanged("IDConsecutivoDocumento")
				Me.OnIDConsecutivoDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCompania", Storage:="_Compania", DbType:="Int", CanBeNull:=true)>  _
	Public Property Compania() As Integer
		Get
			Return Me._Compania
		End Get
		Set
			If (Object.Equals(Me._Compania, value) = false) Then
				Me.OnCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._Compania = value
				Me.SendPropertyChanged("Compania")
				Me.OnCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCompania", Storage:="_NombreCompania", DbType:="Varchar(50)")>  _
	Public Property NombreCompania() As String
		Get
			Return Me._NombreCompania
		End Get
		Set
			If (String.Equals(Me._NombreCompania, value) = false) Then
				Me.OnNombreCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._NombreCompania = value
				Me.SendPropertyChanged("NombreCompania")
				Me.OnNombreCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExentoGMF", DbType:="bit", CanBeNull:=true)>  _
	Public Property logExentoGMF() As System.Nullable(of System.Boolean)
		Get
			Return Me._logExentoGMF
		End Get
		Set
			If (Object.Equals(Me._logExentoGMF, value) = false) Then
				Me.OnlogExentoGMFChanging(value)
				Me.SendPropertyChanging
				Me._logExentoGMF = value
				Me.SendPropertyChanged("logExentoGMF")
				Me.OnlogExentoGMFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCuentasContablesOyD")>  _
Partial Public Class CuentasContablesOy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As String
	
	Private _Nombre As String
	
	Private _Naturaleza As String
	
	Private _DctoAsociado As String
	
	Private _actualizacion As Date
	
	Private _CuentaTerceros As Boolean
	
	Private _CCostos As Boolean
	
	Private _Usuario As String
	
	Private _IDCuentaContable As Integer
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNaturalezaChanging(value As String)
    End Sub
    Partial Private Sub OnNaturalezaChanged()
    End Sub
    Partial Private Sub OnDctoAsociadoChanging(value As String)
    End Sub
    Partial Private Sub OnDctoAsociadoChanged()
    End Sub
    Partial Private Sub OnactualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnactualizacionChanged()
    End Sub
    Partial Private Sub OnCuentaTercerosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCuentaTercerosChanged()
    End Sub
    Partial Private Sub OnCCostosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCCostosChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCuentaContableChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCuentaContableChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strID", Storage:="_ID", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNaturaleza", Storage:="_Naturaleza", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Naturaleza() As String
		Get
			Return Me._Naturaleza
		End Get
		Set
			If (String.Equals(Me._Naturaleza, value) = false) Then
				Me.OnNaturalezaChanging(value)
				Me.SendPropertyChanging
				Me._Naturaleza = value
				Me.SendPropertyChanged("Naturaleza")
				Me.OnNaturalezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDctoAsociado", Storage:="_DctoAsociado", DbType:="Varchar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property DctoAsociado() As String
		Get
			Return Me._DctoAsociado
		End Get
		Set
			If (String.Equals(Me._DctoAsociado, value) = false) Then
				Me.OnDctoAsociadoChanging(value)
				Me.SendPropertyChanging
				Me._DctoAsociado = value
				Me.SendPropertyChanged("DctoAsociado")
				Me.OnDctoAsociadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmactualizacion", Storage:="_actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property actualizacion() As Date
		Get
			Return Me._actualizacion
		End Get
		Set
			If ((Me._actualizacion = value)  _
						= false) Then
				Me.OnactualizacionChanging(value)
				Me.SendPropertyChanging
				Me._actualizacion = value
				Me.SendPropertyChanged("actualizacion")
				Me.OnactualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCuentaTerceros", Storage:="_CuentaTerceros", DbType:="Bit NOT NULL")>  _
	Public Property CuentaTerceros() As Boolean
		Get
			Return Me._CuentaTerceros
		End Get
		Set
			If ((Me._CuentaTerceros = value)  _
						= false) Then
				Me.OnCuentaTercerosChanging(value)
				Me.SendPropertyChanging
				Me._CuentaTerceros = value
				Me.SendPropertyChanged("CuentaTerceros")
				Me.OnCuentaTercerosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCCostos", Storage:="_CCostos", DbType:="Bit NOT NULL")>  _
	Public Property CCostos() As Boolean
		Get
			Return Me._CCostos
		End Get
		Set
			If ((Me._CCostos = value)  _
						= false) Then
				Me.OnCCostosChanging(value)
				Me.SendPropertyChanging
				Me._CCostos = value
				Me.SendPropertyChanged("CCostos")
				Me.OnCCostosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCuentaContable", Storage:="_IDCuentaContable", DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IDCuentaContable() As Integer
		Get
			Return Me._IDCuentaContable
		End Get
		Set
			If (Object.Equals(Me._IDCuentaContable, value) = false) Then
				Me.OnIDCuentaContableChanging(value)
				Me.SendPropertyChanging
				Me._IDCuentaContable = value
				Me.SendPropertyChanged("IDCuentaContable")
				Me.OnIDCuentaContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblInhabilitados")>  _
Partial Public Class Inhabilitado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _idcomisionista As Integer
	
	Private _idsuccomisionista As Integer
	
	Private _tipoidentificacion As String
	
	Private _nrodocumento As String
	
	Private _nombre As String
	
	Private _idconcepto As Integer
	
	Private _ingreso As Date
	
	Private _actualizacion As Date
	
	Private _usuario As String
	
	Private _IDInhabilitado As Integer
	
	Private _DescripcionIdentificacion As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidcomisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnidcomisionistaChanged()
    End Sub
    Partial Private Sub OnidsuccomisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnidsuccomisionistaChanged()
    End Sub
    Partial Private Sub OntipoidentificacionChanging(value As String)
    End Sub
    Partial Private Sub OntipoidentificacionChanged()
    End Sub
    Partial Private Sub OnnrodocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnnrodocumentoChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OnidconceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnidconceptoChanged()
    End Sub
    Partial Private Sub OningresoChanging(value As Date)
    End Sub
    Partial Private Sub OningresoChanged()
    End Sub
    Partial Private Sub OnactualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnactualizacionChanged()
    End Sub
    Partial Private Sub OnusuarioChanging(value As String)
    End Sub
    Partial Private Sub OnusuarioChanged()
    End Sub
    Partial Private Sub OnIDInhabilitadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDInhabilitadoChanged()
    End Sub
    Partial Private Sub OnDescripcionIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionIdentificacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidcomisionista", Storage:="_idcomisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property idcomisionista() As Integer
		Get
			Return Me._idcomisionista
		End Get
		Set
			If (Object.Equals(Me._idcomisionista, value) = false) Then
				Me.OnidcomisionistaChanging(value)
				Me.SendPropertyChanging
				Me._idcomisionista = value
				Me.SendPropertyChanged("idcomisionista")
				Me.OnidcomisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidsuccomisionista", Storage:="_idsuccomisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property idsuccomisionista() As Integer
		Get
			Return Me._idsuccomisionista
		End Get
		Set
			If (Object.Equals(Me._idsuccomisionista, value) = false) Then
				Me.OnidsuccomisionistaChanging(value)
				Me.SendPropertyChanging
				Me._idsuccomisionista = value
				Me.SendPropertyChanged("idsuccomisionista")
				Me.OnidsuccomisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strtipoidentificacion", Storage:="_tipoidentificacion", DbType:="Char(3) NULL")>  _
	Public Property tipoidentificacion() As String
		Get
			Return Me._tipoidentificacion
		End Get
		Set
			If (String.Equals(Me._tipoidentificacion, value) = false) Then
				Me.OntipoidentificacionChanging(value)
				Me.SendPropertyChanging
				Me._tipoidentificacion = value
				Me.SendPropertyChanged("tipoidentificacion")
				Me.OntipoidentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngnrodocumento", Storage:="_nrodocumento", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property nrodocumento() As String
		Get
			Return Me._nrodocumento
		End Get
		Set
			If (String.Equals(Me._nrodocumento, value) = false) Then
				Me.OnnrodocumentoChanging(value)
				Me.SendPropertyChanging
				Me._nrodocumento = value
				Me.SendPropertyChanged("nrodocumento")
				Me.OnnrodocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strnombre", Storage:="_nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidconcepto", Storage:="_idconcepto", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property idconcepto() As Integer
		Get
			Return Me._idconcepto
		End Get
		Set
			If (Object.Equals(Me._idconcepto, value) = false) Then
				Me.OnidconceptoChanging(value)
				Me.SendPropertyChanging
				Me._idconcepto = value
				Me.SendPropertyChanged("idconcepto")
				Me.OnidconceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmingreso", Storage:="_ingreso", DbType:="Datetime NOT NULL")>  _
	Public Property ingreso() As Date
		Get
			Return Me._ingreso
		End Get
		Set
			If ((Me._ingreso = value)  _
						= false) Then
				Me.OningresoChanging(value)
				Me.SendPropertyChanging
				Me._ingreso = value
				Me.SendPropertyChanged("ingreso")
				Me.OningresoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmactualizacion", Storage:="_actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property actualizacion() As Date
		Get
			Return Me._actualizacion
		End Get
		Set
			If ((Me._actualizacion = value)  _
						= false) Then
				Me.OnactualizacionChanging(value)
				Me.SendPropertyChanging
				Me._actualizacion = value
				Me.SendPropertyChanged("actualizacion")
				Me.OnactualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strusuario", Storage:="_usuario", DbType:="Varchar(60)")>  _
	Public Property usuario() As String
		Get
			Return Me._usuario
		End Get
		Set
			If (String.Equals(Me._usuario, value) = false) Then
				Me.OnusuarioChanging(value)
				Me.SendPropertyChanging
				Me._usuario = value
				Me.SendPropertyChanged("usuario")
				Me.OnusuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDInhabilitado", Storage:="_IDInhabilitado", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDInhabilitado() As Integer
		Get
			Return Me._IDInhabilitado
		End Get
		Set
			If (Object.Equals(Me._IDInhabilitado, value) = false) Then
				Me.OnIDInhabilitadoChanging(value)
				Me.SendPropertyChanging
				Me._IDInhabilitado = value
				Me.SendPropertyChanged("IDInhabilitado")
				Me.OnIDInhabilitadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_DescripcionIdentificacion", DbType:="Varchar(50)")>  _
	Public Property DescripcionIdentificacion() As String
		Get
			Return Me._DescripcionIdentificacion
		End Get
		Set
			If (String.Equals(Me._DescripcionIdentificacion, value) = false) Then
				Me.OnDescripcionIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionIdentificacion = value
				Me.SendPropertyChanged("DescripcionIdentificacion")
				Me.OnDescripcionIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEmpleados")>  _
Partial Public Class Empleado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDEmpleado As Integer
	
	Private _Nombre As String
	
	Private _NroDocumento As String
	
	Private _IDReceptor As String
	
	Private _Login As String
	
	Private _IDCargo As Integer
	
	Private _AccesoOperadorBolsa As System.Nullable(of System.Boolean)
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _Activo As Boolean
	
	Private _InfoSesion As String
	
	Private _strEmail As String
	
	Private _Maquinas As String
	
	Private _TipoIdentificacion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
	Private _EmpleadosSistemas As EntitySet(Of EmpleadoSistema)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDEmpleadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEmpleadoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorChanged()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnIDCargoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCargoChanged()
    End Sub
    Partial Private Sub OnAccesoOperadorBolsaChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnAccesoOperadorBolsaChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrEmailChanging(value As String)
    End Sub
    Partial Private Sub OnstrEmailChanged()
    End Sub
    Partial Private Sub OnMaquinasChanging(value As String)
    End Sub
    Partial Private Sub OnMaquinasChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._EmpleadosSistemas = New EntitySet(Of EmpleadoSistema)(AddressOf Me.attach_EmpleadosSistemas, AddressOf Me.detach_EmpleadosSistemas)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDEmpleado", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDEmpleado() As Integer
		Get
			Return Me._IDEmpleado
		End Get
		Set
			If (Object.Equals(Me._IDEmpleado, value) = false) Then
				Me.OnIDEmpleadoChanging(value)
				Me.SendPropertyChanging
				Me._IDEmpleado = value
				Me.SendPropertyChanged("IDEmpleado")
				Me.OnIDEmpleadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(250) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4)")>  _
	Public Property IDReceptor() As String
		Get
			Return Me._IDReceptor
		End Get
		Set
			If (String.Equals(Me._IDReceptor, value) = false) Then
				Me.OnIDReceptorChanging(value)
				Me.SendPropertyChanging
				Me._IDReceptor = value
				Me.SendPropertyChanged("IDReceptor")
				Me.OnIDReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Login() As String
		Get
			Return Me._Login
		End Get
		Set
			If (String.Equals(Me._Login, value) = false) Then
				Me.OnLoginChanging(value)
				Me.SendPropertyChanging
				Me._Login = value
				Me.SendPropertyChanged("Login")
				Me.OnLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCargo", Storage:="_IDCargo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDCargo() As Integer
		Get
			Return Me._IDCargo
		End Get
		Set
			If (Object.Equals(Me._IDCargo, value) = false) Then
				Me.OnIDCargoChanging(value)
				Me.SendPropertyChanging
				Me._IDCargo = value
				Me.SendPropertyChanged("IDCargo")
				Me.OnIDCargoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAccesoOperadorBolsa", Storage:="_AccesoOperadorBolsa", DbType:="Bit", CanBeNull:=true)>  _
	Public Property AccesoOperadorBolsa() As System.Nullable(of System.Boolean)
		Get
			Return Me._AccesoOperadorBolsa
		End Get
		Set
			If (Object.Equals(Me._AccesoOperadorBolsa, value) = false) Then
				Me.OnAccesoOperadorBolsaChanging(value)
				Me.SendPropertyChanging
				Me._AccesoOperadorBolsa = value
				Me.SendPropertyChanged("AccesoOperadorBolsa")
				Me.OnAccesoOperadorBolsaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEmail", DbType:="Varchar(60)  NULL")>  _
	Public Property strEmail() As String
		Get
			Return Me._strEmail
		End Get
		Set
			If (String.Equals(Me._strEmail, value) = false) Then
				Me.OnstrEmailChanging(value)
				Me.SendPropertyChanging
				Me._strEmail = value
				Me.SendPropertyChanged("strEmail")
				Me.OnstrEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMaquinas", Storage:="_Maquinas", DbType:="Varchar(300)  NULL")>  _
	Public Property Maquinas() As String
		Get
			Return Me._Maquinas
		End Get
		Set
			If (String.Equals(Me._Maquinas, value) = false) Then
				Me.OnMaquinasChanging(value)
				Me.SendPropertyChanging
				Me._Maquinas = value
				Me.SendPropertyChanged("Maquinas")
				Me.OnMaquinasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(1)  NULL")>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Empleado_EmpleadoSistema", Storage:="_EmpleadosSistemas", ThisKey:="IDEmpleado", OtherKey:="IDEmpleado")>  _
	Public Property EmpleadosSistemas() As EntitySet(Of EmpleadoSistema)
		Get
			Return Me._EmpleadosSistemas
		End Get
		Set
			Me._EmpleadosSistemas.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_EmpleadosSistemas(ByVal entity As EmpleadoSistema)
		Me.SendPropertyChanging
		entity.Empleados = Me
	End Sub
	
	Private Sub detach_EmpleadosSistemas(ByVal entity As EmpleadoSistema)
		Me.SendPropertyChanging
		entity.Empleados = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPrefijosFacturas")>  _
Partial Public Class PrefijosFactura
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Prefijo As String
	
	Private _NombreConsecutivo As String
	
	Private _Descripcion As String
	
	Private _Tipo As String
	
	Private _NombreCuenta As String
	
	Private _TextoResolucion As String
	
	Private _IntervaloRes As String
	
	Private _ResponsabilidadIVA As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _FechaVencimiento As System.Nullable(Of Date)
	
	Private _Alarma As System.Nullable(Of Boolean)
	
	Private _IDCodigoResolucion As Integer
	
	Private _IDPrefijoFacturas As Integer
	
	Private _SucursalAplica As Integer
	
	Private _Resolucion As String
	
	Private _AnoRes As String
	
	Private _Vigiladopor As String
	
	Private _FechaDesde As System.Nullable(Of Date)
	
	Private _FechaHasta As System.Nullable(Of Date)
	
	Private _numDiasPreviosNoti As Integer
	
	Private _numCantConsPrevNoti As Integer
	
	Private _numDiasPeriodicidadNoti As Integer
	
	Private _DestinatariosNoti As String
	
	Private _FechaUltNoti As System.Nullable(Of Date)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnNombreCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCuentaChanged()
    End Sub
    Partial Private Sub OnTextoResolucionChanging(value As String)
    End Sub
    Partial Private Sub OnTextoResolucionChanged()
    End Sub
    Partial Private Sub OnIntervaloResChanging(value As String)
    End Sub
    Partial Private Sub OnIntervaloResChanged()
    End Sub
    Partial Private Sub OnResponsabilidadIVAChanging(value As String)
    End Sub
    Partial Private Sub OnResponsabilidadIVAChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnFechaVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaVencimientoChanged()
    End Sub
    Partial Private Sub OnAlarmaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAlarmaChanged()
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanged()
    End Sub
    Partial Private Sub OnIDPrefijoFacturasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPrefijoFacturasChanged()
    End Sub
    Partial Private Sub OnSucursalAplicaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSucursalAplicaChanged()
    End Sub
    Partial Private Sub OnResolucionChanging(value As String)
    End Sub
    Partial Private Sub OnResolucionChanged()
    End Sub
    Partial Private Sub OnAnoResChanging(value As String)
    End Sub
    Partial Private Sub OnAnoResChanged()
    End Sub
    Partial Private Sub OnVigiladoporChanging(value As String)
    End Sub
    Partial Private Sub OnVigiladoporChanged()
    End Sub
    Partial Private Sub OnFechaDesdeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaDesdeChanged()
    End Sub
    Partial Private Sub OnFechaHastaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaHastaChanged()
    End Sub
    Partial Private Sub OnnumDiasPreviosNotiChanging(value As Integer)
    End Sub
    Partial Private Sub OnnumDiasPreviosNotiChanged()
    End Sub
    Partial Private Sub OnnumCantConsPrevNotiChanging(value As Integer)
    End Sub
    Partial Private Sub OnnumCantConsPrevNotiChanged()
    End Sub
    Partial Private Sub OnnumDiasPeriodicidadNotiChanging(value As Integer)
    End Sub
    Partial Private Sub OnnumDiasPeriodicidadNotiChanged()
    End Sub
    Partial Private Sub OnDestinatariosNotiChanging(value As String)
    End Sub
    Partial Private Sub OnDestinatariosNotiChanged()
    End Sub
    Partial Private Sub OnFechaUltNotiChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaUltNotiChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property Prefijo() As String
		Get
			Return Me._Prefijo
		End Get
		Set
			If (String.Equals(Me._Prefijo, value) = false) Then
				Me.OnPrefijoChanging(value)
				Me.SendPropertyChanging
				Me._Prefijo = value
				Me.SendPropertyChanged("Prefijo")
				Me.OnPrefijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_NombreConsecutivo", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreConsecutivo() As String
		Get
			Return Me._NombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivo, value) = false) Then
				Me.OnNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivo = value
				Me.SendPropertyChanged("NombreConsecutivo")
				Me.OnNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCuenta", Storage:="_NombreCuenta", DbType:="Varchar(25)")>  _
	Public Property NombreCuenta() As String
		Get
			Return Me._NombreCuenta
		End Get
		Set
			If (String.Equals(Me._NombreCuenta, value) = false) Then
				Me.OnNombreCuentaChanging(value)
				Me.SendPropertyChanging
				Me._NombreCuenta = value
				Me.SendPropertyChanged("NombreCuenta")
				Me.OnNombreCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrTextoResolucion", Storage:="_TextoResolucion", DbType:="Varchar(80)")>  _
	Public Property TextoResolucion() As String
		Get
			Return Me._TextoResolucion
		End Get
		Set
			If (String.Equals(Me._TextoResolucion, value) = false) Then
				Me.OnTextoResolucionChanging(value)
				Me.SendPropertyChanging
				Me._TextoResolucion = value
				Me.SendPropertyChanged("TextoResolucion")
				Me.OnTextoResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrIntervaloRes", Storage:="_IntervaloRes", DbType:="Varchar(80)")>  _
	Public Property IntervaloRes() As String
		Get
			Return Me._IntervaloRes
		End Get
		Set
			If (String.Equals(Me._IntervaloRes, value) = false) Then
				Me.OnIntervaloResChanging(value)
				Me.SendPropertyChanging
				Me._IntervaloRes = value
				Me.SendPropertyChanged("IntervaloRes")
				Me.OnIntervaloResChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrResponsabilidadIVA", Storage:="_ResponsabilidadIVA", DbType:="Varchar(80)")>  _
	Public Property ResponsabilidadIVA() As String
		Get
			Return Me._ResponsabilidadIVA
		End Get
		Set
			If (String.Equals(Me._ResponsabilidadIVA, value) = false) Then
				Me.OnResponsabilidadIVAChanging(value)
				Me.SendPropertyChanging
				Me._ResponsabilidadIVA = value
				Me.SendPropertyChanged("ResponsabilidadIVA")
				Me.OnResponsabilidadIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaVencimiento", Storage:="_FechaVencimiento", DbType:="Datetime")>  _
	Public Property FechaVencimiento() As System.Nullable(Of Date)
		Get
			Return Me._FechaVencimiento
		End Get
		Set
			If (Me._FechaVencimiento.Equals(value) = false) Then
				Me.OnFechaVencimientoChanging(value)
				Me.SendPropertyChanging
				Me._FechaVencimiento = value
				Me.SendPropertyChanged("FechaVencimiento")
				Me.OnFechaVencimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAlarma", Storage:="_Alarma", DbType:="Bit")>  _
	Public Property Alarma() As System.Nullable(Of Boolean)
		Get
			Return Me._Alarma
		End Get
		Set
			If (Me._Alarma.Equals(value) = false) Then
				Me.OnAlarmaChanging(value)
				Me.SendPropertyChanging
				Me._Alarma = value
				Me.SendPropertyChanged("Alarma")
				Me.OnAlarmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCodigoResolucion", Storage:="_IDCodigoResolucion", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDCodigoResolucion() As Integer
		Get
			Return Me._IDCodigoResolucion
		End Get
		Set
			If (Object.Equals(Me._IDCodigoResolucion, value) = false) Then
				Me.OnIDCodigoResolucionChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigoResolucion = value
				Me.SendPropertyChanged("IDCodigoResolucion")
				Me.OnIDCodigoResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDPrefijoFacturas", Storage:="_IDPrefijoFacturas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDPrefijoFacturas() As Integer
		Get
			Return Me._IDPrefijoFacturas
		End Get
		Set
			If (Object.Equals(Me._IDPrefijoFacturas, value) = false) Then
				Me.OnIDPrefijoFacturasChanging(value)
				Me.SendPropertyChanging
				Me._IDPrefijoFacturas = value
				Me.SendPropertyChanged("IDPrefijoFacturas")
				Me.OnIDPrefijoFacturasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSucursalAplica", Storage:="_SucursalAplica", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property SucursalAplica() As Integer
		Get
			Return Me._SucursalAplica
		End Get
		Set
			If (Object.Equals(Me._SucursalAplica, value) = false) Then
				Me.OnSucursalAplicaChanging(value)
				Me.SendPropertyChanging
				Me._SucursalAplica = value
				Me.SendPropertyChanged("SucursalAplica")
				Me.OnSucursalAplicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strResolucion", Storage:="_Resolucion", DbType:="Varchar(150)")>  _
	Public Property Resolucion() As String
		Get
			Return Me._Resolucion
		End Get
		Set
			If (String.Equals(Me._Resolucion, value) = false) Then
				Me.OnResolucionChanging(value)
				Me.SendPropertyChanging
				Me._Resolucion = value
				Me.SendPropertyChanged("Resolucion")
				Me.OnResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAnoRes", Storage:="_AnoRes", DbType:="Varchar(10)")>  _
	Public Property AnoRes() As String
		Get
			Return Me._AnoRes
		End Get
		Set
			If (String.Equals(Me._AnoRes, value) = false) Then
				Me.OnAnoResChanging(value)
				Me.SendPropertyChanging
				Me._AnoRes = value
				Me.SendPropertyChanged("AnoRes")
				Me.OnAnoResChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strVigiladopor", Storage:="_Vigiladopor", DbType:="VARCHAR (8000)")>  _
	Public Property Vigiladopor() As String
		Get
			Return Me._Vigiladopor
		End Get
		Set
			If (String.Equals(Me._Vigiladopor, value) = false) Then
				Me.OnVigiladoporChanging(value)
				Me.SendPropertyChanging
				Me._Vigiladopor = value
				Me.SendPropertyChanged("Vigiladopor")
				Me.OnVigiladoporChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaDesde", Storage:="_FechaDesde", DbType:="Datetime")>  _
	Public Property FechaDesde() As System.Nullable(Of Date)
		Get
			Return Me._FechaDesde
		End Get
		Set
			If (Me._FechaDesde.Equals(value) = false) Then
				Me.OnFechaDesdeChanging(value)
				Me.SendPropertyChanging
				Me._FechaDesde = value
				Me.SendPropertyChanged("FechaDesde")
				Me.OnFechaDesdeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaHasta", Storage:="_FechaHasta", DbType:="Datetime")>  _
	Public Property FechaHasta() As System.Nullable(Of Date)
		Get
			Return Me._FechaHasta
		End Get
		Set
			If (Me._FechaHasta.Equals(value) = false) Then
				Me.OnFechaHastaChanging(value)
				Me.SendPropertyChanging
				Me._FechaHasta = value
				Me.SendPropertyChanged("FechaHasta")
				Me.OnFechaHastaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngnumDiasPreviosNoti", Storage:="_numDiasPreviosNoti", DbType:="Int NOT NULL", CanBeNull:=true)>  _
	Public Property numDiasPreviosNoti() As Integer
		Get
			Return Me._numDiasPreviosNoti
		End Get
		Set
			If (Object.Equals(Me._numDiasPreviosNoti, value) = false) Then
				Me.OnnumDiasPreviosNotiChanging(value)
				Me.SendPropertyChanging
				Me._numDiasPreviosNoti = value
				Me.SendPropertyChanged("numDiasPreviosNoti")
				Me.OnnumDiasPreviosNotiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngnumCantConsPrevNoti", Storage:="_numCantConsPrevNoti", DbType:="Int NOT NULL", CanBeNull:=true)>  _
	Public Property numCantConsPrevNoti() As Integer
		Get
			Return Me._numCantConsPrevNoti
		End Get
		Set
			If (Object.Equals(Me._numCantConsPrevNoti, value) = false) Then
				Me.OnnumCantConsPrevNotiChanging(value)
				Me.SendPropertyChanging
				Me._numCantConsPrevNoti = value
				Me.SendPropertyChanged("numCantConsPrevNoti")
				Me.OnnumCantConsPrevNotiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngnumDiasPeriodicidadNoti", Storage:="_numDiasPeriodicidadNoti", DbType:="Int NOT NULL", CanBeNull:=true)>  _
	Public Property numDiasPeriodicidadNoti() As Integer
		Get
			Return Me._numDiasPeriodicidadNoti
		End Get
		Set
			If (Object.Equals(Me._numDiasPeriodicidadNoti, value) = false) Then
				Me.OnnumDiasPeriodicidadNotiChanging(value)
				Me.SendPropertyChanging
				Me._numDiasPeriodicidadNoti = value
				Me.SendPropertyChanged("numDiasPeriodicidadNoti")
				Me.OnnumDiasPeriodicidadNotiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDestinatariosNoti", Storage:="_DestinatariosNoti", DbType:="VARCHAR (8000)")>  _
	Public Property DestinatariosNoti() As String
		Get
			Return Me._DestinatariosNoti
		End Get
		Set
			If (String.Equals(Me._DestinatariosNoti, value) = false) Then
				Me.OnDestinatariosNotiChanging(value)
				Me.SendPropertyChanging
				Me._DestinatariosNoti = value
				Me.SendPropertyChanged("DestinatariosNoti")
				Me.OnDestinatariosNotiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaUltNoti", Storage:="_FechaUltNoti", DbType:="Datetime")>  _
	Public Property FechaUltNoti() As System.Nullable(Of Date)
		Get
			Return Me._FechaUltNoti
		End Get
		Set
			If (Me._FechaUltNoti.Equals(value) = false) Then
				Me.OnFechaUltNotiChanging(value)
				Me.SendPropertyChanging
				Me._FechaUltNoti = value
				Me.SendPropertyChanged("FechaUltNoti")
				Me.OnFechaUltNotiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDepositosExtranjeros")>  _
Partial Public Class DepositosExtranjero
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDdeposito As Integer
	
	Private _Nombre As String
	
	Private _IDPais As Integer
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDdepositoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDdepositoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDdeposito", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDdeposito() As Integer
		Get
			Return Me._IDdeposito
		End Get
		Set
			If (Object.Equals(Me._IDdeposito, value) = false) Then
				Me.OnIDdepositoChanging(value)
				Me.SendPropertyChanging
				Me._IDdeposito = value
				Me.SendPropertyChanged("IDdeposito")
				Me.OnIDdepositoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPais", Storage:="_IDPais", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPais() As Integer
		Get
			Return Me._IDPais
		End Get
		Set
			If (Object.Equals(Me._IDPais, value) = false) Then
				Me.OnIDPaisChanging(value)
				Me.SendPropertyChanging
				Me._IDPais = value
				Me.SendPropertyChanged("IDPais")
				Me.OnIDPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConsecutivos")>  _
Partial Public Class Consecutivo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDOwner As String
	
	Private _DescripcionIDOwner As String
	
	Private _NombreConsecutivo As String
	
	Private _Descripcion As String
	
	Private _Minimo As Integer
	
	Private _Maximo As Integer
	
	Private _Actual As Integer
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _CodContabilidad As String
	
	Private _Activo As Boolean
	
	Private _IdConsecutivos As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnIDOwnerChanged()
    End Sub
    Partial Private Sub OnDescripcionIDOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionIDOwnerChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnMinimoChanging(value As Integer)
    End Sub
    Partial Private Sub OnMinimoChanged()
    End Sub
    Partial Private Sub OnMaximoChanging(value As Integer)
    End Sub
    Partial Private Sub OnMaximoChanged()
    End Sub
    Partial Private Sub OnActualChanging(value As Integer)
    End Sub
    Partial Private Sub OnActualChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCodContabilidadChanging(value As String)
    End Sub
    Partial Private Sub OnCodContabilidadChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnIdConsecutivosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdConsecutivosChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDOwner", Storage:="_IDOwner", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property IDOwner() As String
		Get
			Return Me._IDOwner
		End Get
		Set
			If (String.Equals(Me._IDOwner, value) = false) Then
				Me.OnIDOwnerChanging(value)
				Me.SendPropertyChanging
				Me._IDOwner = value
				Me.SendPropertyChanged("IDOwner")
				Me.OnIDOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionIDOwner", Storage:="_DescripcionIDOwner", DbType:="Varchar(50)")>  _
	Public Property DescripcionIDOwner() As String
		Get
			Return Me._DescripcionIDOwner
		End Get
		Set
			If (String.Equals(Me._DescripcionIDOwner, value) = false) Then
				Me.OnDescripcionIDOwnerChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionIDOwner = value
				Me.SendPropertyChanged("DescripcionIDOwner")
				Me.OnDescripcionIDOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_NombreConsecutivo", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreConsecutivo() As String
		Get
			Return Me._NombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivo, value) = false) Then
				Me.OnNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivo = value
				Me.SendPropertyChanged("NombreConsecutivo")
				Me.OnNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngMinimo", Storage:="_Minimo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Minimo() As Integer
		Get
			Return Me._Minimo
		End Get
		Set
			If (Object.Equals(Me._Minimo, value) = false) Then
				Me.OnMinimoChanging(value)
				Me.SendPropertyChanging
				Me._Minimo = value
				Me.SendPropertyChanged("Minimo")
				Me.OnMinimoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngMaximo", Storage:="_Maximo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Maximo() As Integer
		Get
			Return Me._Maximo
		End Get
		Set
			If (Object.Equals(Me._Maximo, value) = false) Then
				Me.OnMaximoChanging(value)
				Me.SendPropertyChanging
				Me._Maximo = value
				Me.SendPropertyChanged("Maximo")
				Me.OnMaximoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngActual", Storage:="_Actual", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Actual() As Integer
		Get
			Return Me._Actual
		End Get
		Set
			If (Object.Equals(Me._Actual, value) = false) Then
				Me.OnActualChanging(value)
				Me.SendPropertyChanging
				Me._Actual = value
				Me.SendPropertyChanged("Actual")
				Me.OnActualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodContabilidad", Storage:="_CodContabilidad", DbType:="Varchar(6)")>  _
	Public Property CodContabilidad() As String
		Get
			Return Me._CodContabilidad
		End Get
		Set
			If (String.Equals(Me._CodContabilidad, value) = false) Then
				Me.OnCodContabilidadChanging(value)
				Me.SendPropertyChanging
				Me._CodContabilidad = value
				Me.SendPropertyChanged("CodContabilidad")
				Me.OnCodContabilidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdConsecutivos", Storage:="_IdConsecutivos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdConsecutivos() As Integer
		Get
			Return Me._IdConsecutivos
		End Get
		Set
			If (Object.Equals(Me._IdConsecutivos, value) = false) Then
				Me.OnIdConsecutivosChanging(value)
				Me.SendPropertyChanging
				Me._IdConsecutivos = value
				Me.SendPropertyChanged("IdConsecutivos")
				Me.OnIdConsecutivosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConceptosTesoreria")>  _
Partial Public Class ConceptosTesoreri
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDConcepto As Integer
	
	Private _Detalle As String
	
	Private _AplicaA As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _CuentaContable As String
	
	Private _Activo As Boolean
	
	Private _ParametroContable As String
	
	Private _CuentaContableAux As String
	
	Private _NitTercero As String
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _ManejaCliente As String
	
	Private _TipoMovimientoTesoreria As String
	
	Private _Retencion As String
	
	Private _DescripcionRetencion As String
	
	Private _ManejaDiferido As Boolean
	
	Private _TipoMovimientoDiferido As String
	
	Private _CuentaContableCRDiferido As String
	
	Private _CuentaContableDBDiferido As String
	
	Private _TipoNitDebito As String
	
	Private _TipoNitCredito As String
	
	Private _ManejaNotaDBCR As System.Nullable(Of Boolean)
	
	Private _TipoMovimientoCRDB As String
	
	Private _TipoNitDiferidoDebito As String
	
	Private _TipoNitDiferidoCredito As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConceptoChanged()
    End Sub
    Partial Private Sub OnDetalleChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleChanged()
    End Sub
    Partial Private Sub OnAplicaAChanging(value As String)
    End Sub
    Partial Private Sub OnAplicaAChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCuentaContableChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnParametroContableChanging(value As String)
    End Sub
    Partial Private Sub OnParametroContableChanged()
    End Sub
    Partial Private Sub OnCuentaContableAuxChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableAuxChanged()
    End Sub
    Partial Private Sub OnNitTerceroChanging(value As String)
    End Sub
    Partial Private Sub OnNitTerceroChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnManejaClienteChanging(value As String)
    End Sub
    Partial Private Sub OnManejaClienteChanged()
    End Sub
    Partial Private Sub OnTipoMovimientoTesoreriaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovimientoTesoreriaChanged()
    End Sub
    Partial Private Sub OnRetencionChanging(value As String)
    End Sub
    Partial Private Sub OnRetencionChanged()
    End Sub
    Partial Private Sub OnDescripcionRetencionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionRetencionChanged()
    End Sub
    Partial Private Sub OnManejaDiferidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnManejaDiferidoChanged()
    End Sub
    Partial Private Sub OnTipoMovimientoDiferidoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovimientoDiferidoChanged()
    End Sub
    Partial Private Sub OnCuentaContableCRDiferidoChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableCRDiferidoChanged()
    End Sub
    Partial Private Sub OnCuentaContableDBDiferidoChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableDBDiferidoChanged()
    End Sub
    Partial Private Sub OnTipoNitDebitoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoNitDebitoChanged()
    End Sub
    Partial Private Sub OnTipoNitCreditoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoNitCreditoChanged()
    End Sub
    Partial Private Sub OnManejaNotaDBCRChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnManejaNotaDBCRChanged()
    End Sub
    Partial Private Sub OnTipoMovimientoCRDBChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovimientoCRDBChanged()
    End Sub
    Partial Private Sub OnTipoNitDiferidoDebitoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoNitDiferidoDebitoChanged()
    End Sub
    Partial Private Sub OnTipoNitDiferidoCreditoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoNitDiferidoCreditoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDConcepto", Storage:="_IDConcepto", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDConcepto() As Integer
		Get
			Return Me._IDConcepto
		End Get
		Set
			If (Object.Equals(Me._IDConcepto, value) = false) Then
				Me.OnIDConceptoChanging(value)
				Me.SendPropertyChanging
				Me._IDConcepto = value
				Me.SendPropertyChanged("IDConcepto")
				Me.OnIDConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
	Public Property Detalle() As String
		Get
			Return Me._Detalle
		End Get
		Set
			If (String.Equals(Me._Detalle, value) = false) Then
				Me.OnDetalleChanging(value)
				Me.SendPropertyChanging
				Me._Detalle = value
				Me.SendPropertyChanged("Detalle")
				Me.OnDetalleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrAplicaA", Storage:="_AplicaA", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property AplicaA() As String
		Get
			Return Me._AplicaA
		End Get
		Set
			If (String.Equals(Me._AplicaA, value) = false) Then
				Me.OnAplicaAChanging(value)
				Me.SendPropertyChanging
				Me._AplicaA = value
				Me.SendPropertyChanged("AplicaA")
				Me.OnAplicaAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(25)")>  _
	Public Property CuentaContable() As String
		Get
			Return Me._CuentaContable
		End Get
		Set
			If (String.Equals(Me._CuentaContable, value) = false) Then
				Me.OnCuentaContableChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContable = value
				Me.SendPropertyChanged("CuentaContable")
				Me.OnCuentaContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParametroContable", Storage:="_ParametroContable", DbType:="Varchar(5)")>  _
	Public Property ParametroContable() As String
		Get
			Return Me._ParametroContable
		End Get
		Set
			If (String.Equals(Me._ParametroContable, value) = false) Then
				Me.OnParametroContableChanging(value)
				Me.SendPropertyChanging
				Me._ParametroContable = value
				Me.SendPropertyChanged("ParametroContable")
				Me.OnParametroContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContableAux", Storage:="_CuentaContableAux", DbType:="Varchar(25)")>  _
	Public Property CuentaContableAux() As String
		Get
			Return Me._CuentaContableAux
		End Get
		Set
			If (String.Equals(Me._CuentaContableAux, value) = false) Then
				Me.OnCuentaContableAuxChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContableAux = value
				Me.SendPropertyChanged("CuentaContableAux")
				Me.OnCuentaContableAuxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitTercero", Storage:="_NitTercero", DbType:="Varchar(15)")>  _
	Public Property NitTercero() As String
		Get
			Return Me._NitTercero
		End Get
		Set
			If (String.Equals(Me._NitTercero, value) = false) Then
				Me.OnNitTerceroChanging(value)
				Me.SendPropertyChanging
				Me._NitTercero = value
				Me.SendPropertyChanged("NitTercero")
				Me.OnNitTerceroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strManejaCliente", Storage:="_ManejaCliente", DbType:="Varchar(4)")>  _
	Public Property ManejaCliente() As String
		Get
			Return Me._ManejaCliente
		End Get
		Set
			If (String.Equals(Me._ManejaCliente, value) = false) Then
				Me.OnManejaClienteChanging(value)
				Me.SendPropertyChanging
				Me._ManejaCliente = value
				Me.SendPropertyChanged("ManejaCliente")
				Me.OnManejaClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoMovimientoTesoreria", Storage:="_TipoMovimientoTesoreria", DbType:="Varchar(4)")>  _
	Public Property TipoMovimientoTesoreria() As String
		Get
			Return Me._TipoMovimientoTesoreria
		End Get
		Set
			If (String.Equals(Me._TipoMovimientoTesoreria, value) = false) Then
				Me.OnTipoMovimientoTesoreriaChanging(value)
				Me.SendPropertyChanging
				Me._TipoMovimientoTesoreria = value
				Me.SendPropertyChanged("TipoMovimientoTesoreria")
				Me.OnTipoMovimientoTesoreriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetencion", Storage:="_Retencion", DbType:="Varchar(4)")>  _
	Public Property Retencion() As String
		Get
			Return Me._Retencion
		End Get
		Set
			If (String.Equals(Me._Retencion, value) = false) Then
				Me.OnRetencionChanging(value)
				Me.SendPropertyChanging
				Me._Retencion = value
				Me.SendPropertyChanged("Retencion")
				Me.OnRetencionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionRetencion", Storage:="_DescripcionRetencion", DbType:="Varchar(100)")>  _
	Public Property DescripcionRetencion() As String
		Get
			Return Me._DescripcionRetencion
		End Get
		Set
			If (String.Equals(Me._DescripcionRetencion, value) = false) Then
				Me.OnDescripcionRetencionChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionRetencion = value
				Me.SendPropertyChanged("DescripcionRetencion")
				Me.OnDescripcionRetencionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logManejaDiferido", Storage:="_ManejaDiferido", DbType:="Bit NOT NULL")>  _
	Public Property ManejaDiferido() As Boolean
		Get
			Return Me._ManejaDiferido
		End Get
		Set
			If ((Me._ManejaDiferido = value)  _
						= false) Then
				Me.OnManejaDiferidoChanging(value)
				Me.SendPropertyChanging
				Me._ManejaDiferido = value
				Me.SendPropertyChanged("ManejaDiferido")
				Me.OnManejaDiferidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoMovimientoDiferido", Storage:="_TipoMovimientoDiferido", DbType:="Varchar(4)")>  _
	Public Property TipoMovimientoDiferido() As String
		Get
			Return Me._TipoMovimientoDiferido
		End Get
		Set
			If (String.Equals(Me._TipoMovimientoDiferido, value) = false) Then
				Me.OnTipoMovimientoDiferidoChanging(value)
				Me.SendPropertyChanging
				Me._TipoMovimientoDiferido = value
				Me.SendPropertyChanged("TipoMovimientoDiferido")
				Me.OnTipoMovimientoDiferidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContableCRDiferido", Storage:="_CuentaContableCRDiferido", DbType:="Varchar(25)")>  _
	Public Property CuentaContableCRDiferido() As String
		Get
			Return Me._CuentaContableCRDiferido
		End Get
		Set
			If (String.Equals(Me._CuentaContableCRDiferido, value) = false) Then
				Me.OnCuentaContableCRDiferidoChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContableCRDiferido = value
				Me.SendPropertyChanged("CuentaContableCRDiferido")
				Me.OnCuentaContableCRDiferidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContableDBDiferido", Storage:="_CuentaContableDBDiferido", DbType:="Varchar(25)")>  _
	Public Property CuentaContableDBDiferido() As String
		Get
			Return Me._CuentaContableDBDiferido
		End Get
		Set
			If (String.Equals(Me._CuentaContableDBDiferido, value) = false) Then
				Me.OnCuentaContableDBDiferidoChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContableDBDiferido = value
				Me.SendPropertyChanged("CuentaContableDBDiferido")
				Me.OnCuentaContableDBDiferidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNitDebito", Storage:="_TipoNitDebito", DbType:="Varchar(4)")>  _
	Public Property TipoNitDebito() As String
		Get
			Return Me._TipoNitDebito
		End Get
		Set
			If (String.Equals(Me._TipoNitDebito, value) = false) Then
				Me.OnTipoNitDebitoChanging(value)
				Me.SendPropertyChanging
				Me._TipoNitDebito = value
				Me.SendPropertyChanged("TipoNitDebito")
				Me.OnTipoNitDebitoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNitCredito", Storage:="_TipoNitCredito", DbType:="Varchar(4)")>  _
	Public Property TipoNitCredito() As String
		Get
			Return Me._TipoNitCredito
		End Get
		Set
			If (String.Equals(Me._TipoNitCredito, value) = false) Then
				Me.OnTipoNitCreditoChanging(value)
				Me.SendPropertyChanging
				Me._TipoNitCredito = value
				Me.SendPropertyChanged("TipoNitCredito")
				Me.OnTipoNitCreditoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logManejaNotaDBCR", Storage:="_ManejaNotaDBCR", DbType:="Bit NULL")>  _
	Public Property ManejaNotaDBCR() As System.Nullable(Of Boolean)
		Get
			Return Me._ManejaNotaDBCR
		End Get
		Set
			If (Me._ManejaNotaDBCR.Equals(value) = false) Then
				Me.OnManejaNotaDBCRChanging(value)
				Me.SendPropertyChanging
				Me._ManejaNotaDBCR = value
				Me.SendPropertyChanged("ManejaNotaDBCR")
				Me.OnManejaNotaDBCRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoMovimientoCRDB", Storage:="_TipoMovimientoCRDB", DbType:="Varchar(4)")>  _
	Public Property TipoMovimientoCRDB() As String
		Get
			Return Me._TipoMovimientoCRDB
		End Get
		Set
			If (String.Equals(Me._TipoMovimientoCRDB, value) = false) Then
				Me.OnTipoMovimientoCRDBChanging(value)
				Me.SendPropertyChanging
				Me._TipoMovimientoCRDB = value
				Me.SendPropertyChanged("TipoMovimientoCRDB")
				Me.OnTipoMovimientoCRDBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNitDiferidoDebito", Storage:="_TipoNitDiferidoDebito", DbType:="Varchar(4)")>  _
	Public Property TipoNitDiferidoDebito() As String
		Get
			Return Me._TipoNitDiferidoDebito
		End Get
		Set
			If (String.Equals(Me._TipoNitDiferidoDebito, value) = false) Then
				Me.OnTipoNitDiferidoDebitoChanging(value)
				Me.SendPropertyChanging
				Me._TipoNitDiferidoDebito = value
				Me.SendPropertyChanged("TipoNitDiferidoDebito")
				Me.OnTipoNitDiferidoDebitoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNitDiferidoCredito", Storage:="_TipoNitDiferidoCredito", DbType:="Varchar(4)")>  _
	Public Property TipoNitDiferidoCredito() As String
		Get
			Return Me._TipoNitDiferidoCredito
		End Get
		Set
			If (String.Equals(Me._TipoNitDiferidoCredito, value) = false) Then
				Me.OnTipoNitDiferidoCreditoChanging(value)
				Me.SendPropertyChanging
				Me._TipoNitDiferidoCredito = value
				Me.SendPropertyChanged("TipoNitDiferidoCredito")
				Me.OnTipoNitDiferidoCreditoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClientesExternos")>  _
Partial Public Class ClientesExterno
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As String
	
	Private _Nombre As String
	
	Private _Vendedor As String
	
	Private _IDDepositoExtranjero As Integer
	
	Private _NumeroCuenta As String
	
	Private _NombreTitular As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDClienteExt As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnVendedorChanging(value As String)
    End Sub
    Partial Private Sub OnVendedorChanged()
    End Sub
    Partial Private Sub OnIDDepositoExtranjeroChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDepositoExtranjeroChanged()
    End Sub
    Partial Private Sub OnNumeroCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroCuentaChanged()
    End Sub
    Partial Private Sub OnNombreTitularChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTitularChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDClienteExtChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClienteExtChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strVendedor", Storage:="_Vendedor", DbType:="Varchar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Vendedor() As String
		Get
			Return Me._Vendedor
		End Get
		Set
			If (String.Equals(Me._Vendedor, value) = false) Then
				Me.OnVendedorChanging(value)
				Me.SendPropertyChanging
				Me._Vendedor = value
				Me.SendPropertyChanged("Vendedor")
				Me.OnVendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDepositoExtranjero", Storage:="_IDDepositoExtranjero", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDDepositoExtranjero() As Integer
		Get
			Return Me._IDDepositoExtranjero
		End Get
		Set
			If (Object.Equals(Me._IDDepositoExtranjero, value) = false) Then
				Me.OnIDDepositoExtranjeroChanging(value)
				Me.SendPropertyChanging
				Me._IDDepositoExtranjero = value
				Me.SendPropertyChanged("IDDepositoExtranjero")
				Me.OnIDDepositoExtranjeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNumeroCuenta", Storage:="_NumeroCuenta", DbType:="Varchar(20)")>  _
	Public Property NumeroCuenta() As String
		Get
			Return Me._NumeroCuenta
		End Get
		Set
			If (String.Equals(Me._NumeroCuenta, value) = false) Then
				Me.OnNumeroCuentaChanging(value)
				Me.SendPropertyChanging
				Me._NumeroCuenta = value
				Me.SendPropertyChanged("NumeroCuenta")
				Me.OnNumeroCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTitular", Storage:="_NombreTitular", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreTitular() As String
		Get
			Return Me._NombreTitular
		End Get
		Set
			If (String.Equals(Me._NombreTitular, value) = false) Then
				Me.OnNombreTitularChanging(value)
				Me.SendPropertyChanging
				Me._NombreTitular = value
				Me.SendPropertyChanged("NombreTitular")
				Me.OnNombreTitularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClienteExt", Storage:="_IDClienteExt", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClienteExt() As Integer
		Get
			Return Me._IDClienteExt
		End Get
		Set
			If (Object.Equals(Me._IDClienteExt, value) = false) Then
				Me.OnIDClienteExtChanging(value)
				Me.SendPropertyChanging
				Me._IDClienteExt = value
				Me.SendPropertyChanged("IDClienteExt")
				Me.OnIDClienteExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblUsuariosSucursales")>  _
Partial Public Class UsuariosSucursale
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Nombre_Usuario As String
	
	Private _Receptor As String
	
	Private _IDSucursal As Integer
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDUsuariosSucursales As Integer
	
	Private _InfoSesion As String
	
	Private _Prioridad As System.Nullable(Of System.int32)
	
	Private _Nombre_Receptor As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnNombre_UsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_UsuarioChanged()
    End Sub
    Partial Private Sub OnReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnReceptorChanged()
    End Sub
    Partial Private Sub OnIDSucursalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucursalChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDUsuariosSucursalesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDUsuariosSucursalesChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnPrioridadChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnPrioridadChanged()
    End Sub
    Partial Private Sub OnNombre_ReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ReceptorChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioApp", Storage:="_Nombre_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre_Usuario() As String
		Get
			Return Me._Nombre_Usuario
		End Get
		Set
			If (String.Equals(Me._Nombre_Usuario, value) = false) Then
				Me.OnNombre_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Usuario = value
				Me.SendPropertyChanged("Nombre_Usuario")
				Me.OnNombre_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_Receptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Receptor() As String
		Get
			Return Me._Receptor
		End Get
		Set
			If (String.Equals(Me._Receptor, value) = false) Then
				Me.OnReceptorChanging(value)
				Me.SendPropertyChanging
				Me._Receptor = value
				Me.SendPropertyChanged("Receptor")
				Me.OnReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucursal", Storage:="_IDSucursal", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucursal() As Integer
		Get
			Return Me._IDSucursal
		End Get
		Set
			If (Object.Equals(Me._IDSucursal, value) = false) Then
				Me.OnIDSucursalChanging(value)
				Me.SendPropertyChanging
				Me._IDSucursal = value
				Me.SendPropertyChanged("IDSucursal")
				Me.OnIDSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDUsuariosSucursales", Storage:="_IDUsuariosSucursales", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDUsuariosSucursales() As Integer
		Get
			Return Me._IDUsuariosSucursales
		End Get
		Set
			If (Object.Equals(Me._IDUsuariosSucursales, value) = false) Then
				Me.OnIDUsuariosSucursalesChanging(value)
				Me.SendPropertyChanging
				Me._IDUsuariosSucursales = value
				Me.SendPropertyChanged("IDUsuariosSucursales")
				Me.OnIDUsuariosSucursalesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NULL", CanBeNull:=true)>  _
	Public Property Prioridad() As System.Nullable(Of System.int32)
		Get
			Return Me._Prioridad
		End Get
		Set
			If (Object.Equals(Me._Prioridad, value) = false) Then
				Me.OnPrioridadChanging(value)
				Me.SendPropertyChanging
				Me._Prioridad = value
				Me.SendPropertyChanged("Prioridad")
				Me.OnPrioridadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre_Receptor", DbType:="Varchar(50) NOT NULL")>  _
	Public Property Nombre_Receptor() As String
		Get
			Return Me._Nombre_Receptor
		End Get
		Set
			If (String.Equals(Me._Nombre_Receptor, value) = false) Then
				Me.OnNombre_ReceptorChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Receptor = value
				Me.SendPropertyChanged("Nombre_Receptor")
				Me.OnNombre_ReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClientesFondosPensiones")>  _
Partial Public Class ClientesFondosPensione
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Comitente As String
	
	Private _IDClientesfondospensiones As Integer
	
	Private _NroDocumento As String
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnIDClientesfondospensionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClientesfondospensionesChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_Comitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property Comitente() As String
		Get
			Return Me._Comitente
		End Get
		Set
			If (String.Equals(Me._Comitente, value) = false) Then
				Me.OnComitenteChanging(value)
				Me.SendPropertyChanging
				Me._Comitente = value
				Me.SendPropertyChanged("Comitente")
				Me.OnComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClientesfondospensiones", Storage:="_IDClientesfondospensiones", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClientesfondospensiones() As Integer
		Get
			Return Me._IDClientesfondospensiones
		End Get
		Set
			If (Object.Equals(Me._IDClientesfondospensiones, value) = false) Then
				Me.OnIDClientesfondospensionesChanging(value)
				Me.SendPropertyChanging
				Me._IDClientesfondospensiones = value
				Me.SendPropertyChanged("IDClientesfondospensiones")
				Me.OnIDClientesfondospensionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(15)")>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ViewClientes_Exento")>  _
Partial Public Class ViewClientes_Exento
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Comitente As String
	
	Private _Nombre As String
	
	Private _NroDocumento As String
	
	Private _IDClientesfondospensiones As Integer
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnIDClientesfondospensionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClientesfondospensionesChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property Comitente() As String
		Get
			Return Me._Comitente
		End Get
		Set
			If (String.Equals(Me._Comitente, value) = false) Then
				Me.OnComitenteChanging(value)
				Me.SendPropertyChanging
				Me._Comitente = value
				Me.SendPropertyChanged("Comitente")
				Me.OnComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(15)")>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClientesfondospensiones", Storage:="_IDClientesfondospensiones", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClientesfondospensiones() As Integer
		Get
			Return Me._IDClientesfondospensiones
		End Get
		Set
			If (Object.Equals(Me._IDClientesfondospensiones, value) = false) Then
				Me.OnIDClientesfondospensionesChanging(value)
				Me.SendPropertyChanging
				Me._IDClientesfondospensiones = value
				Me.SendPropertyChanged("IDClientesfondospensiones")
				Me.OnIDClientesfondospensionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ViewClientes_Exentos_Consultar")>  _
Partial Public Class ViewClientes_Exentos_Consultar
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nombre As String
	
	Private _Codigo As String
	
	Private _T As Char
	
	Private _Numero As String
	
	Private _Multicuenta As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnTChanging(value As Char)
    End Sub
    Partial Private Sub OnTChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnMulticuentaChanging(value As String)
    End Sub
    Partial Private Sub OnMulticuentaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(17)", IsPrimaryKey:=true)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T", DbType:="Char(1) NOT NULL")>  _
	Public Property T() As Char
		Get
			Return Me._T
		End Get
		Set
			If ((Me._T = value)  _
						= false) Then
				Me.OnTChanging(value)
				Me.SendPropertyChanging
				Me._T = value
				Me.SendPropertyChanged("T")
				Me.OnTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Numero() As String
		Get
			Return Me._Numero
		End Get
		Set
			If (String.Equals(Me._Numero, value) = false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Multicuenta", DbType:="VarChar(80)")>  _
	Public Property Multicuenta() As String
		Get
			Return Me._Multicuenta
		End Get
		Set
			If (String.Equals(Me._Multicuenta, value) = false) Then
				Me.OnMulticuentaChanging(value)
				Me.SendPropertyChanging
				Me._Multicuenta = value
				Me.SendPropertyChanged("Multicuenta")
				Me.OnMulticuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConceptosConsecutivos")>  _
Partial Public Class ConceptosConsecutivo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IdSucComisionista As Integer
	
	Private _Consecutivo As String
	
	Private _Concepto As Integer
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDConceptosconsecutivos As Integer
	
	Private _InfoSesion As String
	
	Private _strDetalle As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucComisionistaChanged()
    End Sub
    Partial Private Sub OnConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnConsecutivoChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDConceptosconsecutivosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConceptosconsecutivosChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnDescripcion_conceptoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcion_conceptoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdSucComisionista() As Integer
		Get
			Return Me._IdSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IdSucComisionista, value) = false) Then
				Me.OnIdSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdSucComisionista = value
				Me.SendPropertyChanged("IdSucComisionista")
				Me.OnIdSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_Consecutivo", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Consecutivo() As String
		Get
			Return Me._Consecutivo
		End Get
		Set
			If (String.Equals(Me._Consecutivo, value) = false) Then
				Me.OnConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._Consecutivo = value
				Me.SendPropertyChanged("Consecutivo")
				Me.OnConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDConcepto", Storage:="_Concepto", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Concepto() As Integer
		Get
			Return Me._Concepto
		End Get
		Set
			If (Object.Equals(Me._Concepto, value) = false) Then
				Me.OnConceptoChanging(value)
				Me.SendPropertyChanging
				Me._Concepto = value
				Me.SendPropertyChanged("Concepto")
				Me.OnConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConceptosconsecutivos", Storage:="_IDConceptosconsecutivos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDConceptosconsecutivos() As Integer
		Get
			Return Me._IDConceptosconsecutivos
		End Get
		Set
			If (Object.Equals(Me._IDConceptosconsecutivos, value) = false) Then
				Me.OnIDConceptosconsecutivosChanging(value)
				Me.SendPropertyChanging
				Me._IDConceptosconsecutivos = value
				Me.SendPropertyChanged("IDConceptosconsecutivos")
				Me.OnIDConceptosconsecutivosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_strDetalle", DbType:="Varchar(80)")>  _
	Public Property Descripcion_concepto() As String
		Get
			Return Me._strDetalle
		End Get
		Set
			If (String.Equals(Me._strDetalle, value) = false) Then
				Me.OnDescripcion_conceptoChanging(value)
				Me.SendPropertyChanging
				Me._strDetalle = value
				Me.SendPropertyChanged("Descripcion_concepto")
				Me.OnDescripcion_conceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class Llenarlistas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Chequear As Boolean
	
	Private _Categoria As String
	
	Private _Concepto As Integer
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnChequearChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChequearChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chequear")>  _
	Public Property Chequear() As Boolean
		Get
			Return Me._Chequear
		End Get
		Set
			If ((Me._Chequear = value)  _
						= false) Then
				Me.OnChequearChanging(value)
				Me.SendPropertyChanging
				Me._Chequear = value
				Me.SendPropertyChanged("Chequear")
				Me.OnChequearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Categoria() As String
		Get
			Return Me._Categoria
		End Get
		Set
			If (String.Equals(Me._Categoria, value) = false) Then
				Me.OnCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._Categoria = value
				Me.SendPropertyChanged("Categoria")
				Me.OnCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", CanBeNull:=true, IsPrimaryKey:=true)>  _
	Public Property Concepto() As Integer
		Get
			Return Me._Concepto
		End Get
		Set
			If (Object.Equals(Me._Concepto, value) = false) Then
				Me.OnConceptoChanging(value)
				Me.SendPropertyChanging
				Me._Concepto = value
				Me.SendPropertyChanged("Concepto")
				Me.OnConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class LlenarlistaConcepto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Chequear As Boolean
	
	Private _Categoria As String
	
	Private _Concepto As Integer
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnChequearChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChequearChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chequear")>  _
	Public Property Chequear() As Boolean
		Get
			Return Me._Chequear
		End Get
		Set
			If ((Me._Chequear = value)  _
						= false) Then
				Me.OnChequearChanging(value)
				Me.SendPropertyChanging
				Me._Chequear = value
				Me.SendPropertyChanged("Chequear")
				Me.OnChequearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Categoria() As String
		Get
			Return Me._Categoria
		End Get
		Set
			If (String.Equals(Me._Categoria, value) = false) Then
				Me.OnCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._Categoria = value
				Me.SendPropertyChanged("Categoria")
				Me.OnCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", CanBeNull:=true, IsPrimaryKey:=true)>  _
	Public Property Concepto() As Integer
		Get
			Return Me._Concepto
		End Get
		Set
			If (Object.Equals(Me._Concepto, value) = false) Then
				Me.OnConceptoChanging(value)
				Me.SendPropertyChanging
				Me._Concepto = value
				Me.SendPropertyChanged("Concepto")
				Me.OnConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDiasNoHabiles")>  _
Partial Public Class DiasNoHabile
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _NoHabil As System.Nullable(Of Date)
	
	Private _Activo As Boolean
	
	Private _dActivo As Date
	
	Private _Inactivo As System.Nullable(Of Date)
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IdPais As Integer
	
	Private _strIdPais As String
	
	Private _NombrePai As String
	
	Private _IDDiaNoHabil As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnNoHabilChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNoHabilChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OndActivoChanging(value As Date)
    End Sub
    Partial Private Sub OndActivoChanged()
    End Sub
    Partial Private Sub OnInactivoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInactivoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPaisChanged()
    End Sub
    Partial Private Sub OnstrIdPaisChanging(value As String)
    End Sub
    Partial Private Sub OnstrIdPaisChanged()
    End Sub
    Partial Private Sub OnNombrePaiChanging(value As String)
    End Sub
    Partial Private Sub OnNombrePaiChanged()
    End Sub
    Partial Private Sub OnIDDiaNoHabilChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDiaNoHabilChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmNoHabil", Storage:="_NoHabil", DbType:="Datetime")>  _
	Public Property NoHabil() As System.Nullable(Of Date)
		Get
			Return Me._NoHabil
		End Get
		Set
			If (Me._NoHabil.Equals(value) = false) Then
				Me.OnNoHabilChanging(value)
				Me.SendPropertyChanging
				Me._NoHabil = value
				Me.SendPropertyChanged("NoHabil")
				Me.OnNoHabilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActivo", Storage:="_dActivo", DbType:="Datetime NOT NULL")>  _
	Public Property dActivo() As Date
		Get
			Return Me._dActivo
		End Get
		Set
			If ((Me._dActivo = value)  _
						= false) Then
				Me.OndActivoChanging(value)
				Me.SendPropertyChanging
				Me._dActivo = value
				Me.SendPropertyChanged("dActivo")
				Me.OndActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmInactivo", Storage:="_Inactivo", DbType:="Datetime")>  _
	Public Property Inactivo() As System.Nullable(Of Date)
		Get
			Return Me._Inactivo
		End Get
		Set
			If (Me._Inactivo.Equals(value) = false) Then
				Me.OnInactivoChanging(value)
				Me.SendPropertyChanging
				Me._Inactivo = value
				Me.SendPropertyChanged("Inactivo")
				Me.OnInactivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdPais", Storage:="_IdPais", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdPais() As Integer
		Get
			Return Me._IdPais
		End Get
		Set
			If (Object.Equals(Me._IdPais, value) = false) Then
				Me.OnIdPaisChanging(value)
				Me.SendPropertyChanging
				Me._IdPais = value
				Me.SendPropertyChanged("IdPais")
				Me.OnIdPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIdPais", DbType:="Varchar(15)")>  _
	Public Property strIdPais() As String
		Get
			Return Me._strIdPais
		End Get
		Set
			If (String.Equals(Me._strIdPais, value) = false) Then
				Me.OnstrIdPaisChanging(value)
				Me.SendPropertyChanging
				Me._strIdPais = value
				Me.SendPropertyChanged("strIdPais")
				Me.OnstrIdPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombrePai", Storage:="_NombrePai", DbType:="Varchar(40) NULL")>  _
	Public Property NombrePai() As String
		Get
			Return Me._NombrePai
		End Get
		Set
			If (String.Equals(Me._NombrePai, value) = false) Then
				Me.OnNombrePaiChanging(value)
				Me.SendPropertyChanging
				Me._NombrePai = value
				Me.SendPropertyChanged("NombrePai")
				Me.OnNombrePaiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDiaNoHabil", Storage:="_IDDiaNoHabil", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDDiaNoHabil() As Integer
		Get
			Return Me._IDDiaNoHabil
		End Get
		Set
			If (Object.Equals(Me._IDDiaNoHabil, value) = false) Then
				Me.OnIDDiaNoHabilChanging(value)
				Me.SendPropertyChanging
				Me._IDDiaNoHabil = value
				Me.SendPropertyChanged("IDDiaNoHabil")
				Me.OnIDDiaNoHabilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class Archivo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Ruta As String
	
	Private _FechaHora As System.Nullable(Of Date)
	
	Private _KBytes As System.Nullable(Of Integer)
	
	Private _Nombre As String
	
	Private _Extension As String
	
	Private _RutaWeb As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRutaChanging(value As String)
    End Sub
    Partial Private Sub OnRutaChanged()
    End Sub
    Partial Private Sub OnFechaHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaHoraChanged()
    End Sub
    Partial Private Sub OnKBytesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKBytesChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnExtensionChanging(value As String)
    End Sub
    Partial Private Sub OnExtensionChanged()
    End Sub
    Partial Private Sub OnRutaWebChanging(value As String)
    End Sub
    Partial Private Sub OnRutaWebChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ruta", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Ruta() As String
		Get
			Return Me._Ruta
		End Get
		Set
			If (String.Equals(Me._Ruta, value) = false) Then
				Me.OnRutaChanging(value)
				Me.SendPropertyChanging
				Me._Ruta = value
				Me.SendPropertyChanged("Ruta")
				Me.OnRutaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaHora")>  _
	Public Property FechaHora() As System.Nullable(Of Date)
		Get
			Return Me._FechaHora
		End Get
		Set
			If (Me._FechaHora.Equals(value) = false) Then
				Me.OnFechaHoraChanging(value)
				Me.SendPropertyChanging
				Me._FechaHora = value
				Me.SendPropertyChanged("FechaHora")
				Me.OnFechaHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KBytes")>  _
	Public Property KBytes() As System.Nullable(Of Integer)
		Get
			Return Me._KBytes
		End Get
		Set
			If (Me._KBytes.Equals(value) = false) Then
				Me.OnKBytesChanging(value)
				Me.SendPropertyChanging
				Me._KBytes = value
				Me.SendPropertyChanged("KBytes")
				Me.OnKBytesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extension")>  _
	Public Property Extension() As String
		Get
			Return Me._Extension
		End Get
		Set
			If (String.Equals(Me._Extension, value) = false) Then
				Me.OnExtensionChanging(value)
				Me.SendPropertyChanging
				Me._Extension = value
				Me.SendPropertyChanged("Extension")
				Me.OnExtensionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutaWeb")>  _
	Public Property RutaWeb() As String
		Get
			Return Me._RutaWeb
		End Get
		Set
			If (String.Equals(Me._RutaWeb, value) = false) Then
				Me.OnRutaWebChanging(value)
				Me.SendPropertyChanging
				Me._RutaWeb = value
				Me.SendPropertyChanged("RutaWeb")
				Me.OnRutaWebChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class Auditoria
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Servidor As String
	
	Private _Maquina As String
	
	Private _DirIPMaquina As String
	
	Private _Browser As String
	
	Private _ErrorPersonalizado As Byte
	
	Private _ID As String
	
	Private _Usuario As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnServidorChanging(value As String)
    End Sub
    Partial Private Sub OnServidorChanged()
    End Sub
    Partial Private Sub OnMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnMaquinaChanged()
    End Sub
    Partial Private Sub OnDirIPMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnDirIPMaquinaChanged()
    End Sub
    Partial Private Sub OnBrowserChanging(value As String)
    End Sub
    Partial Private Sub OnBrowserChanged()
    End Sub
    Partial Private Sub OnErrorPersonalizadoChanging(value As Byte)
    End Sub
    Partial Private Sub OnErrorPersonalizadoChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Servidor", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property Servidor() As String
		Get
			Return Me._Servidor
		End Get
		Set
			If (String.Equals(Me._Servidor, value) = false) Then
				Me.OnServidorChanging(value)
				Me.SendPropertyChanging
				Me._Servidor = value
				Me.SendPropertyChanged("Servidor")
				Me.OnServidorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maquina", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property Maquina() As String
		Get
			Return Me._Maquina
		End Get
		Set
			If (String.Equals(Me._Maquina, value) = false) Then
				Me.OnMaquinaChanging(value)
				Me.SendPropertyChanging
				Me._Maquina = value
				Me.SendPropertyChanged("Maquina")
				Me.OnMaquinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirIPMaquina", DbType:="VarChar(50)", CanBeNull:=false)>  _
	Public Property DirIPMaquina() As String
		Get
			Return Me._DirIPMaquina
		End Get
		Set
			If (String.Equals(Me._DirIPMaquina, value) = false) Then
				Me.OnDirIPMaquinaChanging(value)
				Me.SendPropertyChanging
				Me._DirIPMaquina = value
				Me.SendPropertyChanged("DirIPMaquina")
				Me.OnDirIPMaquinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Browser", DbType:="VarChar(250)", CanBeNull:=false)>  _
	Public Property Browser() As String
		Get
			Return Me._Browser
		End Get
		Set
			If (String.Equals(Me._Browser, value) = false) Then
				Me.OnBrowserChanging(value)
				Me.SendPropertyChanging
				Me._Browser = value
				Me.SendPropertyChanged("Browser")
				Me.OnBrowserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorPersonalizado")>  _
	Public Property ErrorPersonalizado() As Byte
		Get
			Return Me._ErrorPersonalizado
		End Get
		Set
			If ((Me._ErrorPersonalizado = value)  _
						= false) Then
				Me.OnErrorPersonalizadoChanging(value)
				Me.SendPropertyChanging
				Me._ErrorPersonalizado = value
				Me.SendPropertyChanged("ErrorPersonalizado")
				Me.OnErrorPersonalizadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConsecutivosUsuarios")>  _
Partial Public Class ConsecutivosUsuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Usuario_Consecutivo As String
	
	Private _Nombre_Consecutivo As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDConsecutivosUsuarios As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnUsuario_ConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnUsuario_ConsecutivoChanged()
    End Sub
    Partial Private Sub OnNombre_ConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ConsecutivoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDConsecutivosUsuariosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConsecutivosUsuariosChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioConsecutivo", Storage:="_Usuario_Consecutivo", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario_Consecutivo() As String
		Get
			Return Me._Usuario_Consecutivo
		End Get
		Set
			If (String.Equals(Me._Usuario_Consecutivo, value) = false) Then
				Me.OnUsuario_ConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Consecutivo = value
				Me.SendPropertyChanged("Usuario_Consecutivo")
				Me.OnUsuario_ConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_Nombre_Consecutivo", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre_Consecutivo() As String
		Get
			Return Me._Nombre_Consecutivo
		End Get
		Set
			If (String.Equals(Me._Nombre_Consecutivo, value) = false) Then
				Me.OnNombre_ConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Consecutivo = value
				Me.SendPropertyChanged("Nombre_Consecutivo")
				Me.OnNombre_ConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConsecutivosUsuarios", Storage:="_IDConsecutivosUsuarios", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDConsecutivosUsuarios() As Integer
		Get
			Return Me._IDConsecutivosUsuarios
		End Get
		Set
			If (Object.Equals(Me._IDConsecutivosUsuarios, value) = false) Then
				Me.OnIDConsecutivosUsuariosChanging(value)
				Me.SendPropertyChanging
				Me._IDConsecutivosUsuarios = value
				Me.SendPropertyChanged("IDConsecutivosUsuarios")
				Me.OnIDConsecutivosUsuariosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTarifas")>  _
Partial Public Class Tarifa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _Valor As System.Nullable(Of Double)
	
	Private _Simbolo As String
	
	Private _Msg As String
	
	Private _IDTarifas As Integer
	
	Private _InfoSesion As String
	
	Private _MakeAndCheck As System.Nullable(Of Integer)
	
	Private _Por_Aprobar As String
	
	Private _Aprobacion As Byte
	
	Private _Estado As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnSimboloChanging(value As String)
    End Sub
    Partial Private Sub OnSimboloChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnIDTarifasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTarifasChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnMakeAndCheckChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMakeAndCheckChanged()
    End Sub
    Partial Private Sub OnPor_AprobarChanging(value As String)
    End Sub
    Partial Private Sub OnPor_AprobarChanged()
    End Sub
    Partial Private Sub OnAprobacionChanging(value As Byte)
    End Sub
    Partial Private Sub OnAprobacionChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrNombre", Storage:="_Nombre", DbType:="Varchar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="CurValor", Storage:="_Valor", DbType:="Float")>  _
	Public Property Valor() As System.Nullable(Of Double)
		Get
			Return Me._Valor
		End Get
		Set
			If (Me._Valor.Equals(value) = false) Then
				Me.OnValorChanging(value)
				Me.SendPropertyChanging
				Me._Valor = value
				Me.SendPropertyChanged("Valor")
				Me.OnValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSimbolo", Storage:="_Simbolo", DbType:="Varchar(50)")>  _
	Public Property Simbolo() As String
		Get
			Return Me._Simbolo
		End Get
		Set
			If (String.Equals(Me._Simbolo, value) = false) Then
				Me.OnSimboloChanging(value)
				Me.SendPropertyChanging
				Me._Simbolo = value
				Me.SendPropertyChanged("Simbolo")
				Me.OnSimboloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTarifas", Storage:="_IDTarifas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDTarifas() As Integer
		Get
			Return Me._IDTarifas
		End Get
		Set
			If (Object.Equals(Me._IDTarifas, value) = false) Then
				Me.OnIDTarifasChanging(value)
				Me.SendPropertyChanging
				Me._IDTarifas = value
				Me.SendPropertyChanged("IDTarifas")
				Me.OnIDTarifasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MakeAndCheck", DbType:="Int ")>  _
	Public Property MakeAndCheck() As System.Nullable(Of Integer)
		Get
			Return Me._MakeAndCheck
		End Get
		Set
			If (Me._MakeAndCheck.Equals(value) = false) Then
				Me.OnMakeAndCheckChanging(value)
				Me.SendPropertyChanging
				Me._MakeAndCheck = value
				Me.SendPropertyChanged("MakeAndCheck")
				Me.OnMakeAndCheckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Por_Aprobar", DbType:="Varchar(30)")>  _
	Public Property Por_Aprobar() As String
		Get
			Return Me._Por_Aprobar
		End Get
		Set
			If (String.Equals(Me._Por_Aprobar, value) = false) Then
				Me.OnPor_AprobarChanging(value)
				Me.SendPropertyChanging
				Me._Por_Aprobar = value
				Me.SendPropertyChanged("Por_Aprobar")
				Me.OnPor_AprobarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aprobacion", DbType:="TinyInt", CanBeNull:=true)>  _
	Public Property Aprobacion() As Byte
		Get
			Return Me._Aprobacion
		End Get
		Set
			If (Object.Equals(Me._Aprobacion, value) = false) Then
				Me.OnAprobacionChanging(value)
				Me.SendPropertyChanging
				Me._Aprobacion = value
				Me.SendPropertyChanged("Aprobacion")
				Me.OnAprobacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(50)")>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDetalleTarifas")>  _
Partial Public Class DetalleTarifa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Codigo As Integer
	
	Private _FechaValor As Date
	
	Private _Valor As System.Nullable(Of Decimal)
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _IDDetalleTarifas As Integer
	
	Private _InfoSesion As String
	
	Private _Por_Aprobar As String
	
	Private _Aprobacion As Byte
	
	Private _Estado As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnFechaValorChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaValorChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnIDDetalleTarifasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDetalleTarifasChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnPor_AprobarChanging(value As String)
    End Sub
    Partial Private Sub OnPor_AprobarChanged()
    End Sub
    Partial Private Sub OnAprobacionChanging(value As Byte)
    End Sub
    Partial Private Sub OnAprobacionChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Codigo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As Integer
		Get
			Return Me._Codigo
		End Get
		Set
			If (Object.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaValor", Storage:="_FechaValor", DbType:="Datetime NOT NULL")>  _
	Public Property FechaValor() As Date
		Get
			Return Me._FechaValor
		End Get
		Set
			If ((Me._FechaValor = value)  _
						= false) Then
				Me.OnFechaValorChanging(value)
				Me.SendPropertyChanging
				Me._FechaValor = value
				Me.SendPropertyChanged("FechaValor")
				Me.OnFechaValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValor", Storage:="_Valor", DbType:="Money")>  _
	Public Property Valor() As System.Nullable(Of Decimal)
		Get
			Return Me._Valor
		End Get
		Set
			If (Me._Valor.Equals(value) = false) Then
				Me.OnValorChanging(value)
				Me.SendPropertyChanging
				Me._Valor = value
				Me.SendPropertyChanged("Valor")
				Me.OnValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDetalleTarifas", Storage:="_IDDetalleTarifas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDDetalleTarifas() As Integer
		Get
			Return Me._IDDetalleTarifas
		End Get
		Set
			If (Object.Equals(Me._IDDetalleTarifas, value) = false) Then
				Me.OnIDDetalleTarifasChanging(value)
				Me.SendPropertyChanging
				Me._IDDetalleTarifas = value
				Me.SendPropertyChanged("IDDetalleTarifas")
				Me.OnIDDetalleTarifasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Por_Aprobar", DbType:="Varchar(30)")>  _
	Public Property Por_Aprobar() As String
		Get
			Return Me._Por_Aprobar
		End Get
		Set
			If (String.Equals(Me._Por_Aprobar, value) = false) Then
				Me.OnPor_AprobarChanging(value)
				Me.SendPropertyChanging
				Me._Por_Aprobar = value
				Me.SendPropertyChanged("Por_Aprobar")
				Me.OnPor_AprobarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aprobacion", DbType:="TinyInt", CanBeNull:=true)>  _
	Public Property Aprobacion() As Byte
		Get
			Return Me._Aprobacion
		End Get
		Set
			If (Object.Equals(Me._Aprobacion, value) = false) Then
				Me.OnAprobacionChanging(value)
				Me.SendPropertyChanging
				Me._Aprobacion = value
				Me.SendPropertyChanged("Aprobacion")
				Me.OnAprobacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(50)")>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMonedas")>  _
Partial Public Class Moneda
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Codigo As Integer
	
	Private _Codigo_internacional As String
	
	Private _Descripcion As String
	
	Private _Convercion_Dolar As Boolean
	
	Private _Nro_Decimales As Byte
	
	Private _Dias_Cumplimiento As Integer
	
	Private _ValorBase_IVA As System.Nullable(Of Double)
	
	Private _Msg As String
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _Mercado_Integrado As Boolean
	
	Private _CodDivisa As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
	Private _StrCodSuper As String
	
	Private _strNacionalidad As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnCodigo_internacionalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigo_internacionalChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnConvercion_DolarChanging(value As Boolean)
    End Sub
    Partial Private Sub OnConvercion_DolarChanged()
    End Sub
    Partial Private Sub OnNro_DecimalesChanging(value As Byte)
    End Sub
    Partial Private Sub OnNro_DecimalesChanged()
    End Sub
    Partial Private Sub OnDias_CumplimientoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDias_CumplimientoChanged()
    End Sub
    Partial Private Sub OnValorBase_IVAChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorBase_IVAChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnMercado_IntegradoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMercado_IntegradoChanged()
    End Sub
    Partial Private Sub OnCodDivisaChanging(value As String)
    End Sub
    Partial Private Sub OnCodDivisaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    Partial Private Sub OnStrCodSuperChanging(value As String)
    End Sub
    Partial Private Sub OnStrCodSuperChanged()
    End Sub
    Partial Private Sub OnstrNacionalidadChanging(value As String)
    End Sub
    Partial Private Sub OnstrNacionalidadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Codigo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Codigo() As Integer
		Get
			Return Me._Codigo
		End Get
		Set
			If (Object.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strID", Storage:="_Codigo_internacional", DbType:="Varchar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo_internacional() As String
		Get
			Return Me._Codigo_internacional
		End Get
		Set
			If (String.Equals(Me._Codigo_internacional, value) = false) Then
				Me.OnCodigo_internacionalChanging(value)
				Me.SendPropertyChanging
				Me._Codigo_internacional = value
				Me.SendPropertyChanged("Codigo_internacional")
				Me.OnCodigo_internacionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDivideDolar", Storage:="_Convercion_Dolar", DbType:="Bit NOT NULL")>  _
	Public Property Convercion_Dolar() As Boolean
		Get
			Return Me._Convercion_Dolar
		End Get
		Set
			If ((Me._Convercion_Dolar = value)  _
						= false) Then
				Me.OnConvercion_DolarChanging(value)
				Me.SendPropertyChanging
				Me._Convercion_Dolar = value
				Me.SendPropertyChanged("Convercion_Dolar")
				Me.OnConvercion_DolarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroDecimales", Storage:="_Nro_Decimales", DbType:="Tinyint NOT NULL")>  _
	Public Property Nro_Decimales() As Byte
		Get
			Return Me._Nro_Decimales
		End Get
		Set
			If ((Me._Nro_Decimales = value)  _
						= false) Then
				Me.OnNro_DecimalesChanging(value)
				Me.SendPropertyChanging
				Me._Nro_Decimales = value
				Me.SendPropertyChanged("Nro_Decimales")
				Me.OnNro_DecimalesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDiasCumplimiento", Storage:="_Dias_Cumplimiento", DbType:="Int", CanBeNull:=true)>  _
	Public Property Dias_Cumplimiento() As Integer
		Get
			Return Me._Dias_Cumplimiento
		End Get
		Set
			If (Object.Equals(Me._Dias_Cumplimiento, value) = false) Then
				Me.OnDias_CumplimientoChanging(value)
				Me.SendPropertyChanging
				Me._Dias_Cumplimiento = value
				Me.SendPropertyChanged("Dias_Cumplimiento")
				Me.OnDias_CumplimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorBaseIVA", Storage:="_ValorBase_IVA", DbType:="Float")>  _
	Public Property ValorBase_IVA() As System.Nullable(Of Double)
		Get
			Return Me._ValorBase_IVA
		End Get
		Set
			If (Me._ValorBase_IVA.Equals(value) = false) Then
				Me.OnValorBase_IVAChanging(value)
				Me.SendPropertyChanging
				Me._ValorBase_IVA = value
				Me.SendPropertyChanged("ValorBase_IVA")
				Me.OnValorBase_IVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMercadoIntegrado", Storage:="_Mercado_Integrado", DbType:="Bit NOT NULL")>  _
	Public Property Mercado_Integrado() As Boolean
		Get
			Return Me._Mercado_Integrado
		End Get
		Set
			If ((Me._Mercado_Integrado = value)  _
						= false) Then
				Me.OnMercado_IntegradoChanging(value)
				Me.SendPropertyChanging
				Me._Mercado_Integrado = value
				Me.SendPropertyChanged("Mercado_Integrado")
				Me.OnMercado_IntegradoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodDivisa", Storage:="_CodDivisa", DbType:="Varchar(3)")>  _
	Public Property CodDivisa() As String
		Get
			Return Me._CodDivisa
		End Get
		Set
			If (String.Equals(Me._CodDivisa, value) = false) Then
				Me.OnCodDivisaChanging(value)
				Me.SendPropertyChanging
				Me._CodDivisa = value
				Me.SendPropertyChanged("CodDivisa")
				Me.OnCodDivisaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrCodSuper", DbType:="Varchar(4)")>  _
	Public Property StrCodSuper() As String
		Get
			Return Me._StrCodSuper
		End Get
		Set
			If (String.Equals(Me._StrCodSuper, value) = false) Then
				Me.OnStrCodSuperChanging(value)
				Me.SendPropertyChanging
				Me._StrCodSuper = value
				Me.SendPropertyChanged("StrCodSuper")
				Me.OnStrCodSuperChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNacionalidad", DbType:="Varchar(20)")>  _
	Public Property strNacionalidad() As String
		Get
			Return Me._strNacionalidad
		End Get
		Set
			If (String.Equals(Me._strNacionalidad, value) = false) Then
				Me.OnstrNacionalidadChanging(value)
				Me.SendPropertyChanging
				Me._strNacionalidad = value
				Me.SendPropertyChanged("strNacionalidad")
				Me.OnstrNacionalidadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMonedaValor")>  _
Partial Public Class MonedaValo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Codigo As Integer
	
	Private _FechaValor As Date
	
	Private _Valor_Moneda_Local As Decimal
	
	Private _Base_IVA_Diario As System.Nullable(Of Decimal)
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _IDMonedavalor As Integer
	
	Private _NroRegistro As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnFechaValorChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaValorChanged()
    End Sub
    Partial Private Sub OnValor_Moneda_LocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnValor_Moneda_LocalChanged()
    End Sub
    Partial Private Sub OnBase_IVA_DiarioChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBase_IVA_DiarioChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnIDMonedavalorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDMonedavalorChanged()
    End Sub
    Partial Private Sub OnNroRegistroChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroRegistroChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDMoneda", Storage:="_Codigo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As Integer
		Get
			Return Me._Codigo
		End Get
		Set
			If (Object.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaValor", Storage:="_FechaValor", DbType:="Datetime NOT NULL")>  _
	Public Property FechaValor() As Date
		Get
			Return Me._FechaValor
		End Get
		Set
			If ((Me._FechaValor = value)  _
						= false) Then
				Me.OnFechaValorChanging(value)
				Me.SendPropertyChanging
				Me._FechaValor = value
				Me.SendPropertyChanged("FechaValor")
				Me.OnFechaValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorMonedaLocal", Storage:="_Valor_Moneda_Local", DbType:="Money NOT NULL")>  _
	Public Property Valor_Moneda_Local() As Decimal
		Get
			Return Me._Valor_Moneda_Local
		End Get
		Set
			If ((Me._Valor_Moneda_Local = value)  _
						= false) Then
				Me.OnValor_Moneda_LocalChanging(value)
				Me.SendPropertyChanging
				Me._Valor_Moneda_Local = value
				Me.SendPropertyChanged("Valor_Moneda_Local")
				Me.OnValor_Moneda_LocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curBaseIVADiario", Storage:="_Base_IVA_Diario", DbType:="Money")>  _
	Public Property Base_IVA_Diario() As System.Nullable(Of Decimal)
		Get
			Return Me._Base_IVA_Diario
		End Get
		Set
			If (Me._Base_IVA_Diario.Equals(value) = false) Then
				Me.OnBase_IVA_DiarioChanging(value)
				Me.SendPropertyChanging
				Me._Base_IVA_Diario = value
				Me.SendPropertyChanged("Base_IVA_Diario")
				Me.OnBase_IVA_DiarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMonedavalor", Storage:="_IDMonedavalor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDMonedavalor() As Integer
		Get
			Return Me._IDMonedavalor
		End Get
		Set
			If (Object.Equals(Me._IDMonedavalor, value) = false) Then
				Me.OnIDMonedavalorChanging(value)
				Me.SendPropertyChanging
				Me._IDMonedavalor = value
				Me.SendPropertyChanged("IDMonedavalor")
				Me.OnIDMonedavalorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="pNroRegistro", Storage:="_NroRegistro", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property NroRegistro() As Integer
		Get
			Return Me._NroRegistro
		End Get
		Set
			If (Object.Equals(Me._NroRegistro, value) = false) Then
				Me.OnNroRegistroChanging(value)
				Me.SendPropertyChanging
				Me._NroRegistro = value
				Me.SendPropertyChanged("NroRegistro")
				Me.OnNroRegistroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTipoPersonaPorDcto")>  _
Partial Public Class TipoPersonaPorDct
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _TipoIdentificacion As String
	
	Private _IDTipoPersona As Integer
	
	Private _menored As System.Nullable(Of Short)
	
	Private _mayored As System.Nullable(Of Short)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnIDTipoPersonaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTipoPersonaChanged()
    End Sub
    Partial Private Sub OnmenoredChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnmenoredChanged()
    End Sub
    Partial Private Sub OnmayoredChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnmayoredChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Char(1) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDTipoPersona", Storage:="_IDTipoPersona", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDTipoPersona() As Integer
		Get
			Return Me._IDTipoPersona
		End Get
		Set
			If (Object.Equals(Me._IDTipoPersona, value) = false) Then
				Me.OnIDTipoPersonaChanging(value)
				Me.SendPropertyChanging
				Me._IDTipoPersona = value
				Me.SendPropertyChanged("IDTipoPersona")
				Me.OnIDTipoPersonaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intmenored", Storage:="_menored", DbType:="Smallint")>  _
	Public Property menored() As System.Nullable(Of Short)
		Get
			Return Me._menored
		End Get
		Set
			If (Me._menored.Equals(value) = false) Then
				Me.OnmenoredChanging(value)
				Me.SendPropertyChanging
				Me._menored = value
				Me.SendPropertyChanged("menored")
				Me.OnmenoredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intmayored", Storage:="_mayored", DbType:="Smallint")>  _
	Public Property mayored() As System.Nullable(Of Short)
		Get
			Return Me._mayored
		End Get
		Set
			If (Me._mayored.Equals(value) = false) Then
				Me.OnmayoredChanging(value)
				Me.SendPropertyChanging
				Me._mayored = value
				Me.SendPropertyChanged("mayored")
				Me.OnmayoredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMesas")>  _
Partial Public Class Mesa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _Ccostos As String
	
	Private _CuentaContable As String
	
	Private _IdPoblacion As Integer
	
	Private _NombreCiu As String
	
	Private _Actualizacion As Date
	
	Private _GerenteMesa As String
	
	Private _Usuario As String
	
	Private _Msg As String
	
	Private _IdMesa As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCcostosChanging(value As String)
    End Sub
    Partial Private Sub OnCcostosChanged()
    End Sub
    Partial Private Sub OnCuentaContableChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableChanged()
    End Sub
    Partial Private Sub OnIdPoblacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPoblacionChanged()
    End Sub
    Partial Private Sub OnNombreCiuChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCiuChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnGerenteMesaChanging(value As String)
    End Sub
    Partial Private Sub OnGerenteMesaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnIdMesaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdMesaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionisID45a", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCcostos", Storage:="_Ccostos", DbType:="Varchar(20)")>  _
	Public Property Ccostos() As String
		Get
			Return Me._Ccostos
		End Get
		Set
			If (String.Equals(Me._Ccostos, value) = false) Then
				Me.OnCcostosChanging(value)
				Me.SendPropertyChanging
				Me._Ccostos = value
				Me.SendPropertyChanged("Ccostos")
				Me.OnCcostosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(15)")>  _
	Public Property CuentaContable() As String
		Get
			Return Me._CuentaContable
		End Get
		Set
			If (String.Equals(Me._CuentaContable, value) = false) Then
				Me.OnCuentaContableChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContable = value
				Me.SendPropertyChanged("CuentaContable")
				Me.OnCuentaContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdPoblacion", Storage:="_IdPoblacion", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdPoblacion() As Integer
		Get
			Return Me._IdPoblacion
		End Get
		Set
			If (Object.Equals(Me._IdPoblacion, value) = false) Then
				Me.OnIdPoblacionChanging(value)
				Me.SendPropertyChanging
				Me._IdPoblacion = value
				Me.SendPropertyChanged("IdPoblacion")
				Me.OnIdPoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCiu", Storage:="_NombreCiu", DbType:="Varchar(40) NULL")>  _
	Public Property NombreCiu() As String
		Get
			Return Me._NombreCiu
		End Get
		Set
			If (String.Equals(Me._NombreCiu, value) = false) Then
				Me.OnNombreCiuChanging(value)
				Me.SendPropertyChanging
				Me._NombreCiu = value
				Me.SendPropertyChanged("NombreCiu")
				Me.OnNombreCiuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strGerenteMesa", Storage:="_GerenteMesa", DbType:="Varchar(60)")>  _
	Public Property GerenteMesa() As String
		Get
			Return Me._GerenteMesa
		End Get
		Set
			If (String.Equals(Me._GerenteMesa, value) = false) Then
				Me.OnGerenteMesaChanging(value)
				Me.SendPropertyChanging
				Me._GerenteMesa = value
				Me.SendPropertyChanged("GerenteMesa")
				Me.OnGerenteMesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdMesa", Storage:="_IdMesa", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdMesa() As Integer
		Get
			Return Me._IdMesa
		End Get
		Set
			If (Object.Equals(Me._IdMesa, value) = false) Then
				Me.OnIdMesaChanging(value)
				Me.SendPropertyChanging
				Me._IdMesa = value
				Me.SendPropertyChanged("IdMesa")
				Me.OnIdMesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptores")>  _
Partial Public Class Receptore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Sucursal As System.Nullable(Of System.int32)
	
	Private _Codigo As String
	
	Private _Nombre As String
	
	Private _Activo As Boolean
	
	Private _Tipo As String
	
	Private _Estado As System.Nullable(Of Date)
	
	Private _Centro_costos As String
	
	Private _Login As String
	
	Private _SucursalContable As String
	
	Private _Lider_Mesa As Boolean
	
	Private _Codigo_Mesa As Integer
	
	Private _Numero_Documento As String
	
	Private _E_Mail As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IdOficina As Integer
	
	Private _IdReceptor As Integer
	
	Private _NumTrader As String
	
	Private _CodSetFX As String
	
	Private _RepresentanteLegalOtrosNegocios As System.Nullable(Of Boolean)
	
	Private _IdReceptores As Integer
	
	Private _InfoSesion As String
	
	Private _Accion As System.Nullable(Of Char)
	
	Private _Existe As Integer
	
	Private _IDReceptorSafyr As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnSucursalChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnSucursalChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnCentro_costosChanging(value As String)
    End Sub
    Partial Private Sub OnCentro_costosChanged()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnSucursalContableChanging(value As String)
    End Sub
    Partial Private Sub OnSucursalContableChanged()
    End Sub
    Partial Private Sub OnLider_MesaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLider_MesaChanged()
    End Sub
    Partial Private Sub OnCodigo_MesaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigo_MesaChanged()
    End Sub
    Partial Private Sub OnNumero_DocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNumero_DocumentoChanged()
    End Sub
    Partial Private Sub OnE_MailChanging(value As String)
    End Sub
    Partial Private Sub OnE_MailChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdOficinaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdOficinaChanged()
    End Sub
    Partial Private Sub OnIdReceptorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReceptorChanged()
    End Sub
    Partial Private Sub OnNumTraderChanging(value As String)
    End Sub
    Partial Private Sub OnNumTraderChanged()
    End Sub
    Partial Private Sub OnCodSetFXChanging(value As String)
    End Sub
    Partial Private Sub OnCodSetFXChanged()
    End Sub
    Partial Private Sub OnRepresentanteLegalOtrosNegociosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRepresentanteLegalOtrosNegociosChanged()
    End Sub
    Partial Private Sub OnIdReceptoresChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReceptoresChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnExisteChanging(value As Integer)
    End Sub
    Partial Private Sub OnExisteChanged()
    End Sub
    Partial Private Sub OnIDReceptorSafyrChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorSafyrChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSucReceptor", Storage:="_Sucursal", DbType:="Int", CanBeNull:=true)>  _
	Public Property Sucursal() As System.Nullable(Of System.int32)
		Get
			Return Me._Sucursal
		End Get
		Set
			If (Object.Equals(Me._Sucursal, value) = false) Then
				Me.OnSucursalChanging(value)
				Me.SendPropertyChanging
				Me._Sucursal = value
				Me.SendPropertyChanged("Sucursal")
				Me.OnSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strID", Storage:="_Codigo", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoReceptor", Storage:="_Tipo", DbType:="Varchar(1)")>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Estado", DbType:="Datetime")>  _
	Public Property Estado() As System.Nullable(Of Date)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCcostos", Storage:="_Centro_costos", DbType:="Varchar(20)")>  _
	Public Property Centro_costos() As String
		Get
			Return Me._Centro_costos
		End Get
		Set
			If (String.Equals(Me._Centro_costos, value) = false) Then
				Me.OnCentro_costosChanging(value)
				Me.SendPropertyChanging
				Me._Centro_costos = value
				Me.SendPropertyChanged("Centro_costos")
				Me.OnCentro_costosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(50)")>  _
	Public Property Login() As String
		Get
			Return Me._Login
		End Get
		Set
			If (String.Equals(Me._Login, value) = false) Then
				Me.OnLoginChanging(value)
				Me.SendPropertyChanging
				Me._Login = value
				Me.SendPropertyChanged("Login")
				Me.OnLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="pstrSucursalContable", Storage:="_SucursalContable", DbType:="Varchar(2)")>  _
	Public Property SucursalContable() As String
		Get
			Return Me._SucursalContable
		End Get
		Set
			If (String.Equals(Me._SucursalContable, value) = false) Then
				Me.OnSucursalContableChanging(value)
				Me.SendPropertyChanging
				Me._SucursalContable = value
				Me.SendPropertyChanged("SucursalContable")
				Me.OnSucursalContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLiderMesa", Storage:="_Lider_Mesa", DbType:="Bit NOT NULL")>  _
	Public Property Lider_Mesa() As Boolean
		Get
			Return Me._Lider_Mesa
		End Get
		Set
			If ((Me._Lider_Mesa = value)  _
						= false) Then
				Me.OnLider_MesaChanging(value)
				Me.SendPropertyChanging
				Me._Lider_Mesa = value
				Me.SendPropertyChanged("Lider_Mesa")
				Me.OnLider_MesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdMesa", Storage:="_Codigo_Mesa", DbType:="Int", CanBeNull:=true)>  _
	Public Property Codigo_Mesa() As Integer
		Get
			Return Me._Codigo_Mesa
		End Get
		Set
			If (Object.Equals(Me._Codigo_Mesa, value) = false) Then
				Me.OnCodigo_MesaChanging(value)
				Me.SendPropertyChanging
				Me._Codigo_Mesa = value
				Me.SendPropertyChanged("Codigo_Mesa")
				Me.OnCodigo_MesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_Numero_Documento", DbType:="Varchar(15)")>  _
	Public Property Numero_Documento() As String
		Get
			Return Me._Numero_Documento
		End Get
		Set
			If (String.Equals(Me._Numero_Documento, value) = false) Then
				Me.OnNumero_DocumentoChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Documento = value
				Me.SendPropertyChanged("Numero_Documento")
				Me.OnNumero_DocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEMail", Storage:="_E_Mail", DbType:="Varchar(50)")>  _
	Public Property E_Mail() As String
		Get
			Return Me._E_Mail
		End Get
		Set
			If (String.Equals(Me._E_Mail, value) = false) Then
				Me.OnE_MailChanging(value)
				Me.SendPropertyChanging
				Me._E_Mail = value
				Me.SendPropertyChanged("E_Mail")
				Me.OnE_MailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOficina", Storage:="_IdOficina", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdOficina() As Integer
		Get
			Return Me._IdOficina
		End Get
		Set
			If (Object.Equals(Me._IdOficina, value) = false) Then
				Me.OnIdOficinaChanging(value)
				Me.SendPropertyChanging
				Me._IdOficina = value
				Me.SendPropertyChanged("IdOficina")
				Me.OnIdOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdReceptor", Storage:="_IdReceptor", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdReceptor() As Integer
		Get
			Return Me._IdReceptor
		End Get
		Set
			If (Object.Equals(Me._IdReceptor, value) = false) Then
				Me.OnIdReceptorChanging(value)
				Me.SendPropertyChanging
				Me._IdReceptor = value
				Me.SendPropertyChanged("IdReceptor")
				Me.OnIdReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNumTrader", Storage:="_NumTrader", DbType:="Varchar(3)")>  _
	Public Property NumTrader() As String
		Get
			Return Me._NumTrader
		End Get
		Set
			If (String.Equals(Me._NumTrader, value) = false) Then
				Me.OnNumTraderChanging(value)
				Me.SendPropertyChanging
				Me._NumTrader = value
				Me.SendPropertyChanged("NumTrader")
				Me.OnNumTraderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodSetFX", Storage:="_CodSetFX", DbType:="Varchar(13)")>  _
	Public Property CodSetFX() As String
		Get
			Return Me._CodSetFX
		End Get
		Set
			If (String.Equals(Me._CodSetFX, value) = false) Then
				Me.OnCodSetFXChanging(value)
				Me.SendPropertyChanging
				Me._CodSetFX = value
				Me.SendPropertyChanged("CodSetFX")
				Me.OnCodSetFXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRepresentanteLegalOtrosNegocios", Storage:="_RepresentanteLegalOtrosNegocios", DbType:="Bit")>  _
	Public Property RepresentanteLegalOtrosNegocios() As System.Nullable(Of Boolean)
		Get
			Return Me._RepresentanteLegalOtrosNegocios
		End Get
		Set
			If (Me._RepresentanteLegalOtrosNegocios.Equals(value) = false) Then
				Me.OnRepresentanteLegalOtrosNegociosChanging(value)
				Me.SendPropertyChanging
				Me._RepresentanteLegalOtrosNegocios = value
				Me.SendPropertyChanged("RepresentanteLegalOtrosNegocios")
				Me.OnRepresentanteLegalOtrosNegociosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdReceptores", Storage:="_IdReceptores", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdReceptores() As Integer
		Get
			Return Me._IdReceptores
		End Get
		Set
			If (Object.Equals(Me._IdReceptores, value) = false) Then
				Me.OnIdReceptoresChanging(value)
				Me.SendPropertyChanging
				Me._IdReceptores = value
				Me.SendPropertyChanged("IdReceptores")
				Me.OnIdReceptoresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accion", DbType:="Char(1)")>  _
	Public Property Accion() As System.Nullable(Of Char)
		Get
			Return Me._Accion
		End Get
		Set
			If (Me._Accion.Equals(value) = false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Existe", DbType:="Int", CanBeNull:=true)>  _
	Public Property Existe() As Integer
		Get
			Return Me._Existe
		End Get
		Set
			If (Object.Equals(Me._Existe, value) = false) Then
				Me.OnExisteChanging(value)
				Me.SendPropertyChanging
				Me._Existe = value
				Me.SendPropertyChanged("Existe")
				Me.OnExisteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptorSafyr", Storage:="_IDReceptorSafyr", DbType:="Varchar(12)")>  _
	Public Property IDReceptorSafyr() As String
		Get
			Return Me._IDReceptorSafyr
		End Get
		Set
			If (String.Equals(Me._IDReceptorSafyr, value) = false) Then
				Me.OnIDReceptorSafyrChanging(value)
				Me.SendPropertyChanging
				Me._IDReceptorSafyr = value
				Me.SendPropertyChanged("IDReceptorSafyr")
				Me.OnIDReceptorSafyrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblOficinas")>  _
Partial Public Class Oficinas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdOficina As Integer
	
	Private _NomOficina As String
	
	Private _IdSucursal As Integer
	
	Private _DescripcionSucursal As String
	
	Private _Seleccionada As System.Nullable(Of Boolean)
	
	Private _CentroCostos As String
	
	Private _Telefono As String
	
	Private _IdCiudad As System.Nullable(Of System.int32)
	
	Private _NombreOficina As String
	
	Private _FechaActualizacion As System.Nullable(Of Date)
	
	Private _Usuario As String
	
	Private _NombreCiudad As String
	
	Private _Departamento As String
	
	Private _Pais As String
	
	Private _intID As Integer
	
	Private _InfoSesion As String
	
	Private _Accion As System.Nullable(Of Char)
	
	Private _Existe As System.Nullable(Of System.int32)
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdOficinaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdOficinaChanged()
    End Sub
    Partial Private Sub OnNomOficinaChanging(value As String)
    End Sub
    Partial Private Sub OnNomOficinaChanged()
    End Sub
    Partial Private Sub OnIdSucursalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucursalChanged()
    End Sub
    Partial Private Sub OnDescripcionSucursalChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionSucursalChanged()
    End Sub
    Partial Private Sub OnSeleccionadaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSeleccionadaChanged()
    End Sub
    Partial Private Sub OnCentroCostosChanging(value As String)
    End Sub
    Partial Private Sub OnCentroCostosChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnIdCiudadChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIdCiudadChanged()
    End Sub
    Partial Private Sub OnNombreOficinaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreOficinaChanged()
    End Sub
    Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCiudadChanged()
    End Sub
    Partial Private Sub OnDepartamentoChanging(value As String)
    End Sub
    Partial Private Sub OnDepartamentoChanged()
    End Sub
    Partial Private Sub OnPaisChanging(value As String)
    End Sub
    Partial Private Sub OnPaisChanged()
    End Sub
    Partial Private Sub OnintIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnExisteChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnExisteChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOficina", Storage:="_IdOficina", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdOficina() As Integer
		Get
			Return Me._IdOficina
		End Get
		Set
			If (Object.Equals(Me._IdOficina, value) = false) Then
				Me.OnIdOficinaChanging(value)
				Me.SendPropertyChanging
				Me._IdOficina = value
				Me.SendPropertyChanged("IdOficina")
				Me.OnIdOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNomOficina", Storage:="_NomOficina", DbType:="Varchar(50) NOT NULL")>  _
	Public Property NomOficina() As String
		Get
			Return Me._NomOficina
		End Get
		Set
			If (String.Equals(Me._NomOficina, value) = false) Then
				Me.OnNomOficinaChanging(value)
				Me.SendPropertyChanging
				Me._NomOficina = value
				Me.SendPropertyChanged("NomOficina")
				Me.OnNomOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucursal", Storage:="_IdSucursal", DbType:="Int NOT NULL", CanBeNull:=true)>  _
	Public Property IdSucursal() As Integer
		Get
			Return Me._IdSucursal
		End Get
		Set
			If (Object.Equals(Me._IdSucursal, value) = false) Then
				Me.OnIdSucursalChanging(value)
				Me.SendPropertyChanging
				Me._IdSucursal = value
				Me.SendPropertyChanged("IdSucursal")
				Me.OnIdSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionSucursal", DbType:="Varchar(100) NOT NULL")>  _
	Public Property DescripcionSucursal() As String
		Get
			Return Me._DescripcionSucursal
		End Get
		Set
			If (String.Equals(Me._DescripcionSucursal, value) = false) Then
				Me.OnDescripcionSucursalChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionSucursal = value
				Me.SendPropertyChanged("DescripcionSucursal")
				Me.OnDescripcionSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bySeleccionada", Storage:="_Seleccionada", DbType:="Bit NOT NULL")>  _
	Public Property Seleccionada() As System.Nullable(Of Boolean)
		Get
			Return Me._Seleccionada
		End Get
		Set
			If (Me._Seleccionada.Equals(value) = false) Then
				Me.OnSeleccionadaChanging(value)
				Me.SendPropertyChanging
				Me._Seleccionada = value
				Me.SendPropertyChanged("Seleccionada")
				Me.OnSeleccionadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCentroCostos", Storage:="_CentroCostos", DbType:="Varchar(20) NOT NULL")>  _
	Public Property CentroCostos() As String
		Get
			Return Me._CentroCostos
		End Get
		Set
			If (String.Equals(Me._CentroCostos, value) = false) Then
				Me.OnCentroCostosChanging(value)
				Me.SendPropertyChanging
				Me._CentroCostos = value
				Me.SendPropertyChanged("CentroCostos")
				Me.OnCentroCostosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono", Storage:="_Telefono", DbType:="Varchar(50)")>  _
	Public Property Telefono() As String
		Get
			Return Me._Telefono
		End Get
		Set
			If (String.Equals(Me._Telefono, value) = false) Then
				Me.OnTelefonoChanging(value)
				Me.SendPropertyChanging
				Me._Telefono = value
				Me.SendPropertyChanged("Telefono")
				Me.OnTelefonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdCiudad", Storage:="_IdCiudad", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdCiudad() As System.Nullable(Of System.int32)
		Get
			Return Me._IdCiudad
		End Get
		Set
			If (Object.Equals(Me._IdCiudad, value) = false) Then
				Me.OnIdCiudadChanging(value)
				Me.SendPropertyChanging
				Me._IdCiudad = value
				Me.SendPropertyChanged("IdCiudad")
				Me.OnIdCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreOficina", Storage:="_NombreOficina", DbType:="Varchar(50) NOT NULL")>  _
	Public Property NombreOficina() As String
		Get
			Return Me._NombreOficina
		End Get
		Set
			If (String.Equals(Me._NombreOficina, value) = false) Then
				Me.OnNombreOficinaChanging(value)
				Me.SendPropertyChanging
				Me._NombreOficina = value
				Me.SendPropertyChanged("NombreOficina")
				Me.OnNombreOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaActualizacion", Storage:="_FechaActualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property FechaActualizacion() As System.Nullable(Of Date)
		Get
			Return Me._FechaActualizacion
		End Get
		Set
			If (Me._FechaActualizacion.Equals(value) = false) Then
				Me.OnFechaActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._FechaActualizacion = value
				Me.SendPropertyChanged("FechaActualizacion")
				Me.OnFechaActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCiudad", DbType:="Varchar(100) NULL")>  _
	Public Property NombreCiudad() As String
		Get
			Return Me._NombreCiudad
		End Get
		Set
			If (String.Equals(Me._NombreCiudad, value) = false) Then
				Me.OnNombreCiudadChanging(value)
				Me.SendPropertyChanging
				Me._NombreCiudad = value
				Me.SendPropertyChanged("NombreCiudad")
				Me.OnNombreCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Departamento", DbType:="Varchar(200) NULL")>  _
	Public Property Departamento() As String
		Get
			Return Me._Departamento
		End Get
		Set
			If (String.Equals(Me._Departamento, value) = false) Then
				Me.OnDepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._Departamento = value
				Me.SendPropertyChanged("Departamento")
				Me.OnDepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pais", DbType:="Varchar(200) NULL")>  _
	Public Property Pais() As String
		Get
			Return Me._Pais
		End Get
		Set
			If (String.Equals(Me._Pais, value) = false) Then
				Me.OnPaisChanging(value)
				Me.SendPropertyChanging
				Me._Pais = value
				Me.SendPropertyChanged("Pais")
				Me.OnPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property intID() As Integer
		Get
			Return Me._intID
		End Get
		Set
			If (Object.Equals(Me._intID, value) = false) Then
				Me.OnintIDChanging(value)
				Me.SendPropertyChanging
				Me._intID = value
				Me.SendPropertyChanged("intID")
				Me.OnintIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accion", DbType:="Char(1)")>  _
	Public Property Accion() As System.Nullable(Of Char)
		Get
			Return Me._Accion
		End Get
		Set
			If (Me._Accion.Equals(value) = false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Existe", DbType:="Int", CanBeNull:=true)>  _
	Public Property Existe() As System.Nullable(Of System.int32)
		Get
			Return Me._Existe
		End Get
		Set
			If (Object.Equals(Me._Existe, value) = false) Then
				Me.OnExisteChanging(value)
				Me.SendPropertyChanging
				Me._Existe = value
				Me.SendPropertyChanged("Existe")
				Me.OnExisteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmpCCostos")>  _
Partial Public Class tmpCCostos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lngID As Integer
	
	Private _strID As String
	
	Private _strNombre As String
	
	Private _lngIDCCostos As Integer
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDChanged()
    End Sub
    Partial Private Sub OnstrIDChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnlngIDCCostosChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDCCostosChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property lngID() As Integer
		Get
			Return Me._lngID
		End Get
		Set
			If (Object.Equals(Me._lngID, value) = false) Then
				Me.OnlngIDChanging(value)
				Me.SendPropertyChanging
				Me._lngID = value
				Me.SendPropertyChanged("lngID")
				Me.OnlngIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strID", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property strID() As String
		Get
			Return Me._strID
		End Get
		Set
			If (String.Equals(Me._strID, value) = false) Then
				Me.OnstrIDChanging(value)
				Me.SendPropertyChanging
				Me._strID = value
				Me.SendPropertyChanged("strID")
				Me.OnstrIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property strNombre() As String
		Get
			Return Me._strNombre
		End Get
		Set
			If (String.Equals(Me._strNombre, value) = false) Then
				Me.OnstrNombreChanging(value)
				Me.SendPropertyChanging
				Me._strNombre = value
				Me.SendPropertyChanged("strNombre")
				Me.OnstrNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDCCostos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property lngIDCCostos() As Integer
		Get
			Return Me._lngIDCCostos
		End Get
		Set
			If (Object.Equals(Me._lngIDCCostos, value) = false) Then
				Me.OnlngIDCCostosChanging(value)
				Me.SendPropertyChanging
				Me._lngIDCCostos = value
				Me.SendPropertyChanged("lngIDCCostos")
				Me.OnlngIDCCostosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresSistemas")>  _
Partial Public Class ReceptoresSistema
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Codigo As String
	
	Private _Codigo_Sistema As String
	
	Private _Valor_Sistema As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDReceptoresSistemas As Integer
	
	Private _InfoSesion As String
	
	Private _Nombre As String
	
	Private _MontoLimite As System.Nullable(Of Double)
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnCodigo_SistemaChanging(value As String)
    End Sub
    Partial Private Sub OnCodigo_SistemaChanged()
    End Sub
    Partial Private Sub OnValor_SistemaChanging(value As String)
    End Sub
    Partial Private Sub OnValor_SistemaChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDReceptoresSistemasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDReceptoresSistemasChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnMontoLimiteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMontoLimiteChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strID", Storage:="_Codigo", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoSistema", Storage:="_Codigo_Sistema", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo_Sistema() As String
		Get
			Return Me._Codigo_Sistema
		End Get
		Set
			If (String.Equals(Me._Codigo_Sistema, value) = false) Then
				Me.OnCodigo_SistemaChanging(value)
				Me.SendPropertyChanging
				Me._Codigo_Sistema = value
				Me.SendPropertyChanged("Codigo_Sistema")
				Me.OnCodigo_SistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValorSistema", Storage:="_Valor_Sistema", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Valor_Sistema() As String
		Get
			Return Me._Valor_Sistema
		End Get
		Set
			If (String.Equals(Me._Valor_Sistema, value) = false) Then
				Me.OnValor_SistemaChanging(value)
				Me.SendPropertyChanging
				Me._Valor_Sistema = value
				Me.SendPropertyChanged("Valor_Sistema")
				Me.OnValor_SistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptoresSistemas", Storage:="_IDReceptoresSistemas", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDReceptoresSistemas() As Integer
		Get
			Return Me._IDReceptoresSistemas
		End Get
		Set
			If (Object.Equals(Me._IDReceptoresSistemas, value) = false) Then
				Me.OnIDReceptoresSistemasChanging(value)
				Me.SendPropertyChanging
				Me._IDReceptoresSistemas = value
				Me.SendPropertyChanged("IDReceptoresSistemas")
				Me.OnIDReceptoresSistemasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(80)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curMontoLimite", Storage:="_MontoLimite", DbType:="Float NULL")>  _
	Public Property MontoLimite() As System.Nullable(Of Double)
		Get
			Return Me._MontoLimite
		End Get
		Set
			If (Me._MontoLimite.Equals(value) = false) Then
				Me.OnMontoLimiteChanging(value)
				Me.SendPropertyChanging
				Me._MontoLimite = value
				Me.SendPropertyChanged("MontoLimite")
				Me.OnMontoLimiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblUsuariosFechaCierre")>  _
Partial Public Class UsuariosFechaCierr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Nombre_Usuario As String
	
	Private _Modulo As String
	
	Private _Fecha_Cierre As Date
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _ID As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnNombre_UsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_UsuarioChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As String)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
    Partial Private Sub OnFecha_CierreChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_CierreChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioApp", Storage:="_Nombre_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre_Usuario() As String
		Get
			Return Me._Nombre_Usuario
		End Get
		Set
			If (String.Equals(Me._Nombre_Usuario, value) = false) Then
				Me.OnNombre_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Usuario = value
				Me.SendPropertyChanged("Nombre_Usuario")
				Me.OnNombre_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Modulo() As String
		Get
			Return Me._Modulo
		End Get
		Set
			If (String.Equals(Me._Modulo, value) = false) Then
				Me.OnModuloChanging(value)
				Me.SendPropertyChanging
				Me._Modulo = value
				Me.SendPropertyChanged("Modulo")
				Me.OnModuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCierre", Storage:="_Fecha_Cierre", DbType:="Datetime NOT NULL")>  _
	Public Property Fecha_Cierre() As Date
		Get
			Return Me._Fecha_Cierre
		End Get
		Set
			If ((Me._Fecha_Cierre = value)  _
						= false) Then
				Me.OnFecha_CierreChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Cierre = value
				Me.SendPropertyChanged("Fecha_Cierre")
				Me.OnFecha_CierreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCodigosOtrosSistemas")>  _
Partial Public Class CodigosOtrosSistema
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _IdComisionista As Integer
	
	Private _IdSucComisionista As Integer
	
	Private _Comitente As String
	
	Private _Sistema As String
	
	Private _CodigoSistema As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _NombreComitente As String
	
	Private _Msg As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdComisionistaChanged()
    End Sub
    Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucComisionistaChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnCodigoSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoSistemaChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComitenteChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If (Object.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdComisionista", Storage:="_IdComisionista", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdComisionista() As Integer
		Get
			Return Me._IdComisionista
		End Get
		Set
			If (Object.Equals(Me._IdComisionista, value) = false) Then
				Me.OnIdComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdComisionista = value
				Me.SendPropertyChanged("IdComisionista")
				Me.OnIdComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdSucComisionista() As Integer
		Get
			Return Me._IdSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IdSucComisionista, value) = false) Then
				Me.OnIdSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdSucComisionista = value
				Me.SendPropertyChanged("IdSucComisionista")
				Me.OnIdSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_Comitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property Comitente() As String
		Get
			Return Me._Comitente
		End Get
		Set
			If (String.Equals(Me._Comitente, value) = false) Then
				Me.OnComitenteChanging(value)
				Me.SendPropertyChanging
				Me._Comitente = value
				Me.SendPropertyChanged("Comitente")
				Me.OnComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSistema", Storage:="_Sistema", DbType:="Varchar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Sistema() As String
		Get
			Return Me._Sistema
		End Get
		Set
			If (String.Equals(Me._Sistema, value) = false) Then
				Me.OnSistemaChanging(value)
				Me.SendPropertyChanging
				Me._Sistema = value
				Me.SendPropertyChanged("Sistema")
				Me.OnSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoSistema", Storage:="_CodigoSistema", DbType:="Varchar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property CodigoSistema() As String
		Get
			Return Me._CodigoSistema
		End Get
		Set
			If (String.Equals(Me._CodigoSistema, value) = false) Then
				Me.OnCodigoSistemaChanging(value)
				Me.SendPropertyChanging
				Me._CodigoSistema = value
				Me.SendPropertyChanged("CodigoSistema")
				Me.OnCodigoSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_NombreComitente", DbType:="VarChar(50)")>  _
	Public Property NombreComitente() As String
		Get
			Return Me._NombreComitente
		End Get
		Set
			If (String.Equals(Me._NombreComitente, value) = false) Then
				Me.OnNombreComitenteChanging(value)
				Me.SendPropertyChanging
				Me._NombreComitente = value
				Me.SendPropertyChanged("NombreComitente")
				Me.OnNombreComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ItemCombo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Categoria As String
	
	Private _ID As String
	
	Private _Descripcion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Categoria() As String
		Get
			Return Me._Categoria
		End Get
		Set
			If (String.Equals(Me._Categoria, value) = false) Then
				Me.OnCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._Categoria = value
				Me.SendPropertyChanged("Categoria")
				Me.OnCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ListaUsuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nombre_Consecutivo As String
	
	Private _Chequear As Boolean
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnConsecutivoChanged()
    End Sub
    Partial Private Sub OnChequearChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChequearChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Consecutivo", DbType:="Varchar(15) ", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Consecutivo() As String
		Get
			Return Me._Nombre_Consecutivo
		End Get
		Set
			If (String.Equals(Me._Nombre_Consecutivo, value) = false) Then
				Me.OnConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Consecutivo = value
				Me.SendPropertyChanged("Consecutivo")
				Me.OnConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chequear")>  _
	Public Property Chequear() As Boolean
		Get
			Return Me._Chequear
		End Get
		Set
			If ((Me._Chequear = value)  _
						= false) Then
				Me.OnChequearChanging(value)
				Me.SendPropertyChanging
				Me._Chequear = value
				Me.SendPropertyChanged("Chequear")
				Me.OnChequearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ConsultaExiste
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Existe As Integer
	
	Private _StrId As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnExisteChanging(value As Integer)
    End Sub
    Partial Private Sub OnExisteChanged()
    End Sub
    Partial Private Sub OnStrIdChanging(value As String)
    End Sub
    Partial Private Sub OnStrIdChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Existe", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property Existe() As Integer
		Get
			Return Me._Existe
		End Get
		Set
			If ((Me._Existe = value)  _
						= false) Then
				Me.OnExisteChanging(value)
				Me.SendPropertyChanging
				Me._Existe = value
				Me.SendPropertyChanged("Existe")
				Me.OnExisteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrId", DbType:="Varchar(4) ", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrId() As String
		Get
			Return Me._StrId
		End Get
		Set
			If (String.Equals(Me._StrId, value) = false) Then
				Me.OnStrIdChanging(value)
				Me.SendPropertyChanging
				Me._StrId = value
				Me.SendPropertyChanged("StrId")
				Me.OnStrIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblInstalacion")>  _
Partial Public Class Instalacio
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDBolsa As Integer
	
	Private _IdPoblacion As Integer
	
	Private _Linea1 As String
	
	Private _Enca11 As String
	
	Private _Enca21 As String
	
	Private _Enca31 As String
	
	Private _Enca41 As String
	
	Private _Enca12 As String
	
	Private _Enca22 As String
	
	Private _Enca32 As String
	
	Private _Enca42 As String
	
	Private _Observacion1 As String
	
	Private _Observacion2 As String
	
	Private _ClientesAutomatico As Boolean
	
	Private _ClientesCedula As Boolean
	
	Private _EncaFac As Boolean
	
	Private _EncaFacBca As Boolean
	
	Private _EncaTit As Boolean
	
	Private _EncaEgr As Boolean
	
	Private _EncaCaj As Boolean
	
	Private _EncaNot As Boolean
	
	Private _EncaExt As Boolean
	
	Private _RCLineas As Boolean
	
	Private _CELineas As Boolean
	
	Private _NCLineas As Boolean
	
	Private _TITLineas As Boolean
	
	Private _FacLineas As Boolean
	
	Private _FacBcaLineas As Boolean
	
	Private _EXTLineas As Boolean
	
	Private _Receptores As Boolean
	
	Private _FechaOrden As Boolean
	
	Private _Usuario As Boolean
	
	Private _ValSobregiroCE As Boolean
	
	Private _Resolucion As String
	
	Private _IvaComision As Double
	
	Private _NombreCuenta As String
	
	Private _SerBolsaFijo As System.Nullable(Of Double)
	
	Private _SerBolsaFijoAcciones As System.Nullable(Of Double)
	
	Private _TopeSerBolsaFijoAcciones As System.Nullable(Of Double)
	
	Private _EncaCus As Boolean
	
	Private _CusLineas As Boolean
	
	Private _UsuarioEntregas As Boolean
	
	Private _UsuarioRecibido As Boolean
	
	Private _UsuarioCustodia As Boolean
	
	Private _UsuarioSobrantes As Boolean
	
	Private _IVA As Integer
	
	Private _RteFuente As Integer
	
	Private _NitComisionista As String
	
	Private _Servidor As String
	
	Private _BaseDatos As String
	
	Private _Owner As String
	
	Private _ServidorBus As String
	
	Private _BaseDatosBus As String
	
	Private _OwnerBus As String
	
	Private _Compania As Integer
	
	Private _DepositoExtranjero As String
	
	Private _CustodioLocal As String
	
	Private _IdContraparteOTC As String
	
	Private _ValorContrato As System.Nullable(Of Double)
	
	Private _CodigoIMC As Integer
	
	Private _ReteIva As System.Nullable(Of Double)
	
	Private _ValorInicial As System.Nullable(Of Double)
	
	Private _GMS As System.Nullable(Of Double)
	
	Private _CargarReceptorCliente As Boolean
	
	Private _Cierre As System.Nullable(Of Date)
	
	Private _UltimaVersion As String
	
	Private _TasaInicial As System.Nullable(Of Double)
	
	Private _AplazarOTC As Boolean
	
	Private _CuentasBancarias As Boolean
	
	Private _RepresentanteLegal As Boolean
	
	Private _FechaLimite As System.Nullable(Of Date)
	
	Private _Actualizacion As Date
	
	Private _strUsuario As String
	
	Private _DiaSemana As Integer
	
	Private _PorcentajeGarantia As System.Nullable(Of Double)
	
	Private _TarifaRteFuente As System.Nullable(Of Double)
	
	Private _ImpDocTesoreria As System.Nullable(Of Boolean)
	
	Private _TipoEntidad As String
	
	Private _CodigoEntidad As String
	
	Private _RteComision As Double
	
	Private _RteICA As Double
	
	Private _CodigoEntidadUIAF As String
	
	Private _TipoEntidadUIAF As String
	
	Private _ValidaCuentaSuperVal As Boolean
	
	Private _ValSobregiroNC As Boolean
	
	Private _Tipo As String
	
	Private _CtaContable As String
	
	Private _CCosto As String
	
	Private _CtaContableContraparte As String
	
	Private _CCostoContraparte As String
	
	Private _ReporteExtractoClientePedirRangos As System.Nullable(Of Boolean)
	
	Private _CtaContableClientes As String
	
	Private _URL As String
	
	Private _Path As String
	
	Private _Ordenantes As System.Nullable(Of Boolean)
	
	Private _ReceptorSuc As String
	
	Private _ClientesAgrupados As System.Nullable(Of Boolean)
	
	Private _PathActualiza As String
	
	Private _DatosFinancieros As System.Nullable(Of Boolean)
	
	Private _ConceptoDetalleTesoreriaManual As Boolean
	
	Private _NroUsu As String
	
	Private _ServidorNacional As String
	
	Private _strCompania As String
	
	Private _CompaniaM As String
	
	Private _Multicuenta As String
	
	Private _MaximoValor As System.Nullable(Of Decimal)
	
	Private _DefensorCliente As String
	
	Private _UrlReportesBus As String
	
	Private _RutaReportesBus As String
	
	Private _GMFInferior As System.Nullable(Of Double)
	
	Private _CtaContableContraparteNotasCxC As String
	
	Private _tipoNotasCxC As String
	
	Private _PorcentajeNoConstitutivoDeRenta As System.Nullable(Of Decimal)
	
	Private _CtaContableTrasladoDB As String
	
	Private _CtaContableTrasladoCR As String
	
	Private _IDInstalacion As Integer
	
	Private _InfoSesion As String
	
	Private _CompaniaPrincipal As Integer
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBolsaChanged()
    End Sub
    Partial Private Sub OnIdPoblacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPoblacionChanged()
    End Sub
    Partial Private Sub OnLinea1Changing(value As String)
    End Sub
    Partial Private Sub OnLinea1Changed()
    End Sub
    Partial Private Sub OnEnca11Changing(value As String)
    End Sub
    Partial Private Sub OnEnca11Changed()
    End Sub
    Partial Private Sub OnEnca21Changing(value As String)
    End Sub
    Partial Private Sub OnEnca21Changed()
    End Sub
    Partial Private Sub OnEnca31Changing(value As String)
    End Sub
    Partial Private Sub OnEnca31Changed()
    End Sub
    Partial Private Sub OnEnca41Changing(value As String)
    End Sub
    Partial Private Sub OnEnca41Changed()
    End Sub
    Partial Private Sub OnEnca12Changing(value As String)
    End Sub
    Partial Private Sub OnEnca12Changed()
    End Sub
    Partial Private Sub OnEnca22Changing(value As String)
    End Sub
    Partial Private Sub OnEnca22Changed()
    End Sub
    Partial Private Sub OnEnca32Changing(value As String)
    End Sub
    Partial Private Sub OnEnca32Changed()
    End Sub
    Partial Private Sub OnEnca42Changing(value As String)
    End Sub
    Partial Private Sub OnEnca42Changed()
    End Sub
    Partial Private Sub OnObservacion1Changing(value As String)
    End Sub
    Partial Private Sub OnObservacion1Changed()
    End Sub
    Partial Private Sub OnObservacion2Changing(value As String)
    End Sub
    Partial Private Sub OnObservacion2Changed()
    End Sub
    Partial Private Sub OnClientesAutomaticoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnClientesAutomaticoChanged()
    End Sub
    Partial Private Sub OnClientesCedulaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnClientesCedulaChanged()
    End Sub
    Partial Private Sub OnEncaFacChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaFacChanged()
    End Sub
    Partial Private Sub OnEncaFacBcaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaFacBcaChanged()
    End Sub
    Partial Private Sub OnEncaTitChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaTitChanged()
    End Sub
    Partial Private Sub OnEncaEgrChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaEgrChanged()
    End Sub
    Partial Private Sub OnEncaCajChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaCajChanged()
    End Sub
    Partial Private Sub OnEncaNotChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaNotChanged()
    End Sub
    Partial Private Sub OnEncaExtChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaExtChanged()
    End Sub
    Partial Private Sub OnRCLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRCLineasChanged()
    End Sub
    Partial Private Sub OnCELineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCELineasChanged()
    End Sub
    Partial Private Sub OnNCLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnNCLineasChanged()
    End Sub
    Partial Private Sub OnTITLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTITLineasChanged()
    End Sub
    Partial Private Sub OnFacLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFacLineasChanged()
    End Sub
    Partial Private Sub OnFacBcaLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFacBcaLineasChanged()
    End Sub
    Partial Private Sub OnEXTLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEXTLineasChanged()
    End Sub
    Partial Private Sub OnReceptoresChanging(value As Boolean)
    End Sub
    Partial Private Sub OnReceptoresChanged()
    End Sub
    Partial Private Sub OnFechaOrdenChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFechaOrdenChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnValSobregiroCEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnValSobregiroCEChanged()
    End Sub
    Partial Private Sub OnResolucionChanging(value As String)
    End Sub
    Partial Private Sub OnResolucionChanged()
    End Sub
    Partial Private Sub OnIvaComisionChanging(value As Double)
    End Sub
    Partial Private Sub OnIvaComisionChanged()
    End Sub
    Partial Private Sub OnNombreCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCuentaChanged()
    End Sub
    Partial Private Sub OnSerBolsaFijoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSerBolsaFijoChanged()
    End Sub
    Partial Private Sub OnSerBolsaFijoAccionesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSerBolsaFijoAccionesChanged()
    End Sub
    Partial Private Sub OnTopeSerBolsaFijoAccionesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTopeSerBolsaFijoAccionesChanged()
    End Sub
    Partial Private Sub OnEncaCusChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEncaCusChanged()
    End Sub
    Partial Private Sub OnCusLineasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCusLineasChanged()
    End Sub
    Partial Private Sub OnUsuarioEntregasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUsuarioEntregasChanged()
    End Sub
    Partial Private Sub OnUsuarioRecibidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUsuarioRecibidoChanged()
    End Sub
    Partial Private Sub OnUsuarioCustodiaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUsuarioCustodiaChanged()
    End Sub
    Partial Private Sub OnUsuarioSobrantesChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUsuarioSobrantesChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OnRteFuenteChanging(value As Integer)
    End Sub
    Partial Private Sub OnRteFuenteChanged()
    End Sub
    Partial Private Sub OnNitComisionistaChanging(value As String)
    End Sub
    Partial Private Sub OnNitComisionistaChanged()
    End Sub
    Partial Private Sub OnServidorChanging(value As String)
    End Sub
    Partial Private Sub OnServidorChanged()
    End Sub
    Partial Private Sub OnBaseDatosChanging(value As String)
    End Sub
    Partial Private Sub OnBaseDatosChanged()
    End Sub
    Partial Private Sub OnOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnOwnerChanged()
    End Sub
    Partial Private Sub OnServidorBusChanging(value As String)
    End Sub
    Partial Private Sub OnServidorBusChanged()
    End Sub
    Partial Private Sub OnBaseDatosBusChanging(value As String)
    End Sub
    Partial Private Sub OnBaseDatosBusChanged()
    End Sub
    Partial Private Sub OnOwnerBusChanging(value As String)
    End Sub
    Partial Private Sub OnOwnerBusChanged()
    End Sub
    Partial Private Sub OnCompaniaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCompaniaChanged()
    End Sub
    Partial Private Sub OnDepositoExtranjeroChanging(value As String)
    End Sub
    Partial Private Sub OnDepositoExtranjeroChanged()
    End Sub
    Partial Private Sub OnCustodioLocalChanging(value As String)
    End Sub
    Partial Private Sub OnCustodioLocalChanged()
    End Sub
    Partial Private Sub OnIdContraparteOTCChanging(value As String)
    End Sub
    Partial Private Sub OnIdContraparteOTCChanged()
    End Sub
    Partial Private Sub OnValorContratoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorContratoChanged()
    End Sub
    Partial Private Sub OnCodigoIMCChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoIMCChanged()
    End Sub
    Partial Private Sub OnReteIvaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnReteIvaChanged()
    End Sub
    Partial Private Sub OnValorInicialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorInicialChanged()
    End Sub
    Partial Private Sub OnGMSChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGMSChanged()
    End Sub
    Partial Private Sub OnCargarReceptorClienteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCargarReceptorClienteChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    Partial Private Sub OnUltimaVersionChanging(value As String)
    End Sub
    Partial Private Sub OnUltimaVersionChanged()
    End Sub
    Partial Private Sub OnTasaInicialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaInicialChanged()
    End Sub
    Partial Private Sub OnAplazarOTCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplazarOTCChanged()
    End Sub
    Partial Private Sub OnCuentasBancariasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCuentasBancariasChanged()
    End Sub
    Partial Private Sub OnRepresentanteLegalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRepresentanteLegalChanged()
    End Sub
    Partial Private Sub OnFechaLimiteChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaLimiteChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnDiaSemanaChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiaSemanaChanged()
    End Sub
    Partial Private Sub OnPorcentajeGarantiaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcentajeGarantiaChanged()
    End Sub
    Partial Private Sub OnTarifaRteFuenteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTarifaRteFuenteChanged()
    End Sub
    Partial Private Sub OnImpDocTesoreriaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnImpDocTesoreriaChanged()
    End Sub
    Partial Private Sub OnTipoEntidadChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEntidadChanged()
    End Sub
    Partial Private Sub OnCodigoEntidadChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoEntidadChanged()
    End Sub
    Partial Private Sub OnRteComisionChanging(value As Double)
    End Sub
    Partial Private Sub OnRteComisionChanged()
    End Sub
    Partial Private Sub OnRteICAChanging(value As Double)
    End Sub
    Partial Private Sub OnRteICAChanged()
    End Sub
    Partial Private Sub OnCodigoEntidadUIAFChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoEntidadUIAFChanged()
    End Sub
    Partial Private Sub OnTipoEntidadUIAFChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEntidadUIAFChanged()
    End Sub
    Partial Private Sub OnValidaCuentaSuperValChanging(value As Boolean)
    End Sub
    Partial Private Sub OnValidaCuentaSuperValChanged()
    End Sub
    Partial Private Sub OnValSobregiroNCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnValSobregiroNCChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnCtaContableChanging(value As String)
    End Sub
    Partial Private Sub OnCtaContableChanged()
    End Sub
    Partial Private Sub OnCCostoChanging(value As String)
    End Sub
    Partial Private Sub OnCCostoChanged()
    End Sub
    Partial Private Sub OnCtaContableContraparteChanging(value As String)
    End Sub
    Partial Private Sub OnCtaContableContraparteChanged()
    End Sub
    Partial Private Sub OnCCostoContraparteChanging(value As String)
    End Sub
    Partial Private Sub OnCCostoContraparteChanged()
    End Sub
    Partial Private Sub OnReporteExtractoClientePedirRangosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnReporteExtractoClientePedirRangosChanged()
    End Sub
    Partial Private Sub OnCtaContableClientesChanging(value As String)
    End Sub
    Partial Private Sub OnCtaContableClientesChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnPathChanging(value As String)
    End Sub
    Partial Private Sub OnPathChanged()
    End Sub
    Partial Private Sub OnOrdenantesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOrdenantesChanged()
    End Sub
    Partial Private Sub OnReceptorSucChanging(value As String)
    End Sub
    Partial Private Sub OnReceptorSucChanged()
    End Sub
    Partial Private Sub OnClientesAgrupadosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClientesAgrupadosChanged()
    End Sub
    Partial Private Sub OnPathActualizaChanging(value As String)
    End Sub
    Partial Private Sub OnPathActualizaChanged()
    End Sub
    Partial Private Sub OnDatosFinancierosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDatosFinancierosChanged()
    End Sub
    Partial Private Sub OnConceptoDetalleTesoreriaManualChanging(value As Boolean)
    End Sub
    Partial Private Sub OnConceptoDetalleTesoreriaManualChanged()
    End Sub
    Partial Private Sub OnNroUsuChanging(value As String)
    End Sub
    Partial Private Sub OnNroUsuChanged()
    End Sub
    Partial Private Sub OnServidorNacionalChanging(value As String)
    End Sub
    Partial Private Sub OnServidorNacionalChanged()
    End Sub
    Partial Private Sub OnstrCompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnstrCompaniaChanged()
    End Sub
    Partial Private Sub OnCompaniaMChanging(value As String)
    End Sub
    Partial Private Sub OnCompaniaMChanged()
    End Sub
    Partial Private Sub OnMulticuentaChanging(value As String)
    End Sub
    Partial Private Sub OnMulticuentaChanged()
    End Sub
    Partial Private Sub OnMaximoValorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMaximoValorChanged()
    End Sub
    Partial Private Sub OnDefensorClienteChanging(value As String)
    End Sub
    Partial Private Sub OnDefensorClienteChanged()
    End Sub
    Partial Private Sub OnUrlReportesBusChanging(value As String)
    End Sub
    Partial Private Sub OnUrlReportesBusChanged()
    End Sub
    Partial Private Sub OnRutaReportesBusChanging(value As String)
    End Sub
    Partial Private Sub OnRutaReportesBusChanged()
    End Sub
    Partial Private Sub OnGMFInferiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGMFInferiorChanged()
    End Sub
    Partial Private Sub OnCtaContableContraparteNotasCxCChanging(value As String)
    End Sub
    Partial Private Sub OnCtaContableContraparteNotasCxCChanged()
    End Sub
    Partial Private Sub OntipoNotasCxCChanging(value As String)
    End Sub
    Partial Private Sub OntipoNotasCxCChanged()
    End Sub
    Partial Private Sub OnPorcentajeNoConstitutivoDeRentaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcentajeNoConstitutivoDeRentaChanged()
    End Sub
    Partial Private Sub OnCtaContableTrasladoDBChanging(value As String)
    End Sub
    Partial Private Sub OnCtaContableTrasladoDBChanged()
    End Sub
    Partial Private Sub OnCtaContableTrasladoCRChanging(value As String)
    End Sub
    Partial Private Sub OnCtaContableTrasladoCRChanged()
    End Sub
    Partial Private Sub OnIDInstalacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDInstalacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnCompaniaPrincipalChanging(value As Integer)
    End Sub
    Partial Private Sub OnCompaniaPrincipalChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDBolsa", Storage:="_IDBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDBolsa() As Integer
		Get
			Return Me._IDBolsa
		End Get
		Set
			If (Object.Equals(Me._IDBolsa, value) = false) Then
				Me.OnIDBolsaChanging(value)
				Me.SendPropertyChanging
				Me._IDBolsa = value
				Me.SendPropertyChanged("IDBolsa")
				Me.OnIDBolsaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdPoblacion", Storage:="_IdPoblacion", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdPoblacion() As Integer
		Get
			Return Me._IdPoblacion
		End Get
		Set
			If (Object.Equals(Me._IdPoblacion, value) = false) Then
				Me.OnIdPoblacionChanging(value)
				Me.SendPropertyChanging
				Me._IdPoblacion = value
				Me.SendPropertyChanged("IdPoblacion")
				Me.OnIdPoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLinea1", Storage:="_Linea1", DbType:="Char(80)")>  _
	Public Property Linea1() As String
		Get
			Return Me._Linea1
		End Get
		Set
			If (String.Equals(Me._Linea1, value) = false) Then
				Me.OnLinea1Changing(value)
				Me.SendPropertyChanging
				Me._Linea1 = value
				Me.SendPropertyChanged("Linea1")
				Me.OnLinea1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca11", Storage:="_Enca11", DbType:="Char(80)")>  _
	Public Property Enca11() As String
		Get
			Return Me._Enca11
		End Get
		Set
			If (String.Equals(Me._Enca11, value) = false) Then
				Me.OnEnca11Changing(value)
				Me.SendPropertyChanging
				Me._Enca11 = value
				Me.SendPropertyChanged("Enca11")
				Me.OnEnca11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca21", Storage:="_Enca21", DbType:="Char(80)")>  _
	Public Property Enca21() As String
		Get
			Return Me._Enca21
		End Get
		Set
			If (String.Equals(Me._Enca21, value) = false) Then
				Me.OnEnca21Changing(value)
				Me.SendPropertyChanging
				Me._Enca21 = value
				Me.SendPropertyChanged("Enca21")
				Me.OnEnca21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca31", Storage:="_Enca31", DbType:="Char(80)")>  _
	Public Property Enca31() As String
		Get
			Return Me._Enca31
		End Get
		Set
			If (String.Equals(Me._Enca31, value) = false) Then
				Me.OnEnca31Changing(value)
				Me.SendPropertyChanging
				Me._Enca31 = value
				Me.SendPropertyChanged("Enca31")
				Me.OnEnca31Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca41", Storage:="_Enca41", DbType:="Char(80)")>  _
	Public Property Enca41() As String
		Get
			Return Me._Enca41
		End Get
		Set
			If (String.Equals(Me._Enca41, value) = false) Then
				Me.OnEnca41Changing(value)
				Me.SendPropertyChanging
				Me._Enca41 = value
				Me.SendPropertyChanged("Enca41")
				Me.OnEnca41Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca12", Storage:="_Enca12", DbType:="Char(80)")>  _
	Public Property Enca12() As String
		Get
			Return Me._Enca12
		End Get
		Set
			If (String.Equals(Me._Enca12, value) = false) Then
				Me.OnEnca12Changing(value)
				Me.SendPropertyChanging
				Me._Enca12 = value
				Me.SendPropertyChanged("Enca12")
				Me.OnEnca12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca22", Storage:="_Enca22", DbType:="Char(80)")>  _
	Public Property Enca22() As String
		Get
			Return Me._Enca22
		End Get
		Set
			If (String.Equals(Me._Enca22, value) = false) Then
				Me.OnEnca22Changing(value)
				Me.SendPropertyChanging
				Me._Enca22 = value
				Me.SendPropertyChanged("Enca22")
				Me.OnEnca22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca32", Storage:="_Enca32", DbType:="Char(80)")>  _
	Public Property Enca32() As String
		Get
			Return Me._Enca32
		End Get
		Set
			If (String.Equals(Me._Enca32, value) = false) Then
				Me.OnEnca32Changing(value)
				Me.SendPropertyChanging
				Me._Enca32 = value
				Me.SendPropertyChanged("Enca32")
				Me.OnEnca32Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEnca42", Storage:="_Enca42", DbType:="Char(80)")>  _
	Public Property Enca42() As String
		Get
			Return Me._Enca42
		End Get
		Set
			If (String.Equals(Me._Enca42, value) = false) Then
				Me.OnEnca42Changing(value)
				Me.SendPropertyChanging
				Me._Enca42 = value
				Me.SendPropertyChanged("Enca42")
				Me.OnEnca42Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObservacion1", Storage:="_Observacion1", DbType:="Char(135)")>  _
	Public Property Observacion1() As String
		Get
			Return Me._Observacion1
		End Get
		Set
			If (String.Equals(Me._Observacion1, value) = false) Then
				Me.OnObservacion1Changing(value)
				Me.SendPropertyChanging
				Me._Observacion1 = value
				Me.SendPropertyChanged("Observacion1")
				Me.OnObservacion1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObservacion2", Storage:="_Observacion2", DbType:="Char(135)")>  _
	Public Property Observacion2() As String
		Get
			Return Me._Observacion2
		End Get
		Set
			If (String.Equals(Me._Observacion2, value) = false) Then
				Me.OnObservacion2Changing(value)
				Me.SendPropertyChanging
				Me._Observacion2 = value
				Me.SendPropertyChanged("Observacion2")
				Me.OnObservacion2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logClientesAutomatico", Storage:="_ClientesAutomatico", DbType:="Bit NOT NULL")>  _
	Public Property ClientesAutomatico() As Boolean
		Get
			Return Me._ClientesAutomatico
		End Get
		Set
			If ((Me._ClientesAutomatico = value)  _
						= false) Then
				Me.OnClientesAutomaticoChanging(value)
				Me.SendPropertyChanging
				Me._ClientesAutomatico = value
				Me.SendPropertyChanged("ClientesAutomatico")
				Me.OnClientesAutomaticoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logClientesCedula", Storage:="_ClientesCedula", DbType:="Bit NOT NULL")>  _
	Public Property ClientesCedula() As Boolean
		Get
			Return Me._ClientesCedula
		End Get
		Set
			If ((Me._ClientesCedula = value)  _
						= false) Then
				Me.OnClientesCedulaChanging(value)
				Me.SendPropertyChanging
				Me._ClientesCedula = value
				Me.SendPropertyChanged("ClientesCedula")
				Me.OnClientesCedulaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaFac", Storage:="_EncaFac", DbType:="Bit NOT NULL")>  _
	Public Property EncaFac() As Boolean
		Get
			Return Me._EncaFac
		End Get
		Set
			If ((Me._EncaFac = value)  _
						= false) Then
				Me.OnEncaFacChanging(value)
				Me.SendPropertyChanging
				Me._EncaFac = value
				Me.SendPropertyChanged("EncaFac")
				Me.OnEncaFacChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaFacBca", Storage:="_EncaFacBca", DbType:="Bit NOT NULL")>  _
	Public Property EncaFacBca() As Boolean
		Get
			Return Me._EncaFacBca
		End Get
		Set
			If ((Me._EncaFacBca = value)  _
						= false) Then
				Me.OnEncaFacBcaChanging(value)
				Me.SendPropertyChanging
				Me._EncaFacBca = value
				Me.SendPropertyChanged("EncaFacBca")
				Me.OnEncaFacBcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaTit", Storage:="_EncaTit", DbType:="Bit NOT NULL")>  _
	Public Property EncaTit() As Boolean
		Get
			Return Me._EncaTit
		End Get
		Set
			If ((Me._EncaTit = value)  _
						= false) Then
				Me.OnEncaTitChanging(value)
				Me.SendPropertyChanging
				Me._EncaTit = value
				Me.SendPropertyChanged("EncaTit")
				Me.OnEncaTitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaEgr", Storage:="_EncaEgr", DbType:="Bit NOT NULL")>  _
	Public Property EncaEgr() As Boolean
		Get
			Return Me._EncaEgr
		End Get
		Set
			If ((Me._EncaEgr = value)  _
						= false) Then
				Me.OnEncaEgrChanging(value)
				Me.SendPropertyChanging
				Me._EncaEgr = value
				Me.SendPropertyChanged("EncaEgr")
				Me.OnEncaEgrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaCaj", Storage:="_EncaCaj", DbType:="Bit NOT NULL")>  _
	Public Property EncaCaj() As Boolean
		Get
			Return Me._EncaCaj
		End Get
		Set
			If ((Me._EncaCaj = value)  _
						= false) Then
				Me.OnEncaCajChanging(value)
				Me.SendPropertyChanging
				Me._EncaCaj = value
				Me.SendPropertyChanged("EncaCaj")
				Me.OnEncaCajChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaNot", Storage:="_EncaNot", DbType:="Bit NOT NULL")>  _
	Public Property EncaNot() As Boolean
		Get
			Return Me._EncaNot
		End Get
		Set
			If ((Me._EncaNot = value)  _
						= false) Then
				Me.OnEncaNotChanging(value)
				Me.SendPropertyChanging
				Me._EncaNot = value
				Me.SendPropertyChanged("EncaNot")
				Me.OnEncaNotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaExt", Storage:="_EncaExt", DbType:="Bit NOT NULL")>  _
	Public Property EncaExt() As Boolean
		Get
			Return Me._EncaExt
		End Get
		Set
			If ((Me._EncaExt = value)  _
						= false) Then
				Me.OnEncaExtChanging(value)
				Me.SendPropertyChanging
				Me._EncaExt = value
				Me.SendPropertyChanged("EncaExt")
				Me.OnEncaExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRCLineas", Storage:="_RCLineas", DbType:="Bit NOT NULL")>  _
	Public Property RCLineas() As Boolean
		Get
			Return Me._RCLineas
		End Get
		Set
			If ((Me._RCLineas = value)  _
						= false) Then
				Me.OnRCLineasChanging(value)
				Me.SendPropertyChanging
				Me._RCLineas = value
				Me.SendPropertyChanged("RCLineas")
				Me.OnRCLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCELineas", Storage:="_CELineas", DbType:="Bit NOT NULL")>  _
	Public Property CELineas() As Boolean
		Get
			Return Me._CELineas
		End Get
		Set
			If ((Me._CELineas = value)  _
						= false) Then
				Me.OnCELineasChanging(value)
				Me.SendPropertyChanging
				Me._CELineas = value
				Me.SendPropertyChanged("CELineas")
				Me.OnCELineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logNCLineas", Storage:="_NCLineas", DbType:="Bit NOT NULL")>  _
	Public Property NCLineas() As Boolean
		Get
			Return Me._NCLineas
		End Get
		Set
			If ((Me._NCLineas = value)  _
						= false) Then
				Me.OnNCLineasChanging(value)
				Me.SendPropertyChanging
				Me._NCLineas = value
				Me.SendPropertyChanged("NCLineas")
				Me.OnNCLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTITLineas", Storage:="_TITLineas", DbType:="Bit NOT NULL")>  _
	Public Property TITLineas() As Boolean
		Get
			Return Me._TITLineas
		End Get
		Set
			If ((Me._TITLineas = value)  _
						= false) Then
				Me.OnTITLineasChanging(value)
				Me.SendPropertyChanging
				Me._TITLineas = value
				Me.SendPropertyChanged("TITLineas")
				Me.OnTITLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFacLineas", Storage:="_FacLineas", DbType:="Bit NOT NULL")>  _
	Public Property FacLineas() As Boolean
		Get
			Return Me._FacLineas
		End Get
		Set
			If ((Me._FacLineas = value)  _
						= false) Then
				Me.OnFacLineasChanging(value)
				Me.SendPropertyChanging
				Me._FacLineas = value
				Me.SendPropertyChanged("FacLineas")
				Me.OnFacLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFacBcaLineas", Storage:="_FacBcaLineas", DbType:="Bit NOT NULL")>  _
	Public Property FacBcaLineas() As Boolean
		Get
			Return Me._FacBcaLineas
		End Get
		Set
			If ((Me._FacBcaLineas = value)  _
						= false) Then
				Me.OnFacBcaLineasChanging(value)
				Me.SendPropertyChanging
				Me._FacBcaLineas = value
				Me.SendPropertyChanged("FacBcaLineas")
				Me.OnFacBcaLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEXTLineas", Storage:="_EXTLineas", DbType:="Bit NOT NULL")>  _
	Public Property EXTLineas() As Boolean
		Get
			Return Me._EXTLineas
		End Get
		Set
			If ((Me._EXTLineas = value)  _
						= false) Then
				Me.OnEXTLineasChanging(value)
				Me.SendPropertyChanging
				Me._EXTLineas = value
				Me.SendPropertyChanged("EXTLineas")
				Me.OnEXTLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LogReceptores", Storage:="_Receptores", DbType:="Bit NOT NULL")>  _
	Public Property Receptores() As Boolean
		Get
			Return Me._Receptores
		End Get
		Set
			If ((Me._Receptores = value)  _
						= false) Then
				Me.OnReceptoresChanging(value)
				Me.SendPropertyChanging
				Me._Receptores = value
				Me.SendPropertyChanged("Receptores")
				Me.OnReceptoresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFechaOrden", Storage:="_FechaOrden", DbType:="Bit NOT NULL")>  _
	Public Property FechaOrden() As Boolean
		Get
			Return Me._FechaOrden
		End Get
		Set
			If ((Me._FechaOrden = value)  _
						= false) Then
				Me.OnFechaOrdenChanging(value)
				Me.SendPropertyChanging
				Me._FechaOrden = value
				Me.SendPropertyChanged("FechaOrden")
				Me.OnFechaOrdenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logUsuario", Storage:="_Usuario", DbType:="Bit NOT NULL")>  _
	Public Property Usuario() As Boolean
		Get
			Return Me._Usuario
		End Get
		Set
			If ((Me._Usuario = value)  _
						= false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logValSobregiroCE", Storage:="_ValSobregiroCE", DbType:="Bit NOT NULL")>  _
	Public Property ValSobregiroCE() As Boolean
		Get
			Return Me._ValSobregiroCE
		End Get
		Set
			If ((Me._ValSobregiroCE = value)  _
						= false) Then
				Me.OnValSobregiroCEChanging(value)
				Me.SendPropertyChanging
				Me._ValSobregiroCE = value
				Me.SendPropertyChanged("ValSobregiroCE")
				Me.OnValSobregiroCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strResolucion", Storage:="_Resolucion", DbType:="Varchar(25)")>  _
	Public Property Resolucion() As String
		Get
			Return Me._Resolucion
		End Get
		Set
			If (String.Equals(Me._Resolucion, value) = false) Then
				Me.OnResolucionChanging(value)
				Me.SendPropertyChanging
				Me._Resolucion = value
				Me.SendPropertyChanged("Resolucion")
				Me.OnResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblIvaComision", Storage:="_IvaComision", DbType:="Float NOT NULL")>  _
	Public Property IvaComision() As Double
		Get
			Return Me._IvaComision
		End Get
		Set
			If ((Me._IvaComision = value)  _
						= false) Then
				Me.OnIvaComisionChanging(value)
				Me.SendPropertyChanging
				Me._IvaComision = value
				Me.SendPropertyChanged("IvaComision")
				Me.OnIvaComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCuenta", Storage:="_NombreCuenta", DbType:="Varchar(25)")>  _
	Public Property NombreCuenta() As String
		Get
			Return Me._NombreCuenta
		End Get
		Set
			If (String.Equals(Me._NombreCuenta, value) = false) Then
				Me.OnNombreCuentaChanging(value)
				Me.SendPropertyChanging
				Me._NombreCuenta = value
				Me.SendPropertyChanged("NombreCuenta")
				Me.OnNombreCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSerBolsaFijo", Storage:="_SerBolsaFijo", DbType:="Float")>  _
	Public Property SerBolsaFijo() As System.Nullable(Of Double)
		Get
			Return Me._SerBolsaFijo
		End Get
		Set
			If (Me._SerBolsaFijo.Equals(value) = false) Then
				Me.OnSerBolsaFijoChanging(value)
				Me.SendPropertyChanging
				Me._SerBolsaFijo = value
				Me.SendPropertyChanged("SerBolsaFijo")
				Me.OnSerBolsaFijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSerBolsaFijoAcciones", Storage:="_SerBolsaFijoAcciones", DbType:="Float")>  _
	Public Property SerBolsaFijoAcciones() As System.Nullable(Of Double)
		Get
			Return Me._SerBolsaFijoAcciones
		End Get
		Set
			If (Me._SerBolsaFijoAcciones.Equals(value) = false) Then
				Me.OnSerBolsaFijoAccionesChanging(value)
				Me.SendPropertyChanging
				Me._SerBolsaFijoAcciones = value
				Me.SendPropertyChanged("SerBolsaFijoAcciones")
				Me.OnSerBolsaFijoAccionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTopeSerBolsaFijoAcciones", Storage:="_TopeSerBolsaFijoAcciones", DbType:="Float")>  _
	Public Property TopeSerBolsaFijoAcciones() As System.Nullable(Of Double)
		Get
			Return Me._TopeSerBolsaFijoAcciones
		End Get
		Set
			If (Me._TopeSerBolsaFijoAcciones.Equals(value) = false) Then
				Me.OnTopeSerBolsaFijoAccionesChanging(value)
				Me.SendPropertyChanging
				Me._TopeSerBolsaFijoAcciones = value
				Me.SendPropertyChanged("TopeSerBolsaFijoAcciones")
				Me.OnTopeSerBolsaFijoAccionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEncaCus", Storage:="_EncaCus", DbType:="Bit NOT NULL")>  _
	Public Property EncaCus() As Boolean
		Get
			Return Me._EncaCus
		End Get
		Set
			If ((Me._EncaCus = value)  _
						= false) Then
				Me.OnEncaCusChanging(value)
				Me.SendPropertyChanging
				Me._EncaCus = value
				Me.SendPropertyChanged("EncaCus")
				Me.OnEncaCusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCusLineas", Storage:="_CusLineas", DbType:="Bit NOT NULL")>  _
	Public Property CusLineas() As Boolean
		Get
			Return Me._CusLineas
		End Get
		Set
			If ((Me._CusLineas = value)  _
						= false) Then
				Me.OnCusLineasChanging(value)
				Me.SendPropertyChanging
				Me._CusLineas = value
				Me.SendPropertyChanged("CusLineas")
				Me.OnCusLineasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logUsuarioEntregas", Storage:="_UsuarioEntregas", DbType:="Bit NOT NULL")>  _
	Public Property UsuarioEntregas() As Boolean
		Get
			Return Me._UsuarioEntregas
		End Get
		Set
			If ((Me._UsuarioEntregas = value)  _
						= false) Then
				Me.OnUsuarioEntregasChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioEntregas = value
				Me.SendPropertyChanged("UsuarioEntregas")
				Me.OnUsuarioEntregasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logUsuarioRecibido", Storage:="_UsuarioRecibido", DbType:="Bit NOT NULL")>  _
	Public Property UsuarioRecibido() As Boolean
		Get
			Return Me._UsuarioRecibido
		End Get
		Set
			If ((Me._UsuarioRecibido = value)  _
						= false) Then
				Me.OnUsuarioRecibidoChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioRecibido = value
				Me.SendPropertyChanged("UsuarioRecibido")
				Me.OnUsuarioRecibidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logUsuarioCustodia", Storage:="_UsuarioCustodia", DbType:="Bit NOT NULL")>  _
	Public Property UsuarioCustodia() As Boolean
		Get
			Return Me._UsuarioCustodia
		End Get
		Set
			If ((Me._UsuarioCustodia = value)  _
						= false) Then
				Me.OnUsuarioCustodiaChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioCustodia = value
				Me.SendPropertyChanged("UsuarioCustodia")
				Me.OnUsuarioCustodiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logUsuarioSobrantes", Storage:="_UsuarioSobrantes", DbType:="Bit NOT NULL")>  _
	Public Property UsuarioSobrantes() As Boolean
		Get
			Return Me._UsuarioSobrantes
		End Get
		Set
			If ((Me._UsuarioSobrantes = value)  _
						= false) Then
				Me.OnUsuarioSobrantesChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioSobrantes = value
				Me.SendPropertyChanged("UsuarioSobrantes")
				Me.OnUsuarioSobrantesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIVA", Storage:="_IVA", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IVA() As Integer
		Get
			Return Me._IVA
		End Get
		Set
			If (Object.Equals(Me._IVA, value) = false) Then
				Me.OnIVAChanging(value)
				Me.SendPropertyChanging
				Me._IVA = value
				Me.SendPropertyChanged("IVA")
				Me.OnIVAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intRteFuente", Storage:="_RteFuente", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property RteFuente() As Integer
		Get
			Return Me._RteFuente
		End Get
		Set
			If (Object.Equals(Me._RteFuente, value) = false) Then
				Me.OnRteFuenteChanging(value)
				Me.SendPropertyChanging
				Me._RteFuente = value
				Me.SendPropertyChanged("RteFuente")
				Me.OnRteFuenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitComisionista", Storage:="_NitComisionista", DbType:="Varchar(15)")>  _
	Public Property NitComisionista() As String
		Get
			Return Me._NitComisionista
		End Get
		Set
			If (String.Equals(Me._NitComisionista, value) = false) Then
				Me.OnNitComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._NitComisionista = value
				Me.SendPropertyChanged("NitComisionista")
				Me.OnNitComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strServidor", Storage:="_Servidor", DbType:="Varchar(50)")>  _
	Public Property Servidor() As String
		Get
			Return Me._Servidor
		End Get
		Set
			If (String.Equals(Me._Servidor, value) = false) Then
				Me.OnServidorChanging(value)
				Me.SendPropertyChanging
				Me._Servidor = value
				Me.SendPropertyChanged("Servidor")
				Me.OnServidorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strBaseDatos", Storage:="_BaseDatos", DbType:="Varchar(50)")>  _
	Public Property BaseDatos() As String
		Get
			Return Me._BaseDatos
		End Get
		Set
			If (String.Equals(Me._BaseDatos, value) = false) Then
				Me.OnBaseDatosChanging(value)
				Me.SendPropertyChanging
				Me._BaseDatos = value
				Me.SendPropertyChanged("BaseDatos")
				Me.OnBaseDatosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOwner", Storage:="_Owner", DbType:="Varchar(20)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me.OnOwnerChanging(value)
				Me.SendPropertyChanging
				Me._Owner = value
				Me.SendPropertyChanged("Owner")
				Me.OnOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strServidorBus", Storage:="_ServidorBus", DbType:="Varchar(30)")>  _
	Public Property ServidorBus() As String
		Get
			Return Me._ServidorBus
		End Get
		Set
			If (String.Equals(Me._ServidorBus, value) = false) Then
				Me.OnServidorBusChanging(value)
				Me.SendPropertyChanging
				Me._ServidorBus = value
				Me.SendPropertyChanged("ServidorBus")
				Me.OnServidorBusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strBaseDatosBus", Storage:="_BaseDatosBus", DbType:="Varchar(30)")>  _
	Public Property BaseDatosBus() As String
		Get
			Return Me._BaseDatosBus
		End Get
		Set
			If (String.Equals(Me._BaseDatosBus, value) = false) Then
				Me.OnBaseDatosBusChanging(value)
				Me.SendPropertyChanging
				Me._BaseDatosBus = value
				Me.SendPropertyChanged("BaseDatosBus")
				Me.OnBaseDatosBusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOwnerBus", Storage:="_OwnerBus", DbType:="Varchar(20)")>  _
	Public Property OwnerBus() As String
		Get
			Return Me._OwnerBus
		End Get
		Set
			If (String.Equals(Me._OwnerBus, value) = false) Then
				Me.OnOwnerBusChanging(value)
				Me.SendPropertyChanging
				Me._OwnerBus = value
				Me.SendPropertyChanged("OwnerBus")
				Me.OnOwnerBusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCompania", Storage:="_Compania", DbType:="Int", CanBeNull:=true)>  _
	Public Property Compania() As Integer
		Get
			Return Me._Compania
		End Get
		Set
			If (Object.Equals(Me._Compania, value) = false) Then
				Me.OnCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._Compania = value
				Me.SendPropertyChanged("Compania")
				Me.OnCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDepositoExtranjero", Storage:="_DepositoExtranjero", DbType:="Varchar(30)")>  _
	Public Property DepositoExtranjero() As String
		Get
			Return Me._DepositoExtranjero
		End Get
		Set
			If (String.Equals(Me._DepositoExtranjero, value) = false) Then
				Me.OnDepositoExtranjeroChanging(value)
				Me.SendPropertyChanging
				Me._DepositoExtranjero = value
				Me.SendPropertyChanged("DepositoExtranjero")
				Me.OnDepositoExtranjeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCustodioLocal", Storage:="_CustodioLocal", DbType:="Varchar(30)")>  _
	Public Property CustodioLocal() As String
		Get
			Return Me._CustodioLocal
		End Get
		Set
			If (String.Equals(Me._CustodioLocal, value) = false) Then
				Me.OnCustodioLocalChanging(value)
				Me.SendPropertyChanging
				Me._CustodioLocal = value
				Me.SendPropertyChanged("CustodioLocal")
				Me.OnCustodioLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdContraparteOTC", Storage:="_IdContraparteOTC", DbType:="Char(17)")>  _
	Public Property IdContraparteOTC() As String
		Get
			Return Me._IdContraparteOTC
		End Get
		Set
			If (String.Equals(Me._IdContraparteOTC, value) = false) Then
				Me.OnIdContraparteOTCChanging(value)
				Me.SendPropertyChanging
				Me._IdContraparteOTC = value
				Me.SendPropertyChanged("IdContraparteOTC")
				Me.OnIdContraparteOTCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorContrato", Storage:="_ValorContrato", DbType:="Float")>  _
	Public Property ValorContrato() As System.Nullable(Of Double)
		Get
			Return Me._ValorContrato
		End Get
		Set
			If (Me._ValorContrato.Equals(value) = false) Then
				Me.OnValorContratoChanging(value)
				Me.SendPropertyChanging
				Me._ValorContrato = value
				Me.SendPropertyChanged("ValorContrato")
				Me.OnValorContratoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoIMC", Storage:="_CodigoIMC", DbType:="Int", CanBeNull:=true)>  _
	Public Property CodigoIMC() As Integer
		Get
			Return Me._CodigoIMC
		End Get
		Set
			If (Object.Equals(Me._CodigoIMC, value) = false) Then
				Me.OnCodigoIMCChanging(value)
				Me.SendPropertyChanging
				Me._CodigoIMC = value
				Me.SendPropertyChanged("CodigoIMC")
				Me.OnCodigoIMCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblReteIva", Storage:="_ReteIva", DbType:="Float")>  _
	Public Property ReteIva() As System.Nullable(Of Double)
		Get
			Return Me._ReteIva
		End Get
		Set
			If (Me._ReteIva.Equals(value) = false) Then
				Me.OnReteIvaChanging(value)
				Me.SendPropertyChanging
				Me._ReteIva = value
				Me.SendPropertyChanged("ReteIva")
				Me.OnReteIvaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorInicial", Storage:="_ValorInicial", DbType:="Float")>  _
	Public Property ValorInicial() As System.Nullable(Of Double)
		Get
			Return Me._ValorInicial
		End Get
		Set
			If (Me._ValorInicial.Equals(value) = false) Then
				Me.OnValorInicialChanging(value)
				Me.SendPropertyChanging
				Me._ValorInicial = value
				Me.SendPropertyChanged("ValorInicial")
				Me.OnValorInicialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intGMS", Storage:="_GMS", DbType:="Float")>  _
	Public Property GMS() As System.Nullable(Of Double)
		Get
			Return Me._GMS
		End Get
		Set
			If (Me._GMS.Equals(value) = false) Then
				Me.OnGMSChanging(value)
				Me.SendPropertyChanging
				Me._GMS = value
				Me.SendPropertyChanged("GMS")
				Me.OnGMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCargarReceptorCliente", Storage:="_CargarReceptorCliente", DbType:="Bit NOT NULL")>  _
	Public Property CargarReceptorCliente() As Boolean
		Get
			Return Me._CargarReceptorCliente
		End Get
		Set
			If ((Me._CargarReceptorCliente = value)  _
						= false) Then
				Me.OnCargarReceptorClienteChanging(value)
				Me.SendPropertyChanging
				Me._CargarReceptorCliente = value
				Me.SendPropertyChanged("CargarReceptorCliente")
				Me.OnCargarReceptorClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCierre", Storage:="_Cierre", DbType:="Datetime")>  _
	Public Property Cierre() As System.Nullable(Of Date)
		Get
			Return Me._Cierre
		End Get
		Set
			If (Me._Cierre.Equals(value) = false) Then
				Me.OnCierreChanging(value)
				Me.SendPropertyChanging
				Me._Cierre = value
				Me.SendPropertyChanged("Cierre")
				Me.OnCierreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUltimaVersion", Storage:="_UltimaVersion", DbType:="Varchar(10)")>  _
	Public Property UltimaVersion() As String
		Get
			Return Me._UltimaVersion
		End Get
		Set
			If (String.Equals(Me._UltimaVersion, value) = false) Then
				Me.OnUltimaVersionChanging(value)
				Me.SendPropertyChanging
				Me._UltimaVersion = value
				Me.SendPropertyChanged("UltimaVersion")
				Me.OnUltimaVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaInicial", Storage:="_TasaInicial", DbType:="Float")>  _
	Public Property TasaInicial() As System.Nullable(Of Double)
		Get
			Return Me._TasaInicial
		End Get
		Set
			If (Me._TasaInicial.Equals(value) = false) Then
				Me.OnTasaInicialChanging(value)
				Me.SendPropertyChanging
				Me._TasaInicial = value
				Me.SendPropertyChanged("TasaInicial")
				Me.OnTasaInicialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAplazarOTC", Storage:="_AplazarOTC", DbType:="Bit NOT NULL")>  _
	Public Property AplazarOTC() As Boolean
		Get
			Return Me._AplazarOTC
		End Get
		Set
			If ((Me._AplazarOTC = value)  _
						= false) Then
				Me.OnAplazarOTCChanging(value)
				Me.SendPropertyChanging
				Me._AplazarOTC = value
				Me.SendPropertyChanged("AplazarOTC")
				Me.OnAplazarOTCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCuentasBancarias", Storage:="_CuentasBancarias", DbType:="Bit NOT NULL")>  _
	Public Property CuentasBancarias() As Boolean
		Get
			Return Me._CuentasBancarias
		End Get
		Set
			If ((Me._CuentasBancarias = value)  _
						= false) Then
				Me.OnCuentasBancariasChanging(value)
				Me.SendPropertyChanging
				Me._CuentasBancarias = value
				Me.SendPropertyChanged("CuentasBancarias")
				Me.OnCuentasBancariasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRepresentanteLegal", Storage:="_RepresentanteLegal", DbType:="Bit NOT NULL")>  _
	Public Property RepresentanteLegal() As Boolean
		Get
			Return Me._RepresentanteLegal
		End Get
		Set
			If ((Me._RepresentanteLegal = value)  _
						= false) Then
				Me.OnRepresentanteLegalChanging(value)
				Me.SendPropertyChanging
				Me._RepresentanteLegal = value
				Me.SendPropertyChanged("RepresentanteLegal")
				Me.OnRepresentanteLegalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaLimite", Storage:="_FechaLimite", DbType:="Datetime")>  _
	Public Property FechaLimite() As System.Nullable(Of Date)
		Get
			Return Me._FechaLimite
		End Get
		Set
			If (Me._FechaLimite.Equals(value) = false) Then
				Me.OnFechaLimiteChanging(value)
				Me.SendPropertyChanging
				Me._FechaLimite = value
				Me.SendPropertyChanged("FechaLimite")
				Me.OnFechaLimiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property strUsuario() As String
		Get
			Return Me._strUsuario
		End Get
		Set
			If (String.Equals(Me._strUsuario, value) = false) Then
				Me.OnstrUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._strUsuario = value
				Me.SendPropertyChanged("strUsuario")
				Me.OnstrUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiaSemana", Storage:="_DiaSemana", DbType:="Int", CanBeNull:=true)>  _
	Public Property DiaSemana() As Integer
		Get
			Return Me._DiaSemana
		End Get
		Set
			If (Object.Equals(Me._DiaSemana, value) = false) Then
				Me.OnDiaSemanaChanging(value)
				Me.SendPropertyChanging
				Me._DiaSemana = value
				Me.SendPropertyChanged("DiaSemana")
				Me.OnDiaSemanaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeGarantia", Storage:="_PorcentajeGarantia", DbType:="Float")>  _
	Public Property PorcentajeGarantia() As System.Nullable(Of Double)
		Get
			Return Me._PorcentajeGarantia
		End Get
		Set
			If (Me._PorcentajeGarantia.Equals(value) = false) Then
				Me.OnPorcentajeGarantiaChanging(value)
				Me.SendPropertyChanging
				Me._PorcentajeGarantia = value
				Me.SendPropertyChanged("PorcentajeGarantia")
				Me.OnPorcentajeGarantiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTarifaRteFuente", Storage:="_TarifaRteFuente", DbType:="Float")>  _
	Public Property TarifaRteFuente() As System.Nullable(Of Double)
		Get
			Return Me._TarifaRteFuente
		End Get
		Set
			If (Me._TarifaRteFuente.Equals(value) = false) Then
				Me.OnTarifaRteFuenteChanging(value)
				Me.SendPropertyChanging
				Me._TarifaRteFuente = value
				Me.SendPropertyChanged("TarifaRteFuente")
				Me.OnTarifaRteFuenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logImpDocTesoreria", Storage:="_ImpDocTesoreria", DbType:="Bit")>  _
	Public Property ImpDocTesoreria() As System.Nullable(Of Boolean)
		Get
			Return Me._ImpDocTesoreria
		End Get
		Set
			If (Me._ImpDocTesoreria.Equals(value) = false) Then
				Me.OnImpDocTesoreriaChanging(value)
				Me.SendPropertyChanging
				Me._ImpDocTesoreria = value
				Me.SendPropertyChanged("ImpDocTesoreria")
				Me.OnImpDocTesoreriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoEntidad", Storage:="_TipoEntidad", DbType:="Varchar(4)")>  _
	Public Property TipoEntidad() As String
		Get
			Return Me._TipoEntidad
		End Get
		Set
			If (String.Equals(Me._TipoEntidad, value) = false) Then
				Me.OnTipoEntidadChanging(value)
				Me.SendPropertyChanging
				Me._TipoEntidad = value
				Me.SendPropertyChanged("TipoEntidad")
				Me.OnTipoEntidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoEntidad", Storage:="_CodigoEntidad", DbType:="Varchar(5)")>  _
	Public Property CodigoEntidad() As String
		Get
			Return Me._CodigoEntidad
		End Get
		Set
			If (String.Equals(Me._CodigoEntidad, value) = false) Then
				Me.OnCodigoEntidadChanging(value)
				Me.SendPropertyChanging
				Me._CodigoEntidad = value
				Me.SendPropertyChanged("CodigoEntidad")
				Me.OnCodigoEntidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblRteComision", Storage:="_RteComision", DbType:="Float NOT NULL")>  _
	Public Property RteComision() As Double
		Get
			Return Me._RteComision
		End Get
		Set
			If ((Me._RteComision = value)  _
						= false) Then
				Me.OnRteComisionChanging(value)
				Me.SendPropertyChanging
				Me._RteComision = value
				Me.SendPropertyChanged("RteComision")
				Me.OnRteComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblRteICA", Storage:="_RteICA", DbType:="Float NOT NULL")>  _
	Public Property RteICA() As Double
		Get
			Return Me._RteICA
		End Get
		Set
			If ((Me._RteICA = value)  _
						= false) Then
				Me.OnRteICAChanging(value)
				Me.SendPropertyChanging
				Me._RteICA = value
				Me.SendPropertyChanged("RteICA")
				Me.OnRteICAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoEntidadUIAF", Storage:="_CodigoEntidadUIAF", DbType:="Varchar(3)")>  _
	Public Property CodigoEntidadUIAF() As String
		Get
			Return Me._CodigoEntidadUIAF
		End Get
		Set
			If (String.Equals(Me._CodigoEntidadUIAF, value) = false) Then
				Me.OnCodigoEntidadUIAFChanging(value)
				Me.SendPropertyChanging
				Me._CodigoEntidadUIAF = value
				Me.SendPropertyChanged("CodigoEntidadUIAF")
				Me.OnCodigoEntidadUIAFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoEntidadUIAF", Storage:="_TipoEntidadUIAF", DbType:="Varchar(3)")>  _
	Public Property TipoEntidadUIAF() As String
		Get
			Return Me._TipoEntidadUIAF
		End Get
		Set
			If (String.Equals(Me._TipoEntidadUIAF, value) = false) Then
				Me.OnTipoEntidadUIAFChanging(value)
				Me.SendPropertyChanging
				Me._TipoEntidadUIAF = value
				Me.SendPropertyChanged("TipoEntidadUIAF")
				Me.OnTipoEntidadUIAFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logValidaCuentaSuperVal", Storage:="_ValidaCuentaSuperVal", DbType:="Bit NOT NULL")>  _
	Public Property ValidaCuentaSuperVal() As Boolean
		Get
			Return Me._ValidaCuentaSuperVal
		End Get
		Set
			If ((Me._ValidaCuentaSuperVal = value)  _
						= false) Then
				Me.OnValidaCuentaSuperValChanging(value)
				Me.SendPropertyChanging
				Me._ValidaCuentaSuperVal = value
				Me.SendPropertyChanged("ValidaCuentaSuperVal")
				Me.OnValidaCuentaSuperValChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logValSobregiroNC", Storage:="_ValSobregiroNC", DbType:="Bit NOT NULL")>  _
	Public Property ValSobregiroNC() As Boolean
		Get
			Return Me._ValSobregiroNC
		End Get
		Set
			If ((Me._ValSobregiroNC = value)  _
						= false) Then
				Me.OnValSobregiroNCChanging(value)
				Me.SendPropertyChanging
				Me._ValSobregiroNC = value
				Me.SendPropertyChanged("ValSobregiroNC")
				Me.OnValSobregiroNCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Varchar(40)")>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCtaContable", Storage:="_CtaContable", DbType:="Varchar(40)")>  _
	Public Property CtaContable() As String
		Get
			Return Me._CtaContable
		End Get
		Set
			If (String.Equals(Me._CtaContable, value) = false) Then
				Me.OnCtaContableChanging(value)
				Me.SendPropertyChanging
				Me._CtaContable = value
				Me.SendPropertyChanged("CtaContable")
				Me.OnCtaContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCCosto", Storage:="_CCosto", DbType:="Varchar(40)")>  _
	Public Property CCosto() As String
		Get
			Return Me._CCosto
		End Get
		Set
			If (String.Equals(Me._CCosto, value) = false) Then
				Me.OnCCostoChanging(value)
				Me.SendPropertyChanging
				Me._CCosto = value
				Me.SendPropertyChanged("CCosto")
				Me.OnCCostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCtaContableContraparte", Storage:="_CtaContableContraparte", DbType:="Varchar(40)")>  _
	Public Property CtaContableContraparte() As String
		Get
			Return Me._CtaContableContraparte
		End Get
		Set
			If (String.Equals(Me._CtaContableContraparte, value) = false) Then
				Me.OnCtaContableContraparteChanging(value)
				Me.SendPropertyChanging
				Me._CtaContableContraparte = value
				Me.SendPropertyChanged("CtaContableContraparte")
				Me.OnCtaContableContraparteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCCostoContraparte", Storage:="_CCostoContraparte", DbType:="Varchar(40)")>  _
	Public Property CCostoContraparte() As String
		Get
			Return Me._CCostoContraparte
		End Get
		Set
			If (String.Equals(Me._CCostoContraparte, value) = false) Then
				Me.OnCCostoContraparteChanging(value)
				Me.SendPropertyChanging
				Me._CCostoContraparte = value
				Me.SendPropertyChanged("CCostoContraparte")
				Me.OnCCostoContraparteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logReporteExtractoClientePedirRangos", Storage:="_ReporteExtractoClientePedirRangos", DbType:="Bit")>  _
	Public Property ReporteExtractoClientePedirRangos() As System.Nullable(Of Boolean)
		Get
			Return Me._ReporteExtractoClientePedirRangos
		End Get
		Set
			If (Me._ReporteExtractoClientePedirRangos.Equals(value) = false) Then
				Me.OnReporteExtractoClientePedirRangosChanging(value)
				Me.SendPropertyChanging
				Me._ReporteExtractoClientePedirRangos = value
				Me.SendPropertyChanged("ReporteExtractoClientePedirRangos")
				Me.OnReporteExtractoClientePedirRangosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCtaContableClientes", Storage:="_CtaContableClientes", DbType:="Varchar(15)")>  _
	Public Property CtaContableClientes() As String
		Get
			Return Me._CtaContableClientes
		End Get
		Set
			If (String.Equals(Me._CtaContableClientes, value) = false) Then
				Me.OnCtaContableClientesChanging(value)
				Me.SendPropertyChanging
				Me._CtaContableClientes = value
				Me.SendPropertyChanged("CtaContableClientes")
				Me.OnCtaContableClientesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strURL", Storage:="_URL", DbType:="Varchar(100)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPath", Storage:="_Path", DbType:="Varchar(100)")>  _
	Public Property Path() As String
		Get
			Return Me._Path
		End Get
		Set
			If (String.Equals(Me._Path, value) = false) Then
				Me.OnPathChanging(value)
				Me.SendPropertyChanging
				Me._Path = value
				Me.SendPropertyChanged("Path")
				Me.OnPathChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdenantes", Storage:="_Ordenantes", DbType:="Bit")>  _
	Public Property Ordenantes() As System.Nullable(Of Boolean)
		Get
			Return Me._Ordenantes
		End Get
		Set
			If (Me._Ordenantes.Equals(value) = false) Then
				Me.OnOrdenantesChanging(value)
				Me.SendPropertyChanging
				Me._Ordenantes = value
				Me.SendPropertyChanged("Ordenantes")
				Me.OnOrdenantesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptorSuc", Storage:="_ReceptorSuc", DbType:="Char(1)")>  _
	Public Property ReceptorSuc() As String
		Get
			Return Me._ReceptorSuc
		End Get
		Set
			If (String.Equals(Me._ReceptorSuc, value) = false) Then
				Me.OnReceptorSucChanging(value)
				Me.SendPropertyChanging
				Me._ReceptorSuc = value
				Me.SendPropertyChanged("ReceptorSuc")
				Me.OnReceptorSucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logClientesAgrupados", Storage:="_ClientesAgrupados", DbType:="Bit")>  _
	Public Property ClientesAgrupados() As System.Nullable(Of Boolean)
		Get
			Return Me._ClientesAgrupados
		End Get
		Set
			If (Me._ClientesAgrupados.Equals(value) = false) Then
				Me.OnClientesAgrupadosChanging(value)
				Me.SendPropertyChanging
				Me._ClientesAgrupados = value
				Me.SendPropertyChanged("ClientesAgrupados")
				Me.OnClientesAgrupadosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPathActualiza", Storage:="_PathActualiza", DbType:="Varchar(80)")>  _
	Public Property PathActualiza() As String
		Get
			Return Me._PathActualiza
		End Get
		Set
			If (String.Equals(Me._PathActualiza, value) = false) Then
				Me.OnPathActualizaChanging(value)
				Me.SendPropertyChanging
				Me._PathActualiza = value
				Me.SendPropertyChanged("PathActualiza")
				Me.OnPathActualizaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDatosFinancieros", Storage:="_DatosFinancieros", DbType:="Bit")>  _
	Public Property DatosFinancieros() As System.Nullable(Of Boolean)
		Get
			Return Me._DatosFinancieros
		End Get
		Set
			If (Me._DatosFinancieros.Equals(value) = false) Then
				Me.OnDatosFinancierosChanging(value)
				Me.SendPropertyChanging
				Me._DatosFinancieros = value
				Me.SendPropertyChanged("DatosFinancieros")
				Me.OnDatosFinancierosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logConceptoDetalleTesoreriaManual", Storage:="_ConceptoDetalleTesoreriaManual", DbType:="Bit NOT NULL")>  _
	Public Property ConceptoDetalleTesoreriaManual() As Boolean
		Get
			Return Me._ConceptoDetalleTesoreriaManual
		End Get
		Set
			If ((Me._ConceptoDetalleTesoreriaManual = value)  _
						= false) Then
				Me.OnConceptoDetalleTesoreriaManualChanging(value)
				Me.SendPropertyChanging
				Me._ConceptoDetalleTesoreriaManual = value
				Me.SendPropertyChanged("ConceptoDetalleTesoreriaManual")
				Me.OnConceptoDetalleTesoreriaManualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroUsu", Storage:="_NroUsu", DbType:="Varchar(20)")>  _
	Public Property NroUsu() As String
		Get
			Return Me._NroUsu
		End Get
		Set
			If (String.Equals(Me._NroUsu, value) = false) Then
				Me.OnNroUsuChanging(value)
				Me.SendPropertyChanging
				Me._NroUsu = value
				Me.SendPropertyChanged("NroUsu")
				Me.OnNroUsuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strServidorNacional", Storage:="_ServidorNacional", DbType:="Varchar(25)")>  _
	Public Property ServidorNacional() As String
		Get
			Return Me._ServidorNacional
		End Get
		Set
			If (String.Equals(Me._ServidorNacional, value) = false) Then
				Me.OnServidorNacionalChanging(value)
				Me.SendPropertyChanging
				Me._ServidorNacional = value
				Me.SendPropertyChanged("ServidorNacional")
				Me.OnServidorNacionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCompania", DbType:="Varchar(50)")>  _
	Public Property strCompania() As String
		Get
			Return Me._strCompania
		End Get
		Set
			If (String.Equals(Me._strCompania, value) = false) Then
				Me.OnstrCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._strCompania = value
				Me.SendPropertyChanged("strCompania")
				Me.OnstrCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCompaniaM", Storage:="_CompaniaM", DbType:="Varchar(50)")>  _
	Public Property CompaniaM() As String
		Get
			Return Me._CompaniaM
		End Get
		Set
			If (String.Equals(Me._CompaniaM, value) = false) Then
				Me.OnCompaniaMChanging(value)
				Me.SendPropertyChanging
				Me._CompaniaM = value
				Me.SendPropertyChanged("CompaniaM")
				Me.OnCompaniaMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMulticuenta", Storage:="_Multicuenta", DbType:="Varchar(25)")>  _
	Public Property Multicuenta() As String
		Get
			Return Me._Multicuenta
		End Get
		Set
			If (String.Equals(Me._Multicuenta, value) = false) Then
				Me.OnMulticuentaChanging(value)
				Me.SendPropertyChanging
				Me._Multicuenta = value
				Me.SendPropertyChanged("Multicuenta")
				Me.OnMulticuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblMaximoValor", Storage:="_MaximoValor", DbType:="Money")>  _
	Public Property MaximoValor() As System.Nullable(Of Decimal)
		Get
			Return Me._MaximoValor
		End Get
		Set
			If (Me._MaximoValor.Equals(value) = false) Then
				Me.OnMaximoValorChanging(value)
				Me.SendPropertyChanging
				Me._MaximoValor = value
				Me.SendPropertyChanged("MaximoValor")
				Me.OnMaximoValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDefensorCliente", Storage:="_DefensorCliente", DbType:="Varchar(255)")>  _
	Public Property DefensorCliente() As String
		Get
			Return Me._DefensorCliente
		End Get
		Set
			If (String.Equals(Me._DefensorCliente, value) = false) Then
				Me.OnDefensorClienteChanging(value)
				Me.SendPropertyChanging
				Me._DefensorCliente = value
				Me.SendPropertyChanged("DefensorCliente")
				Me.OnDefensorClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUrlReportesBus", Storage:="_UrlReportesBus", DbType:="Varchar(250)")>  _
	Public Property UrlReportesBus() As String
		Get
			Return Me._UrlReportesBus
		End Get
		Set
			If (String.Equals(Me._UrlReportesBus, value) = false) Then
				Me.OnUrlReportesBusChanging(value)
				Me.SendPropertyChanging
				Me._UrlReportesBus = value
				Me.SendPropertyChanged("UrlReportesBus")
				Me.OnUrlReportesBusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRutaReportesBus", Storage:="_RutaReportesBus", DbType:="Varchar(250)")>  _
	Public Property RutaReportesBus() As String
		Get
			Return Me._RutaReportesBus
		End Get
		Set
			If (String.Equals(Me._RutaReportesBus, value) = false) Then
				Me.OnRutaReportesBusChanging(value)
				Me.SendPropertyChanging
				Me._RutaReportesBus = value
				Me.SendPropertyChanged("RutaReportesBus")
				Me.OnRutaReportesBusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblGMFInferior", Storage:="_GMFInferior", DbType:="Float")>  _
	Public Property GMFInferior() As System.Nullable(Of Double)
		Get
			Return Me._GMFInferior
		End Get
		Set
			If (Me._GMFInferior.Equals(value) = false) Then
				Me.OnGMFInferiorChanging(value)
				Me.SendPropertyChanging
				Me._GMFInferior = value
				Me.SendPropertyChanged("GMFInferior")
				Me.OnGMFInferiorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCtaContableContraparteNotasCxC", Storage:="_CtaContableContraparteNotasCxC", DbType:="Varchar(40)")>  _
	Public Property CtaContableContraparteNotasCxC() As String
		Get
			Return Me._CtaContableContraparteNotasCxC
		End Get
		Set
			If (String.Equals(Me._CtaContableContraparteNotasCxC, value) = false) Then
				Me.OnCtaContableContraparteNotasCxCChanging(value)
				Me.SendPropertyChanging
				Me._CtaContableContraparteNotasCxC = value
				Me.SendPropertyChanged("CtaContableContraparteNotasCxC")
				Me.OnCtaContableContraparteNotasCxCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strtipoNotasCxC", Storage:="_tipoNotasCxC", DbType:="Varchar(40)")>  _
	Public Property tipoNotasCxC() As String
		Get
			Return Me._tipoNotasCxC
		End Get
		Set
			If (String.Equals(Me._tipoNotasCxC, value) = false) Then
				Me.OntipoNotasCxCChanging(value)
				Me.SendPropertyChanging
				Me._tipoNotasCxC = value
				Me.SendPropertyChanged("tipoNotasCxC")
				Me.OntipoNotasCxCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curPorcentajeNoConstitutivoDeRenta", Storage:="_PorcentajeNoConstitutivoDeRenta", DbType:="SmallMoney")>  _
	Public Property PorcentajeNoConstitutivoDeRenta() As System.Nullable(Of Decimal)
		Get
			Return Me._PorcentajeNoConstitutivoDeRenta
		End Get
		Set
			If (Me._PorcentajeNoConstitutivoDeRenta.Equals(value) = false) Then
				Me.OnPorcentajeNoConstitutivoDeRentaChanging(value)
				Me.SendPropertyChanging
				Me._PorcentajeNoConstitutivoDeRenta = value
				Me.SendPropertyChanged("PorcentajeNoConstitutivoDeRenta")
				Me.OnPorcentajeNoConstitutivoDeRentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCtaContableTrasladoDB", Storage:="_CtaContableTrasladoDB", DbType:="Varchar(40)")>  _
	Public Property CtaContableTrasladoDB() As String
		Get
			Return Me._CtaContableTrasladoDB
		End Get
		Set
			If (String.Equals(Me._CtaContableTrasladoDB, value) = false) Then
				Me.OnCtaContableTrasladoDBChanging(value)
				Me.SendPropertyChanging
				Me._CtaContableTrasladoDB = value
				Me.SendPropertyChanged("CtaContableTrasladoDB")
				Me.OnCtaContableTrasladoDBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCtaContableTrasladoCR", Storage:="_CtaContableTrasladoCR", DbType:="Varchar(40)")>  _
	Public Property CtaContableTrasladoCR() As String
		Get
			Return Me._CtaContableTrasladoCR
		End Get
		Set
			If (String.Equals(Me._CtaContableTrasladoCR, value) = false) Then
				Me.OnCtaContableTrasladoCRChanging(value)
				Me.SendPropertyChanging
				Me._CtaContableTrasladoCR = value
				Me.SendPropertyChanged("CtaContableTrasladoCR")
				Me.OnCtaContableTrasladoCRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDInstalacion", Storage:="_IDInstalacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDInstalacion() As Integer
		Get
			Return Me._IDInstalacion
		End Get
		Set
			If (Object.Equals(Me._IDInstalacion, value) = false) Then
				Me.OnIDInstalacionChanging(value)
				Me.SendPropertyChanging
				Me._IDInstalacion = value
				Me.SendPropertyChanged("IDInstalacion")
				Me.OnIDInstalacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCiaPrincipal", Storage:="_CompaniaPrincipal", DbType:="Int", CanBeNull:=true)>  _
	Public Property CompaniaPrincipal() As Integer
		Get
			Return Me._CompaniaPrincipal
		End Get
		Set
			If (Object.Equals(Me._CompaniaPrincipal, value) = false) Then
				Me.OnCompaniaPrincipalChanging(value)
				Me.SendPropertyChanging
				Me._CompaniaPrincipal = value
				Me.SendPropertyChanged("CompaniaPrincipal")
				Me.OnCompaniaPrincipalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCuentasDecevalPorAgrupador")>  _
Partial Public Class CuentasDecevalPorAgrupado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdComisionista As Integer
	
	Private _IdSucComisionista As Integer
	
	Private _TipoIdComitente As String
	
	Private _NroDocumento As String
	
	Private _Comitente As String
	
	Private _CuentaDeceval As Integer
	
	Private _Conector1 As String
	
	Private _TipoIdBenef1 As String
	
	Private _NroDocBenef1 As System.Nullable(Of Decimal)
	
	Private _Conector2 As String
	
	Private _TipoIdBenef2 As String
	
	Private _NroDocBenef2 As System.Nullable(Of Decimal)
	
	Private _Deposito As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _CuentaPorCliente As Boolean
	
	Private _intermedia As Integer
	
	Private _CuentaPrincipalDCV As String
	
	Private _Msg As String
	
	Private _IDCuentasDeceval As Integer
	
	Private _InfoSesion As String
	
	Private _NomCliente As String
	
	Private _NomBenef1 As String
	
	Private _NomBenef2 As String
	
	Private _Activa As Boolean
	
	Private _Prefijo As String
	
	Private _PrefijoConcatenado As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdComisionistaChanged()
    End Sub
    Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucComisionistaChanged()
    End Sub
    Partial Private Sub OnTipoIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdComitenteChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnCuentaDecevalChanging(value As Integer)
    End Sub
    Partial Private Sub OnCuentaDecevalChanged()
    End Sub
    Partial Private Sub OnConector1Changing(value As String)
    End Sub
    Partial Private Sub OnConector1Changed()
    End Sub
    Partial Private Sub OnTipoIdBenef1Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdBenef1Changed()
    End Sub
    Partial Private Sub OnNroDocBenef1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocBenef1Changed()
    End Sub
    Partial Private Sub OnConector2Changing(value As String)
    End Sub
    Partial Private Sub OnConector2Changed()
    End Sub
    Partial Private Sub OnTipoIdBenef2Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdBenef2Changed()
    End Sub
    Partial Private Sub OnNroDocBenef2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocBenef2Changed()
    End Sub
    Partial Private Sub OnDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnDepositoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCuentaPorClienteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCuentaPorClienteChanged()
    End Sub
    Partial Private Sub OnintermediaChanging(value As Integer)
    End Sub
    Partial Private Sub OnintermediaChanged()
    End Sub
    Partial Private Sub OnCuentaPrincipalDCVChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaPrincipalDCVChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnIDCuentasDecevalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCuentasDecevalChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnNomClienteChanging(value As String)
    End Sub
    Partial Private Sub OnNomClienteChanged()
    End Sub
    Partial Private Sub OnNomBenef1Changing(value As String)
    End Sub
    Partial Private Sub OnNomBenef1Changed()
    End Sub
    Partial Private Sub OnNomBenef2Changing(value As String)
    End Sub
    Partial Private Sub OnNomBenef2Changed()
    End Sub
    Partial Private Sub OnActivaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivaChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnPrefijoConcatenadoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoConcatenadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdComisionista", Storage:="_IdComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdComisionista() As Integer
		Get
			Return Me._IdComisionista
		End Get
		Set
			If (Object.Equals(Me._IdComisionista, value) = false) Then
				Me.OnIdComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdComisionista = value
				Me.SendPropertyChanged("IdComisionista")
				Me.OnIdComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdSucComisionista() As Integer
		Get
			Return Me._IdSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IdSucComisionista, value) = false) Then
				Me.OnIdSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdSucComisionista = value
				Me.SendPropertyChanged("IdSucComisionista")
				Me.OnIdSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdComitente", Storage:="_TipoIdComitente", DbType:="Char(1) NOT NULL")>  _
	Public Property TipoIdComitente() As String
		Get
			Return Me._TipoIdComitente
		End Get
		Set
			If (String.Equals(Me._TipoIdComitente, value) = false) Then
				Me.OnTipoIdComitenteChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdComitente = value
				Me.SendPropertyChanged("TipoIdComitente")
				Me.OnTipoIdComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(15)")>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Comitente", DbType:="Char(17)")>  _
	Public Property Comitente() As String
		Get
			Return Me._Comitente
		End Get
		Set
			If (String.Equals(Me._Comitente, value) = false) Then
				Me.OnComitenteChanging(value)
				Me.SendPropertyChanging
				Me._Comitente = value
				Me.SendPropertyChanged("Comitente")
				Me.OnComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidCuentaDeceval", Storage:="_CuentaDeceval", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property CuentaDeceval() As Integer
		Get
			Return Me._CuentaDeceval
		End Get
		Set
			If (Object.Equals(Me._CuentaDeceval, value) = false) Then
				Me.OnCuentaDecevalChanging(value)
				Me.SendPropertyChanging
				Me._CuentaDeceval = value
				Me.SendPropertyChanged("CuentaDeceval")
				Me.OnCuentaDecevalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConector1", Storage:="_Conector1", DbType:="Varchar(3)")>  _
	Public Property Conector1() As String
		Get
			Return Me._Conector1
		End Get
		Set
			If (String.Equals(Me._Conector1, value) = false) Then
				Me.OnConector1Changing(value)
				Me.SendPropertyChanging
				Me._Conector1 = value
				Me.SendPropertyChanged("Conector1")
				Me.OnConector1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdBenef1", Storage:="_TipoIdBenef1", DbType:="Char(1)")>  _
	Public Property TipoIdBenef1() As String
		Get
			Return Me._TipoIdBenef1
		End Get
		Set
			If (String.Equals(Me._TipoIdBenef1, value) = false) Then
				Me.OnTipoIdBenef1Changing(value)
				Me.SendPropertyChanging
				Me._TipoIdBenef1 = value
				Me.SendPropertyChanged("TipoIdBenef1")
				Me.OnTipoIdBenef1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocBenef1", Storage:="_NroDocBenef1", DbType:="Numeric")>  _
	Public Property NroDocBenef1() As System.Nullable(Of Decimal)
		Get
			Return Me._NroDocBenef1
		End Get
		Set
			If (Me._NroDocBenef1.Equals(value) = false) Then
				Me.OnNroDocBenef1Changing(value)
				Me.SendPropertyChanging
				Me._NroDocBenef1 = value
				Me.SendPropertyChanged("NroDocBenef1")
				Me.OnNroDocBenef1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrConector2", Storage:="_Conector2", DbType:="Varchar(3)")>  _
	Public Property Conector2() As String
		Get
			Return Me._Conector2
		End Get
		Set
			If (String.Equals(Me._Conector2, value) = false) Then
				Me.OnConector2Changing(value)
				Me.SendPropertyChanging
				Me._Conector2 = value
				Me.SendPropertyChanged("Conector2")
				Me.OnConector2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdBenef2", Storage:="_TipoIdBenef2", DbType:="Char(1)")>  _
	Public Property TipoIdBenef2() As String
		Get
			Return Me._TipoIdBenef2
		End Get
		Set
			If (String.Equals(Me._TipoIdBenef2, value) = false) Then
				Me.OnTipoIdBenef2Changing(value)
				Me.SendPropertyChanging
				Me._TipoIdBenef2 = value
				Me.SendPropertyChanged("TipoIdBenef2")
				Me.OnTipoIdBenef2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocBenef2", Storage:="_NroDocBenef2", DbType:="Numeric")>  _
	Public Property NroDocBenef2() As System.Nullable(Of Decimal)
		Get
			Return Me._NroDocBenef2
		End Get
		Set
			If (Me._NroDocBenef2.Equals(value) = false) Then
				Me.OnNroDocBenef2Changing(value)
				Me.SendPropertyChanging
				Me._NroDocBenef2 = value
				Me.SendPropertyChanged("NroDocBenef2")
				Me.OnNroDocBenef2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDeposito", Storage:="_Deposito", DbType:="Varchar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property Deposito() As String
		Get
			Return Me._Deposito
		End Get
		Set
			If (String.Equals(Me._Deposito, value) = false) Then
				Me.OnDepositoChanging(value)
				Me.SendPropertyChanging
				Me._Deposito = value
				Me.SendPropertyChanged("Deposito")
				Me.OnDepositoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCuentaPorCliente", Storage:="_CuentaPorCliente", DbType:="Bit NOT NULL")>  _
	Public Property CuentaPorCliente() As Boolean
		Get
			Return Me._CuentaPorCliente
		End Get
		Set
			If ((Me._CuentaPorCliente = value)  _
						= false) Then
				Me.OnCuentaPorClienteChanging(value)
				Me.SendPropertyChanging
				Me._CuentaPorCliente = value
				Me.SendPropertyChanged("CuentaPorCliente")
				Me.OnCuentaPorClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="idIntermedia", Storage:="_intermedia", DbType:="Int", CanBeNull:=true)>  _
	Public Property intermedia() As Integer
		Get
			Return Me._intermedia
		End Get
		Set
			If (Object.Equals(Me._intermedia, value) = false) Then
				Me.OnintermediaChanging(value)
				Me.SendPropertyChanging
				Me._intermedia = value
				Me.SendPropertyChanged("intermedia")
				Me.OnintermediaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaPrincipalDCV", Storage:="_CuentaPrincipalDCV", DbType:="Varchar(25)")>  _
	Public Property CuentaPrincipalDCV() As String
		Get
			Return Me._CuentaPrincipalDCV
		End Get
		Set
			If (String.Equals(Me._CuentaPrincipalDCV, value) = false) Then
				Me.OnCuentaPrincipalDCVChanging(value)
				Me.SendPropertyChanging
				Me._CuentaPrincipalDCV = value
				Me.SendPropertyChanged("CuentaPrincipalDCV")
				Me.OnCuentaPrincipalDCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCuentasDeceval", Storage:="_IDCuentasDeceval", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCuentasDeceval() As Integer
		Get
			Return Me._IDCuentasDeceval
		End Get
		Set
			If (Object.Equals(Me._IDCuentasDeceval, value) = false) Then
				Me.OnIDCuentasDecevalChanging(value)
				Me.SendPropertyChanging
				Me._IDCuentasDeceval = value
				Me.SendPropertyChanged("IDCuentasDeceval")
				Me.OnIDCuentasDecevalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_NomCliente", DbType:="Varchar(50) NOT NULL")>  _
	Public Property NomCliente() As String
		Get
			Return Me._NomCliente
		End Get
		Set
			If (String.Equals(Me._NomCliente, value) = false) Then
				Me.OnNomClienteChanging(value)
				Me.SendPropertyChanging
				Me._NomCliente = value
				Me.SendPropertyChanged("NomCliente")
				Me.OnNomClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre1", Storage:="_NomBenef1", DbType:="Varchar(50) NOT NULL")>  _
	Public Property NomBenef1() As String
		Get
			Return Me._NomBenef1
		End Get
		Set
			If (String.Equals(Me._NomBenef1, value) = false) Then
				Me.OnNomBenef1Changing(value)
				Me.SendPropertyChanging
				Me._NomBenef1 = value
				Me.SendPropertyChanged("NomBenef1")
				Me.OnNomBenef1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre2", Storage:="_NomBenef2", DbType:="Varchar(50) NOT NULL")>  _
	Public Property NomBenef2() As String
		Get
			Return Me._NomBenef2
		End Get
		Set
			If (String.Equals(Me._NomBenef2, value) = false) Then
				Me.OnNomBenef2Changing(value)
				Me.SendPropertyChanging
				Me._NomBenef2 = value
				Me.SendPropertyChanged("NomBenef2")
				Me.OnNomBenef2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActiva", Storage:="_Activa", DbType:="Bit NOT NULL")>  _
	Public Property Activa() As Boolean
		Get
			Return Me._Activa
		End Get
		Set
			If ((Me._Activa = value)  _
						= false) Then
				Me.OnActivaChanging(value)
				Me.SendPropertyChanging
				Me._Activa = value
				Me.SendPropertyChanged("Activa")
				Me.OnActivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(10) NULL")>  _
	Public Property Prefijo() As String
		Get
			Return Me._Prefijo
		End Get
		Set
			If (String.Equals(Me._Prefijo, value) = false) Then
				Me.OnPrefijoChanging(value)
				Me.SendPropertyChanging
				Me._Prefijo = value
				Me.SendPropertyChanged("Prefijo")
				Me.OnPrefijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijoConcatenado", Storage:="_PrefijoConcatenado", DbType:="Varchar(30) NULL")>  _
	Public Property PrefijoConcatenado() As String
		Get
			Return Me._PrefijoConcatenado
		End Get
		Set
			If (String.Equals(Me._PrefijoConcatenado, value) = false) Then
				Me.OnPrefijoConcatenadoChanging(value)
				Me.SendPropertyChanging
				Me._PrefijoConcatenado = value
				Me.SendPropertyChanged("PrefijoConcatenado")
				Me.OnPrefijoConcatenadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class CuentasDeceval
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Comitente As String
	
	Private _CuentaDeceval As Integer
	
	Private _Conector1 As String
	
	Private _TipoIdBenef1 As String
	
	Private _NroDocBenef1 As System.Nullable(Of Decimal)
	
	Private _Conector2 As String
	
	Private _TipoIdBenef2 As String
	
	Private _NroDocBenef2 As System.Nullable(Of Decimal)
	
	Private _Descripcion As String
	
	Private _NomBenef1 As String
	
	Private _NomBenef2 As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnCuentaDecevalChanging(value As Integer)
    End Sub
    Partial Private Sub OnCuentaDecevalChanged()
    End Sub
    Partial Private Sub OnConector1Changing(value As String)
    End Sub
    Partial Private Sub OnConector1Changed()
    End Sub
    Partial Private Sub OnTipoIdBenef1Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdBenef1Changed()
    End Sub
    Partial Private Sub OnNroDocBenef1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocBenef1Changed()
    End Sub
    Partial Private Sub OnConector2Changing(value As String)
    End Sub
    Partial Private Sub OnConector2Changed()
    End Sub
    Partial Private Sub OnTipoIdBenef2Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdBenef2Changed()
    End Sub
    Partial Private Sub OnNroDocBenef2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocBenef2Changed()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnNomBenef1Changing(value As String)
    End Sub
    Partial Private Sub OnNomBenef1Changed()
    End Sub
    Partial Private Sub OnNomBenef2Changing(value As String)
    End Sub
    Partial Private Sub OnNomBenef2Changed()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_Comitente", DbType:="Char(17)", IsPrimaryKey:=true)>  _
	Public Property Comitente() As String
		Get
			Return Me._Comitente
		End Get
		Set
			If (String.Equals(Me._Comitente, value) = false) Then
				Me.OnComitenteChanging(value)
				Me.SendPropertyChanging
				Me._Comitente = value
				Me.SendPropertyChanged("Comitente")
				Me.OnComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidCuentaDeceval", Storage:="_CuentaDeceval", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CuentaDeceval() As Integer
		Get
			Return Me._CuentaDeceval
		End Get
		Set
			If (Object.Equals(Me._CuentaDeceval, value) = false) Then
				Me.OnCuentaDecevalChanging(value)
				Me.SendPropertyChanging
				Me._CuentaDeceval = value
				Me.SendPropertyChanged("CuentaDeceval")
				Me.OnCuentaDecevalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConector1", Storage:="_Conector1", DbType:="Varchar(3)")>  _
	Public Property Conector1() As String
		Get
			Return Me._Conector1
		End Get
		Set
			If (String.Equals(Me._Conector1, value) = false) Then
				Me.OnConector1Changing(value)
				Me.SendPropertyChanging
				Me._Conector1 = value
				Me.SendPropertyChanged("Conector1")
				Me.OnConector1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdBenef1", Storage:="_TipoIdBenef1", DbType:="Char(1)")>  _
	Public Property TipoIdBenef1() As String
		Get
			Return Me._TipoIdBenef1
		End Get
		Set
			If (String.Equals(Me._TipoIdBenef1, value) = false) Then
				Me.OnTipoIdBenef1Changing(value)
				Me.SendPropertyChanging
				Me._TipoIdBenef1 = value
				Me.SendPropertyChanged("TipoIdBenef1")
				Me.OnTipoIdBenef1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocBenef1", Storage:="_NroDocBenef1", DbType:="Numeric")>  _
	Public Property NroDocBenef1() As System.Nullable(Of Decimal)
		Get
			Return Me._NroDocBenef1
		End Get
		Set
			If (Me._NroDocBenef1.Equals(value) = false) Then
				Me.OnNroDocBenef1Changing(value)
				Me.SendPropertyChanging
				Me._NroDocBenef1 = value
				Me.SendPropertyChanged("NroDocBenef1")
				Me.OnNroDocBenef1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrConector2", Storage:="_Conector2", DbType:="Varchar(3)")>  _
	Public Property Conector2() As String
		Get
			Return Me._Conector2
		End Get
		Set
			If (String.Equals(Me._Conector2, value) = false) Then
				Me.OnConector2Changing(value)
				Me.SendPropertyChanging
				Me._Conector2 = value
				Me.SendPropertyChanged("Conector2")
				Me.OnConector2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdBenef2", Storage:="_TipoIdBenef2", DbType:="Char(1)")>  _
	Public Property TipoIdBenef2() As String
		Get
			Return Me._TipoIdBenef2
		End Get
		Set
			If (String.Equals(Me._TipoIdBenef2, value) = false) Then
				Me.OnTipoIdBenef2Changing(value)
				Me.SendPropertyChanging
				Me._TipoIdBenef2 = value
				Me.SendPropertyChanged("TipoIdBenef2")
				Me.OnTipoIdBenef2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocBenef2", Storage:="_NroDocBenef2", DbType:="Numeric")>  _
	Public Property NroDocBenef2() As System.Nullable(Of Decimal)
		Get
			Return Me._NroDocBenef2
		End Get
		Set
			If (Me._NroDocBenef2.Equals(value) = false) Then
				Me.OnNroDocBenef2Changing(value)
				Me.SendPropertyChanging
				Me._NroDocBenef2 = value
				Me.SendPropertyChanged("NroDocBenef2")
				Me.OnNroDocBenef2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre1", Storage:="_NomBenef1", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NomBenef1() As String
		Get
			Return Me._NomBenef1
		End Get
		Set
			If (String.Equals(Me._NomBenef1, value) = false) Then
				Me.OnNomBenef1Changing(value)
				Me.SendPropertyChanging
				Me._NomBenef1 = value
				Me.SendPropertyChanged("NomBenef1")
				Me.OnNomBenef1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre2", Storage:="_NomBenef2", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NomBenef2() As String
		Get
			Return Me._NomBenef2
		End Get
		Set
			If (String.Equals(Me._NomBenef2, value) = false) Then
				Me.OnNomBenef2Changing(value)
				Me.SendPropertyChanging
				Me._NomBenef2 = value
				Me.SendPropertyChanged("NomBenef2")
				Me.OnNomBenef2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ListaBeneficiarios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NroDocumento As Decimal
	
	Private _Nombre As String
	
	Private _TipoIdentificacion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="Numeric(15,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property NroDocumento() As Decimal
		Get
			Return Me._NroDocumento
		End Get
		Set
			If ((Me._NroDocumento = value)  _
						= false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(1) NOT NULL")>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ConsultaNombre
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nombre As String
	
	Private _IDRetira As Integer
	
	Private _Accion As Char
	
	Private _IDUnifica As Integer
	
	Private _Deposito As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIDRetiraChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRetiraChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As Char)
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnIDUnificaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDUnificaChanged()
    End Sub
    Partial Private Sub OnDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnDepositoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCuentaDeceval", Storage:="_IDRetira", DbType:="Int NOT NULL")>  _
	Public Property IDRetira() As Integer
		Get
			Return Me._IDRetira
		End Get
		Set
			If ((Me._IDRetira = value)  _
						= false) Then
				Me.OnIDRetiraChanging(value)
				Me.SendPropertyChanging
				Me._IDRetira = value
				Me.SendPropertyChanged("IDRetira")
				Me.OnIDRetiraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAccion", Storage:="_Accion", DbType:="Char")>  _
	Public Property Accion() As Char
		Get
			Return Me._Accion
		End Get
		Set
			If ((Me._Accion = value)  _
						= false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCuentaDeceva", Storage:="_IDUnifica", DbType:="Int NOT NULL")>  _
	Public Property IDUnifica() As Integer
		Get
			Return Me._IDUnifica
		End Get
		Set
			If ((Me._IDUnifica = value)  _
						= false) Then
				Me.OnIDUnificaChanging(value)
				Me.SendPropertyChanging
				Me._IDUnifica = value
				Me.SendPropertyChanged("IDUnifica")
				Me.OnIDUnificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDeposito", Storage:="_Deposito", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Deposito() As String
		Get
			Return Me._Deposito
		End Get
		Set
			If (String.Equals(Me._Deposito, value) = false) Then
				Me.OnDepositoChanging(value)
				Me.SendPropertyChanging
				Me._Deposito = value
				Me.SendPropertyChanged("Deposito")
				Me.OnDepositoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)", CanBeNull:=false)>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblOrdenes")>  _
Partial Public Class Ordene
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IdSucComisionista As Integer
	
	Private _Tipo As String
	
	Private _Clase As String
	
	Private _ID As Integer
	
	Private _Version As Integer
	
	Private _Ordinaria As Boolean
	
	Private _Objeto As String
	
	Private _Repo As Boolean
	
	Private _Renovacion As Boolean
	
	Private _IDComitente As String
	
	Private _IDOrdenante As String
	
	Private _ComisionPactada As Double
	
	Private _CondicionesNegociacion As String
	
	Private _TipoLimite As String
	
	Private _FormaPago As String
	
	Private _Orden As Date
	
	Private _VigenciaHasta As System.Nullable(Of Date)
	
	Private _Instrucciones As String
	
	Private _Notas As String
	
	Private _Estado As String
	
	Private _Fecha_Estado As Date
	
	Private _Sistema As Date
	
	Private _UBICACIONTITULO As String
	
	Private _TipoInversion As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDPreliquidacion As Integer
	
	Private _IDProducto As Integer
	
	Private _CostoAdicionalesOrden As System.Nullable(Of Double)
	
	Private _IdBolsa As Integer
	
	Private _UsuarioIngreso As String
	
	Private _NegocioEspecial As String
	
	Private _Eca As Boolean
	
	Private _OrdenEscrito As String
	
	Private _ConsecutivoSwap As Integer
	
	Private _Ejecucion As String
	
	Private _Duracion As String
	
	Private _CantidadMinima As System.Nullable(Of Decimal)
	
	Private _PrecioStop As System.Nullable(Of Decimal)
	
	Private _CantidadVisible As System.Nullable(Of Decimal)
	
	Private _HoraVigencia As String
	
	Private _EstadoLEO As String
	
	Private _UsuarioOperador As String
	
	Private _CanalRecepcion As String
	
	Private _MedioVerificable As String
	
	Private _FechaHoraRecepcion As System.Nullable(Of Date)
	
	Private _SitioIngreso As String
	
	Private _Seteada As Integer
	
	Private _Folio As String
	
	Private _TipoOrdenPreOrdenes As String
	
	Private _NroOrdenPreOrdenes As Integer
	
	Private _Impresion As System.Nullable(Of Boolean)
	
	Private _Impresiones As Integer
	
	Private _PreordenDetalle As Integer
	
	Private _EstadoOrdenBus As String
	
	Private _IDOrdenes As Integer
	
	Private _IpOrigen As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucComisionistaChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As String)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As Integer)
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnOrdinariaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOrdinariaChanged()
    End Sub
    Partial Private Sub OnObjetoChanging(value As String)
    End Sub
    Partial Private Sub OnObjetoChanged()
    End Sub
    Partial Private Sub OnRepoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRepoChanged()
    End Sub
    Partial Private Sub OnRenovacionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRenovacionChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnIDOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIDOrdenanteChanged()
    End Sub
    Partial Private Sub OnComisionPactadaChanging(value As Double)
    End Sub
    Partial Private Sub OnComisionPactadaChanged()
    End Sub
    Partial Private Sub OnCondicionesNegociacionChanging(value As String)
    End Sub
    Partial Private Sub OnCondicionesNegociacionChanged()
    End Sub
    Partial Private Sub OnTipoLimiteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoLimiteChanged()
    End Sub
    Partial Private Sub OnFormaPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFormaPagoChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As Date)
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
    Partial Private Sub OnVigenciaHastaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVigenciaHastaChanged()
    End Sub
    Partial Private Sub OnInstruccionesChanging(value As String)
    End Sub
    Partial Private Sub OnInstruccionesChanged()
    End Sub
    Partial Private Sub OnNotasChanging(value As String)
    End Sub
    Partial Private Sub OnNotasChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFecha_EstadoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_EstadoChanged()
    End Sub
    Partial Private Sub OnSistemaChanging(value As Date)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanging(value As String)
    End Sub
    Partial Private Sub OnUBICACIONTITULOChanged()
    End Sub
    Partial Private Sub OnTipoInversionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoInversionChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDPreliquidacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPreliquidacionChanged()
    End Sub
    Partial Private Sub OnIDProductoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDProductoChanged()
    End Sub
    Partial Private Sub OnCostoAdicionalesOrdenChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCostoAdicionalesOrdenChanged()
    End Sub
    Partial Private Sub OnIdBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBolsaChanged()
    End Sub
    Partial Private Sub OnUsuarioIngresoChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioIngresoChanged()
    End Sub
    Partial Private Sub OnNegocioEspecialChanging(value As String)
    End Sub
    Partial Private Sub OnNegocioEspecialChanged()
    End Sub
    Partial Private Sub OnEcaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEcaChanged()
    End Sub
    Partial Private Sub OnOrdenEscritoChanging(value As String)
    End Sub
    Partial Private Sub OnOrdenEscritoChanged()
    End Sub
    Partial Private Sub OnConsecutivoSwapChanging(value As Integer)
    End Sub
    Partial Private Sub OnConsecutivoSwapChanged()
    End Sub
    Partial Private Sub OnEjecucionChanging(value As String)
    End Sub
    Partial Private Sub OnEjecucionChanged()
    End Sub
    Partial Private Sub OnDuracionChanging(value As String)
    End Sub
    Partial Private Sub OnDuracionChanged()
    End Sub
    Partial Private Sub OnCantidadMinimaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadMinimaChanged()
    End Sub
    Partial Private Sub OnPrecioStopChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPrecioStopChanged()
    End Sub
    Partial Private Sub OnCantidadVisibleChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadVisibleChanged()
    End Sub
    Partial Private Sub OnHoraVigenciaChanging(value As String)
    End Sub
    Partial Private Sub OnHoraVigenciaChanged()
    End Sub
    Partial Private Sub OnEstadoLEOChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoLEOChanged()
    End Sub
    Partial Private Sub OnUsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnCanalRecepcionChanging(value As String)
    End Sub
    Partial Private Sub OnCanalRecepcionChanged()
    End Sub
    Partial Private Sub OnMedioVerificableChanging(value As String)
    End Sub
    Partial Private Sub OnMedioVerificableChanged()
    End Sub
    Partial Private Sub OnFechaHoraRecepcionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaHoraRecepcionChanged()
    End Sub
    Partial Private Sub OnSitioIngresoChanging(value As String)
    End Sub
    Partial Private Sub OnSitioIngresoChanged()
    End Sub
    Partial Private Sub OnSeteadaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSeteadaChanged()
    End Sub
    Partial Private Sub OnFolioChanging(value As String)
    End Sub
    Partial Private Sub OnFolioChanged()
    End Sub
    Partial Private Sub OnTipoOrdenPreOrdenesChanging(value As String)
    End Sub
    Partial Private Sub OnTipoOrdenPreOrdenesChanged()
    End Sub
    Partial Private Sub OnNroOrdenPreOrdenesChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroOrdenPreOrdenesChanged()
    End Sub
    Partial Private Sub OnImpresionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnImpresionChanged()
    End Sub
    Partial Private Sub OnImpresionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnImpresionesChanged()
    End Sub
    Partial Private Sub OnPreordenDetalleChanging(value As Integer)
    End Sub
    Partial Private Sub OnPreordenDetalleChanged()
    End Sub
    Partial Private Sub OnEstadoOrdenBusChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoOrdenBusChanged()
    End Sub
    Partial Private Sub OnIDOrdenesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrdenesChanged()
    End Sub
    Partial Private Sub OnIpOrigenChanging(value As String)
    End Sub
    Partial Private Sub OnIpOrigenChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdSucComisionista() As Integer
		Get
			Return Me._IdSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IdSucComisionista, value) = false) Then
				Me.OnIdSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdSucComisionista = value
				Me.SendPropertyChanged("IdSucComisionista")
				Me.OnIdSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Clase() As String
		Get
			Return Me._Clase
		End Get
		Set
			If (String.Equals(Me._Clase, value) = false) Then
				Me.OnClaseChanging(value)
				Me.SendPropertyChanging
				Me._Clase = value
				Me.SendPropertyChanged("Clase")
				Me.OnClaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Version() As Integer
		Get
			Return Me._Version
		End Get
		Set
			If (Object.Equals(Me._Version, value) = false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdinaria", Storage:="_Ordinaria", DbType:="Bit NOT NULL")>  _
	Public Property Ordinaria() As Boolean
		Get
			Return Me._Ordinaria
		End Get
		Set
			If ((Me._Ordinaria = value)  _
						= false) Then
				Me.OnOrdinariaChanging(value)
				Me.SendPropertyChanging
				Me._Ordinaria = value
				Me.SendPropertyChanged("Ordinaria")
				Me.OnOrdinariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObjeto", Storage:="_Objeto", DbType:="Char(3)")>  _
	Public Property Objeto() As String
		Get
			Return Me._Objeto
		End Get
		Set
			If (String.Equals(Me._Objeto, value) = false) Then
				Me.OnObjetoChanging(value)
				Me.SendPropertyChanging
				Me._Objeto = value
				Me.SendPropertyChanged("Objeto")
				Me.OnObjetoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRepo", Storage:="_Repo", DbType:="Bit NOT NULL")>  _
	Public Property Repo() As Boolean
		Get
			Return Me._Repo
		End Get
		Set
			If ((Me._Repo = value)  _
						= false) Then
				Me.OnRepoChanging(value)
				Me.SendPropertyChanging
				Me._Repo = value
				Me.SendPropertyChanged("Repo")
				Me.OnRepoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRenovacion", Storage:="_Renovacion", DbType:="Bit NOT NULL")>  _
	Public Property Renovacion() As Boolean
		Get
			Return Me._Renovacion
		End Get
		Set
			If ((Me._Renovacion = value)  _
						= false) Then
				Me.OnRenovacionChanging(value)
				Me.SendPropertyChanging
				Me._Renovacion = value
				Me.SendPropertyChanged("Renovacion")
				Me.OnRenovacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property IDComitente() As String
		Get
			Return Me._IDComitente
		End Get
		Set
			If (String.Equals(Me._IDComitente, value) = false) Then
				Me.OnIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente = value
				Me.SendPropertyChanged("IDComitente")
				Me.OnIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenante", Storage:="_IDOrdenante", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property IDOrdenante() As String
		Get
			Return Me._IDOrdenante
		End Get
		Set
			If (String.Equals(Me._IDOrdenante, value) = false) Then
				Me.OnIDOrdenanteChanging(value)
				Me.SendPropertyChanging
				Me._IDOrdenante = value
				Me.SendPropertyChanged("IDOrdenante")
				Me.OnIDOrdenanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionPactada", Storage:="_ComisionPactada", DbType:="Float NOT NULL")>  _
	Public Property ComisionPactada() As Double
		Get
			Return Me._ComisionPactada
		End Get
		Set
			If ((Me._ComisionPactada = value)  _
						= false) Then
				Me.OnComisionPactadaChanging(value)
				Me.SendPropertyChanging
				Me._ComisionPactada = value
				Me.SendPropertyChanged("ComisionPactada")
				Me.OnComisionPactadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCondicionesNegociacion", Storage:="_CondicionesNegociacion", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
	Public Property CondicionesNegociacion() As String
		Get
			Return Me._CondicionesNegociacion
		End Get
		Set
			If (String.Equals(Me._CondicionesNegociacion, value) = false) Then
				Me.OnCondicionesNegociacionChanging(value)
				Me.SendPropertyChanging
				Me._CondicionesNegociacion = value
				Me.SendPropertyChanged("CondicionesNegociacion")
				Me.OnCondicionesNegociacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoLimite", Storage:="_TipoLimite", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property TipoLimite() As String
		Get
			Return Me._TipoLimite
		End Get
		Set
			If (String.Equals(Me._TipoLimite, value) = false) Then
				Me.OnTipoLimiteChanging(value)
				Me.SendPropertyChanging
				Me._TipoLimite = value
				Me.SendPropertyChanged("TipoLimite")
				Me.OnTipoLimiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFormaPago", Storage:="_FormaPago", DbType:="Varchar(3)")>  _
	Public Property FormaPago() As String
		Get
			Return Me._FormaPago
		End Get
		Set
			If (String.Equals(Me._FormaPago, value) = false) Then
				Me.OnFormaPagoChanging(value)
				Me.SendPropertyChanging
				Me._FormaPago = value
				Me.SendPropertyChanged("FormaPago")
				Me.OnFormaPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmOrden", Storage:="_Orden", DbType:="Datetime NOT NULL")>  _
	Public Property Orden() As Date
		Get
			Return Me._Orden
		End Get
		Set
			If ((Me._Orden = value)  _
						= false) Then
				Me.OnOrdenChanging(value)
				Me.SendPropertyChanging
				Me._Orden = value
				Me.SendPropertyChanged("Orden")
				Me.OnOrdenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVigenciaHasta", Storage:="_VigenciaHasta", DbType:="Datetime")>  _
	Public Property VigenciaHasta() As System.Nullable(Of Date)
		Get
			Return Me._VigenciaHasta
		End Get
		Set
			If (Me._VigenciaHasta.Equals(value) = false) Then
				Me.OnVigenciaHastaChanging(value)
				Me.SendPropertyChanging
				Me._VigenciaHasta = value
				Me.SendPropertyChanged("VigenciaHasta")
				Me.OnVigenciaHastaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInstrucciones", Storage:="_Instrucciones", DbType:="Varchar(255)")>  _
	Public Property Instrucciones() As String
		Get
			Return Me._Instrucciones
		End Get
		Set
			If (String.Equals(Me._Instrucciones, value) = false) Then
				Me.OnInstruccionesChanging(value)
				Me.SendPropertyChanging
				Me._Instrucciones = value
				Me.SendPropertyChanged("Instrucciones")
				Me.OnInstruccionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotas", Storage:="_Notas", DbType:="Varchar(255)")>  _
	Public Property Notas() As String
		Get
			Return Me._Notas
		End Get
		Set
			If (String.Equals(Me._Notas, value) = false) Then
				Me.OnNotasChanging(value)
				Me.SendPropertyChanging
				Me._Notas = value
				Me.SendPropertyChanged("Notas")
				Me.OnNotasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Fecha_Estado", DbType:="Datetime NOT NULL")>  _
	Public Property Fecha_Estado() As Date
		Get
			Return Me._Fecha_Estado
		End Get
		Set
			If ((Me._Fecha_Estado = value)  _
						= false) Then
				Me.OnFecha_EstadoChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Estado = value
				Me.SendPropertyChanged("Fecha_Estado")
				Me.OnFecha_EstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmSistema", Storage:="_Sistema", DbType:="Datetime NOT NULL")>  _
	Public Property Sistema() As Date
		Get
			Return Me._Sistema
		End Get
		Set
			If ((Me._Sistema = value)  _
						= false) Then
				Me.OnSistemaChanging(value)
				Me.SendPropertyChanging
				Me._Sistema = value
				Me.SendPropertyChanged("Sistema")
				Me.OnSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(1)")>  _
	Public Property UBICACIONTITULO() As String
		Get
			Return Me._UBICACIONTITULO
		End Get
		Set
			If (String.Equals(Me._UBICACIONTITULO, value) = false) Then
				Me.OnUBICACIONTITULOChanging(value)
				Me.SendPropertyChanging
				Me._UBICACIONTITULO = value
				Me.SendPropertyChanged("UBICACIONTITULO")
				Me.OnUBICACIONTITULOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoInversion", Storage:="_TipoInversion", DbType:="Varchar(1)")>  _
	Public Property TipoInversion() As String
		Get
			Return Me._TipoInversion
		End Get
		Set
			If (String.Equals(Me._TipoInversion, value) = false) Then
				Me.OnTipoInversionChanging(value)
				Me.SendPropertyChanging
				Me._TipoInversion = value
				Me.SendPropertyChanged("TipoInversion")
				Me.OnTipoInversionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Char(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPreliquidacion", Storage:="_IDPreliquidacion", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDPreliquidacion() As Integer
		Get
			Return Me._IDPreliquidacion
		End Get
		Set
			If (Object.Equals(Me._IDPreliquidacion, value) = false) Then
				Me.OnIDPreliquidacionChanging(value)
				Me.SendPropertyChanging
				Me._IDPreliquidacion = value
				Me.SendPropertyChanged("IDPreliquidacion")
				Me.OnIDPreliquidacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDProducto", Storage:="_IDProducto", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDProducto() As Integer
		Get
			Return Me._IDProducto
		End Get
		Set
			If (Object.Equals(Me._IDProducto, value) = false) Then
				Me.OnIDProductoChanging(value)
				Me.SendPropertyChanging
				Me._IDProducto = value
				Me.SendPropertyChanged("IDProducto")
				Me.OnIDProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCostoAdicionalesOrden", Storage:="_CostoAdicionalesOrden", DbType:="Float")>  _
	Public Property CostoAdicionalesOrden() As System.Nullable(Of Double)
		Get
			Return Me._CostoAdicionalesOrden
		End Get
		Set
			If (Me._CostoAdicionalesOrden.Equals(value) = false) Then
				Me.OnCostoAdicionalesOrdenChanging(value)
				Me.SendPropertyChanging
				Me._CostoAdicionalesOrden = value
				Me.SendPropertyChanged("CostoAdicionalesOrden")
				Me.OnCostoAdicionalesOrdenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdBolsa", Storage:="_IdBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdBolsa() As Integer
		Get
			Return Me._IdBolsa
		End Get
		Set
			If (Object.Equals(Me._IdBolsa, value) = false) Then
				Me.OnIdBolsaChanging(value)
				Me.SendPropertyChanging
				Me._IdBolsa = value
				Me.SendPropertyChanged("IdBolsa")
				Me.OnIdBolsaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioIngreso", Storage:="_UsuarioIngreso", DbType:="Char(60)")>  _
	Public Property UsuarioIngreso() As String
		Get
			Return Me._UsuarioIngreso
		End Get
		Set
			If (String.Equals(Me._UsuarioIngreso, value) = false) Then
				Me.OnUsuarioIngresoChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioIngreso = value
				Me.SendPropertyChanged("UsuarioIngreso")
				Me.OnUsuarioIngresoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNegocioEspecial", Storage:="_NegocioEspecial", DbType:="Varchar(1)")>  _
	Public Property NegocioEspecial() As String
		Get
			Return Me._NegocioEspecial
		End Get
		Set
			If (String.Equals(Me._NegocioEspecial, value) = false) Then
				Me.OnNegocioEspecialChanging(value)
				Me.SendPropertyChanging
				Me._NegocioEspecial = value
				Me.SendPropertyChanged("NegocioEspecial")
				Me.OnNegocioEspecialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEca", Storage:="_Eca", DbType:="Bit NOT NULL")>  _
	Public Property Eca() As Boolean
		Get
			Return Me._Eca
		End Get
		Set
			If ((Me._Eca = value)  _
						= false) Then
				Me.OnEcaChanging(value)
				Me.SendPropertyChanging
				Me._Eca = value
				Me.SendPropertyChanged("Eca")
				Me.OnEcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOrdenEscrito", Storage:="_OrdenEscrito", DbType:="Varchar(3)")>  _
	Public Property OrdenEscrito() As String
		Get
			Return Me._OrdenEscrito
		End Get
		Set
			If (String.Equals(Me._OrdenEscrito, value) = false) Then
				Me.OnOrdenEscritoChanging(value)
				Me.SendPropertyChanging
				Me._OrdenEscrito = value
				Me.SendPropertyChanged("OrdenEscrito")
				Me.OnOrdenEscritoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngConsecutivoSwap", Storage:="_ConsecutivoSwap", DbType:="Int", CanBeNull:=true)>  _
	Public Property ConsecutivoSwap() As Integer
		Get
			Return Me._ConsecutivoSwap
		End Get
		Set
			If (Object.Equals(Me._ConsecutivoSwap, value) = false) Then
				Me.OnConsecutivoSwapChanging(value)
				Me.SendPropertyChanging
				Me._ConsecutivoSwap = value
				Me.SendPropertyChanged("ConsecutivoSwap")
				Me.OnConsecutivoSwapChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEjecucion", Storage:="_Ejecucion", DbType:="Varchar(1)")>  _
	Public Property Ejecucion() As String
		Get
			Return Me._Ejecucion
		End Get
		Set
			If (String.Equals(Me._Ejecucion, value) = false) Then
				Me.OnEjecucionChanging(value)
				Me.SendPropertyChanging
				Me._Ejecucion = value
				Me.SendPropertyChanged("Ejecucion")
				Me.OnEjecucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDuracion", Storage:="_Duracion", DbType:="Varchar(1)")>  _
	Public Property Duracion() As String
		Get
			Return Me._Duracion
		End Get
		Set
			If (String.Equals(Me._Duracion, value) = false) Then
				Me.OnDuracionChanging(value)
				Me.SendPropertyChanging
				Me._Duracion = value
				Me.SendPropertyChanged("Duracion")
				Me.OnDuracionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadMinima", Storage:="_CantidadMinima", DbType:="Numeric")>  _
	Public Property CantidadMinima() As System.Nullable(Of Decimal)
		Get
			Return Me._CantidadMinima
		End Get
		Set
			If (Me._CantidadMinima.Equals(value) = false) Then
				Me.OnCantidadMinimaChanging(value)
				Me.SendPropertyChanging
				Me._CantidadMinima = value
				Me.SendPropertyChanged("CantidadMinima")
				Me.OnCantidadMinimaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioStop", Storage:="_PrecioStop", DbType:="Numeric")>  _
	Public Property PrecioStop() As System.Nullable(Of Decimal)
		Get
			Return Me._PrecioStop
		End Get
		Set
			If (Me._PrecioStop.Equals(value) = false) Then
				Me.OnPrecioStopChanging(value)
				Me.SendPropertyChanging
				Me._PrecioStop = value
				Me.SendPropertyChanged("PrecioStop")
				Me.OnPrecioStopChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadVisible", Storage:="_CantidadVisible", DbType:="Numeric")>  _
	Public Property CantidadVisible() As System.Nullable(Of Decimal)
		Get
			Return Me._CantidadVisible
		End Get
		Set
			If (Me._CantidadVisible.Equals(value) = false) Then
				Me.OnCantidadVisibleChanging(value)
				Me.SendPropertyChanging
				Me._CantidadVisible = value
				Me.SendPropertyChanged("CantidadVisible")
				Me.OnCantidadVisibleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraVigencia", Storage:="_HoraVigencia", DbType:="Varchar(8)")>  _
	Public Property HoraVigencia() As String
		Get
			Return Me._HoraVigencia
		End Get
		Set
			If (String.Equals(Me._HoraVigencia, value) = false) Then
				Me.OnHoraVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._HoraVigencia = value
				Me.SendPropertyChanged("HoraVigencia")
				Me.OnHoraVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoLEO", Storage:="_EstadoLEO", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property EstadoLEO() As String
		Get
			Return Me._EstadoLEO
		End Get
		Set
			If (String.Equals(Me._EstadoLEO, value) = false) Then
				Me.OnEstadoLEOChanging(value)
				Me.SendPropertyChanging
				Me._EstadoLEO = value
				Me.SendPropertyChanged("EstadoLEO")
				Me.OnEstadoLEOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioOperador", Storage:="_UsuarioOperador", DbType:="Varchar(60)")>  _
	Public Property UsuarioOperador() As String
		Get
			Return Me._UsuarioOperador
		End Get
		Set
			If (String.Equals(Me._UsuarioOperador, value) = false) Then
				Me.OnUsuarioOperadorChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioOperador = value
				Me.SendPropertyChanged("UsuarioOperador")
				Me.OnUsuarioOperadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCanalRecepcion", Storage:="_CanalRecepcion", DbType:="Varchar(1)")>  _
	Public Property CanalRecepcion() As String
		Get
			Return Me._CanalRecepcion
		End Get
		Set
			If (String.Equals(Me._CanalRecepcion, value) = false) Then
				Me.OnCanalRecepcionChanging(value)
				Me.SendPropertyChanging
				Me._CanalRecepcion = value
				Me.SendPropertyChanged("CanalRecepcion")
				Me.OnCanalRecepcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMedioVerificable", Storage:="_MedioVerificable", DbType:="Varchar(1)")>  _
	Public Property MedioVerificable() As String
		Get
			Return Me._MedioVerificable
		End Get
		Set
			If (String.Equals(Me._MedioVerificable, value) = false) Then
				Me.OnMedioVerificableChanging(value)
				Me.SendPropertyChanging
				Me._MedioVerificable = value
				Me.SendPropertyChanged("MedioVerificable")
				Me.OnMedioVerificableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaHoraRecepcion", Storage:="_FechaHoraRecepcion", DbType:="Datetime")>  _
	Public Property FechaHoraRecepcion() As System.Nullable(Of Date)
		Get
			Return Me._FechaHoraRecepcion
		End Get
		Set
			If (Me._FechaHoraRecepcion.Equals(value) = false) Then
				Me.OnFechaHoraRecepcionChanging(value)
				Me.SendPropertyChanging
				Me._FechaHoraRecepcion = value
				Me.SendPropertyChanged("FechaHoraRecepcion")
				Me.OnFechaHoraRecepcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSitioIngreso", Storage:="_SitioIngreso", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property SitioIngreso() As String
		Get
			Return Me._SitioIngreso
		End Get
		Set
			If (String.Equals(Me._SitioIngreso, value) = false) Then
				Me.OnSitioIngresoChanging(value)
				Me.SendPropertyChanging
				Me._SitioIngreso = value
				Me.SendPropertyChanged("SitioIngreso")
				Me.OnSitioIngresoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeteada", Storage:="_Seteada", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Seteada() As Integer
		Get
			Return Me._Seteada
		End Get
		Set
			If (Object.Equals(Me._Seteada, value) = false) Then
				Me.OnSeteadaChanging(value)
				Me.SendPropertyChanging
				Me._Seteada = value
				Me.SendPropertyChanged("Seteada")
				Me.OnSeteadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFolio", Storage:="_Folio", DbType:="Varchar(255)")>  _
	Public Property Folio() As String
		Get
			Return Me._Folio
		End Get
		Set
			If (String.Equals(Me._Folio, value) = false) Then
				Me.OnFolioChanging(value)
				Me.SendPropertyChanging
				Me._Folio = value
				Me.SendPropertyChanged("Folio")
				Me.OnFolioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrdenPreOrdenes", Storage:="_TipoOrdenPreOrdenes", DbType:="Varchar(1)")>  _
	Public Property TipoOrdenPreOrdenes() As String
		Get
			Return Me._TipoOrdenPreOrdenes
		End Get
		Set
			If (String.Equals(Me._TipoOrdenPreOrdenes, value) = false) Then
				Me.OnTipoOrdenPreOrdenesChanging(value)
				Me.SendPropertyChanging
				Me._TipoOrdenPreOrdenes = value
				Me.SendPropertyChanged("TipoOrdenPreOrdenes")
				Me.OnTipoOrdenPreOrdenesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroOrdenPreOrdenes", Storage:="_NroOrdenPreOrdenes", DbType:="Int", CanBeNull:=true)>  _
	Public Property NroOrdenPreOrdenes() As Integer
		Get
			Return Me._NroOrdenPreOrdenes
		End Get
		Set
			If (Object.Equals(Me._NroOrdenPreOrdenes, value) = false) Then
				Me.OnNroOrdenPreOrdenesChanging(value)
				Me.SendPropertyChanging
				Me._NroOrdenPreOrdenes = value
				Me.SendPropertyChanged("NroOrdenPreOrdenes")
				Me.OnNroOrdenPreOrdenesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logImpresion", Storage:="_Impresion", DbType:="Bit")>  _
	Public Property Impresion() As System.Nullable(Of Boolean)
		Get
			Return Me._Impresion
		End Get
		Set
			If (Me._Impresion.Equals(value) = false) Then
				Me.OnImpresionChanging(value)
				Me.SendPropertyChanging
				Me._Impresion = value
				Me.SendPropertyChanged("Impresion")
				Me.OnImpresionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngImpresiones", Storage:="_Impresiones", DbType:="Int", CanBeNull:=true)>  _
	Public Property Impresiones() As Integer
		Get
			Return Me._Impresiones
		End Get
		Set
			If (Object.Equals(Me._Impresiones, value) = false) Then
				Me.OnImpresionesChanging(value)
				Me.SendPropertyChanging
				Me._Impresiones = value
				Me.SendPropertyChanged("Impresiones")
				Me.OnImpresionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPreordenDetalle", Storage:="_PreordenDetalle", DbType:="Int", CanBeNull:=true)>  _
	Public Property PreordenDetalle() As Integer
		Get
			Return Me._PreordenDetalle
		End Get
		Set
			If (Object.Equals(Me._PreordenDetalle, value) = false) Then
				Me.OnPreordenDetalleChanging(value)
				Me.SendPropertyChanging
				Me._PreordenDetalle = value
				Me.SendPropertyChanged("PreordenDetalle")
				Me.OnPreordenDetalleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoOrdenBus", Storage:="_EstadoOrdenBus", DbType:="Varchar(1)")>  _
	Public Property EstadoOrdenBus() As String
		Get
			Return Me._EstadoOrdenBus
		End Get
		Set
			If (String.Equals(Me._EstadoOrdenBus, value) = false) Then
				Me.OnEstadoOrdenBusChanging(value)
				Me.SendPropertyChanging
				Me._EstadoOrdenBus = value
				Me.SendPropertyChanged("EstadoOrdenBus")
				Me.OnEstadoOrdenBusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenes", Storage:="_IDOrdenes", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDOrdenes() As Integer
		Get
			Return Me._IDOrdenes
		End Get
		Set
			If (Object.Equals(Me._IDOrdenes, value) = false) Then
				Me.OnIDOrdenesChanging(value)
				Me.SendPropertyChanging
				Me._IDOrdenes = value
				Me.SendPropertyChanged("IDOrdenes")
				Me.OnIDOrdenesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIpOrigen", Storage:="_IpOrigen", DbType:="Varchar(30)")>  _
	Public Property IpOrigen() As String
		Get
			Return Me._IpOrigen
		End Get
		Set
			If (String.Equals(Me._IpOrigen, value) = false) Then
				Me.OnIpOrigenChanging(value)
				Me.SendPropertyChanging
				Me._IpOrigen = value
				Me.SendPropertyChanged("IpOrigen")
				Me.OnIpOrigenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblResolucionesFacturas")>  _
Partial Public Class ResolucionesFactura
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDCodigoResolucion As Integer
	
	Private _NumeroResolucion As Long
	
	Private _DescripcionResolucion As String
	
	Private _Msg As String
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoResolucionChanged()
    End Sub
    Partial Private Sub OnNumeroResolucionChanging(value As Long)
    End Sub
    Partial Private Sub OnNumeroResolucionChanged()
    End Sub
    Partial Private Sub OnDescripcionResolucionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionResolucionChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDCodigoResolucion", Storage:="_IDCodigoResolucion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCodigoResolucion() As Integer
		Get
			Return Me._IDCodigoResolucion
		End Get
		Set
			If (Object.Equals(Me._IDCodigoResolucion, value) = false) Then
				Me.OnIDCodigoResolucionChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigoResolucion = value
				Me.SendPropertyChanged("IDCodigoResolucion")
				Me.OnIDCodigoResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDNumeroResolucion", Storage:="_NumeroResolucion", DbType:="Bigint NOT NULL")>  _
	Public Property NumeroResolucion() As Long
		Get
			Return Me._NumeroResolucion
		End Get
		Set
			If ((Me._NumeroResolucion = value)  _
						= false) Then
				Me.OnNumeroResolucionChanging(value)
				Me.SendPropertyChanging
				Me._NumeroResolucion = value
				Me.SendPropertyChanged("NumeroResolucion")
				Me.OnNumeroResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionResolucion", Storage:="_DescripcionResolucion", DbType:="Varchar(260) NOT NULL", CanBeNull:=false)>  _
	Public Property DescripcionResolucion() As String
		Get
			Return Me._DescripcionResolucion
		End Get
		Set
			If (String.Equals(Me._DescripcionResolucion, value) = false) Then
				Me.OnDescripcionResolucionChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionResolucion = value
				Me.SendPropertyChanged("DescripcionResolucion")
				Me.OnDescripcionResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBancos")>  _
Partial Public Class Banco
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _NombreSucursal As String
	
	Private _NroCuenta As String
	
	Private _Telefono1 As String
	
	Private _Telefono2 As String
	
	Private _Fax1 As String
	
	Private _Fax2 As String
	
	Private _Direccion As String
	
	Private _Internet As String
	
	Private _ChequeraAutomatica As Boolean
	
	Private _NombreConsecutivo As String
	
	Private _IDPoblacion As System.Nullable(Of System.int32)
	
	Private _IDDepartamento As System.Nullable(Of System.int32)
	
	Private _IDPais As System.Nullable(Of System.int32)
	
	Private _NombreGerente As String
	
	Private _NombreCajero As String
	
	Private _NombrePortero As String
	
	Private _Creacion As Date
	
	Private _IDOwner As String
	
	Private _IdCuentaCtble As String
	
	Private _CtaActiva As Boolean
	
	Private _Usuario As String
	
	Private _Reporte As String
	
	Private _CobroGMF As Boolean
	
	Private _TipoCta As String
	
	Private _TipoCuenta As String
	
	Private _IdCodBanco As System.Nullable(Of System.int32)
	
	Private _IDBanco As Integer
	
	Private _Msg As String
	
	Private _IdMoneda As System.Nullable(Of System.int32)
	
	Private _InfoSesion As String
	
	Private _IDFormato As System.Nullable(Of System.Int32)
	
	Private _lngNumCheque As System.Nullable(Of System.Int32)
	
	Private _idSucursal As System.Nullable(Of System.int32)
	
	Private _IDFormatoActual As System.Nullable(Of System.Int32)
	
	Private _Compania As Integer
	
	Private _NombreCompania As String
	
	Private _xmlDetalleGrid As String
	
	Private _logManejaRangos As System.Nullable(Of Boolean)
	
	Private _dblTasaRendimientoUnica As System.Nullable(Of Double)
	
	Private _CuentaContableAuxiliar As String
	
	Private _lngTipoCuentaRecaudadora As System.Nullable(Of System.int32)
	
	Private _lngIDComitente As String
	
	Private _strNombreComitente As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreSucursalChanging(value As String)
    End Sub
    Partial Private Sub OnNombreSucursalChanged()
    End Sub
    Partial Private Sub OnNroCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNroCuentaChanged()
    End Sub
    Partial Private Sub OnTelefono1Changing(value As String)
    End Sub
    Partial Private Sub OnTelefono1Changed()
    End Sub
    Partial Private Sub OnTelefono2Changing(value As String)
    End Sub
    Partial Private Sub OnTelefono2Changed()
    End Sub
    Partial Private Sub OnFax1Changing(value As String)
    End Sub
    Partial Private Sub OnFax1Changed()
    End Sub
    Partial Private Sub OnFax2Changing(value As String)
    End Sub
    Partial Private Sub OnFax2Changed()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnInternetChanging(value As String)
    End Sub
    Partial Private Sub OnInternetChanged()
    End Sub
    Partial Private Sub OnChequeraAutomaticaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChequeraAutomaticaChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnIDPoblacionChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIDPoblacionChanged()
    End Sub
    Partial Private Sub OnIDDepartamentoChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnNombreGerenteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreGerenteChanged()
    End Sub
    Partial Private Sub OnNombreCajeroChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCajeroChanged()
    End Sub
    Partial Private Sub OnNombrePorteroChanging(value As String)
    End Sub
    Partial Private Sub OnNombrePorteroChanged()
    End Sub
    Partial Private Sub OnCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnCreacionChanged()
    End Sub
    Partial Private Sub OnIDOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnIDOwnerChanged()
    End Sub
    Partial Private Sub OnIdCuentaCtbleChanging(value As String)
    End Sub
    Partial Private Sub OnIdCuentaCtbleChanged()
    End Sub
    Partial Private Sub OnCtaActivaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCtaActivaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnReporteChanging(value As String)
    End Sub
    Partial Private Sub OnReporteChanged()
    End Sub
    Partial Private Sub OnCobroGMFChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCobroGMFChanged()
    End Sub
    Partial Private Sub OnTipoCtaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCtaChanged()
    End Sub
    Partial Private Sub OnTipoCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCuentaChanged()
    End Sub
    Partial Private Sub OnIdCodBancoChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIdCodBancoChanged()
    End Sub
    Partial Private Sub OnIDBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBancoChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnIdMonedaChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIdMonedaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnIDFormatoChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnIDFormatoChanged()
    End Sub
    Partial Private Sub OnlngNumChequeChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnlngNumChequeChanged()
    End Sub
    Partial Private Sub OnidSucursalChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnidSucursalChanged()
    End Sub
    Partial Private Sub OnIDFormatoActualChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnIDFormatoActualChanged()
    End Sub
    Partial Private Sub OnCompaniaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCompaniaChanged()
    End Sub
    Partial Private Sub OnNombreCompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCompaniaChanged()
    End Sub
    Partial Private Sub OnxmlDetalleGridChanging(value As String)
    End Sub
    Partial Private Sub OnxmlDetalleGridChanged()
    End Sub
    Partial Private Sub OnlogManejaRangosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogManejaRangosChanged()
    End Sub
    Partial Private Sub OndblTasaRendimientoUnicaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblTasaRendimientoUnicaChanged()
    End Sub
    Partial Private Sub OnCuentaContableAuxiliarChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableAuxiliarChanged()
    End Sub
    Partial Private Sub OnlngTipoCuentaRecaudadoraChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnlngTipoCuentaRecaudadoraChanged()
    End Sub
    Partial Private Sub OnlngIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnlngIDComitenteChanged()
    End Sub
    Partial Private Sub OnstrNombreComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreComitenteChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int", CanBeNull:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreSucursal", Storage:="_NombreSucursal", DbType:="Varchar(50)")>  _
	Public Property NombreSucursal() As String
		Get
			Return Me._NombreSucursal
		End Get
		Set
			If (String.Equals(Me._NombreSucursal, value) = false) Then
				Me.OnNombreSucursalChanging(value)
				Me.SendPropertyChanging
				Me._NombreSucursal = value
				Me.SendPropertyChanged("NombreSucursal")
				Me.OnNombreSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroCuenta", Storage:="_NroCuenta", DbType:="Varchar(25)")>  _
	Public Property NroCuenta() As String
		Get
			Return Me._NroCuenta
		End Get
		Set
			If (String.Equals(Me._NroCuenta, value) = false) Then
				Me.OnNroCuentaChanging(value)
				Me.SendPropertyChanging
				Me._NroCuenta = value
				Me.SendPropertyChanged("NroCuenta")
				Me.OnNroCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono1", Storage:="_Telefono1", DbType:="Varchar(25)")>  _
	Public Property Telefono1() As String
		Get
			Return Me._Telefono1
		End Get
		Set
			If (String.Equals(Me._Telefono1, value) = false) Then
				Me.OnTelefono1Changing(value)
				Me.SendPropertyChanging
				Me._Telefono1 = value
				Me.SendPropertyChanged("Telefono1")
				Me.OnTelefono1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono2", Storage:="_Telefono2", DbType:="Varchar(25)")>  _
	Public Property Telefono2() As String
		Get
			Return Me._Telefono2
		End Get
		Set
			If (String.Equals(Me._Telefono2, value) = false) Then
				Me.OnTelefono2Changing(value)
				Me.SendPropertyChanging
				Me._Telefono2 = value
				Me.SendPropertyChanged("Telefono2")
				Me.OnTelefono2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFax1", Storage:="_Fax1", DbType:="Varchar(25)")>  _
	Public Property Fax1() As String
		Get
			Return Me._Fax1
		End Get
		Set
			If (String.Equals(Me._Fax1, value) = false) Then
				Me.OnFax1Changing(value)
				Me.SendPropertyChanging
				Me._Fax1 = value
				Me.SendPropertyChanged("Fax1")
				Me.OnFax1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFax2", Storage:="_Fax2", DbType:="Varchar(25)")>  _
	Public Property Fax2() As String
		Get
			Return Me._Fax2
		End Get
		Set
			If (String.Equals(Me._Fax2, value) = false) Then
				Me.OnFax2Changing(value)
				Me.SendPropertyChanging
				Me._Fax2 = value
				Me.SendPropertyChanged("Fax2")
				Me.OnFax2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccion", Storage:="_Direccion", DbType:="Varchar(30)")>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInternet", Storage:="_Internet", DbType:="Varchar(30)")>  _
	Public Property Internet() As String
		Get
			Return Me._Internet
		End Get
		Set
			If (String.Equals(Me._Internet, value) = false) Then
				Me.OnInternetChanging(value)
				Me.SendPropertyChanging
				Me._Internet = value
				Me.SendPropertyChanged("Internet")
				Me.OnInternetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logChequeraAutomatica", Storage:="_ChequeraAutomatica", DbType:="Bit NOT NULL")>  _
	Public Property ChequeraAutomatica() As Boolean
		Get
			Return Me._ChequeraAutomatica
		End Get
		Set
			If ((Me._ChequeraAutomatica = value)  _
						= false) Then
				Me.OnChequeraAutomaticaChanging(value)
				Me.SendPropertyChanging
				Me._ChequeraAutomatica = value
				Me.SendPropertyChanged("ChequeraAutomatica")
				Me.OnChequeraAutomaticaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_NombreConsecutivo", DbType:="Varchar(15)")>  _
	Public Property NombreConsecutivo() As String
		Get
			Return Me._NombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivo, value) = false) Then
				Me.OnNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivo = value
				Me.SendPropertyChanged("NombreConsecutivo")
				Me.OnNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPoblacion", Storage:="_IDPoblacion", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDPoblacion() As System.Nullable(Of System.int32)
		Get
			Return Me._IDPoblacion
		End Get
		Set
			If (Object.Equals(Me._IDPoblacion, value) = false) Then
				Me.OnIDPoblacionChanging(value)
				Me.SendPropertyChanging
				Me._IDPoblacion = value
				Me.SendPropertyChanged("IDPoblacion")
				Me.OnIDPoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDepartamento", Storage:="_IDDepartamento", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDDepartamento() As System.Nullable(Of System.int32)
		Get
			Return Me._IDDepartamento
		End Get
		Set
			If (Object.Equals(Me._IDDepartamento, value) = false) Then
				Me.OnIDDepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._IDDepartamento = value
				Me.SendPropertyChanged("IDDepartamento")
				Me.OnIDDepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPais", Storage:="_IDPais", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDPais() As System.Nullable(Of System.int32)
		Get
			Return Me._IDPais
		End Get
		Set
			If (Object.Equals(Me._IDPais, value) = false) Then
				Me.OnIDPaisChanging(value)
				Me.SendPropertyChanging
				Me._IDPais = value
				Me.SendPropertyChanged("IDPais")
				Me.OnIDPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreGerente", Storage:="_NombreGerente", DbType:="Varchar(50)")>  _
	Public Property NombreGerente() As String
		Get
			Return Me._NombreGerente
		End Get
		Set
			If (String.Equals(Me._NombreGerente, value) = false) Then
				Me.OnNombreGerenteChanging(value)
				Me.SendPropertyChanging
				Me._NombreGerente = value
				Me.SendPropertyChanged("NombreGerente")
				Me.OnNombreGerenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCajero", Storage:="_NombreCajero", DbType:="Varchar(50)")>  _
	Public Property NombreCajero() As String
		Get
			Return Me._NombreCajero
		End Get
		Set
			If (String.Equals(Me._NombreCajero, value) = false) Then
				Me.OnNombreCajeroChanging(value)
				Me.SendPropertyChanging
				Me._NombreCajero = value
				Me.SendPropertyChanged("NombreCajero")
				Me.OnNombreCajeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombrePortero", Storage:="_NombrePortero", DbType:="Varchar(50)")>  _
	Public Property NombrePortero() As String
		Get
			Return Me._NombrePortero
		End Get
		Set
			If (String.Equals(Me._NombrePortero, value) = false) Then
				Me.OnNombrePorteroChanging(value)
				Me.SendPropertyChanging
				Me._NombrePortero = value
				Me.SendPropertyChanged("NombrePortero")
				Me.OnNombrePorteroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCreacion", Storage:="_Creacion", DbType:="Datetime NOT NULL")>  _
	Public Property Creacion() As Date
		Get
			Return Me._Creacion
		End Get
		Set
			If ((Me._Creacion = value)  _
						= false) Then
				Me.OnCreacionChanging(value)
				Me.SendPropertyChanging
				Me._Creacion = value
				Me.SendPropertyChanged("Creacion")
				Me.OnCreacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDOwner", Storage:="_IDOwner", DbType:="Varchar(15) NULL")>  _
	Public Property IDOwner() As String
		Get
			Return Me._IDOwner
		End Get
		Set
			If (String.Equals(Me._IDOwner, value) = false) Then
				Me.OnIDOwnerChanging(value)
				Me.SendPropertyChanging
				Me._IDOwner = value
				Me.SendPropertyChanged("IDOwner")
				Me.OnIDOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdCuentaCtble", Storage:="_IdCuentaCtble", DbType:="Varchar(15)")>  _
	Public Property IdCuentaCtble() As String
		Get
			Return Me._IdCuentaCtble
		End Get
		Set
			If (String.Equals(Me._IdCuentaCtble, value) = false) Then
				Me.OnIdCuentaCtbleChanging(value)
				Me.SendPropertyChanging
				Me._IdCuentaCtble = value
				Me.SendPropertyChanged("IdCuentaCtble")
				Me.OnIdCuentaCtbleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCtaActiva", Storage:="_CtaActiva", DbType:="Bit NOT NULL")>  _
	Public Property CtaActiva() As Boolean
		Get
			Return Me._CtaActiva
		End Get
		Set
			If ((Me._CtaActiva = value)  _
						= false) Then
				Me.OnCtaActivaChanging(value)
				Me.SendPropertyChanging
				Me._CtaActiva = value
				Me.SendPropertyChanged("CtaActiva")
				Me.OnCtaActivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReporte", Storage:="_Reporte", DbType:="Varchar(50)")>  _
	Public Property Reporte() As String
		Get
			Return Me._Reporte
		End Get
		Set
			If (String.Equals(Me._Reporte, value) = false) Then
				Me.OnReporteChanging(value)
				Me.SendPropertyChanging
				Me._Reporte = value
				Me.SendPropertyChanged("Reporte")
				Me.OnReporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCobroGMF", Storage:="_CobroGMF", DbType:="Bit NOT NULL")>  _
	Public Property CobroGMF() As Boolean
		Get
			Return Me._CobroGMF
		End Get
		Set
			If ((Me._CobroGMF = value)  _
						= false) Then
				Me.OnCobroGMFChanging(value)
				Me.SendPropertyChanging
				Me._CobroGMF = value
				Me.SendPropertyChanged("CobroGMF")
				Me.OnCobroGMFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCta", Storage:="_TipoCta", DbType:="Varchar(16)")>  _
	Public Property TipoCta() As String
		Get
			Return Me._TipoCta
		End Get
		Set
			If (String.Equals(Me._TipoCta, value) = false) Then
				Me.OnTipoCtaChanging(value)
				Me.SendPropertyChanging
				Me._TipoCta = value
				Me.SendPropertyChanged("TipoCta")
				Me.OnTipoCtaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCuenta", Storage:="_TipoCuenta", DbType:="Varchar(1)")>  _
	Public Property TipoCuenta() As String
		Get
			Return Me._TipoCuenta
		End Get
		Set
			If (String.Equals(Me._TipoCuenta, value) = false) Then
				Me.OnTipoCuentaChanging(value)
				Me.SendPropertyChanging
				Me._TipoCuenta = value
				Me.SendPropertyChanged("TipoCuenta")
				Me.OnTipoCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdCodBanco", Storage:="_IdCodBanco", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdCodBanco() As System.Nullable(Of System.int32)
		Get
			Return Me._IdCodBanco
		End Get
		Set
			If (Object.Equals(Me._IdCodBanco, value) = false) Then
				Me.OnIdCodBancoChanging(value)
				Me.SendPropertyChanging
				Me._IdCodBanco = value
				Me.SendPropertyChanged("IdCodBanco")
				Me.OnIdCodBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBanco", Storage:="_IDBanco", DbType:="Int NOT NULL ", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IDBanco() As Integer
		Get
			Return Me._IDBanco
		End Get
		Set
			If (Object.Equals(Me._IDBanco, value) = false) Then
				Me.OnIDBancoChanging(value)
				Me.SendPropertyChanging
				Me._IDBanco = value
				Me.SendPropertyChanged("IDBanco")
				Me.OnIDBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdMoneda", Storage:="_IdMoneda", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdMoneda() As System.Nullable(Of System.int32)
		Get
			Return Me._IdMoneda
		End Get
		Set
			If (Object.Equals(Me._IdMoneda, value) = false) Then
				Me.OnIdMonedaChanging(value)
				Me.SendPropertyChanging
				Me._IdMoneda = value
				Me.SendPropertyChanged("IdMoneda")
				Me.OnIdMonedaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFormato", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDFormato() As System.Nullable(Of System.Int32)
		Get
			Return Me._IDFormato
		End Get
		Set
			If (Object.Equals(Me._IDFormato, value) = false) Then
				Me.OnIDFormatoChanging(value)
				Me.SendPropertyChanging
				Me._IDFormato = value
				Me.SendPropertyChanged("IDFormato")
				Me.OnIDFormatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngNumCheque", DbType:="Int", CanBeNull:=true)>  _
	Public Property lngNumCheque() As System.Nullable(Of System.Int32)
		Get
			Return Me._lngNumCheque
		End Get
		Set
			If (Object.Equals(Me._lngNumCheque, value) = false) Then
				Me.OnlngNumChequeChanging(value)
				Me.SendPropertyChanging
				Me._lngNumCheque = value
				Me.SendPropertyChanged("lngNumCheque")
				Me.OnlngNumChequeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidSucursal", Storage:="_idSucursal", DbType:="Int", CanBeNull:=true)>  _
	Public Property idSucursal() As System.Nullable(Of System.int32)
		Get
			Return Me._idSucursal
		End Get
		Set
			If (Object.Equals(Me._idSucursal, value) = false) Then
				Me.OnidSucursalChanging(value)
				Me.SendPropertyChanging
				Me._idSucursal = value
				Me.SendPropertyChanged("idSucursal")
				Me.OnidSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFormatoActual", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDFormatoActual() As System.Nullable(Of System.Int32)
		Get
			Return Me._IDFormatoActual
		End Get
		Set
			If (Object.Equals(Me._IDFormatoActual, value) = false) Then
				Me.OnIDFormatoActualChanging(value)
				Me.SendPropertyChanging
				Me._IDFormatoActual = value
				Me.SendPropertyChanged("IDFormatoActual")
				Me.OnIDFormatoActualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCompania", Storage:="_Compania", DbType:="Int", CanBeNull:=true)>  _
	Public Property Compania() As Integer
		Get
			Return Me._Compania
		End Get
		Set
			If (Object.Equals(Me._Compania, value) = false) Then
				Me.OnCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._Compania = value
				Me.SendPropertyChanged("Compania")
				Me.OnCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCompania", Storage:="_NombreCompania", DbType:="Varchar(50)")>  _
	Public Property NombreCompania() As String
		Get
			Return Me._NombreCompania
		End Get
		Set
			If (String.Equals(Me._NombreCompania, value) = false) Then
				Me.OnNombreCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._NombreCompania = value
				Me.SendPropertyChanged("NombreCompania")
				Me.OnNombreCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xmlDetalleGrid", DbType:="Varchar(max)")>  _
	Public Property xmlDetalleGrid() As String
		Get
			Return Me._xmlDetalleGrid
		End Get
		Set
			If (String.Equals(Me._xmlDetalleGrid, value) = false) Then
				Me.OnxmlDetalleGridChanging(value)
				Me.SendPropertyChanging
				Me._xmlDetalleGrid = value
				Me.SendPropertyChanged("xmlDetalleGrid")
				Me.OnxmlDetalleGridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logManejaRangos", DbType:="BIT NOT NULL")>  _
	Public Property logManejaRangos() As System.Nullable(Of Boolean)
		Get
			Return Me._logManejaRangos
		End Get
		Set
			If (Me._logManejaRangos.Equals(value) = false) Then
				Me.OnlogManejaRangosChanging(value)
				Me.SendPropertyChanging
				Me._logManejaRangos = value
				Me.SendPropertyChanged("logManejaRangos")
				Me.OnlogManejaRangosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaRendimientoUnica", DbType:="Float NULL")>  _
	Public Property dblTasaRendimientoUnica() As System.Nullable(Of Double)
		Get
			Return Me._dblTasaRendimientoUnica
		End Get
		Set
			If (Me._dblTasaRendimientoUnica.Equals(value) = false) Then
				Me.OndblTasaRendimientoUnicaChanging(value)
				Me.SendPropertyChanging
				Me._dblTasaRendimientoUnica = value
				Me.SendPropertyChanged("dblTasaRendimientoUnica")
				Me.OndblTasaRendimientoUnicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContableAuxiliar", Storage:="_CuentaContableAuxiliar", DbType:="Varchar(50)")>  _
	Public Property CuentaContableAuxiliar() As String
		Get
			Return Me._CuentaContableAuxiliar
		End Get
		Set
			If (String.Equals(Me._CuentaContableAuxiliar, value) = false) Then
				Me.OnCuentaContableAuxiliarChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContableAuxiliar = value
				Me.SendPropertyChanged("CuentaContableAuxiliar")
				Me.OnCuentaContableAuxiliarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngTipoCuentaRecaudadora", DbType:="Int", CanBeNull:=true)>  _
	Public Property lngTipoCuentaRecaudadora() As System.Nullable(Of System.int32)
		Get
			Return Me._lngTipoCuentaRecaudadora
		End Get
		Set
			If (Object.Equals(Me._lngTipoCuentaRecaudadora, value) = false) Then
				Me.OnlngTipoCuentaRecaudadoraChanging(value)
				Me.SendPropertyChanging
				Me._lngTipoCuentaRecaudadora = value
				Me.SendPropertyChanged("lngTipoCuentaRecaudadora")
				Me.OnlngTipoCuentaRecaudadoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Char(17)")>  _
	Public Property lngIDComitente() As String
		Get
			Return Me._lngIDComitente
		End Get
		Set
			If (String.Equals(Me._lngIDComitente, value) = false) Then
				Me.OnlngIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._lngIDComitente = value
				Me.SendPropertyChanged("lngIDComitente")
				Me.OnlngIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreComitente", DbType:="Varchar(50)")>  _
	Public Property strNombreComitente() As String
		Get
			Return Me._strNombreComitente
		End Get
		Set
			If (String.Equals(Me._strNombreComitente, value) = false) Then
				Me.OnstrNombreComitenteChanging(value)
				Me.SendPropertyChanging
				Me._strNombreComitente = value
				Me.SendPropertyChanged("strNombreComitente")
				Me.OnstrNombreComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BancoSaldosBancoMes")>  _
Partial Public Class SaldosBancoMes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _intAnno As Integer
	
	Private _intMes As Integer
	
	Private _intDia As Integer
	
	Private _curValor As System.Nullable(Of Decimal)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintAnnoChanging(value As Integer)
    End Sub
    Partial Private Sub OnintAnnoChanged()
    End Sub
    Partial Private Sub OnintMesChanging(value As Integer)
    End Sub
    Partial Private Sub OnintMesChanged()
    End Sub
    Partial Private Sub OnintDiaChanging(value As Integer)
    End Sub
    Partial Private Sub OnintDiaChanged()
    End Sub
    Partial Private Sub OncurValorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncurValorChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intAnno", DbType:="Int")>  _
	Public Property intAnno() As Integer
		Get
			Return Me._intAnno
		End Get
		Set
			If ((Me._intAnno = value)  _
						= false) Then
				Me.OnintAnnoChanging(value)
				Me.SendPropertyChanging
				Me._intAnno = value
				Me.SendPropertyChanged("intAnno")
				Me.OnintAnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intMes", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property intMes() As Integer
		Get
			Return Me._intMes
		End Get
		Set
			If ((Me._intMes = value)  _
						= false) Then
				Me.OnintMesChanging(value)
				Me.SendPropertyChanging
				Me._intMes = value
				Me.SendPropertyChanged("intMes")
				Me.OnintMesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intDia", DbType:="Int")>  _
	Public Property intDia() As Integer
		Get
			Return Me._intDia
		End Get
		Set
			If ((Me._intDia = value)  _
						= false) Then
				Me.OnintDiaChanging(value)
				Me.SendPropertyChanging
				Me._intDia = value
				Me.SendPropertyChanged("intDia")
				Me.OnintDiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curValor", DbType:="Money")>  _
	Public Property curValor() As System.Nullable(Of Decimal)
		Get
			Return Me._curValor
		End Get
		Set
			If (Me._curValor.Equals(value) = false) Then
				Me.OncurValorChanging(value)
				Me.SendPropertyChanging
				Me._curValor = value
				Me.SendPropertyChanged("curValor")
				Me.OncurValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class MovimientosBancos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _dtmDocumento As System.Nullable(Of Date)
	
	Private _lngIDDocumento As Integer
	
	Private _strTipo As String
	
	Private _curSumaValor As System.Nullable(Of Decimal)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OndtmDocumentoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmDocumentoChanged()
    End Sub
    Partial Private Sub OnlngIDDocumentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDDocumentoChanged()
    End Sub
    Partial Private Sub OnstrTipoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoChanged()
    End Sub
    Partial Private Sub OncurSumaValorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncurSumaValorChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmDocumento", DbType:="DateTime")>  _
	Public Property dtmDocumento() As System.Nullable(Of Date)
		Get
			Return Me._dtmDocumento
		End Get
		Set
			If (Me._dtmDocumento.Equals(value) = false) Then
				Me.OndtmDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._dtmDocumento = value
				Me.SendPropertyChanged("dtmDocumento")
				Me.OndtmDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDDocumento", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property lngIDDocumento() As Integer
		Get
			Return Me._lngIDDocumento
		End Get
		Set
			If ((Me._lngIDDocumento = value)  _
						= false) Then
				Me.OnlngIDDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._lngIDDocumento = value
				Me.SendPropertyChanged("lngIDDocumento")
				Me.OnlngIDDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="Varchar(2)")>  _
	Public Property strTipo() As String
		Get
			Return Me._strTipo
		End Get
		Set
			If (String.Equals(Me._strTipo, value) = false) Then
				Me.OnstrTipoChanging(value)
				Me.SendPropertyChanging
				Me._strTipo = value
				Me.SendPropertyChanged("strTipo")
				Me.OnstrTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curSumaValor", DbType:="Money")>  _
	Public Property curSumaValor() As System.Nullable(Of Decimal)
		Get
			Return Me._curSumaValor
		End Get
		Set
			If (Me._curSumaValor.Equals(value) = false) Then
				Me.OncurSumaValorChanging(value)
				Me.SendPropertyChanging
				Me._curSumaValor = value
				Me.SendPropertyChanged("curSumaValor")
				Me.OncurSumaValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConfigLEO")>  _
Partial Public Class ConfigLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _NombreSQL As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _NombreDescSQL As String
	
	Private _Index As System.Nullable(Of System.int32)
	
	Private _Login As String
	
	Private _ValoresCamposDescLEO As String
	
	Private _IDReceptor As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreSQLChanging(value As String)
    End Sub
    Partial Private Sub OnNombreSQLChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreDescSQLChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDescSQLChanged()
    End Sub
    Partial Private Sub OnIndexChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIndexChanged()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnValoresCamposDescLEOChanging(value As String)
    End Sub
    Partial Private Sub OnValoresCamposDescLEOChanged()
    End Sub
    Partial Private Sub OnIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreSQL", Storage:="_NombreSQL", DbType:="Varchar(250) ")>  _
	Public Property NombreSQL() As String
		Get
			Return Me._NombreSQL
		End Get
		Set
			If (String.Equals(Me._NombreSQL, value) = false) Then
				Me.OnNombreSQLChanging(value)
				Me.SendPropertyChanging
				Me._NombreSQL = value
				Me.SendPropertyChanged("NombreSQL")
				Me.OnNombreSQLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreDescSQL", Storage:="_NombreDescSQL", DbType:="Varchar(256)")>  _
	Public Property NombreDescSQL() As String
		Get
			Return Me._NombreDescSQL
		End Get
		Set
			If (String.Equals(Me._NombreDescSQL, value) = false) Then
				Me.OnNombreDescSQLChanging(value)
				Me.SendPropertyChanging
				Me._NombreDescSQL = value
				Me.SendPropertyChanged("NombreDescSQL")
				Me.OnNombreDescSQLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIndex", Storage:="_Index", DbType:="int NOT NULL", CanBeNull:=false)>  _
	Public Property Index() As System.Nullable(Of System.int32)
		Get
			Return Me._Index
		End Get
		Set
			If (Object.Equals(Me._Index, value) = false) Then
				Me.OnIndexChanging(value)
				Me.SendPropertyChanging
				Me._Index = value
				Me.SendPropertyChanged("Index")
				Me.OnIndexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(20)")>  _
	Public Property Login() As String
		Get
			Return Me._Login
		End Get
		Set
			If (String.Equals(Me._Login, value) = false) Then
				Me.OnLoginChanging(value)
				Me.SendPropertyChanging
				Me._Login = value
				Me.SendPropertyChanged("Login")
				Me.OnLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValoresCamposDescLEO", Storage:="_ValoresCamposDescLEO", DbType:="Varchar(1000)")>  _
	Public Property ValoresCamposDescLEO() As String
		Get
			Return Me._ValoresCamposDescLEO
		End Get
		Set
			If (String.Equals(Me._ValoresCamposDescLEO, value) = false) Then
				Me.OnValoresCamposDescLEOChanging(value)
				Me.SendPropertyChanging
				Me._ValoresCamposDescLEO = value
				Me.SendPropertyChanged("ValoresCamposDescLEO")
				Me.OnValoresCamposDescLEOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4)")>  _
	Public Property IDReceptor() As String
		Get
			Return Me._IDReceptor
		End Get
		Set
			If (String.Equals(Me._IDReceptor, value) = false) Then
				Me.OnIDReceptorChanging(value)
				Me.SendPropertyChanging
				Me._IDReceptor = value
				Me.SendPropertyChanged("IDReceptor")
				Me.OnIDReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="Datetime")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ListaConfigLEO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Descripción As String
	
	Private _Cheked As Boolean
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDescripciónChanging(value As String)
    End Sub
    Partial Private Sub OnDescripciónChanged()
    End Sub
    Partial Private Sub OnChekedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChekedChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripción", DbType:="Varchar(50)", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Descripción() As String
		Get
			Return Me._Descripción
		End Get
		Set
			If (String.Equals(Me._Descripción, value) = false) Then
				Me.OnDescripciónChanging(value)
				Me.SendPropertyChanging
				Me._Descripción = value
				Me.SendPropertyChanged("Descripción")
				Me.OnDescripciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCheked", Storage:="_Cheked", DbType:="Bit", CanBeNull:=false)>  _
	Public Property Cheked() As Boolean
		Get
			Return Me._Cheked
		End Get
		Set
			If (Object.Equals(Me._Cheked, value) = false) Then
				Me.OnChekedChanging(value)
				Me.SendPropertyChanging
				Me._Cheked = value
				Me.SendPropertyChanged("Cheked")
				Me.OnChekedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblUsuarios_Seleccionar")>  _
Partial Public Class Usuarios_Selecciona
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Login As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If (Object.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Login() As String
		Get
			Return Me._Login
		End Get
		Set
			If (String.Equals(Me._Login, value) = false) Then
				Me.OnLoginChanging(value)
				Me.SendPropertyChanging
				Me._Login = value
				Me.SendPropertyChanged("Login")
				Me.OnLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClienteAgrupador")>  _
Partial Public Class ClienteAgrupado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _idComisionista As Integer
	
	Private _idSucComisionista As Integer
	
	Private _IDAgrupador As Integer
	
	Private _NroDocumento As String
	
	Private _TipoIdentificacion As String
	
	Private _idComitenteLider As String
	
	Private _NombreAgrupador As String
	
	Private _Nombre As String
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _IDClienteAgrupador As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnidComisionistaChanged()
    End Sub
    Partial Private Sub OnidSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnidSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDAgrupadorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAgrupadorChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnidComitenteLiderChanging(value As String)
    End Sub
    Partial Private Sub OnidComitenteLiderChanged()
    End Sub
    Partial Private Sub OnNombreAgrupadorChanging(value As String)
    End Sub
    Partial Private Sub OnNombreAgrupadorChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnIDClienteAgrupadorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClienteAgrupadorChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidComisionista", Storage:="_idComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property idComisionista() As Integer
		Get
			Return Me._idComisionista
		End Get
		Set
			If (Object.Equals(Me._idComisionista, value) = false) Then
				Me.OnidComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._idComisionista = value
				Me.SendPropertyChanged("idComisionista")
				Me.OnidComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidSucComisionista", Storage:="_idSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property idSucComisionista() As Integer
		Get
			Return Me._idSucComisionista
		End Get
		Set
			If (Object.Equals(Me._idSucComisionista, value) = false) Then
				Me.OnidSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._idSucComisionista = value
				Me.SendPropertyChanged("idSucComisionista")
				Me.OnidSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDAgrupador", Storage:="_IDAgrupador", DbType:="Int NOT NULL IDENTITY", CanBeNull:=false)>  _
	Public Property IDAgrupador() As Integer
		Get
			Return Me._IDAgrupador
		End Get
		Set
			If (Object.Equals(Me._IDAgrupador, value) = false) Then
				Me.OnIDAgrupadorChanging(value)
				Me.SendPropertyChanging
				Me._IDAgrupador = value
				Me.SendPropertyChanged("IDAgrupador")
				Me.OnIDAgrupadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidComitenteLider", Storage:="_idComitenteLider", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property idComitenteLider() As String
		Get
			Return Me._idComitenteLider
		End Get
		Set
			If (String.Equals(Me._idComitenteLider, value) = false) Then
				Me.OnidComitenteLiderChanging(value)
				Me.SendPropertyChanging
				Me._idComitenteLider = value
				Me.SendPropertyChanged("idComitenteLider")
				Me.OnidComitenteLiderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreAgrupador", Storage:="_NombreAgrupador", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreAgrupador() As String
		Get
			Return Me._NombreAgrupador
		End Get
		Set
			If (String.Equals(Me._NombreAgrupador, value) = false) Then
				Me.OnNombreAgrupadorChanging(value)
				Me.SendPropertyChanging
				Me._NombreAgrupador = value
				Me.SendPropertyChanged("NombreAgrupador")
				Me.OnNombreAgrupadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClienteAgrupador", Storage:="_IDClienteAgrupador", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClienteAgrupador() As Integer
		Get
			Return Me._IDClienteAgrupador
		End Get
		Set
			If (Object.Equals(Me._IDClienteAgrupador, value) = false) Then
				Me.OnIDClienteAgrupadorChanging(value)
				Me.SendPropertyChanging
				Me._IDClienteAgrupador = value
				Me.SendPropertyChanged("IDClienteAgrupador")
				Me.OnIDClienteAgrupadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmpDetalleClienteAgrupador")>  _
Partial Public Class DetalleClienteAgrupado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As String
	
	Private _Nombre As String
	
	Private _DireccionEnvio As String
	
	Private _idReceptor As String
	
	Private _IDSucCliente As String
	
	Private _IDDetalleClienteAgrupador As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As String)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDireccionEnvioChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionEnvioChanged()
    End Sub
    Partial Private Sub OnidReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnidReceptorChanged()
    End Sub
    Partial Private Sub OnIDSucClienteChanging(value As String)
    End Sub
    Partial Private Sub OnIDSucClienteChanged()
    End Sub
    Partial Private Sub OnIDDetalleClienteAgrupadorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDetalleClienteAgrupadorChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_Id", DbType:="Char(17)")>  _
	Public Property Id() As String
		Get
			Return Me._Id
		End Get
		Set
			If (String.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccionEnvio", Storage:="_DireccionEnvio", DbType:="Varchar(50)")>  _
	Public Property DireccionEnvio() As String
		Get
			Return Me._DireccionEnvio
		End Get
		Set
			If (String.Equals(Me._DireccionEnvio, value) = false) Then
				Me.OnDireccionEnvioChanging(value)
				Me.SendPropertyChanging
				Me._DireccionEnvio = value
				Me.SendPropertyChanged("DireccionEnvio")
				Me.OnDireccionEnvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="stridReceptor", Storage:="_idReceptor", DbType:="Varchar(4)")>  _
	Public Property idReceptor() As String
		Get
			Return Me._idReceptor
		End Get
		Set
			If (String.Equals(Me._idReceptor, value) = false) Then
				Me.OnidReceptorChanging(value)
				Me.SendPropertyChanging
				Me._idReceptor = value
				Me.SendPropertyChanged("idReceptor")
				Me.OnidReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDSucCliente", Storage:="_IDSucCliente", DbType:="Varchar(3) ")>  _
	Public Property IDSucCliente() As String
		Get
			Return Me._IDSucCliente
		End Get
		Set
			If (String.Equals(Me._IDSucCliente, value) = false) Then
				Me.OnIDSucClienteChanging(value)
				Me.SendPropertyChanging
				Me._IDSucCliente = value
				Me.SendPropertyChanged("IDSucCliente")
				Me.OnIDSucClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDetalleClienteAgrupador", Storage:="_IDDetalleClienteAgrupador", DbType:="int", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IDDetalleClienteAgrupador() As Integer
		Get
			Return Me._IDDetalleClienteAgrupador
		End Get
		Set
			If (Object.Equals(Me._IDDetalleClienteAgrupador, value) = false) Then
				Me.OnIDDetalleClienteAgrupadorChanging(value)
				Me.SendPropertyChanging
				Me._IDDetalleClienteAgrupador = value
				Me.SendPropertyChanged("IDDetalleClienteAgrupador")
				Me.OnIDDetalleClienteAgrupadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClasificacionesCiiu")>  _
Partial Public Class ClasificacionesCii
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _Tipo As Integer
	
	Private _IDPerteneceA As Integer
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDClasificacionCiiu As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnIDPerteneceAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPerteneceAChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDClasificacionCiiuChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClasificacionCiiuChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngTipo", Storage:="_Tipo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Tipo() As Integer
		Get
			Return Me._Tipo
		End Get
		Set
			If (Object.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPerteneceA", Storage:="_IDPerteneceA", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPerteneceA() As Integer
		Get
			Return Me._IDPerteneceA
		End Get
		Set
			If (Object.Equals(Me._IDPerteneceA, value) = false) Then
				Me.OnIDPerteneceAChanging(value)
				Me.SendPropertyChanging
				Me._IDPerteneceA = value
				Me.SendPropertyChanged("IDPerteneceA")
				Me.OnIDPerteneceAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClasificacionCiiu", Storage:="_IDClasificacionCiiu", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClasificacionCiiu() As Integer
		Get
			Return Me._IDClasificacionCiiu
		End Get
		Set
			If (Object.Equals(Me._IDClasificacionCiiu, value) = false) Then
				Me.OnIDClasificacionCiiuChanging(value)
				Me.SendPropertyChanging
				Me._IDClasificacionCiiu = value
				Me.SendPropertyChanged("IDClasificacionCiiu")
				Me.OnIDClasificacionCiiuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBolsaCostos")>  _
Partial Public Class BolsaCosto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDBolsaCostos As Integer
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Descripcion As String
	
	Private _PorcentajeCosto As Double
	
	Private _CostoPesos As System.Nullable(Of Double)
	
	Private _Actualizado As System.Nullable(Of Boolean)
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDBolsaCostosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBolsaCostosChanged()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnPorcentajeCostoChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeCostoChanged()
    End Sub
    Partial Private Sub OnCostoPesosChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCostoPesosChanged()
    End Sub
    Partial Private Sub OnActualizadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActualizadoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBolsaCostos", Storage:="_IDBolsaCostos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDBolsaCostos() As Integer
		Get
			Return Me._IDBolsaCostos
		End Get
		Set
			If (Object.Equals(Me._IDBolsaCostos, value) = false) Then
				Me.OnIDBolsaCostosChanging(value)
				Me.SendPropertyChanging
				Me._IDBolsaCostos = value
				Me.SendPropertyChanged("IDBolsaCostos")
				Me.OnIDBolsaCostosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_Id", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If (Object.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(25)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeCosto", Storage:="_PorcentajeCosto", DbType:="Float NOT NULL")>  _
	Public Property PorcentajeCosto() As Double
		Get
			Return Me._PorcentajeCosto
		End Get
		Set
			If ((Me._PorcentajeCosto = value)  _
						= false) Then
				Me.OnPorcentajeCostoChanging(value)
				Me.SendPropertyChanging
				Me._PorcentajeCosto = value
				Me.SendPropertyChanged("PorcentajeCosto")
				Me.OnPorcentajeCostoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCostoPesos", Storage:="_CostoPesos", DbType:="Float")>  _
	Public Property CostoPesos() As System.Nullable(Of Double)
		Get
			Return Me._CostoPesos
		End Get
		Set
			If (Me._CostoPesos.Equals(value) = false) Then
				Me.OnCostoPesosChanging(value)
				Me.SendPropertyChanging
				Me._CostoPesos = value
				Me.SendPropertyChanged("CostoPesos")
				Me.OnCostoPesosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActualizado", Storage:="_Actualizado", DbType:="Bit")>  _
	Public Property Actualizado() As System.Nullable(Of Boolean)
		Get
			Return Me._Actualizado
		End Get
		Set
			If (Me._Actualizado.Equals(value) = false) Then
				Me.OnActualizadoChanging(value)
				Me.SendPropertyChanging
				Me._Actualizado = value
				Me.SendPropertyChanged("Actualizado")
				Me.OnActualizadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Smalldatetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBloqueoSaldoClientes")>  _
Partial Public Class BloqueoSaldoCliente
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IdRegistro As Integer
	
	Private _IDComitente As String
	
	Private _MotivoBloqueoSaldo As String
	
	Private _ValorBloqueado As Decimal
	
	Private _Naturaleza As String
	
	Private _FechaBloqueo As System.Nullable(Of Date)
	
	Private _DetalleBloqueo As String
	
	Private _Actualizacion As System.Nullable(Of Date)
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _NombreComitente As String
	
	Private _strNombreConsecutivo As String
	
	Private _lngIDDocumento As System.Nullable(Of Integer)
	
	Private _intIDCompania As System.Nullable(Of System.Int32)
	
	Private _strNombreCompania As String
	
	Private _intIDEncargo As System.Nullable(Of System.Int32)
	
	Private _strDetalleEncargo As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdRegistroChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdRegistroChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnMotivoBloqueoSaldoChanging(value As String)
    End Sub
    Partial Private Sub OnMotivoBloqueoSaldoChanged()
    End Sub
    Partial Private Sub OnValorBloqueadoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnValorBloqueadoChanged()
    End Sub
    Partial Private Sub OnNaturalezaChanging(value As String)
    End Sub
    Partial Private Sub OnNaturalezaChanged()
    End Sub
    Partial Private Sub OnFechaBloqueoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaBloqueoChanged()
    End Sub
    Partial Private Sub OnDetalleBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleBloqueoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnNombreComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComitenteChanged()
    End Sub
    Partial Private Sub OnstrNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnlngIDDocumentoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDDocumentoChanged()
    End Sub
    Partial Private Sub OnintIDCompaniaChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDCompaniaChanged()
    End Sub
    Partial Private Sub OnstrNombreCompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreCompaniaChanged()
    End Sub
    Partial Private Sub OnintIDEncargoChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDEncargoChanged()
    End Sub
    Partial Private Sub OnstrDetalleEncargoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDetalleEncargoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdRegistro", Storage:="_IdRegistro", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdRegistro() As Integer
		Get
			Return Me._IdRegistro
		End Get
		Set
			If (Object.Equals(Me._IdRegistro, value) = false) Then
				Me.OnIdRegistroChanging(value)
				Me.SendPropertyChanging
				Me._IdRegistro = value
				Me.SendPropertyChanged("IdRegistro")
				Me.OnIdRegistroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property IDComitente() As String
		Get
			Return Me._IDComitente
		End Get
		Set
			If (String.Equals(Me._IDComitente, value) = false) Then
				Me.OnIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente = value
				Me.SendPropertyChanged("IDComitente")
				Me.OnIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMotivoBloqueoSaldo", Storage:="_MotivoBloqueoSaldo", DbType:="Varchar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property MotivoBloqueoSaldo() As String
		Get
			Return Me._MotivoBloqueoSaldo
		End Get
		Set
			If (String.Equals(Me._MotivoBloqueoSaldo, value) = false) Then
				Me.OnMotivoBloqueoSaldoChanging(value)
				Me.SendPropertyChanging
				Me._MotivoBloqueoSaldo = value
				Me.SendPropertyChanged("MotivoBloqueoSaldo")
				Me.OnMotivoBloqueoSaldoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorBloqueado", Storage:="_ValorBloqueado", DbType:="Money NOT NULL")>  _
	Public Property ValorBloqueado() As Decimal
		Get
			Return Me._ValorBloqueado
		End Get
		Set
			If ((Me._ValorBloqueado = value)  _
						= false) Then
				Me.OnValorBloqueadoChanging(value)
				Me.SendPropertyChanging
				Me._ValorBloqueado = value
				Me.SendPropertyChanged("ValorBloqueado")
				Me.OnValorBloqueadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNaturaleza", Storage:="_Naturaleza", DbType:="Varchar(2)")>  _
	Public Property Naturaleza() As String
		Get
			Return Me._Naturaleza
		End Get
		Set
			If (String.Equals(Me._Naturaleza, value) = false) Then
				Me.OnNaturalezaChanging(value)
				Me.SendPropertyChanging
				Me._Naturaleza = value
				Me.SendPropertyChanged("Naturaleza")
				Me.OnNaturalezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaBloqueo", Storage:="_FechaBloqueo", DbType:="Datetime")>  _
	Public Property FechaBloqueo() As System.Nullable(Of Date)
		Get
			Return Me._FechaBloqueo
		End Get
		Set
			If (Me._FechaBloqueo.Equals(value) = false) Then
				Me.OnFechaBloqueoChanging(value)
				Me.SendPropertyChanging
				Me._FechaBloqueo = value
				Me.SendPropertyChanged("FechaBloqueo")
				Me.OnFechaBloqueoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleBloqueo", Storage:="_DetalleBloqueo", DbType:="Varchar(255)")>  _
	Public Property DetalleBloqueo() As String
		Get
			Return Me._DetalleBloqueo
		End Get
		Set
			If (String.Equals(Me._DetalleBloqueo, value) = false) Then
				Me.OnDetalleBloqueoChanging(value)
				Me.SendPropertyChanging
				Me._DetalleBloqueo = value
				Me.SendPropertyChanged("DetalleBloqueo")
				Me.OnDetalleBloqueoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As System.Nullable(Of Date)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Me._Actualizacion.Equals(value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_NombreComitente", DbType:="Varchar(50)")>  _
	Public Property NombreComitente() As String
		Get
			Return Me._NombreComitente
		End Get
		Set
			If (String.Equals(Me._NombreComitente, value) = false) Then
				Me.OnNombreComitenteChanging(value)
				Me.SendPropertyChanging
				Me._NombreComitente = value
				Me.SendPropertyChanged("NombreComitente")
				Me.OnNombreComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreConsecutivo", DbType:="Varchar(20)")>  _
	Public Property strNombreConsecutivo() As String
		Get
			Return Me._strNombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._strNombreConsecutivo, value) = false) Then
				Me.OnstrNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._strNombreConsecutivo = value
				Me.SendPropertyChanged("strNombreConsecutivo")
				Me.OnstrNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDDocumento", DbType:="int")>  _
	Public Property lngIDDocumento() As System.Nullable(Of Integer)
		Get
			Return Me._lngIDDocumento
		End Get
		Set
			If (Me._lngIDDocumento.Equals(value) = false) Then
				Me.OnlngIDDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._lngIDDocumento = value
				Me.SendPropertyChanged("lngIDDocumento")
				Me.OnlngIDDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCompania", DbType:="Int NULL", CanBeNull:=true)>  _
	Public Property intIDCompania() As System.Nullable(Of System.Int32)
		Get
			Return Me._intIDCompania
		End Get
		Set
			If (Object.Equals(Me._intIDCompania, value) = false) Then
				Me.OnintIDCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._intIDCompania = value
				Me.SendPropertyChanged("intIDCompania")
				Me.OnintIDCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreCompania", DbType:="Varchar(50)")>  _
	Public Property strNombreCompania() As String
		Get
			Return Me._strNombreCompania
		End Get
		Set
			If (String.Equals(Me._strNombreCompania, value) = false) Then
				Me.OnstrNombreCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._strNombreCompania = value
				Me.SendPropertyChanged("strNombreCompania")
				Me.OnstrNombreCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEncargo", DbType:="Int NULL", CanBeNull:=true)>  _
	Public Property intIDEncargo() As System.Nullable(Of System.Int32)
		Get
			Return Me._intIDEncargo
		End Get
		Set
			If (Object.Equals(Me._intIDEncargo, value) = false) Then
				Me.OnintIDEncargoChanging(value)
				Me.SendPropertyChanging
				Me._intIDEncargo = value
				Me.SendPropertyChanged("intIDEncargo")
				Me.OnintIDEncargoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDetalleEncargo", DbType:="Varchar(100)")>  _
	Public Property strDetalleEncargo() As String
		Get
			Return Me._strDetalleEncargo
		End Get
		Set
			If (String.Equals(Me._strDetalleEncargo, value) = false) Then
				Me.OnstrDetalleEncargoChanging(value)
				Me.SendPropertyChanging
				Me._strDetalleEncargo = value
				Me.SendPropertyChanged("strDetalleEncargo")
				Me.OnstrDetalleEncargoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBancos_BancosNacionalesRelacionados")>  _
Partial Public Class Bancos_BancosNacionalesRelacionado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDBanco As Integer
	
	Private _IdBancoNacional As Integer
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _NombreBanco As String
	
	Private _IDBancosNacionalesR As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBancoChanged()
    End Sub
    Partial Private Sub OnIdBancoNacionalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBancoNacionalChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreBancoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreBancoChanged()
    End Sub
    Partial Private Sub OnIDBancosNacionalesRChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBancosNacionalesRChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDBanco", Storage:="_IDBanco", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDBanco() As Integer
		Get
			Return Me._IDBanco
		End Get
		Set
			If (Object.Equals(Me._IDBanco, value) = false) Then
				Me.OnIDBancoChanging(value)
				Me.SendPropertyChanging
				Me._IDBanco = value
				Me.SendPropertyChanged("IDBanco")
				Me.OnIDBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdBancoNacional", Storage:="_IdBancoNacional", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdBancoNacional() As Integer
		Get
			Return Me._IdBancoNacional
		End Get
		Set
			If (Object.Equals(Me._IdBancoNacional, value) = false) Then
				Me.OnIdBancoNacionalChanging(value)
				Me.SendPropertyChanging
				Me._IdBancoNacional = value
				Me.SendPropertyChanged("IdBancoNacional")
				Me.OnIdBancoNacionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreBanco", DbType:="Varchar(50)")>  _
	Public Property NombreBanco() As String
		Get
			Return Me._NombreBanco
		End Get
		Set
			If (String.Equals(Me._NombreBanco, value) = false) Then
				Me.OnNombreBancoChanging(value)
				Me.SendPropertyChanging
				Me._NombreBanco = value
				Me.SendPropertyChanged("NombreBanco")
				Me.OnNombreBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBancosNacionalesR", Storage:="_IDBancosNacionalesR", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDBancosNacionalesR() As Integer
		Get
			Return Me._IDBancosNacionalesR
		End Get
		Set
			If (Object.Equals(Me._IDBancosNacionalesR, value) = false) Then
				Me.OnIDBancosNacionalesRChanging(value)
				Me.SendPropertyChanging
				Me._IDBancosNacionalesR = value
				Me.SendPropertyChanged("IDBancosNacionalesR")
				Me.OnIDBancosNacionalesRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ListaBancosRelacionadosAsociados
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lngIdBancoNacional As Integer
	
	Private _NombreBanco As String
	
	Private _Chequear As Boolean
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIdBancoNacionalChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIdBancoNacionalChanged()
    End Sub
    Partial Private Sub OnNombreBancoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreBancoChanged()
    End Sub
    Partial Private Sub OnChequearChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChequearChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdBancoNacional", DbType:="int", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property lngIdBancoNacional() As Integer
		Get
			Return Me._lngIdBancoNacional
		End Get
		Set
			If (Object.Equals(Me._lngIdBancoNacional, value) = false) Then
				Me.OnlngIdBancoNacionalChanging(value)
				Me.SendPropertyChanging
				Me._lngIdBancoNacional = value
				Me.SendPropertyChanged("lngIdBancoNacional")
				Me.OnlngIdBancoNacionalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreBanco", DbType:="Varchar(50)")>  _
	Public Property NombreBanco() As String
		Get
			Return Me._NombreBanco
		End Get
		Set
			If (String.Equals(Me._NombreBanco, value) = false) Then
				Me.OnNombreBancoChanging(value)
				Me.SendPropertyChanging
				Me._NombreBanco = value
				Me.SendPropertyChanged("NombreBanco")
				Me.OnNombreBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chequear")>  _
	Public Property Chequear() As Boolean
		Get
			Return Me._Chequear
		End Get
		Set
			If ((Me._Chequear = value)  _
						= false) Then
				Me.OnChequearChanging(value)
				Me.SendPropertyChanging
				Me._Chequear = value
				Me.SendPropertyChanged("Chequear")
				Me.OnChequearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblComisionEspecies")>  _
Partial Public Class ComisionEspecie
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _IDEspecie As String
	
	Private _Comision As Decimal
	
	Private _PorcentajeComision As Decimal
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _NombreEspecie As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnPorcentajeComisionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPorcentajeComisionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnNombreEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnNombreEspecieChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property IDEspecie() As String
		Get
			Return Me._IDEspecie
		End Get
		Set
			If (String.Equals(Me._IDEspecie, value) = false) Then
				Me.OnIDEspecieChanging(value)
				Me.SendPropertyChanging
				Me._IDEspecie = value
				Me.SendPropertyChanged("IDEspecie")
				Me.OnIDEspecieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComision", Storage:="_Comision", DbType:="Decimal NOT NULL")>  _
	Public Property Comision() As Decimal
		Get
			Return Me._Comision
		End Get
		Set
			If ((Me._Comision = value)  _
						= false) Then
				Me.OnComisionChanging(value)
				Me.SendPropertyChanging
				Me._Comision = value
				Me.SendPropertyChanged("Comision")
				Me.OnComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeComision", Storage:="_PorcentajeComision", DbType:="Decimal NOT NULL")>  _
	Public Property PorcentajeComision() As Decimal
		Get
			Return Me._PorcentajeComision
		End Get
		Set
			If ((Me._PorcentajeComision = value)  _
						= false) Then
				Me.OnPorcentajeComisionChanging(value)
				Me.SendPropertyChanging
				Me._PorcentajeComision = value
				Me.SendPropertyChanged("PorcentajeComision")
				Me.OnPorcentajeComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEspecie", Storage:="_NombreEspecie", DbType:="Varchar(80)")>  _
	Public Property NombreEspecie() As String
		Get
			Return Me._NombreEspecie
		End Get
		Set
			If (String.Equals(Me._NombreEspecie, value) = false) Then
				Me.OnNombreEspecieChanging(value)
				Me.SendPropertyChanging
				Me._NombreEspecie = value
				Me.SendPropertyChanged("NombreEspecie")
				Me.OnNombreEspecieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblValidacionEliminarRegistro")>  _
Partial Public Class ValidacionEliminarRegistro
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PermitirRealizarAccion As Boolean
	
	Private _Mensaje As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPermitirRealizarAccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPermitirRealizarAccionChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermitirRealizarAccion", Storage:="_PermitirRealizarAccion", DbType:="BIT NOT NULL")>  _
	Public Property PermitirRealizarAccion() As Boolean
		Get
			Return Me._PermitirRealizarAccion
		End Get
		Set
			If ((Me._PermitirRealizarAccion = value)  _
						= false) Then
				Me.OnPermitirRealizarAccionChanging(value)
				Me.SendPropertyChanging
				Me._PermitirRealizarAccion = value
				Me.SendPropertyChanged("PermitirRealizarAccion")
				Me.OnPermitirRealizarAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(500) NULL")>  _
	Public Property Mensaje() As String
		Get
			Return Me._Mensaje
		End Get
		Set
			If (String.Equals(Me._Mensaje, value) = false) Then
				Me.OnMensajeChanging(value)
				Me.SendPropertyChanging
				Me._Mensaje = value
				Me.SendPropertyChanged("Mensaje")
				Me.OnMensajeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Notificacion.tblPlantillas")>  _
Partial Public Class Plantilla
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _intID As System.Nullable(Of Integer)
	
	Private _strCodigo As String
	
	Private _strMensaje As String
	
	Private _strUsuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnstrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnstrCodigoChanged()
    End Sub
    Partial Private Sub OnstrMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnstrMensajeChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property intID() As System.Nullable(Of Integer)
		Get
			Return Me._intID
		End Get
		Set
			If (Me._intID.Equals(value) = false) Then
				Me.OnintIDChanging(value)
				Me.SendPropertyChanging
				Me._intID = value
				Me.SendPropertyChanged("intID")
				Me.OnintIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodigo", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property strCodigo() As String
		Get
			Return Me._strCodigo
		End Get
		Set
			If (String.Equals(Me._strCodigo, value) = false) Then
				Me.OnstrCodigoChanging(value)
				Me.SendPropertyChanging
				Me._strCodigo = value
				Me.SendPropertyChanged("strCodigo")
				Me.OnstrCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMensaje", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property strMensaje() As String
		Get
			Return Me._strMensaje
		End Get
		Set
			If (String.Equals(Me._strMensaje, value) = false) Then
				Me.OnstrMensajeChanging(value)
				Me.SendPropertyChanging
				Me._strMensaje = value
				Me.SendPropertyChanged("strMensaje")
				Me.OnstrMensajeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VarChar(60) NOT NULL")>  _
	Public Property strUsuario() As String
		Get
			Return Me._strUsuario
		End Get
		Set
			If (String.Equals(Me._strUsuario, value) = false) Then
				Me.OnstrUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._strUsuario = value
				Me.SendPropertyChanged("strUsuario")
				Me.OnstrUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Notificacion.tblMetapalabras")>  _
Partial Public Class tblMetapalabras
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _strSistema As String
	
	Private _strPalabraClave As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnstrSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnstrSistemaChanged()
    End Sub
    Partial Private Sub OnstrPalabraClaveChanging(value As String)
    End Sub
    Partial Private Sub OnstrPalabraClaveChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strSistema", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property strSistema() As String
		Get
			Return Me._strSistema
		End Get
		Set
			If (String.Equals(Me._strSistema, value) = false) Then
				Me.OnstrSistemaChanging(value)
				Me.SendPropertyChanging
				Me._strSistema = value
				Me.SendPropertyChanged("strSistema")
				Me.OnstrSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPalabraClave", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property strPalabraClave() As String
		Get
			Return Me._strPalabraClave
		End Get
		Set
			If (String.Equals(Me._strPalabraClave, value) = false) Then
				Me.OnstrPalabraClaveChanging(value)
				Me.SendPropertyChanging
				Me._strPalabraClave = value
				Me.SendPropertyChanged("strPalabraClave")
				Me.OnstrPalabraClaveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Notificacion.tblPlantillaBanco")>  _
Partial Public Class PlantillaBanco
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _IdBanco As Integer
	
	Private _IdPlantilla As Integer
	
	Private _strDescripcion As String
	
	Private _strExtension As String
	
	Private _strNombre As String
	
	Private _strCodigo As String
	
	Private _InfoSesion As String
	
	Private _strUsuario As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBancoChanged()
    End Sub
    Partial Private Sub OnIdPlantillaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPlantillaChanged()
    End Sub
    Partial Private Sub OnstrDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionChanged()
    End Sub
    Partial Private Sub OnstrExtensionChanging(value As String)
    End Sub
    Partial Private Sub OnstrExtensionChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnstrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnstrCodigoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdBanco", DbType:="Int NOT NULL")>  _
	Public Property IdBanco() As Integer
		Get
			Return Me._IdBanco
		End Get
		Set
			If ((Me._IdBanco = value)  _
						= false) Then
				Me.OnIdBancoChanging(value)
				Me.SendPropertyChanging
				Me._IdBanco = value
				Me.SendPropertyChanged("IdBanco")
				Me.OnIdBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPlantilla", DbType:="Int NOT NULL")>  _
	Public Property IdPlantilla() As Integer
		Get
			Return Me._IdPlantilla
		End Get
		Set
			If ((Me._IdPlantilla = value)  _
						= false) Then
				Me.OnIdPlantillaChanging(value)
				Me.SendPropertyChanging
				Me._IdPlantilla = value
				Me.SendPropertyChanged("IdPlantilla")
				Me.OnIdPlantillaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="VarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property strDescripcion() As String
		Get
			Return Me._strDescripcion
		End Get
		Set
			If (String.Equals(Me._strDescripcion, value) = false) Then
				Me.OnstrDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._strDescripcion = value
				Me.SendPropertyChanged("strDescripcion")
				Me.OnstrDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strExtension", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property strExtension() As String
		Get
			Return Me._strExtension
		End Get
		Set
			If (String.Equals(Me._strExtension, value) = false) Then
				Me.OnstrExtensionChanging(value)
				Me.SendPropertyChanging
				Me._strExtension = value
				Me.SendPropertyChanged("strExtension")
				Me.OnstrExtensionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(50)")>  _
	Public Property strNombre() As String
		Get
			Return Me._strNombre
		End Get
		Set
			If (String.Equals(Me._strNombre, value) = false) Then
				Me.OnstrNombreChanging(value)
				Me.SendPropertyChanging
				Me._strNombre = value
				Me.SendPropertyChanged("strNombre")
				Me.OnstrNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodigo", DbType:="Varchar(30)")>  _
	Public Property strCodigo() As String
		Get
			Return Me._strCodigo
		End Get
		Set
			If (String.Equals(Me._strCodigo, value) = false) Then
				Me.OnstrCodigoChanging(value)
				Me.SendPropertyChanging
				Me._strCodigo = value
				Me.SendPropertyChanged("strCodigo")
				Me.OnstrCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario")>  _
	Public Property strUsuario() As String
		Get
			Return Me._strUsuario
		End Get
		Set
			If (String.Equals(Me._strUsuario, value) = false) Then
				Me.OnstrUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._strUsuario = value
				Me.SendPropertyChanged("strUsuario")
				Me.OnstrUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDestinoInversion")>  _
Partial Public Class DestinoInversion
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDDestinoInversion As Integer
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDDestino As Integer
	
	Private _NombreDestino As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDDestinoInversionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDestinoInversionChanged()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDDestinoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDestinoChanged()
    End Sub
    Partial Private Sub OnNombreDestinoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDestinoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDestinoInversion", Storage:="_IDDestinoInversion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDDestinoInversion() As Integer
		Get
			Return Me._IDDestinoInversion
		End Get
		Set
			If (Object.Equals(Me._IDDestinoInversion, value) = false) Then
				Me.OnIDDestinoInversionChanging(value)
				Me.SendPropertyChanging
				Me._IDDestinoInversion = value
				Me.SendPropertyChanged("IDDestinoInversion")
				Me.OnIDDestinoInversionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDestino", Storage:="_IDDestino", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDDestino() As Integer
		Get
			Return Me._IDDestino
		End Get
		Set
			If (Object.Equals(Me._IDDestino, value) = false) Then
				Me.OnIDDestinoChanging(value)
				Me.SendPropertyChanging
				Me._IDDestino = value
				Me.SendPropertyChanged("IDDestino")
				Me.OnIDDestinoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrNombreDestino", Storage:="_NombreDestino", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreDestino() As String
		Get
			Return Me._NombreDestino
		End Get
		Set
			If (String.Equals(Me._NombreDestino, value) = false) Then
				Me.OnNombreDestinoChanging(value)
				Me.SendPropertyChanging
				Me._NombreDestino = value
				Me.SendPropertyChanged("NombreDestino")
				Me.OnNombreDestinoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblAmortizacionesEspecies")>  _
Partial Public Class AmortizacionesEspeci
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdAmortizacion As Integer
	
	Private _FechaAmortizacion As Date
	
	Private _PorcentajeAmortizacion As Double
	
	Private _IdIsinFungible As Integer
	
	Private _FechaInicioVigencia As System.Nullable(Of Date)
	
	Private _strUsuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdAmortizacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAmortizacionChanged()
    End Sub
    Partial Private Sub OnFechaAmortizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaAmortizacionChanged()
    End Sub
    Partial Private Sub OnPorcentajeAmortizacionChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeAmortizacionChanged()
    End Sub
    Partial Private Sub OnIdIsinFungibleChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdIsinFungibleChanged()
    End Sub
    Partial Private Sub OnFechaInicioVigenciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaInicioVigenciaChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdAmortizacionEspecie", Storage:="_IdAmortizacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdAmortizacion() As Integer
		Get
			Return Me._IdAmortizacion
		End Get
		Set
			If ((Me._IdAmortizacion = value)  _
						= false) Then
				Me.OnIdAmortizacionChanging(value)
				Me.SendPropertyChanging
				Me._IdAmortizacion = value
				Me.SendPropertyChanged("IdAmortizacion")
				Me.OnIdAmortizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaAmortizacionEspecie", Storage:="_FechaAmortizacion", DbType:="DateTime NOT NULL")>  _
	Public Property FechaAmortizacion() As Date
		Get
			Return Me._FechaAmortizacion
		End Get
		Set
			If ((Me._FechaAmortizacion = value)  _
						= false) Then
				Me.OnFechaAmortizacionChanging(value)
				Me.SendPropertyChanging
				Me._FechaAmortizacion = value
				Me.SendPropertyChanged("FechaAmortizacion")
				Me.OnFechaAmortizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeAmortizacionEspecie", Storage:="_PorcentajeAmortizacion", DbType:="Float NOT NULL")>  _
	Public Property PorcentajeAmortizacion() As Double
		Get
			Return Me._PorcentajeAmortizacion
		End Get
		Set
			If ((Me._PorcentajeAmortizacion = value)  _
						= false) Then
				Me.OnPorcentajeAmortizacionChanging(value)
				Me.SendPropertyChanging
				Me._PorcentajeAmortizacion = value
				Me.SendPropertyChanged("PorcentajeAmortizacion")
				Me.OnPorcentajeAmortizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdIsinFungible", Storage:="_IdIsinFungible", DbType:="Int NOT NULL")>  _
	Public Property IdIsinFungible() As Integer
		Get
			Return Me._IdIsinFungible
		End Get
		Set
			If ((Me._IdIsinFungible = value)  _
						= false) Then
				Me.OnIdIsinFungibleChanging(value)
				Me.SendPropertyChanging
				Me._IdIsinFungible = value
				Me.SendPropertyChanged("IdIsinFungible")
				Me.OnIdIsinFungibleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmInicioVigencia", Storage:="_FechaInicioVigencia", DbType:="DateTime NULL")>  _
	Public Property FechaInicioVigencia() As System.Nullable(Of Date)
		Get
			Return Me._FechaInicioVigencia
		End Get
		Set
			If (Me._FechaInicioVigencia.Equals(value) = false) Then
				Me.OnFechaInicioVigenciaChanging(value)
				Me.SendPropertyChanging
				Me._FechaInicioVigencia = value
				Me.SendPropertyChanged("FechaInicioVigencia")
				Me.OnFechaInicioVigenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NULL")>  _
	Public Property strUsuario() As String
		Get
			Return Me._strUsuario
		End Get
		Set
			If (String.Equals(Me._strUsuario, value) = false) Then
				Me.OnstrUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._strUsuario = value
				Me.SendPropertyChanged("strUsuario")
				Me.OnstrUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClientesGruposEconomicos")>  _
Partial Public Class GrupoEconomicos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdGrupoEconomico As Integer
	
	Private _NombreGrupo As String
	
	Private _ComitenteLider As String
	
	Private _NombreLider As String
	
	Private _Usuario As String
	
	Private _IdsComitentes As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdGrupoEconomicoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdGrupoEconomicoChanged()
    End Sub
    Partial Private Sub OnNombreGrupoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreGrupoChanged()
    End Sub
    Partial Private Sub OnComitenteLiderChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteLiderChanged()
    End Sub
    Partial Private Sub OnNombreLiderChanging(value As String)
    End Sub
    Partial Private Sub OnNombreLiderChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdsComitentesChanging(value As String)
    End Sub
    Partial Private Sub OnIdsComitentesChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDGrupoEconomico", Storage:="_IdGrupoEconomico", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdGrupoEconomico() As Integer
		Get
			Return Me._IdGrupoEconomico
		End Get
		Set
			If ((Me._IdGrupoEconomico = value)  _
						= false) Then
				Me.OnIdGrupoEconomicoChanging(value)
				Me.SendPropertyChanging
				Me._IdGrupoEconomico = value
				Me.SendPropertyChanged("IdGrupoEconomico")
				Me.OnIdGrupoEconomicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreGrupo", Storage:="_NombreGrupo", DbType:="VarChar(50)")>  _
	Public Property NombreGrupo() As String
		Get
			Return Me._NombreGrupo
		End Get
		Set
			If (String.Equals(Me._NombreGrupo, value) = false) Then
				Me.OnNombreGrupoChanging(value)
				Me.SendPropertyChanging
				Me._NombreGrupo = value
				Me.SendPropertyChanged("NombreGrupo")
				Me.OnNombreGrupoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidComitenteLider", Storage:="_ComitenteLider", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property ComitenteLider() As String
		Get
			Return Me._ComitenteLider
		End Get
		Set
			If (String.Equals(Me._ComitenteLider, value) = false) Then
				Me.OnComitenteLiderChanging(value)
				Me.SendPropertyChanging
				Me._ComitenteLider = value
				Me.SendPropertyChanged("ComitenteLider")
				Me.OnComitenteLiderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreLider", DbType:="VarChar(50)")>  _
	Public Property NombreLider() As String
		Get
			Return Me._NombreLider
		End Get
		Set
			If (String.Equals(Me._NombreLider, value) = false) Then
				Me.OnNombreLiderChanging(value)
				Me.SendPropertyChanging
				Me._NombreLider = value
				Me.SendPropertyChanged("NombreLider")
				Me.OnNombreLiderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="VarChar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdsComitentes", Storage:="_IdsComitentes", DbType:="VarChar(MAX)")>  _
	Public Property IdsComitentes() As String
		Get
			Return Me._IdsComitentes
		End Get
		Set
			If (String.Equals(Me._IdsComitentes, value) = false) Then
				Me.OnIdsComitentesChanging(value)
				Me.SendPropertyChanging
				Me._IdsComitentes = value
				Me.SendPropertyChanged("IdsComitentes")
				Me.OnIdsComitentesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDetalleGruposEconomicos")>  _
Partial Public Class DetalleGrupoEconomico
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdComitente As String
	
	Private _Nombre As String
	
	Private _DireccionEnvio As String
	
	Private _IDReceptor As String
	
	Private _IDSucCliente As String
	
	Private _NroDocumento As String
	
	Private _ClienteLider As Boolean
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIdComitenteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDireccionEnvioChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionEnvioChanged()
    End Sub
    Partial Private Sub OnIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorChanged()
    End Sub
    Partial Private Sub OnIDSucClienteChanging(value As String)
    End Sub
    Partial Private Sub OnIDSucClienteChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnClienteLiderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnClienteLiderChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidComitente", Storage:="_IdComitente", DbType:="Char(17) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdComitente() As String
		Get
			Return Me._IdComitente
		End Get
		Set
			If (String.Equals(Me._IdComitente, value) = false) Then
				Me.OnIdComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IdComitente = value
				Me.SendPropertyChanged("IdComitente")
				Me.OnIdComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strnombre", Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccionEnvio", Storage:="_DireccionEnvio", DbType:="VarChar(82)")>  _
	Public Property DireccionEnvio() As String
		Get
			Return Me._DireccionEnvio
		End Get
		Set
			If (String.Equals(Me._DireccionEnvio, value) = false) Then
				Me.OnDireccionEnvioChanging(value)
				Me.SendPropertyChanging
				Me._DireccionEnvio = value
				Me.SendPropertyChanged("DireccionEnvio")
				Me.OnDireccionEnvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="VarChar(4)")>  _
	Public Property IDReceptor() As String
		Get
			Return Me._IDReceptor
		End Get
		Set
			If (String.Equals(Me._IDReceptor, value) = false) Then
				Me.OnIDReceptorChanging(value)
				Me.SendPropertyChanging
				Me._IDReceptor = value
				Me.SendPropertyChanged("IDReceptor")
				Me.OnIDReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDSucCliente", Storage:="_IDSucCliente", DbType:="VarChar(3)")>  _
	Public Property IDSucCliente() As String
		Get
			Return Me._IDSucCliente
		End Get
		Set
			If (String.Equals(Me._IDSucCliente, value) = false) Then
				Me.OnIDSucClienteChanging(value)
				Me.SendPropertyChanging
				Me._IDSucCliente = value
				Me.SendPropertyChanged("IDSucCliente")
				Me.OnIDSucClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="VarChar(50)")>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClienteLider", DbType:="Bit NOT NULL")>  _
	Public Property ClienteLider() As Boolean
		Get
			Return Me._ClienteLider
		End Get
		Set
			If ((Me._ClienteLider = value)  _
						= false) Then
				Me.OnClienteLiderChanging(value)
				Me.SendPropertyChanging
				Me._ClienteLider = value
				Me.SendPropertyChanged("ClienteLider")
				Me.OnClienteLiderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClasificacionRiesgos")>  _
Partial Public Class ClasificacionRiesgo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdClasificacionRiesgo As Integer
	
	Private _IdTipoClasificacionRiesgo As Integer
	
	Private _Prefijo As String
	
	Private _Detalle As String
	
	Private _GenerarAlerta As Boolean
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdClasificacionRiesgoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdClasificacionRiesgoChanged()
    End Sub
    Partial Private Sub OnIdTipoClasificacionRiesgoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdTipoClasificacionRiesgoChanged()
    End Sub
    Partial Private Sub OnPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoChanged()
    End Sub
    Partial Private Sub OnDetalleChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleChanged()
    End Sub
    Partial Private Sub OnGenerarAlertaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnGenerarAlertaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdClasificacionRiesgo", Storage:="_IdClasificacionRiesgo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdClasificacionRiesgo() As Integer
		Get
			Return Me._IdClasificacionRiesgo
		End Get
		Set
			If (Object.Equals(Me._IdClasificacionRiesgo, value) = false) Then
				Me.OnIdClasificacionRiesgoChanging(value)
				Me.SendPropertyChanging
				Me._IdClasificacionRiesgo = value
				Me.SendPropertyChanged("IdClasificacionRiesgo")
				Me.OnIdClasificacionRiesgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoClasificacionRiesgo", Storage:="_IdTipoClasificacionRiesgo", DbType:="Int", CanBeNull:=false)>  _
	Public Property IdTipoClasificacionRiesgo() As Integer
		Get
			Return Me._IdTipoClasificacionRiesgo
		End Get
		Set
			If (Object.Equals(Me._IdTipoClasificacionRiesgo, value) = false) Then
				Me.OnIdTipoClasificacionRiesgoChanging(value)
				Me.SendPropertyChanging
				Me._IdTipoClasificacionRiesgo = value
				Me.SendPropertyChanged("IdTipoClasificacionRiesgo")
				Me.OnIdTipoClasificacionRiesgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijo", Storage:="_Prefijo", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Prefijo() As String
		Get
			Return Me._Prefijo
		End Get
		Set
			If (String.Equals(Me._Prefijo, value) = false) Then
				Me.OnPrefijoChanging(value)
				Me.SendPropertyChanging
				Me._Prefijo = value
				Me.SendPropertyChanged("Prefijo")
				Me.OnPrefijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="Varchar(100)", CanBeNull:=false)>  _
	Public Property Detalle() As String
		Get
			Return Me._Detalle
		End Get
		Set
			If (String.Equals(Me._Detalle, value) = false) Then
				Me.OnDetalleChanging(value)
				Me.SendPropertyChanging
				Me._Detalle = value
				Me.SendPropertyChanged("Detalle")
				Me.OnDetalleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logGenerarAlerta", Storage:="_GenerarAlerta", DbType:="Bit NOT NULL")>  _
	Public Property GenerarAlerta() As Boolean
		Get
			Return Me._GenerarAlerta
		End Get
		Set
			If ((Me._GenerarAlerta = value)  _
						= false) Then
				Me.OnGenerarAlertaChanging(value)
				Me.SendPropertyChanging
				Me._GenerarAlerta = value
				Me.SendPropertyChanged("GenerarAlerta")
				Me.OnGenerarAlertaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClasificacionTipoCliente")>  _
Partial Public Class ClasificacionRiesgoTipoCliente
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Codigo As System.Nullable(Of System.int32)
	
	Private _ClasificacionTipoCliente As String
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnClasificacionTipoClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClasificacionTipoClienteChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigo", Storage:="_Codigo", AutoSync:=AutoSync.Always, DbType:="Int", CanBeNull:=true, IsDbGenerated:=true)>  _
	Public Property Codigo() As System.Nullable(Of System.int32)
		Get
			Return Me._Codigo
		End Get
		Set
			If (Object.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacionTipoCliente", Storage:="_ClasificacionTipoCliente", DbType:="Varchar(30)")>  _
	Public Property ClasificacionTipoCliente() As String
		Get
			Return Me._ClasificacionTipoCliente
		End Get
		Set
			If (String.Equals(Me._ClasificacionTipoCliente, value) = false) Then
				Me.OnClasificacionTipoClienteChanging(value)
				Me.SendPropertyChanging
				Me._ClasificacionTipoCliente = value
				Me.SendPropertyChanged("ClasificacionTipoCliente")
				Me.OnClasificacionTipoClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblComisionesBroker")>  _
Partial Public Class ComisionesBroker
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDLista As Integer
	
	Private _Descripcion As String
	
	Private _Retorno As String
	
	Private _ValorComision As System.Nullable(Of Double)
	
	Private _Email As String
	
	Private _Equivalencia As String
	
	Private _FechaActualizacion As System.Nullable(Of Date)
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDListaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDListaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoChanged()
    End Sub
    Partial Private Sub OnValorComisionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorComisionChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnEquivalenciaChanging(value As String)
    End Sub
    Partial Private Sub OnEquivalenciaChanged()
    End Sub
    Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLista", Storage:="_IDLista", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDLista() As Integer
		Get
			Return Me._IDLista
		End Get
		Set
			If (Object.Equals(Me._IDLista, value) = false) Then
				Me.OnIDListaChanging(value)
				Me.SendPropertyChanging
				Me._IDLista = value
				Me.SendPropertyChanged("IDLista")
				Me.OnIDListaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetorno", Storage:="_Retorno", DbType:="Varchar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property Retorno() As String
		Get
			Return Me._Retorno
		End Get
		Set
			If (String.Equals(Me._Retorno, value) = false) Then
				Me.OnRetornoChanging(value)
				Me.SendPropertyChanging
				Me._Retorno = value
				Me.SendPropertyChanged("Retorno")
				Me.OnRetornoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorComision", Storage:="_ValorComision", DbType:="Float")>  _
	Public Property ValorComision() As System.Nullable(Of Double)
		Get
			Return Me._ValorComision
		End Get
		Set
			If (Me._ValorComision.Equals(value) = false) Then
				Me.OnValorComisionChanging(value)
				Me.SendPropertyChanging
				Me._ValorComision = value
				Me.SendPropertyChanged("ValorComision")
				Me.OnValorComisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEmail", Storage:="_Email", DbType:="Varchar(200)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEquivalencia", Storage:="_Equivalencia", DbType:="Varchar(100)")>  _
	Public Property Equivalencia() As String
		Get
			Return Me._Equivalencia
		End Get
		Set
			If (String.Equals(Me._Equivalencia, value) = false) Then
				Me.OnEquivalenciaChanging(value)
				Me.SendPropertyChanging
				Me._Equivalencia = value
				Me.SendPropertyChanged("Equivalencia")
				Me.OnEquivalenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime")>  _
	Public Property FechaActualizacion() As System.Nullable(Of Date)
		Get
			Return Me._FechaActualizacion
		End Get
		Set
			If (Me._FechaActualizacion.Equals(value) = false) Then
				Me.OnFechaActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._FechaActualizacion = value
				Me.SendPropertyChanged("FechaActualizacion")
				Me.OnFechaActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPerfilesRiesgo")>  _
Partial Public Class PerfilesRiesgo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PerfilRiesgo As Integer
	
	Private _TipoPerfil As Integer
	
	Private _DescTipoPerfil As String
	
	Private _IDDescPerfil As String
	
	Private _DescPerfil As String
	
	Private _CalificacionPerfil As Decimal
	
	Private _Actualizacion As System.Nullable(Of Date)
	
	Private _Usuario As String
	
	Private _Infosesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPerfilRiesgoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPerfilRiesgoChanged()
    End Sub
    Partial Private Sub OnTipoPerfilChanging(value As Integer)
    End Sub
    Partial Private Sub OnTipoPerfilChanged()
    End Sub
    Partial Private Sub OnDescTipoPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnDescTipoPerfilChanged()
    End Sub
    Partial Private Sub OnIDDescPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnIDDescPerfilChanged()
    End Sub
    Partial Private Sub OnDescPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnDescPerfilChanged()
    End Sub
    Partial Private Sub OnCalificacionPerfilChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCalificacionPerfilChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfosesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfosesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDPerfilRiesgo", Storage:="_PerfilRiesgo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PerfilRiesgo() As Integer
		Get
			Return Me._PerfilRiesgo
		End Get
		Set
			If (Object.Equals(Me._PerfilRiesgo, value) = false) Then
				Me.OnPerfilRiesgoChanging(value)
				Me.SendPropertyChanging
				Me._PerfilRiesgo = value
				Me.SendPropertyChanged("PerfilRiesgo")
				Me.OnPerfilRiesgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDTipoPerfil", Storage:="_TipoPerfil", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property TipoPerfil() As Integer
		Get
			Return Me._TipoPerfil
		End Get
		Set
			If (Object.Equals(Me._TipoPerfil, value) = false) Then
				Me.OnTipoPerfilChanging(value)
				Me.SendPropertyChanging
				Me._TipoPerfil = value
				Me.SendPropertyChanged("TipoPerfil")
				Me.OnTipoPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipoPerfil", DbType:="Varchar(200) NULL")>  _
	Public Property DescTipoPerfil() As String
		Get
			Return Me._DescTipoPerfil
		End Get
		Set
			If (String.Equals(Me._DescTipoPerfil, value) = false) Then
				Me.OnDescTipoPerfilChanging(value)
				Me.SendPropertyChanging
				Me._DescTipoPerfil = value
				Me.SendPropertyChanged("DescTipoPerfil")
				Me.OnDescTipoPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDescPerfil", Storage:="_IDDescPerfil", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property IDDescPerfil() As String
		Get
			Return Me._IDDescPerfil
		End Get
		Set
			If (String.Equals(Me._IDDescPerfil, value) = false) Then
				Me.OnIDDescPerfilChanging(value)
				Me.SendPropertyChanging
				Me._IDDescPerfil = value
				Me.SendPropertyChanged("IDDescPerfil")
				Me.OnIDDescPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescPerfil", DbType:="Varchar(200) NULL")>  _
	Public Property DescPerfil() As String
		Get
			Return Me._DescPerfil
		End Get
		Set
			If (String.Equals(Me._DescPerfil, value) = false) Then
				Me.OnDescPerfilChanging(value)
				Me.SendPropertyChanging
				Me._DescPerfil = value
				Me.SendPropertyChanged("DescPerfil")
				Me.OnDescPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numCalificacionPerfil", Storage:="_CalificacionPerfil", DbType:="decimal(5,2) NOT NULL", CanBeNull:=false)>  _
	Public Property CalificacionPerfil() As Decimal
		Get
			Return Me._CalificacionPerfil
		End Get
		Set
			If (Object.Equals(Me._CalificacionPerfil, value) = false) Then
				Me.OnCalificacionPerfilChanging(value)
				Me.SendPropertyChanging
				Me._CalificacionPerfil = value
				Me.SendPropertyChanged("CalificacionPerfil")
				Me.OnCalificacionPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As System.Nullable(Of Date)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Me._Actualizacion.Equals(value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Infosesion", DbType:="Varchar(1000)")>  _
	Public Property Infosesion() As String
		Get
			Return Me._Infosesion
		End Get
		Set
			If (String.Equals(Me._Infosesion, value) = false) Then
				Me.OnInfosesionChanging(value)
				Me.SendPropertyChanging
				Me._Infosesion = value
				Me.SendPropertyChanged("Infosesion")
				Me.OnInfosesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCarterasColectivasClientes_GMF")>  _
Partial Public Class CarterasColectivasClientesGMF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCarterasColectivasClientesGMF As Integer
	
	Private _IDComitente As String
	
	Private _TipoIdentificacion As String
	
	Private _NroDocumento As String
	
	Private _Nombre As String
	
	Private _Usuario As String
	
	Private _Actualizacion As System.Nullable(Of System.DateTime)
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCarterasColectivasClientesGMFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCarterasColectivasClientesGMFChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of System.DateTime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCarterasColectivasClientesGMF", Storage:="_IDCarterasColectivasClientesGMF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCarterasColectivasClientesGMF() As Integer
		Get
			Return Me._IDCarterasColectivasClientesGMF
		End Get
		Set
			If (Object.Equals(Me._IDCarterasColectivasClientesGMF, value) = false) Then
				Me.OnIDCarterasColectivasClientesGMFChanging(value)
				Me.SendPropertyChanging
				Me._IDCarterasColectivasClientesGMF = value
				Me.SendPropertyChanged("IDCarterasColectivasClientesGMF")
				Me.OnIDCarterasColectivasClientesGMFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17)")>  _
	Public Property IDComitente() As String
		Get
			Return Me._IDComitente
		End Get
		Set
			If (String.Equals(Me._IDComitente, value) = false) Then
				Me.OnIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente = value
				Me.SendPropertyChanged("IDComitente")
				Me.OnIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(100)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NULL", CanBeNull:=true)>  _
	Public Property Actualizacion() As System.Nullable(Of System.DateTime)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Object.Equals(Me._Actualizacion, value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEmpleadosSistemas")>  _
Partial Public Class EmpleadoSistema
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _IDEmpleado As Integer
	
	Private _Sistema As String
	
	Private _CodigoMapeo As String
	
	Private _Valor As String
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
	Private _Empleados As EntityRef(Of Empleado)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDEmpleadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEmpleadoChanged()
    End Sub
    Partial Private Sub OnSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnCodigoMapeoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoMapeoChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Empleados = CType(Nothing, EntityRef(Of Empleado))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEmpleado", Storage:="_IDEmpleado", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDEmpleado() As Integer
		Get
			Return Me._IDEmpleado
		End Get
		Set
			If (Object.Equals(Me._IDEmpleado, value) = false) Then
				Me.OnIDEmpleadoChanging(value)
				Me.SendPropertyChanging
				Me._IDEmpleado = value
				Me.SendPropertyChanged("IDEmpleado")
				Me.OnIDEmpleadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSistema", Storage:="_Sistema", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
	Public Property Sistema() As String
		Get
			Return Me._Sistema
		End Get
		Set
			If (String.Equals(Me._Sistema, value) = false) Then
				Me.OnSistemaChanging(value)
				Me.SendPropertyChanging
				Me._Sistema = value
				Me.SendPropertyChanged("Sistema")
				Me.OnSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoMapeo", Storage:="_CodigoMapeo", DbType:="Varchar(80)")>  _
	Public Property CodigoMapeo() As String
		Get
			Return Me._CodigoMapeo
		End Get
		Set
			If (String.Equals(Me._CodigoMapeo, value) = false) Then
				Me.OnCodigoMapeoChanging(value)
				Me.SendPropertyChanging
				Me._CodigoMapeo = value
				Me.SendPropertyChanged("CodigoMapeo")
				Me.OnCodigoMapeoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(30)")>  _
	Public Property Valor() As String
		Get
			Return Me._Valor
		End Get
		Set
			If (String.Equals(Me._Valor, value) = false) Then
				Me.OnValorChanging(value)
				Me.SendPropertyChanging
				Me._Valor = value
				Me.SendPropertyChanged("Valor")
				Me.OnValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Empleado_EmpleadoSistema", Storage:="_Empleados", ThisKey:="IDEmpleado", OtherKey:="IDEmpleado", IsForeignKey:=true)>  _
	Public Property Empleados() As Empleado
		Get
			Return Me._Empleados.Entity
		End Get
		Set
			Dim previousValue As Empleado = Me._Empleados.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Empleados.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Empleados.Entity = Nothing
					previousValue.EmpleadosSistemas.Remove(Me)
				End If
				Me._Empleados.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EmpleadosSistemas.Add(Me)
					Me._IDEmpleado = value.IDEmpleado
				Else
					Me._IDEmpleado = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Empleados")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class PermisosFormatosExportar
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Valor As String
	
	Private _Sistema As String
	
	Private _DescripcionSistema As String
	
	Private _Descripcion As String
	
	Private _Seleccionado As Boolean
	
	Private _UsuarioInsercion As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnDescripcionSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionSistemaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnSeleccionadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSeleccionadoChanged()
    End Sub
    Partial Private Sub OnUsuarioInsercionChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioInsercionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLista", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(100)NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Valor() As String
		Get
			Return Me._Valor
		End Get
		Set
			If (String.Equals(Me._Valor, value) = false) Then
				Me.OnValorChanging(value)
				Me.SendPropertyChanging
				Me._Valor = value
				Me.SendPropertyChanged("Valor")
				Me.OnValorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSistema", Storage:="_Sistema", DbType:="Varchar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Sistema() As String
		Get
			Return Me._Sistema
		End Get
		Set
			If (String.Equals(Me._Sistema, value) = false) Then
				Me.OnSistemaChanging(value)
				Me.SendPropertyChanging
				Me._Sistema = value
				Me.SendPropertyChanged("Sistema")
				Me.OnSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionSistema", Storage:="_DescripcionSistema", DbType:="Varchar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property DescripcionSistema() As String
		Get
			Return Me._DescripcionSistema
		End Get
		Set
			If (String.Equals(Me._DescripcionSistema, value) = false) Then
				Me.OnDescripcionSistemaChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionSistema = value
				Me.SendPropertyChanged("DescripcionSistema")
				Me.OnDescripcionSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionado", Storage:="_Seleccionado", DbType:="bit NOT NULL")>  _
	Public Property Seleccionado() As Boolean
		Get
			Return Me._Seleccionado
		End Get
		Set
			If ((Me._Seleccionado = value)  _
						= false) Then
				Me.OnSeleccionadoChanging(value)
				Me.SendPropertyChanging
				Me._Seleccionado = value
				Me.SendPropertyChanged("Seleccionado")
				Me.OnSeleccionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_UsuarioInsercion", DbType:="Varchar(60)")>  _
	Public Property UsuarioInsercion() As String
		Get
			Return Me._UsuarioInsercion
		End Get
		Set
			If (String.Equals(Me._UsuarioInsercion, value) = false) Then
				Me.OnUsuarioInsercionChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioInsercion = value
				Me.SendPropertyChanged("UsuarioInsercion")
				Me.OnUsuarioInsercionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class UsuariosPermisosFormatos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Login As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Login() As String
		Get
			Return Me._Login
		End Get
		Set
			If (String.Equals(Me._Login, value) = false) Then
				Me.OnLoginChanging(value)
				Me.SendPropertyChanging
				Me._Login = value
				Me.SendPropertyChanged("Login")
				Me.OnLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConfiguracionReceptores")>  _
Partial Public Class ConfiguracionReceptores
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _Sucursal As System.Nullable(Of System.int32)
	
	Private _Codigo As String
	
	Private _Nombre As String
	
	Private _Activo As Boolean
	
	Private _Tipo As String
	
	Private _Estado As System.Nullable(Of Date)
	
	Private _Centro_costos As String
	
	Private _Login As String
	
	Private _SucursalContable As String
	
	Private _Lider_Mesa As Boolean
	
	Private _Codigo_Mesa As Integer
	
	Private _Numero_Documento As String
	
	Private _E_Mail As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IdOficina As Integer
	
	Private _IdReceptor As Integer
	
	Private _NumTrader As String
	
	Private _CodSetFX As String
	
	Private _RepresentanteLegalOtrosNegocios As System.Nullable(Of Boolean)
	
	Private _IdReceptores As Integer
	
	Private _InfoSesion As String
	
	Private _Accion As System.Nullable(Of Char)
	
	Private _Existe As Integer
	
	Private _IDReceptorSafyr As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnSucursalChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnSucursalChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnCentro_costosChanging(value As String)
    End Sub
    Partial Private Sub OnCentro_costosChanged()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnSucursalContableChanging(value As String)
    End Sub
    Partial Private Sub OnSucursalContableChanged()
    End Sub
    Partial Private Sub OnLider_MesaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLider_MesaChanged()
    End Sub
    Partial Private Sub OnCodigo_MesaChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigo_MesaChanged()
    End Sub
    Partial Private Sub OnNumero_DocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNumero_DocumentoChanged()
    End Sub
    Partial Private Sub OnE_MailChanging(value As String)
    End Sub
    Partial Private Sub OnE_MailChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdOficinaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdOficinaChanged()
    End Sub
    Partial Private Sub OnIdReceptorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReceptorChanged()
    End Sub
    Partial Private Sub OnNumTraderChanging(value As String)
    End Sub
    Partial Private Sub OnNumTraderChanged()
    End Sub
    Partial Private Sub OnCodSetFXChanging(value As String)
    End Sub
    Partial Private Sub OnCodSetFXChanged()
    End Sub
    Partial Private Sub OnRepresentanteLegalOtrosNegociosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRepresentanteLegalOtrosNegociosChanged()
    End Sub
    Partial Private Sub OnIdReceptoresChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReceptoresChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnExisteChanging(value As Integer)
    End Sub
    Partial Private Sub OnExisteChanged()
    End Sub
    Partial Private Sub OnIDReceptorSafyrChanging(value As String)
    End Sub
    Partial Private Sub OnIDReceptorSafyrChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSucReceptor", Storage:="_Sucursal", DbType:="Int", CanBeNull:=true)>  _
	Public Property Sucursal() As System.Nullable(Of System.int32)
		Get
			Return Me._Sucursal
		End Get
		Set
			If (Object.Equals(Me._Sucursal, value) = false) Then
				Me.OnSucursalChanging(value)
				Me.SendPropertyChanging
				Me._Sucursal = value
				Me.SendPropertyChanged("Sucursal")
				Me.OnSucursalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strID", Storage:="_Codigo", DbType:="Varchar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoReceptor", Storage:="_Tipo", DbType:="Varchar(1)")>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEstado", Storage:="_Estado", DbType:="Datetime")>  _
	Public Property Estado() As System.Nullable(Of Date)
		Get
			Return Me._Estado
		End Get
		Set
			If (Me._Estado.Equals(value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCcostos", Storage:="_Centro_costos", DbType:="Varchar(20)")>  _
	Public Property Centro_costos() As String
		Get
			Return Me._Centro_costos
		End Get
		Set
			If (String.Equals(Me._Centro_costos, value) = false) Then
				Me.OnCentro_costosChanging(value)
				Me.SendPropertyChanging
				Me._Centro_costos = value
				Me.SendPropertyChanged("Centro_costos")
				Me.OnCentro_costosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(50)")>  _
	Public Property Login() As String
		Get
			Return Me._Login
		End Get
		Set
			If (String.Equals(Me._Login, value) = false) Then
				Me.OnLoginChanging(value)
				Me.SendPropertyChanging
				Me._Login = value
				Me.SendPropertyChanged("Login")
				Me.OnLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="pstrSucursalContable", Storage:="_SucursalContable", DbType:="Varchar(2)")>  _
	Public Property SucursalContable() As String
		Get
			Return Me._SucursalContable
		End Get
		Set
			If (String.Equals(Me._SucursalContable, value) = false) Then
				Me.OnSucursalContableChanging(value)
				Me.SendPropertyChanging
				Me._SucursalContable = value
				Me.SendPropertyChanged("SucursalContable")
				Me.OnSucursalContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLiderMesa", Storage:="_Lider_Mesa", DbType:="Bit NOT NULL")>  _
	Public Property Lider_Mesa() As Boolean
		Get
			Return Me._Lider_Mesa
		End Get
		Set
			If ((Me._Lider_Mesa = value)  _
						= false) Then
				Me.OnLider_MesaChanging(value)
				Me.SendPropertyChanging
				Me._Lider_Mesa = value
				Me.SendPropertyChanged("Lider_Mesa")
				Me.OnLider_MesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdMesa", Storage:="_Codigo_Mesa", DbType:="Int", CanBeNull:=true)>  _
	Public Property Codigo_Mesa() As Integer
		Get
			Return Me._Codigo_Mesa
		End Get
		Set
			If (Object.Equals(Me._Codigo_Mesa, value) = false) Then
				Me.OnCodigo_MesaChanging(value)
				Me.SendPropertyChanging
				Me._Codigo_Mesa = value
				Me.SendPropertyChanged("Codigo_Mesa")
				Me.OnCodigo_MesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_Numero_Documento", DbType:="Varchar(15)")>  _
	Public Property Numero_Documento() As String
		Get
			Return Me._Numero_Documento
		End Get
		Set
			If (String.Equals(Me._Numero_Documento, value) = false) Then
				Me.OnNumero_DocumentoChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Documento = value
				Me.SendPropertyChanged("Numero_Documento")
				Me.OnNumero_DocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEMail", Storage:="_E_Mail", DbType:="Varchar(50)")>  _
	Public Property E_Mail() As String
		Get
			Return Me._E_Mail
		End Get
		Set
			If (String.Equals(Me._E_Mail, value) = false) Then
				Me.OnE_MailChanging(value)
				Me.SendPropertyChanging
				Me._E_Mail = value
				Me.SendPropertyChanged("E_Mail")
				Me.OnE_MailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOficina", Storage:="_IdOficina", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdOficina() As Integer
		Get
			Return Me._IdOficina
		End Get
		Set
			If (Object.Equals(Me._IdOficina, value) = false) Then
				Me.OnIdOficinaChanging(value)
				Me.SendPropertyChanging
				Me._IdOficina = value
				Me.SendPropertyChanged("IdOficina")
				Me.OnIdOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdReceptor", Storage:="_IdReceptor", DbType:="Int", CanBeNull:=true)>  _
	Public Property IdReceptor() As Integer
		Get
			Return Me._IdReceptor
		End Get
		Set
			If (Object.Equals(Me._IdReceptor, value) = false) Then
				Me.OnIdReceptorChanging(value)
				Me.SendPropertyChanging
				Me._IdReceptor = value
				Me.SendPropertyChanged("IdReceptor")
				Me.OnIdReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNumTrader", Storage:="_NumTrader", DbType:="Varchar(3)")>  _
	Public Property NumTrader() As String
		Get
			Return Me._NumTrader
		End Get
		Set
			If (String.Equals(Me._NumTrader, value) = false) Then
				Me.OnNumTraderChanging(value)
				Me.SendPropertyChanging
				Me._NumTrader = value
				Me.SendPropertyChanged("NumTrader")
				Me.OnNumTraderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodSetFX", Storage:="_CodSetFX", DbType:="Varchar(13)")>  _
	Public Property CodSetFX() As String
		Get
			Return Me._CodSetFX
		End Get
		Set
			If (String.Equals(Me._CodSetFX, value) = false) Then
				Me.OnCodSetFXChanging(value)
				Me.SendPropertyChanging
				Me._CodSetFX = value
				Me.SendPropertyChanged("CodSetFX")
				Me.OnCodSetFXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRepresentanteLegalOtrosNegocios", Storage:="_RepresentanteLegalOtrosNegocios", DbType:="Bit")>  _
	Public Property RepresentanteLegalOtrosNegocios() As System.Nullable(Of Boolean)
		Get
			Return Me._RepresentanteLegalOtrosNegocios
		End Get
		Set
			If (Me._RepresentanteLegalOtrosNegocios.Equals(value) = false) Then
				Me.OnRepresentanteLegalOtrosNegociosChanging(value)
				Me.SendPropertyChanging
				Me._RepresentanteLegalOtrosNegocios = value
				Me.SendPropertyChanged("RepresentanteLegalOtrosNegocios")
				Me.OnRepresentanteLegalOtrosNegociosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdReceptores", Storage:="_IdReceptores", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdReceptores() As Integer
		Get
			Return Me._IdReceptores
		End Get
		Set
			If (Object.Equals(Me._IdReceptores, value) = false) Then
				Me.OnIdReceptoresChanging(value)
				Me.SendPropertyChanging
				Me._IdReceptores = value
				Me.SendPropertyChanged("IdReceptores")
				Me.OnIdReceptoresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accion", DbType:="Char(1)")>  _
	Public Property Accion() As System.Nullable(Of Char)
		Get
			Return Me._Accion
		End Get
		Set
			If (Me._Accion.Equals(value) = false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Existe", DbType:="Int", CanBeNull:=true)>  _
	Public Property Existe() As Integer
		Get
			Return Me._Existe
		End Get
		Set
			If (Object.Equals(Me._Existe, value) = false) Then
				Me.OnExisteChanging(value)
				Me.SendPropertyChanging
				Me._Existe = value
				Me.SendPropertyChanged("Existe")
				Me.OnExisteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptorSafyr", Storage:="_IDReceptorSafyr", DbType:="Varchar(12)")>  _
	Public Property IDReceptorSafyr() As String
		Get
			Return Me._IDReceptorSafyr
		End Get
		Set
			If (String.Equals(Me._IDReceptorSafyr, value) = false) Then
				Me.OnIDReceptorSafyrChanging(value)
				Me.SendPropertyChanging
				Me._IDReceptorSafyr = value
				Me.SendPropertyChanged("IDReceptorSafyr")
				Me.OnIDReceptorSafyrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPaises")>  _
Partial Public Class Paise
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _Codigo_ISO As String
	
	Private _Actualizacion As Date
	
	Private _Msg As String
	
	Private _Usuario As String
	
	Private _IDPais As Integer
	
	Private _CodigoDane As String
	
	Private _NivelRiesgo As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCodigo_ISOChanging(value As String)
    End Sub
    Partial Private Sub OnCodigo_ISOChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnCodigoDaneChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoDaneChanged()
    End Sub
    Partial Private Sub OnNivelRiesgoChanging(value As Integer)
    End Sub
    Partial Private Sub OnNivelRiesgoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo_ISO", Storage:="_Codigo_ISO", DbType:="Varchar(3)")>  _
	Public Property Codigo_ISO() As String
		Get
			Return Me._Codigo_ISO
		End Get
		Set
			If (String.Equals(Me._Codigo_ISO, value) = false) Then
				Me.OnCodigo_ISOChanging(value)
				Me.SendPropertyChanging
				Me._Codigo_ISO = value
				Me.SendPropertyChanged("Codigo_ISO")
				Me.OnCodigo_ISOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDPais", Storage:="_IDPais", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDPais() As Integer
		Get
			Return Me._IDPais
		End Get
		Set
			If (Object.Equals(Me._IDPais, value) = false) Then
				Me.OnIDPaisChanging(value)
				Me.SendPropertyChanging
				Me._IDPais = value
				Me.SendPropertyChanged("IDPais")
				Me.OnIDPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoDane", Storage:="_CodigoDane", DbType:="Nvarchar(100)")>  _
	Public Property CodigoDane() As String
		Get
			Return Me._CodigoDane
		End Get
		Set
			If (String.Equals(Me._CodigoDane, value) = false) Then
				Me.OnCodigoDaneChanging(value)
				Me.SendPropertyChanging
				Me._CodigoDane = value
				Me.SendPropertyChanged("CodigoDane")
				Me.OnCodigoDaneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdClasificacionRiesgo", Storage:="_NivelRiesgo", DbType:="Int", CanBeNull:=true)>  _
	Public Property NivelRiesgo() As Integer
		Get
			Return Me._NivelRiesgo
		End Get
		Set
			If (Object.Equals(Me._NivelRiesgo, value) = false) Then
				Me.OnNivelRiesgoChanging(value)
				Me.SendPropertyChanging
				Me._NivelRiesgo = value
				Me.SendPropertyChanged("NivelRiesgo")
				Me.OnNivelRiesgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDepartamentos")>  _
Partial Public Class Departamento
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDPais As Integer
	
	Private _ID As Integer
	
	Private _Nombre As String
	
	Private _Codigo_DaneDEPTO As String
	
	Private _Actualizacion As Date
	
	Private _Usuario As String
	
	Private _IDDepartamento As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCodigo_DaneDEPTOChanging(value As String)
    End Sub
    Partial Private Sub OnCodigo_DaneDEPTOChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDDepartamentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPais", Storage:="_IDPais", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDPais() As Integer
		Get
			Return Me._IDPais
		End Get
		Set
			If (Object.Equals(Me._IDPais, value) = false) Then
				Me.OnIDPaisChanging(value)
				Me.SendPropertyChanging
				Me._IDPais = value
				Me.SendPropertyChanged("IDPais")
				Me.OnIDPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo_DaneDEPTO", Storage:="_Codigo_DaneDEPTO", DbType:="Varchar(2)")>  _
	Public Property Codigo_DaneDEPTO() As String
		Get
			Return Me._Codigo_DaneDEPTO
		End Get
		Set
			If (String.Equals(Me._Codigo_DaneDEPTO, value) = false) Then
				Me.OnCodigo_DaneDEPTOChanging(value)
				Me.SendPropertyChanging
				Me._Codigo_DaneDEPTO = value
				Me.SendPropertyChanged("Codigo_DaneDEPTO")
				Me.OnCodigo_DaneDEPTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDepartamento", Storage:="_IDDepartamento", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDDepartamento() As Integer
		Get
			Return Me._IDDepartamento
		End Get
		Set
			If (Object.Equals(Me._IDDepartamento, value) = false) Then
				Me.OnIDDepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._IDDepartamento = value
				Me.SendPropertyChanged("IDDepartamento")
				Me.OnIDDepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCiudades")>  _
Partial Public Class Ciudade
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComisionista As Integer
	
	Private _IDSucComisionista As Integer
	
	Private _IDCodigo As Integer
	
	Private _Nombre As String
	
	Private _EsCapital As Boolean
	
	Private _IDdepartamento As Integer
	
	Private _CodigoDANE As String
	
	Private _Actualizacion As Date
	
	Private _NombreDepartamento As String
	
	Private _Msg As String
	
	Private _Usuario As String
	
	Private _IDCiudad As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnEsCapitalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsCapitalChanged()
    End Sub
    Partial Private Sub OnIDdepartamentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDdepartamentoChanged()
    End Sub
    Partial Private Sub OnCodigoDANEChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoDANEChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnNombreDepartamentoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDepartamentoChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCiudadChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCiudadChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If (Object.Equals(Me._IDComisionista, value) = false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDSucComisionista() As Integer
		Get
			Return Me._IDSucComisionista
		End Get
		Set
			If (Object.Equals(Me._IDSucComisionista, value) = false) Then
				Me.OnIDSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDSucComisionista = value
				Me.SendPropertyChanged("IDSucComisionista")
				Me.OnIDSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDCodigo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDCodigo() As Integer
		Get
			Return Me._IDCodigo
		End Get
		Set
			If (Object.Equals(Me._IDCodigo, value) = false) Then
				Me.OnIDCodigoChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigo = value
				Me.SendPropertyChanged("IDCodigo")
				Me.OnIDCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsCapital", Storage:="_EsCapital", DbType:="Bit NOT NULL")>  _
	Public Property EsCapital() As Boolean
		Get
			Return Me._EsCapital
		End Get
		Set
			If ((Me._EsCapital = value)  _
						= false) Then
				Me.OnEsCapitalChanging(value)
				Me.SendPropertyChanging
				Me._EsCapital = value
				Me.SendPropertyChanged("EsCapital")
				Me.OnEsCapitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDdepartamento", Storage:="_IDdepartamento", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDdepartamento() As Integer
		Get
			Return Me._IDdepartamento
		End Get
		Set
			If (Object.Equals(Me._IDdepartamento, value) = false) Then
				Me.OnIDdepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._IDdepartamento = value
				Me.SendPropertyChanged("IDdepartamento")
				Me.OnIDdepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo_DANE", Storage:="_CodigoDANE", DbType:="Varchar(6)")>  _
	Public Property CodigoDANE() As String
		Get
			Return Me._CodigoDANE
		End Get
		Set
			If (String.Equals(Me._CodigoDANE, value) = false) Then
				Me.OnCodigoDANEChanging(value)
				Me.SendPropertyChanging
				Me._CodigoDANE = value
				Me.SendPropertyChanged("CodigoDANE")
				Me.OnCodigoDANEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreDepartamento", DbType:="Varchar(40)")>  _
	Public Property NombreDepartamento() As String
		Get
			Return Me._NombreDepartamento
		End Get
		Set
			If (String.Equals(Me._NombreDepartamento, value) = false) Then
				Me.OnNombreDepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._NombreDepartamento = value
				Me.SendPropertyChanged("NombreDepartamento")
				Me.OnNombreDepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
	Public Property Msg() As String
		Get
			Return Me._Msg
		End Get
		Set
			If (String.Equals(Me._Msg, value) = false) Then
				Me.OnMsgChanging(value)
				Me.SendPropertyChanging
				Me._Msg = value
				Me.SendPropertyChanged("Msg")
				Me.OnMsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCiudad", Storage:="_IDCiudad", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCiudad() As Integer
		Get
			Return Me._IDCiudad
		End Get
		Set
			If (Object.Equals(Me._IDCiudad, value) = false) Then
				Me.OnIDCiudadChanging(value)
				Me.SendPropertyChanging
				Me._IDCiudad = value
				Me.SendPropertyChanged("IDCiudad")
				Me.OnIDCiudadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBancosTasasRendimientos")>  _
Partial Public Class BancosTasasRendimientos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _intIDBancoTasasRendimientos As Integer
	
	Private _intIDBanco As Integer
	
	Private _dblValorInicial As System.Nullable(Of Double)
	
	Private _dblValorFinal As System.Nullable(Of Double)
	
	Private _dblTasaRendimiento As System.Nullable(Of Double)
	
	Private _dtmActualizacion As System.Nullable(of System.DateTime)
	
	Private _strUsuario As String
	
	Private _strInfoSesion As String
	
	Private _strMsgValidacion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDBancoTasasRendimientosChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDBancoTasasRendimientosChanged()
    End Sub
    Partial Private Sub OnintIDBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDBancoChanged()
    End Sub
    Partial Private Sub OndblValorInicialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblValorInicialChanged()
    End Sub
    Partial Private Sub OndblValorFinalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblValorFinalChanged()
    End Sub
    Partial Private Sub OndblTasaRendimientoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblTasaRendimientoChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDBancoTasasRendimientos", DbType:="Int NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property intIDBancoTasasRendimientos() As Integer
		Get
			Return Me._intIDBancoTasasRendimientos
		End Get
		Set
			If (Object.Equals(Me._intIDBancoTasasRendimientos, value) = false) Then
				Me.OnintIDBancoTasasRendimientosChanging(value)
				Me.SendPropertyChanging
				Me._intIDBancoTasasRendimientos = value
				Me.SendPropertyChanged("intIDBancoTasasRendimientos")
				Me.OnintIDBancoTasasRendimientosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDBanco", DbType:="Int Not NULL")>  _
	Public Property intIDBanco() As Integer
		Get
			Return Me._intIDBanco
		End Get
		Set
			If ((Me._intIDBanco = value)  _
						= false) Then
				Me.OnintIDBancoChanging(value)
				Me.SendPropertyChanging
				Me._intIDBanco = value
				Me.SendPropertyChanged("intIDBanco")
				Me.OnintIDBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorInicial", DbType:="Float NULL")>  _
	Public Property dblValorInicial() As System.Nullable(Of Double)
		Get
			Return Me._dblValorInicial
		End Get
		Set
			If (Me._dblValorInicial.Equals(value) = false) Then
				Me.OndblValorInicialChanging(value)
				Me.SendPropertyChanging
				Me._dblValorInicial = value
				Me.SendPropertyChanged("dblValorInicial")
				Me.OndblValorInicialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorFinal", DbType:="Float NULL")>  _
	Public Property dblValorFinal() As System.Nullable(Of Double)
		Get
			Return Me._dblValorFinal
		End Get
		Set
			If (Me._dblValorFinal.Equals(value) = false) Then
				Me.OndblValorFinalChanging(value)
				Me.SendPropertyChanging
				Me._dblValorFinal = value
				Me.SendPropertyChanged("dblValorFinal")
				Me.OndblValorFinalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaRendimiento", DbType:="Float NULL")>  _
	Public Property dblTasaRendimiento() As System.Nullable(Of Double)
		Get
			Return Me._dblTasaRendimiento
		End Get
		Set
			If (Me._dblTasaRendimiento.Equals(value) = false) Then
				Me.OndblTasaRendimientoChanging(value)
				Me.SendPropertyChanging
				Me._dblTasaRendimiento = value
				Me.SendPropertyChanged("dblTasaRendimiento")
				Me.OndblTasaRendimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL", CanBeNull:=false)>  _
	Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
		Get
			Return Me._dtmActualizacion
		End Get
		Set
			If (Object.Equals(Me._dtmActualizacion, value) = false) Then
				Me.OndtmActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._dtmActualizacion = value
				Me.SendPropertyChanged("dtmActualizacion")
				Me.OndtmActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
	Public Property strUsuario() As String
		Get
			Return Me._strUsuario
		End Get
		Set
			If (String.Equals(Me._strUsuario, value) = false) Then
				Me.OnstrUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._strUsuario = value
				Me.SendPropertyChanged("strUsuario")
				Me.OnstrUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
	Public Property strInfoSesion() As String
		Get
			Return Me._strInfoSesion
		End Get
		Set
			If (String.Equals(Me._strInfoSesion, value) = false) Then
				Me.OnstrInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._strInfoSesion = value
				Me.SendPropertyChanged("strInfoSesion")
				Me.OnstrInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
	Public Property strMsgValidacion() As String
		Get
			Return Me._strMsgValidacion
		End Get
		Set
			If (String.Equals(Me._strMsgValidacion, value) = false) Then
				Me.OnstrMsgValidacionChanging(value)
				Me.SendPropertyChanging
				Me._strMsgValidacion = value
				Me.SendPropertyChanged("strMsgValidacion")
				Me.OnstrMsgValidacionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ConsecutivosVsUsuarios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Modulo As String
	
	Private _Compania As System.Nullable(Of Integer)
	
	Private _NombreConsecutivo As String
	
	Private _Seleccionado As Boolean
	
	Private _Descripcion As String
	
	Private _UsuarioInsercion As String
	
	Private _InfoSesion As String
	
	Private _strMsgValidacion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As String)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
    Partial Private Sub OnCompaniaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCompaniaChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnSeleccionadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSeleccionadoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUsuarioInsercionChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioInsercionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="Varchar(60)  NULL")>  _
	Public Property Modulo() As String
		Get
			Return Me._Modulo
		End Get
		Set
			If (String.Equals(Me._Modulo, value) = false) Then
				Me.OnModuloChanging(value)
				Me.SendPropertyChanging
				Me._Modulo = value
				Me.SendPropertyChanged("Modulo")
				Me.OnModuloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCompania", Storage:="_Compania", DbType:="Int  NULL")>  _
	Public Property Compania() As System.Nullable(Of Integer)
		Get
			Return Me._Compania
		End Get
		Set
			If (Me._Compania.Equals(value) = false) Then
				Me.OnCompaniaChanging(value)
				Me.SendPropertyChanging
				Me._Compania = value
				Me.SendPropertyChanged("Compania")
				Me.OnCompaniaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConsecutivo", Storage:="_NombreConsecutivo", DbType:="Varchar(15)  NULL")>  _
	Public Property NombreConsecutivo() As String
		Get
			Return Me._NombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivo, value) = false) Then
				Me.OnNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivo = value
				Me.SendPropertyChanged("NombreConsecutivo")
				Me.OnNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionado", Storage:="_Seleccionado", DbType:="Bit NOT NULL")>  _
	Public Property Seleccionado() As Boolean
		Get
			Return Me._Seleccionado
		End Get
		Set
			If ((Me._Seleccionado = value)  _
						= false) Then
				Me.OnSeleccionadoChanging(value)
				Me.SendPropertyChanging
				Me._Seleccionado = value
				Me.SendPropertyChanged("Seleccionado")
				Me.OnSeleccionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_UsuarioInsercion", DbType:="Varchar(60)")>  _
	Public Property UsuarioInsercion() As String
		Get
			Return Me._UsuarioInsercion
		End Get
		Set
			If (String.Equals(Me._UsuarioInsercion, value) = false) Then
				Me.OnUsuarioInsercionChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioInsercion = value
				Me.SendPropertyChanged("UsuarioInsercion")
				Me.OnUsuarioInsercionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
	Public Property strMsgValidacion() As String
		Get
			Return Me._strMsgValidacion
		End Get
		Set
			If (String.Equals(Me._strMsgValidacion, value) = false) Then
				Me.OnstrMsgValidacionChanging(value)
				Me.SendPropertyChanging
				Me._strMsgValidacion = value
				Me.SendPropertyChanged("strMsgValidacion")
				Me.OnstrMsgValidacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ConceptosVSConsecutivos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _IDConcepto As Integer
	
	Private _Detalle As String
	
	Private _NombreConsecutivo As String
	
	Private _Seleccionado As Boolean
	
	Private _Descripcion As String
	
	Private _UsuarioInsercion As String
	
	Private _InfoSesion As String
	
	Private _strMsgValidacion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConceptoChanged()
    End Sub
    Partial Private Sub OnDetalleChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnSeleccionadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSeleccionadoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUsuarioInsercionChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioInsercionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDConcepto", Storage:="_IDConcepto", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IDConcepto() As Integer
		Get
			Return Me._IDConcepto
		End Get
		Set
			If (Object.Equals(Me._IDConcepto, value) = false) Then
				Me.OnIDConceptoChanging(value)
				Me.SendPropertyChanging
				Me._IDConcepto = value
				Me.SendPropertyChanged("IDConcepto")
				Me.OnIDConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleConcepto", Storage:="_Detalle", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
	Public Property Detalle() As String
		Get
			Return Me._Detalle
		End Get
		Set
			If (String.Equals(Me._Detalle, value) = false) Then
				Me.OnDetalleChanging(value)
				Me.SendPropertyChanging
				Me._Detalle = value
				Me.SendPropertyChanged("Detalle")
				Me.OnDetalleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConsecutivo", Storage:="_NombreConsecutivo", DbType:="Varchar(15)  NULL")>  _
	Public Property NombreConsecutivo() As String
		Get
			Return Me._NombreConsecutivo
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivo, value) = false) Then
				Me.OnNombreConsecutivoChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivo = value
				Me.SendPropertyChanged("NombreConsecutivo")
				Me.OnNombreConsecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionado", Storage:="_Seleccionado", DbType:="Bit NOT NULL")>  _
	Public Property Seleccionado() As Boolean
		Get
			Return Me._Seleccionado
		End Get
		Set
			If ((Me._Seleccionado = value)  _
						= false) Then
				Me.OnSeleccionadoChanging(value)
				Me.SendPropertyChanging
				Me._Seleccionado = value
				Me.SendPropertyChanged("Seleccionado")
				Me.OnSeleccionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_UsuarioInsercion", DbType:="Varchar(60)")>  _
	Public Property UsuarioInsercion() As String
		Get
			Return Me._UsuarioInsercion
		End Get
		Set
			If (String.Equals(Me._UsuarioInsercion, value) = false) Then
				Me.OnUsuarioInsercionChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioInsercion = value
				Me.SendPropertyChanged("UsuarioInsercion")
				Me.OnUsuarioInsercionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
	Public Property strMsgValidacion() As String
		Get
			Return Me._strMsgValidacion
		End Get
		Set
			If (String.Equals(Me._strMsgValidacion, value) = false) Then
				Me.OnstrMsgValidacionChanging(value)
				Me.SendPropertyChanging
				Me._strMsgValidacion = value
				Me.SendPropertyChanged("strMsgValidacion")
				Me.OnstrMsgValidacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblCuentasCRCC")>  _
Partial Public Class CuentasCRCC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDtblCuentasCRCC As Integer
	
	Private _IDComitente As String
	
	Private _CuentaCRCC As String
	
	Private _TipoDeOferta As String
	
	Private _FechaCreacion As System.Nullable(Of Date)
	
	Private _MiembroLiquidador As String
	
	Private _CodigoEntorno As String
	
	Private _Cuenta As String
	
	Private _SubCuenta As String
	
	Private _Titular As String
	
	Private _NroDocumento As String
	
	Private _Estado As String
	
	Private _TipoPersona As String
	
	Private _NomCliente As String
	
	Private _TipoIdComitente As String
	
	Private _Descripcion As String
	
	Private _Usuario As String
	
	Private _Actualizacion As Date
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDtblCuentasCRCCChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDtblCuentasCRCCChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnCuentaCRCCChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaCRCCChanged()
    End Sub
    Partial Private Sub OnTipoDeOfertaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDeOfertaChanged()
    End Sub
    Partial Private Sub OnFechaCreacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaCreacionChanged()
    End Sub
    Partial Private Sub OnMiembroLiquidadorChanging(value As String)
    End Sub
    Partial Private Sub OnMiembroLiquidadorChanged()
    End Sub
    Partial Private Sub OnCodigoEntornoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoEntornoChanged()
    End Sub
    Partial Private Sub OnCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaChanged()
    End Sub
    Partial Private Sub OnSubCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnSubCuentaChanged()
    End Sub
    Partial Private Sub OnTitularChanging(value As String)
    End Sub
    Partial Private Sub OnTitularChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnTipoPersonaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoPersonaChanged()
    End Sub
    Partial Private Sub OnNomClienteChanging(value As String)
    End Sub
    Partial Private Sub OnNomClienteChanged()
    End Sub
    Partial Private Sub OnTipoIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdComitenteChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDtblCuentasCRCC", Storage:="_IDtblCuentasCRCC", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDtblCuentasCRCC() As Integer
		Get
			Return Me._IDtblCuentasCRCC
		End Get
		Set
			If (Object.Equals(Me._IDtblCuentasCRCC, value) = false) Then
				Me.OnIDtblCuentasCRCCChanging(value)
				Me.SendPropertyChanging
				Me._IDtblCuentasCRCC = value
				Me.SendPropertyChanged("IDtblCuentasCRCC")
				Me.OnIDtblCuentasCRCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL")>  _
	Public Property IDComitente() As String
		Get
			Return Me._IDComitente
		End Get
		Set
			If (String.Equals(Me._IDComitente, value) = false) Then
				Me.OnIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente = value
				Me.SendPropertyChanged("IDComitente")
				Me.OnIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaCRCC", Storage:="_CuentaCRCC", DbType:="Varchar(25) NOT NULL")>  _
	Public Property CuentaCRCC() As String
		Get
			Return Me._CuentaCRCC
		End Get
		Set
			If (String.Equals(Me._CuentaCRCC, value) = false) Then
				Me.OnCuentaCRCCChanging(value)
				Me.SendPropertyChanging
				Me._CuentaCRCC = value
				Me.SendPropertyChanged("CuentaCRCC")
				Me.OnCuentaCRCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoDeOferta", Storage:="_TipoDeOferta", DbType:="Char(1) NOT NULL")>  _
	Public Property TipoDeOferta() As String
		Get
			Return Me._TipoDeOferta
		End Get
		Set
			If (String.Equals(Me._TipoDeOferta, value) = false) Then
				Me.OnTipoDeOfertaChanging(value)
				Me.SendPropertyChanging
				Me._TipoDeOferta = value
				Me.SendPropertyChanged("TipoDeOferta")
				Me.OnTipoDeOfertaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCreacion", Storage:="_FechaCreacion", DbType:="Datetime NULL")>  _
	Public Property FechaCreacion() As System.Nullable(Of Date)
		Get
			Return Me._FechaCreacion
		End Get
		Set
			If (Me._FechaCreacion.Equals(value) = false) Then
				Me.OnFechaCreacionChanging(value)
				Me.SendPropertyChanging
				Me._FechaCreacion = value
				Me.SendPropertyChanged("FechaCreacion")
				Me.OnFechaCreacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMiembroLiquidador", Storage:="_MiembroLiquidador", DbType:="Varchar(10) NULL")>  _
	Public Property MiembroLiquidador() As String
		Get
			Return Me._MiembroLiquidador
		End Get
		Set
			If (String.Equals(Me._MiembroLiquidador, value) = false) Then
				Me.OnMiembroLiquidadorChanging(value)
				Me.SendPropertyChanging
				Me._MiembroLiquidador = value
				Me.SendPropertyChanged("MiembroLiquidador")
				Me.OnMiembroLiquidadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoEntorno", Storage:="_CodigoEntorno", DbType:="Varchar(10) NULL")>  _
	Public Property CodigoEntorno() As String
		Get
			Return Me._CodigoEntorno
		End Get
		Set
			If (String.Equals(Me._CodigoEntorno, value) = false) Then
				Me.OnCodigoEntornoChanging(value)
				Me.SendPropertyChanging
				Me._CodigoEntorno = value
				Me.SendPropertyChanged("CodigoEntorno")
				Me.OnCodigoEntornoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuenta", Storage:="_Cuenta", DbType:="Varchar(10) NULL")>  _
	Public Property Cuenta() As String
		Get
			Return Me._Cuenta
		End Get
		Set
			If (String.Equals(Me._Cuenta, value) = false) Then
				Me.OnCuentaChanging(value)
				Me.SendPropertyChanging
				Me._Cuenta = value
				Me.SendPropertyChanged("Cuenta")
				Me.OnCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSubCuenta", Storage:="_SubCuenta", DbType:="Varchar(10) NULL")>  _
	Public Property SubCuenta() As String
		Get
			Return Me._SubCuenta
		End Get
		Set
			If (String.Equals(Me._SubCuenta, value) = false) Then
				Me.OnSubCuentaChanging(value)
				Me.SendPropertyChanging
				Me._SubCuenta = value
				Me.SendPropertyChanged("SubCuenta")
				Me.OnSubCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTitular", Storage:="_Titular", DbType:="Varchar(80) NULL")>  _
	Public Property Titular() As String
		Get
			Return Me._Titular
		End Get
		Set
			If (String.Equals(Me._Titular, value) = false) Then
				Me.OnTitularChanging(value)
				Me.SendPropertyChanging
				Me._Titular = value
				Me.SendPropertyChanged("Titular")
				Me.OnTitularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(25) NULL")>  _
	Public Property NroDocumento() As String
		Get
			Return Me._NroDocumento
		End Get
		Set
			If (String.Equals(Me._NroDocumento, value) = false) Then
				Me.OnNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento = value
				Me.SendPropertyChanged("NroDocumento")
				Me.OnNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Char(1) NULL")>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoPersona", Storage:="_TipoPersona", DbType:="Varchar(10) NULL")>  _
	Public Property TipoPersona() As String
		Get
			Return Me._TipoPersona
		End Get
		Set
			If (String.Equals(Me._TipoPersona, value) = false) Then
				Me.OnTipoPersonaChanging(value)
				Me.SendPropertyChanging
				Me._TipoPersona = value
				Me.SendPropertyChanged("TipoPersona")
				Me.OnTipoPersonaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_NomCliente", DbType:="Varchar(50) NOT NULL")>  _
	Public Property NomCliente() As String
		Get
			Return Me._NomCliente
		End Get
		Set
			If (String.Equals(Me._NomCliente, value) = false) Then
				Me.OnNomClienteChanging(value)
				Me.SendPropertyChanging
				Me._NomCliente = value
				Me.SendPropertyChanged("NomCliente")
				Me.OnNomClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdComitente", Storage:="_TipoIdComitente", DbType:="Char(1) NOT NULL")>  _
	Public Property TipoIdComitente() As String
		Get
			Return Me._TipoIdComitente
		End Get
		Set
			If (String.Equals(Me._TipoIdComitente, value) = false) Then
				Me.OnTipoIdComitenteChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdComitente = value
				Me.SendPropertyChanged("TipoIdComitente")
				Me.OnTipoIdComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As Date
		Get
			Return Me._Actualizacion
		End Get
		Set
			If ((Me._Actualizacion = value)  _
						= false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblTesoreriaConsecutivosEquivalencias")>  _
Partial Public Class TesoreriaConsecutivosEquivalencias
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDTesoreriaConsecutivosEquivalencias As Integer
	
	Private _NombreConsecutivoCE As String
	
	Private _NombreConsecutivoRC As String
	
	Private _NombreConsecutivoNotas As String
	
	Private _dtmActualizacion As System.Nullable(of System.DateTime)
	
	Private _UsuarioInsercion As String
	
	Private _InfoSesion As String
	
	Private _strMsgValidacion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDTesoreriaConsecutivosEquivalenciasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTesoreriaConsecutivosEquivalenciasChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoCEChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoCEChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoRCChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoRCChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoNotasChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoNotasChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioInsercionChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioInsercionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTesoreriaConsecutivosEquivalencias", Storage:="_IDTesoreriaConsecutivosEquivalencias", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDTesoreriaConsecutivosEquivalencias() As Integer
		Get
			Return Me._IDTesoreriaConsecutivosEquivalencias
		End Get
		Set
			If (Object.Equals(Me._IDTesoreriaConsecutivosEquivalencias, value) = false) Then
				Me.OnIDTesoreriaConsecutivosEquivalenciasChanging(value)
				Me.SendPropertyChanging
				Me._IDTesoreriaConsecutivosEquivalencias = value
				Me.SendPropertyChanged("IDTesoreriaConsecutivosEquivalencias")
				Me.OnIDTesoreriaConsecutivosEquivalenciasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivoCE", Storage:="_NombreConsecutivoCE", DbType:="Varchar(100)  NULL")>  _
	Public Property NombreConsecutivoCE() As String
		Get
			Return Me._NombreConsecutivoCE
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivoCE, value) = false) Then
				Me.OnNombreConsecutivoCEChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivoCE = value
				Me.SendPropertyChanged("NombreConsecutivoCE")
				Me.OnNombreConsecutivoCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivoRC", Storage:="_NombreConsecutivoRC", DbType:="Varchar(100)  NULL")>  _
	Public Property NombreConsecutivoRC() As String
		Get
			Return Me._NombreConsecutivoRC
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivoRC, value) = false) Then
				Me.OnNombreConsecutivoRCChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivoRC = value
				Me.SendPropertyChanged("NombreConsecutivoRC")
				Me.OnNombreConsecutivoRCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivoNotas", Storage:="_NombreConsecutivoNotas", DbType:="Varchar(100)  NULL")>  _
	Public Property NombreConsecutivoNotas() As String
		Get
			Return Me._NombreConsecutivoNotas
		End Get
		Set
			If (String.Equals(Me._NombreConsecutivoNotas, value) = false) Then
				Me.OnNombreConsecutivoNotasChanging(value)
				Me.SendPropertyChanging
				Me._NombreConsecutivoNotas = value
				Me.SendPropertyChanged("NombreConsecutivoNotas")
				Me.OnNombreConsecutivoNotasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL", CanBeNull:=true)>  _
	Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
		Get
			Return Me._dtmActualizacion
		End Get
		Set
			If (Object.Equals(Me._dtmActualizacion, value) = false) Then
				Me.OndtmActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._dtmActualizacion = value
				Me.SendPropertyChanged("dtmActualizacion")
				Me.OndtmActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_UsuarioInsercion", DbType:="Varchar(60)")>  _
	Public Property UsuarioInsercion() As String
		Get
			Return Me._UsuarioInsercion
		End Get
		Set
			If (String.Equals(Me._UsuarioInsercion, value) = false) Then
				Me.OnUsuarioInsercionChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioInsercion = value
				Me.SendPropertyChanged("UsuarioInsercion")
				Me.OnUsuarioInsercionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
	Public Property strMsgValidacion() As String
		Get
			Return Me._strMsgValidacion
		End Get
		Set
			If (String.Equals(Me._strMsgValidacion, value) = false) Then
				Me.OnstrMsgValidacionChanging(value)
				Me.SendPropertyChanging
				Me._strMsgValidacion = value
				Me.SendPropertyChanged("strMsgValidacion")
				Me.OnstrMsgValidacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblTiposCuentasRecaudadoras")>  _
Partial Public Class TiposCuentasRecaudadoras
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDTiposCuentasRecaudadoras As Integer
	
	Private _ID As Integer
	
	Private _TipoCuenta As String
	
	Private _DescripcionTipoCuenta As String
	
	Private _TipoReciboCaja As String
	
	Private _DescripcionTipoReciboCaja As String
	
	Private _RegistrarCheques As String
	
	Private _ManejoComisiones As String
	
	Private _ManejoTraslado As String
	
	Private _DetalleFecha As System.Nullable(Of Boolean)
	
	Private _DetalleReferencia As System.Nullable(Of Boolean)
	
	Private _DetalleNombreTransaccion As System.Nullable(Of Boolean)
	
	Private _DetallePersonalizado As String
	
	Private _CuentaCentralizadora As System.Nullable(Of Boolean)
	
	Private _Actualizacion As System.Nullable(Of System.Datetime)
	
	Private _Usuario As String
	
	Private _InfoSession As String
	
	Private _strMsgValidacion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDTiposCuentasRecaudadorasChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTiposCuentasRecaudadorasChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTipoCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCuentaChanged()
    End Sub
    Partial Private Sub OnDescripcionTipoCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionTipoCuentaChanged()
    End Sub
    Partial Private Sub OnTipoReciboCajaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoReciboCajaChanged()
    End Sub
    Partial Private Sub OnDescripcionTipoReciboCajaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionTipoReciboCajaChanged()
    End Sub
    Partial Private Sub OnRegistrarChequesChanging(value As String)
    End Sub
    Partial Private Sub OnRegistrarChequesChanged()
    End Sub
    Partial Private Sub OnManejoComisionesChanging(value As String)
    End Sub
    Partial Private Sub OnManejoComisionesChanged()
    End Sub
    Partial Private Sub OnManejoTrasladoChanging(value As String)
    End Sub
    Partial Private Sub OnManejoTrasladoChanged()
    End Sub
    Partial Private Sub OnDetalleFechaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDetalleFechaChanged()
    End Sub
    Partial Private Sub OnDetalleReferenciaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDetalleReferenciaChanged()
    End Sub
    Partial Private Sub OnDetalleNombreTransaccionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDetalleNombreTransaccionChanged()
    End Sub
    Partial Private Sub OnDetallePersonalizadoChanging(value As String)
    End Sub
    Partial Private Sub OnDetallePersonalizadoChanged()
    End Sub
    Partial Private Sub OnCuentaCentralizadoraChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCuentaCentralizadoraChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of System.Datetime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSessionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSessionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTiposCuentasRecaudadoras", Storage:="_IDTiposCuentasRecaudadoras", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDTiposCuentasRecaudadoras() As Integer
		Get
			Return Me._IDTiposCuentasRecaudadoras
		End Get
		Set
			If ((Me._IDTiposCuentasRecaudadoras = value)  _
						= false) Then
				Me.OnIDTiposCuentasRecaudadorasChanging(value)
				Me.SendPropertyChanging
				Me._IDTiposCuentasRecaudadoras = value
				Me.SendPropertyChanged("IDTiposCuentasRecaudadoras")
				Me.OnIDTiposCuentasRecaudadorasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCuenta", Storage:="_TipoCuenta", DbType:="Varchar(1)  NULL")>  _
	Public Property TipoCuenta() As String
		Get
			Return Me._TipoCuenta
		End Get
		Set
			If (String.Equals(Me._TipoCuenta, value) = false) Then
				Me.OnTipoCuentaChanging(value)
				Me.SendPropertyChanging
				Me._TipoCuenta = value
				Me.SendPropertyChanged("TipoCuenta")
				Me.OnTipoCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionTipoCuenta", Storage:="_DescripcionTipoCuenta", DbType:="Varchar(100)  NULL")>  _
	Public Property DescripcionTipoCuenta() As String
		Get
			Return Me._DescripcionTipoCuenta
		End Get
		Set
			If (String.Equals(Me._DescripcionTipoCuenta, value) = false) Then
				Me.OnDescripcionTipoCuentaChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionTipoCuenta = value
				Me.SendPropertyChanged("DescripcionTipoCuenta")
				Me.OnDescripcionTipoCuentaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoReciboCaja", Storage:="_TipoReciboCaja", DbType:="Varchar(1)  NULL")>  _
	Public Property TipoReciboCaja() As String
		Get
			Return Me._TipoReciboCaja
		End Get
		Set
			If (String.Equals(Me._TipoReciboCaja, value) = false) Then
				Me.OnTipoReciboCajaChanging(value)
				Me.SendPropertyChanging
				Me._TipoReciboCaja = value
				Me.SendPropertyChanged("TipoReciboCaja")
				Me.OnTipoReciboCajaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionTipoReciboCaja", Storage:="_DescripcionTipoReciboCaja", DbType:="Varchar(100)  NULL")>  _
	Public Property DescripcionTipoReciboCaja() As String
		Get
			Return Me._DescripcionTipoReciboCaja
		End Get
		Set
			If (String.Equals(Me._DescripcionTipoReciboCaja, value) = false) Then
				Me.OnDescripcionTipoReciboCajaChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionTipoReciboCaja = value
				Me.SendPropertyChanged("DescripcionTipoReciboCaja")
				Me.OnDescripcionTipoReciboCajaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRegistrarCheques", Storage:="_RegistrarCheques", DbType:="Varchar(1)  NULL")>  _
	Public Property RegistrarCheques() As String
		Get
			Return Me._RegistrarCheques
		End Get
		Set
			If (String.Equals(Me._RegistrarCheques, value) = false) Then
				Me.OnRegistrarChequesChanging(value)
				Me.SendPropertyChanging
				Me._RegistrarCheques = value
				Me.SendPropertyChanged("RegistrarCheques")
				Me.OnRegistrarChequesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strManejoComisiones", Storage:="_ManejoComisiones", DbType:="Varchar(1)  NULL")>  _
	Public Property ManejoComisiones() As String
		Get
			Return Me._ManejoComisiones
		End Get
		Set
			If (String.Equals(Me._ManejoComisiones, value) = false) Then
				Me.OnManejoComisionesChanging(value)
				Me.SendPropertyChanging
				Me._ManejoComisiones = value
				Me.SendPropertyChanged("ManejoComisiones")
				Me.OnManejoComisionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strManejoTraslado", Storage:="_ManejoTraslado", DbType:="Varchar(1)  NULL")>  _
	Public Property ManejoTraslado() As String
		Get
			Return Me._ManejoTraslado
		End Get
		Set
			If (String.Equals(Me._ManejoTraslado, value) = false) Then
				Me.OnManejoTrasladoChanging(value)
				Me.SendPropertyChanging
				Me._ManejoTraslado = value
				Me.SendPropertyChanged("ManejoTraslado")
				Me.OnManejoTrasladoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="blnDetalleFecha", Storage:="_DetalleFecha", DbType:="BIT NULL")>  _
	Public Property DetalleFecha() As System.Nullable(Of Boolean)
		Get
			Return Me._DetalleFecha
		End Get
		Set
			If (Me._DetalleFecha.Equals(value) = false) Then
				Me.OnDetalleFechaChanging(value)
				Me.SendPropertyChanging
				Me._DetalleFecha = value
				Me.SendPropertyChanged("DetalleFecha")
				Me.OnDetalleFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="blnDetalleReferencia", Storage:="_DetalleReferencia", DbType:="BIT NULL")>  _
	Public Property DetalleReferencia() As System.Nullable(Of Boolean)
		Get
			Return Me._DetalleReferencia
		End Get
		Set
			If (Me._DetalleReferencia.Equals(value) = false) Then
				Me.OnDetalleReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._DetalleReferencia = value
				Me.SendPropertyChanged("DetalleReferencia")
				Me.OnDetalleReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="blnDetalleNombreTransaccion", Storage:="_DetalleNombreTransaccion", DbType:="BIT NULL")>  _
	Public Property DetalleNombreTransaccion() As System.Nullable(Of Boolean)
		Get
			Return Me._DetalleNombreTransaccion
		End Get
		Set
			If (Me._DetalleNombreTransaccion.Equals(value) = false) Then
				Me.OnDetalleNombreTransaccionChanging(value)
				Me.SendPropertyChanging
				Me._DetalleNombreTransaccion = value
				Me.SendPropertyChanged("DetalleNombreTransaccion")
				Me.OnDetalleNombreTransaccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetallePersonalizado", Storage:="_DetallePersonalizado", DbType:="Varchar(40)  NULL")>  _
	Public Property DetallePersonalizado() As String
		Get
			Return Me._DetallePersonalizado
		End Get
		Set
			If (String.Equals(Me._DetallePersonalizado, value) = false) Then
				Me.OnDetallePersonalizadoChanging(value)
				Me.SendPropertyChanging
				Me._DetallePersonalizado = value
				Me.SendPropertyChanged("DetallePersonalizado")
				Me.OnDetallePersonalizadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="blnCuentaCentralizadora", Storage:="_CuentaCentralizadora", DbType:="BIT NULL")>  _
	Public Property CuentaCentralizadora() As System.Nullable(Of Boolean)
		Get
			Return Me._CuentaCentralizadora
		End Get
		Set
			If (Me._CuentaCentralizadora.Equals(value) = false) Then
				Me.OnCuentaCentralizadoraChanging(value)
				Me.SendPropertyChanging
				Me._CuentaCentralizadora = value
				Me.SendPropertyChanged("CuentaCentralizadora")
				Me.OnCuentaCentralizadoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NULL", CanBeNull:=true)>  _
	Public Property Actualizacion() As System.Nullable(Of System.Datetime)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Object.Equals(Me._Actualizacion, value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(8000)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSession", DbType:="Varchar(8000)")>  _
	Public Property InfoSession() As String
		Get
			Return Me._InfoSession
		End Get
		Set
			If (String.Equals(Me._InfoSession, value) = false) Then
				Me.OnInfoSessionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSession = value
				Me.SendPropertyChanged("InfoSession")
				Me.OnInfoSessionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
	Public Property strMsgValidacion() As String
		Get
			Return Me._strMsgValidacion
		End Get
		Set
			If (String.Equals(Me._strMsgValidacion, value) = false) Then
				Me.OnstrMsgValidacionChanging(value)
				Me.SendPropertyChanging
				Me._strMsgValidacion = value
				Me.SendPropertyChanged("strMsgValidacion")
				Me.OnstrMsgValidacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblCuentasBancariasPorConcepto")>  _
Partial Public Class CuentasBancariasPorConcepto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _IDComisionista As Integer
	
	Private _IdSucComisionista As Integer
	
	Private _IdCuentaBancaria As Integer
	
	Private _IdConcepto As Integer
	
	Private _CuentaContable As String
	
	Private _Usuario As String
	
	Private _Actualizacion As System.Nullable(Of System.Datetime)
	
	Private _InfoSession As String
	
	Private _NombreBanco As String
	
	Private _NombreCuentaBancaria As String
	
	Private _DescripcionConcepto As String
	
	Private _IdConceptoAnterior As System.Nullable(Of Integer)
	
	Private _IDCodigoBanco As System.Nullable(Of Integer)
	
	Private _strMsgValidacion As String
	
	Private _Accion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdCuentaBancariaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCuentaBancariaChanged()
    End Sub
    Partial Private Sub OnIdConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdConceptoChanged()
    End Sub
    Partial Private Sub OnCuentaContableChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaContableChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of System.Datetime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSessionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSessionChanged()
    End Sub
    Partial Private Sub OnNombreBancoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreBancoChanged()
    End Sub
    Partial Private Sub OnNombreCuentaBancariaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCuentaBancariaChanged()
    End Sub
    Partial Private Sub OnDescripcionConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionConceptoChanged()
    End Sub
    Partial Private Sub OnIdConceptoAnteriorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdConceptoAnteriorChanged()
    End Sub
    Partial Private Sub OnIDCodigoBancoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDCodigoBancoChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As String)
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL")>  _
	Public Property IDComisionista() As Integer
		Get
			Return Me._IDComisionista
		End Get
		Set
			If ((Me._IDComisionista = value)  _
						= false) Then
				Me.OnIDComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IDComisionista = value
				Me.SendPropertyChanged("IDComisionista")
				Me.OnIDComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int NOT NULL")>  _
	Public Property IdSucComisionista() As Integer
		Get
			Return Me._IdSucComisionista
		End Get
		Set
			If ((Me._IdSucComisionista = value)  _
						= false) Then
				Me.OnIdSucComisionistaChanging(value)
				Me.SendPropertyChanging
				Me._IdSucComisionista = value
				Me.SendPropertyChanged("IdSucComisionista")
				Me.OnIdSucComisionistaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidCuentaBancaria", Storage:="_IdCuentaBancaria", DbType:="Int NOT NULL")>  _
	Public Property IdCuentaBancaria() As Integer
		Get
			Return Me._IdCuentaBancaria
		End Get
		Set
			If ((Me._IdCuentaBancaria = value)  _
						= false) Then
				Me.OnIdCuentaBancariaChanging(value)
				Me.SendPropertyChanging
				Me._IdCuentaBancaria = value
				Me.SendPropertyChanged("IdCuentaBancaria")
				Me.OnIdCuentaBancariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngidConcepto", Storage:="_IdConcepto", DbType:="Int NOT NULL")>  _
	Public Property IdConcepto() As Integer
		Get
			Return Me._IdConcepto
		End Get
		Set
			If ((Me._IdConcepto = value)  _
						= false) Then
				Me.OnIdConceptoChanging(value)
				Me.SendPropertyChanging
				Me._IdConcepto = value
				Me.SendPropertyChanged("IdConcepto")
				Me.OnIdConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(15)  NULL")>  _
	Public Property CuentaContable() As String
		Get
			Return Me._CuentaContable
		End Get
		Set
			If (String.Equals(Me._CuentaContable, value) = false) Then
				Me.OnCuentaContableChanging(value)
				Me.SendPropertyChanging
				Me._CuentaContable = value
				Me.SendPropertyChanged("CuentaContable")
				Me.OnCuentaContableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(8000)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NULL", CanBeNull:=true)>  _
	Public Property Actualizacion() As System.Nullable(Of System.Datetime)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Object.Equals(Me._Actualizacion, value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSession", DbType:="Varchar(8000)")>  _
	Public Property InfoSession() As String
		Get
			Return Me._InfoSession
		End Get
		Set
			If (String.Equals(Me._InfoSession, value) = false) Then
				Me.OnInfoSessionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSession = value
				Me.SendPropertyChanged("InfoSession")
				Me.OnInfoSessionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreBanco", DbType:="Varchar(500) NULL")>  _
	Public Property NombreBanco() As String
		Get
			Return Me._NombreBanco
		End Get
		Set
			If (String.Equals(Me._NombreBanco, value) = false) Then
				Me.OnNombreBancoChanging(value)
				Me.SendPropertyChanging
				Me._NombreBanco = value
				Me.SendPropertyChanged("NombreBanco")
				Me.OnNombreBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCuentaBancaria", DbType:="Varchar(500) NULL")>  _
	Public Property NombreCuentaBancaria() As String
		Get
			Return Me._NombreCuentaBancaria
		End Get
		Set
			If (String.Equals(Me._NombreCuentaBancaria, value) = false) Then
				Me.OnNombreCuentaBancariaChanging(value)
				Me.SendPropertyChanging
				Me._NombreCuentaBancaria = value
				Me.SendPropertyChanged("NombreCuentaBancaria")
				Me.OnNombreCuentaBancariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionConcepto", DbType:="Varchar(500)  NULL")>  _
	Public Property DescripcionConcepto() As String
		Get
			Return Me._DescripcionConcepto
		End Get
		Set
			If (String.Equals(Me._DescripcionConcepto, value) = false) Then
				Me.OnDescripcionConceptoChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionConcepto = value
				Me.SendPropertyChanged("DescripcionConcepto")
				Me.OnDescripcionConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdConceptoAnterior", DbType:="Int NULL")>  _
	Public Property IdConceptoAnterior() As System.Nullable(Of Integer)
		Get
			Return Me._IdConceptoAnterior
		End Get
		Set
			If (Me._IdConceptoAnterior.Equals(value) = false) Then
				Me.OnIdConceptoAnteriorChanging(value)
				Me.SendPropertyChanging
				Me._IdConceptoAnterior = value
				Me.SendPropertyChanged("IdConceptoAnterior")
				Me.OnIdConceptoAnteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCodigoBanco", DbType:="Int NULL")>  _
	Public Property IDCodigoBanco() As System.Nullable(Of Integer)
		Get
			Return Me._IDCodigoBanco
		End Get
		Set
			If (Me._IDCodigoBanco.Equals(value) = false) Then
				Me.OnIDCodigoBancoChanging(value)
				Me.SendPropertyChanging
				Me._IDCodigoBanco = value
				Me.SendPropertyChanged("IDCodigoBanco")
				Me.OnIDCodigoBancoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
	Public Property strMsgValidacion() As String
		Get
			Return Me._strMsgValidacion
		End Get
		Set
			If (String.Equals(Me._strMsgValidacion, value) = false) Then
				Me.OnstrMsgValidacionChanging(value)
				Me.SendPropertyChanging
				Me._strMsgValidacion = value
				Me.SendPropertyChanged("strMsgValidacion")
				Me.OnstrMsgValidacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accion", DbType:="varchar(20)")>  _
	Public Property Accion() As String
		Get
			Return Me._Accion
		End Get
		Set
			If (String.Equals(Me._Accion, value) = false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblCodigosAjustes")>  _
Partial Public Class CodigosAjustes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _COD_TRANSACCION As Double
	
	Private _DESCRIPCION As String
	
	Private _TIPO_PARAMETRO As String
	
	Private _Owner As String
	
	Private _strDescripcionOwner As String
	
	Private _IdConcepto As Integer
	
	Private _DescripcionConcepto As String
	
	Private _InfoSesion As String
	
	Private _IdConceptoAnterior As System.Nullable(Of Integer)
	
	Private _Accion As String
	
	Private _Usuario As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCOD_TRANSACCIONChanging(value As Double)
    End Sub
    Partial Private Sub OnCOD_TRANSACCIONChanged()
    End Sub
    Partial Private Sub OnDESCRIPCIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPCIONChanged()
    End Sub
    Partial Private Sub OnTIPO_PARAMETROChanging(value As String)
    End Sub
    Partial Private Sub OnTIPO_PARAMETROChanged()
    End Sub
    Partial Private Sub OnOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnOwnerChanged()
    End Sub
    Partial Private Sub OnstrDescripcionOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionOwnerChanged()
    End Sub
    Partial Private Sub OnIdConceptoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdConceptoChanged()
    End Sub
    Partial Private Sub OnDescripcionConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionConceptoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnIdConceptoAnteriorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdConceptoAnteriorChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As String)
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_TRANSACCION", DbType:="Float")>  _
	Public Property COD_TRANSACCION() As Double
		Get
			Return Me._COD_TRANSACCION
		End Get
		Set
			If ((Me._COD_TRANSACCION = value)  _
						= false) Then
				Me.OnCOD_TRANSACCIONChanging(value)
				Me.SendPropertyChanging
				Me._COD_TRANSACCION = value
				Me.SendPropertyChanged("COD_TRANSACCION")
				Me.OnCOD_TRANSACCIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPCION", DbType:="Varchar(50) NULL")>  _
	Public Property DESCRIPCION() As String
		Get
			Return Me._DESCRIPCION
		End Get
		Set
			If (String.Equals(Me._DESCRIPCION, value) = false) Then
				Me.OnDESCRIPCIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPCION = value
				Me.SendPropertyChanged("DESCRIPCION")
				Me.OnDESCRIPCIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIPO_PARAMETRO", DbType:="Varchar(50) NULL")>  _
	Public Property TIPO_PARAMETRO() As String
		Get
			Return Me._TIPO_PARAMETRO
		End Get
		Set
			If (String.Equals(Me._TIPO_PARAMETRO, value) = false) Then
				Me.OnTIPO_PARAMETROChanging(value)
				Me.SendPropertyChanging
				Me._TIPO_PARAMETRO = value
				Me.SendPropertyChanged("TIPO_PARAMETRO")
				Me.OnTIPO_PARAMETROChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strOwner", Storage:="_Owner", DbType:="Varchar(15) NULL")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me.OnOwnerChanging(value)
				Me.SendPropertyChanging
				Me._Owner = value
				Me.SendPropertyChanged("Owner")
				Me.OnOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionOwner", DbType:="Varchar(500)  NULL")>  _
	Public Property strDescripcionOwner() As String
		Get
			Return Me._strDescripcionOwner
		End Get
		Set
			If (String.Equals(Me._strDescripcionOwner, value) = false) Then
				Me.OnstrDescripcionOwnerChanging(value)
				Me.SendPropertyChanging
				Me._strDescripcionOwner = value
				Me.SendPropertyChanged("strDescripcionOwner")
				Me.OnstrDescripcionOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDConcepto", Storage:="_IdConcepto", DbType:="Int NOT NULL")>  _
	Public Property IdConcepto() As Integer
		Get
			Return Me._IdConcepto
		End Get
		Set
			If ((Me._IdConcepto = value)  _
						= false) Then
				Me.OnIdConceptoChanging(value)
				Me.SendPropertyChanging
				Me._IdConcepto = value
				Me.SendPropertyChanged("IdConcepto")
				Me.OnIdConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionConcepto", DbType:="Varchar(500)  NULL")>  _
	Public Property DescripcionConcepto() As String
		Get
			Return Me._DescripcionConcepto
		End Get
		Set
			If (String.Equals(Me._DescripcionConcepto, value) = false) Then
				Me.OnDescripcionConceptoChanging(value)
				Me.SendPropertyChanging
				Me._DescripcionConcepto = value
				Me.SendPropertyChanged("DescripcionConcepto")
				Me.OnDescripcionConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(8000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdConceptoAnterior", DbType:="Int NULL")>  _
	Public Property IdConceptoAnterior() As System.Nullable(Of Integer)
		Get
			Return Me._IdConceptoAnterior
		End Get
		Set
			If (Me._IdConceptoAnterior.Equals(value) = false) Then
				Me.OnIdConceptoAnteriorChanging(value)
				Me.SendPropertyChanging
				Me._IdConceptoAnterior = value
				Me.SendPropertyChanged("IdConceptoAnterior")
				Me.OnIdConceptoAnteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accion", DbType:="varchar(20)")>  _
	Public Property Accion() As String
		Get
			Return Me._Accion
		End Get
		Set
			If (String.Equals(Me._Accion, value) = false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(8000)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClientes_Responsables")>  _
Partial Public Class Clientes_Responsables
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComitente As String
	
	Private _NombreComitente As String
	
	Private _NroDocumentoComitente As String
	
	Private _TipoIdentificacion_Responsable As String
	
	Private _NroDocumento_Responsable As String
	
	Private _Nombre_Responsable As String
	
	Private _Telefono1_Responsable As String
	
	Private _Email_Responsable As String
	
	Private _IDPoblacion As System.Nullable(of System.int32)
	
	Private _IDDepartamento As System.Nullable(of System.int32)
	
	Private _IdPais As Integer
	
	Private _NombreCuidad As String
	
	Private _Tipo_Responsable As String
	
	Private _Cargo_Responsable As String
	
	Private _Activo As Boolean
	
	Private _ValidoLista As Boolean
	
	Private _strXml_Detalles As String
	
	Private _IDClientes_Responsable As Integer
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _Actualizacion As System.Nullable(Of Date)
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnNombreComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComitenteChanged()
    End Sub
    Partial Private Sub OnNroDocumentoComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoComitenteChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacion_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacion_ResponsableChanged()
    End Sub
    Partial Private Sub OnNroDocumento_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumento_ResponsableChanged()
    End Sub
    Partial Private Sub OnNombre_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ResponsableChanged()
    End Sub
    Partial Private Sub OnTelefono1_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnTelefono1_ResponsableChanged()
    End Sub
    Partial Private Sub OnEmail_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnEmail_ResponsableChanged()
    End Sub
    Partial Private Sub OnIDPoblacionChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDPoblacionChanged()
    End Sub
    Partial Private Sub OnIDDepartamentoChanging(value As System.Nullable(of System.int32))
    End Sub
    Partial Private Sub OnIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnIdPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPaisChanged()
    End Sub
    Partial Private Sub OnNombreCuidadChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCuidadChanged()
    End Sub
    Partial Private Sub OnTipo_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnTipo_ResponsableChanged()
    End Sub
    Partial Private Sub OnCargo_ResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnCargo_ResponsableChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnValidoListaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnValidoListaChanged()
    End Sub
    Partial Private Sub OnstrXml_DetallesChanging(value As String)
    End Sub
    Partial Private Sub OnstrXml_DetallesChanged()
    End Sub
    Partial Private Sub OnIDClientes_ResponsableChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClientes_ResponsableChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property IDComitente() As String
		Get
			Return Me._IDComitente
		End Get
		Set
			If (String.Equals(Me._IDComitente, value) = false) Then
				Me.OnIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente = value
				Me.SendPropertyChanged("IDComitente")
				Me.OnIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreComitente", Storage:="_NombreComitente", DbType:="Varchar(80) NOT NULL")>  _
	Public Property NombreComitente() As String
		Get
			Return Me._NombreComitente
		End Get
		Set
			If (String.Equals(Me._NombreComitente, value) = false) Then
				Me.OnNombreComitenteChanging(value)
				Me.SendPropertyChanging
				Me._NombreComitente = value
				Me.SendPropertyChanged("NombreComitente")
				Me.OnNombreComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoComitente", Storage:="_NroDocumentoComitente", DbType:="Varchar(15) NOT NULL")>  _
	Public Property NroDocumentoComitente() As String
		Get
			Return Me._NroDocumentoComitente
		End Get
		Set
			If (String.Equals(Me._NroDocumentoComitente, value) = false) Then
				Me.OnNroDocumentoComitenteChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumentoComitente = value
				Me.SendPropertyChanged("NroDocumentoComitente")
				Me.OnNroDocumentoComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion_Responsable", Storage:="_TipoIdentificacion_Responsable", DbType:="Char(1) NOT NULL")>  _
	Public Property TipoIdentificacion_Responsable() As String
		Get
			Return Me._TipoIdentificacion_Responsable
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion_Responsable, value) = false) Then
				Me.OnTipoIdentificacion_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion_Responsable = value
				Me.SendPropertyChanged("TipoIdentificacion_Responsable")
				Me.OnTipoIdentificacion_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento_Responsable", Storage:="_NroDocumento_Responsable", DbType:="Varchar(15) NOT NULL")>  _
	Public Property NroDocumento_Responsable() As String
		Get
			Return Me._NroDocumento_Responsable
		End Get
		Set
			If (String.Equals(Me._NroDocumento_Responsable, value) = false) Then
				Me.OnNroDocumento_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumento_Responsable = value
				Me.SendPropertyChanged("NroDocumento_Responsable")
				Me.OnNroDocumento_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre_Responsable", Storage:="_Nombre_Responsable", DbType:="Varchar(80) NOT NULL")>  _
	Public Property Nombre_Responsable() As String
		Get
			Return Me._Nombre_Responsable
		End Get
		Set
			If (String.Equals(Me._Nombre_Responsable, value) = false) Then
				Me.OnNombre_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Responsable = value
				Me.SendPropertyChanged("Nombre_Responsable")
				Me.OnNombre_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono1_Responsable", Storage:="_Telefono1_Responsable", DbType:="Varchar(25) NULL")>  _
	Public Property Telefono1_Responsable() As String
		Get
			Return Me._Telefono1_Responsable
		End Get
		Set
			If (String.Equals(Me._Telefono1_Responsable, value) = false) Then
				Me.OnTelefono1_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._Telefono1_Responsable = value
				Me.SendPropertyChanged("Telefono1_Responsable")
				Me.OnTelefono1_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEmail_Responsable", Storage:="_Email_Responsable", DbType:="Varchar(55) NULL")>  _
	Public Property Email_Responsable() As String
		Get
			Return Me._Email_Responsable
		End Get
		Set
			If (String.Equals(Me._Email_Responsable, value) = false) Then
				Me.OnEmail_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._Email_Responsable = value
				Me.SendPropertyChanged("Email_Responsable")
				Me.OnEmail_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPoblacion", Storage:="_IDPoblacion", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDPoblacion() As System.Nullable(of System.int32)
		Get
			Return Me._IDPoblacion
		End Get
		Set
			If (Object.Equals(Me._IDPoblacion, value) = false) Then
				Me.OnIDPoblacionChanging(value)
				Me.SendPropertyChanging
				Me._IDPoblacion = value
				Me.SendPropertyChanged("IDPoblacion")
				Me.OnIDPoblacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDepartamento", Storage:="_IDDepartamento", DbType:="Int", CanBeNull:=true)>  _
	Public Property IDDepartamento() As System.Nullable(of System.int32)
		Get
			Return Me._IDDepartamento
		End Get
		Set
			If (Object.Equals(Me._IDDepartamento, value) = false) Then
				Me.OnIDDepartamentoChanging(value)
				Me.SendPropertyChanging
				Me._IDDepartamento = value
				Me.SendPropertyChanged("IDDepartamento")
				Me.OnIDDepartamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdPais", Storage:="_IdPais", DbType:="Int NOT NULL", CanBeNull:=false)>  _
	Public Property IdPais() As Integer
		Get
			Return Me._IdPais
		End Get
		Set
			If (Object.Equals(Me._IdPais, value) = false) Then
				Me.OnIdPaisChanging(value)
				Me.SendPropertyChanging
				Me._IdPais = value
				Me.SendPropertyChanged("IdPais")
				Me.OnIdPaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCuidad", Storage:="_NombreCuidad", DbType:="Varchar(80) NOT NULL")>  _
	Public Property NombreCuidad() As String
		Get
			Return Me._NombreCuidad
		End Get
		Set
			If (String.Equals(Me._NombreCuidad, value) = false) Then
				Me.OnNombreCuidadChanging(value)
				Me.SendPropertyChanging
				Me._NombreCuidad = value
				Me.SendPropertyChanged("NombreCuidad")
				Me.OnNombreCuidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo_Responsable", Storage:="_Tipo_Responsable", DbType:="Varchar(4) NOT NULL")>  _
	Public Property Tipo_Responsable() As String
		Get
			Return Me._Tipo_Responsable
		End Get
		Set
			If (String.Equals(Me._Tipo_Responsable, value) = false) Then
				Me.OnTipo_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._Tipo_Responsable = value
				Me.SendPropertyChanged("Tipo_Responsable")
				Me.OnTipo_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCargo_Responsable", Storage:="_Cargo_Responsable", DbType:="Varchar(50) NOT NULL")>  _
	Public Property Cargo_Responsable() As String
		Get
			Return Me._Cargo_Responsable
		End Get
		Set
			If (String.Equals(Me._Cargo_Responsable, value) = false) Then
				Me.OnCargo_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._Cargo_Responsable = value
				Me.SendPropertyChanged("Cargo_Responsable")
				Me.OnCargo_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logValidoLista", Storage:="_ValidoLista", DbType:="Bit NOT NULL")>  _
	Public Property ValidoLista() As Boolean
		Get
			Return Me._ValidoLista
		End Get
		Set
			If ((Me._ValidoLista = value)  _
						= false) Then
				Me.OnValidoListaChanging(value)
				Me.SendPropertyChanging
				Me._ValidoLista = value
				Me.SendPropertyChanged("ValidoLista")
				Me.OnValidoListaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strXml_Detalles", DbType:="Varchar(MAX) NOT NULL")>  _
	Public Property strXml_Detalles() As String
		Get
			Return Me._strXml_Detalles
		End Get
		Set
			If (String.Equals(Me._strXml_Detalles, value) = false) Then
				Me.OnstrXml_DetallesChanging(value)
				Me.SendPropertyChanging
				Me._strXml_Detalles = value
				Me.SendPropertyChanged("strXml_Detalles")
				Me.OnstrXml_DetallesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClientes_Responsable", Storage:="_IDClientes_Responsable", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClientes_Responsable() As Integer
		Get
			Return Me._IDClientes_Responsable
		End Get
		Set
			If (Object.Equals(Me._IDClientes_Responsable, value) = false) Then
				Me.OnIDClientes_ResponsableChanging(value)
				Me.SendPropertyChanging
				Me._IDClientes_Responsable = value
				Me.SendPropertyChanged("IDClientes_Responsable")
				Me.OnIDClientes_ResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As System.Nullable(Of Date)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Me._Actualizacion.Equals(value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmpEncabezadoResponsable")>  _
Partial Public Class EncabezadoResponsable
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEncabezado As String
	
	Private _TipoIdentificacion As String
	
	Private _nrodocumento As String
	
	Private _Nombre As String
	
	Private _IDEncabezadoResponsable As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEncabezadoChanging(value As String)
    End Sub
    Partial Private Sub OnIdEncabezadoChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnnrodocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnnrodocumentoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIDEncabezadoResponsableChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEncabezadoResponsableChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdEncabezado", Storage:="_IdEncabezado", DbType:="Char(17) NOT NULL")>  _
	Public Property IdEncabezado() As String
		Get
			Return Me._IdEncabezado
		End Get
		Set
			If (String.Equals(Me._IdEncabezado, value) = false) Then
				Me.OnIdEncabezadoChanging(value)
				Me.SendPropertyChanging
				Me._IdEncabezado = value
				Me.SendPropertyChanged("IdEncabezado")
				Me.OnIdEncabezadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Char(1) NOT NULL")>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_nrodocumento", DbType:="Varchar(15) NOT NULL")>  _
	Public Property nrodocumento() As String
		Get
			Return Me._nrodocumento
		End Get
		Set
			If (String.Equals(Me._nrodocumento, value) = false) Then
				Me.OnnrodocumentoChanging(value)
				Me.SendPropertyChanging
				Me._nrodocumento = value
				Me.SendPropertyChanged("nrodocumento")
				Me.OnnrodocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(80) NOT NULL")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEncabezadoResponsable", Storage:="_IDEncabezadoResponsable", DbType:="int", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IDEncabezadoResponsable() As Integer
		Get
			Return Me._IDEncabezadoResponsable
		End Get
		Set
			If (Object.Equals(Me._IDEncabezadoResponsable, value) = false) Then
				Me.OnIDEncabezadoResponsableChanging(value)
				Me.SendPropertyChanging
				Me._IDEncabezadoResponsable = value
				Me.SendPropertyChanged("IDEncabezadoResponsable")
				Me.OnIDEncabezadoResponsableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClientes_Relacionados")>  _
Partial Public Class Clientes_Relacionados
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDComitente As String
	
	Private _NroDocumentoComitente As String
	
	Private _TipoIdentificacionComitente As String
	
	Private _NombreComitente As String
	
	Private _EstadoClienteComitente As String
	
	Private _ActivoComitente As Boolean
	
	Private _IDComitente_Relacionado As String
	
	Private _Nombre_Relacionado As String
	
	Private _EstadoCliente_Relacionado As String
	
	Private _Activo_Relacionado As Boolean
	
	Private _Lider As Boolean
	
	Private _strXml_Detalles As String
	
	Private _strAccion As String
	
	Private _IDClientes_Relacionados As Integer
	
	Private _Actualizacion As System.Nullable(Of Date)
	
	Private _Usuario As String
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnNroDocumentoComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoComitenteChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionComitenteChanged()
    End Sub
    Partial Private Sub OnNombreComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComitenteChanged()
    End Sub
    Partial Private Sub OnEstadoClienteComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoClienteComitenteChanged()
    End Sub
    Partial Private Sub OnActivoComitenteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoComitenteChanged()
    End Sub
    Partial Private Sub OnIDComitente_RelacionadoChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitente_RelacionadoChanged()
    End Sub
    Partial Private Sub OnNombre_RelacionadoChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_RelacionadoChanged()
    End Sub
    Partial Private Sub OnEstadoCliente_RelacionadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoCliente_RelacionadoChanged()
    End Sub
    Partial Private Sub OnActivo_RelacionadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivo_RelacionadoChanged()
    End Sub
    Partial Private Sub OnLiderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLiderChanged()
    End Sub
    Partial Private Sub OnstrXml_DetallesChanging(value As String)
    End Sub
    Partial Private Sub OnstrXml_DetallesChanged()
    End Sub
    Partial Private Sub OnstrAccionChanging(value As String)
    End Sub
    Partial Private Sub OnstrAccionChanged()
    End Sub
    Partial Private Sub OnIDClientes_RelacionadosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClientes_RelacionadosChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL")>  _
	Public Property IDComitente() As String
		Get
			Return Me._IDComitente
		End Get
		Set
			If (String.Equals(Me._IDComitente, value) = false) Then
				Me.OnIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente = value
				Me.SendPropertyChanged("IDComitente")
				Me.OnIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoComitente", Storage:="_NroDocumentoComitente", DbType:="Varchar(15) NOT NULL")>  _
	Public Property NroDocumentoComitente() As String
		Get
			Return Me._NroDocumentoComitente
		End Get
		Set
			If (String.Equals(Me._NroDocumentoComitente, value) = false) Then
				Me.OnNroDocumentoComitenteChanging(value)
				Me.SendPropertyChanging
				Me._NroDocumentoComitente = value
				Me.SendPropertyChanged("NroDocumentoComitente")
				Me.OnNroDocumentoComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacionComitente", Storage:="_TipoIdentificacionComitente", DbType:="Char(1) NOT NULL")>  _
	Public Property TipoIdentificacionComitente() As String
		Get
			Return Me._TipoIdentificacionComitente
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacionComitente, value) = false) Then
				Me.OnTipoIdentificacionComitenteChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacionComitente = value
				Me.SendPropertyChanged("TipoIdentificacionComitente")
				Me.OnTipoIdentificacionComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreComitente", Storage:="_NombreComitente", DbType:="Varchar(80) NOT NULL")>  _
	Public Property NombreComitente() As String
		Get
			Return Me._NombreComitente
		End Get
		Set
			If (String.Equals(Me._NombreComitente, value) = false) Then
				Me.OnNombreComitenteChanging(value)
				Me.SendPropertyChanging
				Me._NombreComitente = value
				Me.SendPropertyChanged("NombreComitente")
				Me.OnNombreComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoClienteComitente", Storage:="_EstadoClienteComitente", DbType:="Varchar(20)")>  _
	Public Property EstadoClienteComitente() As String
		Get
			Return Me._EstadoClienteComitente
		End Get
		Set
			If (String.Equals(Me._EstadoClienteComitente, value) = false) Then
				Me.OnEstadoClienteComitenteChanging(value)
				Me.SendPropertyChanging
				Me._EstadoClienteComitente = value
				Me.SendPropertyChanged("EstadoClienteComitente")
				Me.OnEstadoClienteComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivoComitente", Storage:="_ActivoComitente", DbType:="Bit NOT NULL")>  _
	Public Property ActivoComitente() As Boolean
		Get
			Return Me._ActivoComitente
		End Get
		Set
			If ((Me._ActivoComitente = value)  _
						= false) Then
				Me.OnActivoComitenteChanging(value)
				Me.SendPropertyChanging
				Me._ActivoComitente = value
				Me.SendPropertyChanged("ActivoComitente")
				Me.OnActivoComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente_Relacionado", Storage:="_IDComitente_Relacionado", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
	Public Property IDComitente_Relacionado() As String
		Get
			Return Me._IDComitente_Relacionado
		End Get
		Set
			If (String.Equals(Me._IDComitente_Relacionado, value) = false) Then
				Me.OnIDComitente_RelacionadoChanging(value)
				Me.SendPropertyChanging
				Me._IDComitente_Relacionado = value
				Me.SendPropertyChanged("IDComitente_Relacionado")
				Me.OnIDComitente_RelacionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre_Relacionado", Storage:="_Nombre_Relacionado", DbType:="Varchar(80) NOT NULL")>  _
	Public Property Nombre_Relacionado() As String
		Get
			Return Me._Nombre_Relacionado
		End Get
		Set
			If (String.Equals(Me._Nombre_Relacionado, value) = false) Then
				Me.OnNombre_RelacionadoChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Relacionado = value
				Me.SendPropertyChanged("Nombre_Relacionado")
				Me.OnNombre_RelacionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoCliente_Relacionado", Storage:="_EstadoCliente_Relacionado", DbType:="Varchar(20)")>  _
	Public Property EstadoCliente_Relacionado() As String
		Get
			Return Me._EstadoCliente_Relacionado
		End Get
		Set
			If (String.Equals(Me._EstadoCliente_Relacionado, value) = false) Then
				Me.OnEstadoCliente_RelacionadoChanging(value)
				Me.SendPropertyChanging
				Me._EstadoCliente_Relacionado = value
				Me.SendPropertyChanged("EstadoCliente_Relacionado")
				Me.OnEstadoCliente_RelacionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo_Relacionado", Storage:="_Activo_Relacionado", DbType:="Bit NOT NULL")>  _
	Public Property Activo_Relacionado() As Boolean
		Get
			Return Me._Activo_Relacionado
		End Get
		Set
			If ((Me._Activo_Relacionado = value)  _
						= false) Then
				Me.OnActivo_RelacionadoChanging(value)
				Me.SendPropertyChanging
				Me._Activo_Relacionado = value
				Me.SendPropertyChanged("Activo_Relacionado")
				Me.OnActivo_RelacionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>  _
	Public Property Lider() As Boolean
		Get
			Return Me._Lider
		End Get
		Set
			If ((Me._Lider = value)  _
						= false) Then
				Me.OnLiderChanging(value)
				Me.SendPropertyChanging
				Me._Lider = value
				Me.SendPropertyChanged("Lider")
				Me.OnLiderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strXml_Detalles", DbType:="Varchar(MAX) NOT NULL")>  _
	Public Property strXml_Detalles() As String
		Get
			Return Me._strXml_Detalles
		End Get
		Set
			If (String.Equals(Me._strXml_Detalles, value) = false) Then
				Me.OnstrXml_DetallesChanging(value)
				Me.SendPropertyChanging
				Me._strXml_Detalles = value
				Me.SendPropertyChanged("strXml_Detalles")
				Me.OnstrXml_DetallesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strAccion", DbType:="Varchar(20) NULL")>  _
	Public Property strAccion() As String
		Get
			Return Me._strAccion
		End Get
		Set
			If (String.Equals(Me._strAccion, value) = false) Then
				Me.OnstrAccionChanging(value)
				Me.SendPropertyChanging
				Me._strAccion = value
				Me.SendPropertyChanged("strAccion")
				Me.OnstrAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClientes_Relacionados", Storage:="_IDClientes_Relacionados", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDClientes_Relacionados() As Integer
		Get
			Return Me._IDClientes_Relacionados
		End Get
		Set
			If (Object.Equals(Me._IDClientes_Relacionados, value) = false) Then
				Me.OnIDClientes_RelacionadosChanging(value)
				Me.SendPropertyChanging
				Me._IDClientes_Relacionados = value
				Me.SendPropertyChanged("IDClientes_Relacionados")
				Me.OnIDClientes_RelacionadosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
	Public Property Actualizacion() As System.Nullable(Of Date)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Me._Actualizacion.Equals(value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmpEncabezadoRelacionado")>  _
Partial Public Class EncabezadoRelacionado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEncabezado As String
	
	Private _nrodocumento As String
	
	Private _TipoIdentificacion As String
	
	Private _Nombre As String
	
	Private _EstadoCliente As String
	
	Private _EstadoClienteD As String
	
	Private _Activo As Boolean
	
	Private _IDEncabezadoRelacionado As Integer
	
	Private _InfoSesion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEncabezadoChanging(value As String)
    End Sub
    Partial Private Sub OnIdEncabezadoChanged()
    End Sub
    Partial Private Sub OnnrodocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnnrodocumentoChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnEstadoClienteChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoClienteChanged()
    End Sub
    Partial Private Sub OnEstadoClienteDChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoClienteDChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnIDEncabezadoRelacionadoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEncabezadoRelacionadoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdEncabezado", Storage:="_IdEncabezado", DbType:="Char(17) NOT NULL")>  _
	Public Property IdEncabezado() As String
		Get
			Return Me._IdEncabezado
		End Get
		Set
			If (String.Equals(Me._IdEncabezado, value) = false) Then
				Me.OnIdEncabezadoChanging(value)
				Me.SendPropertyChanging
				Me._IdEncabezado = value
				Me.SendPropertyChanged("IdEncabezado")
				Me.OnIdEncabezadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_nrodocumento", DbType:="Varchar(15) NOT NULL")>  _
	Public Property nrodocumento() As String
		Get
			Return Me._nrodocumento
		End Get
		Set
			If (String.Equals(Me._nrodocumento, value) = false) Then
				Me.OnnrodocumentoChanging(value)
				Me.SendPropertyChanging
				Me._nrodocumento = value
				Me.SendPropertyChanged("nrodocumento")
				Me.OnnrodocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Char(20) NOT NULL")>  _
	Public Property TipoIdentificacion() As String
		Get
			Return Me._TipoIdentificacion
		End Get
		Set
			If (String.Equals(Me._TipoIdentificacion, value) = false) Then
				Me.OnTipoIdentificacionChanging(value)
				Me.SendPropertyChanging
				Me._TipoIdentificacion = value
				Me.SendPropertyChanged("TipoIdentificacion")
				Me.OnTipoIdentificacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(80) NOT NULL")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoCliente", Storage:="_EstadoCliente", DbType:="Varchar(20)")>  _
	Public Property EstadoCliente() As String
		Get
			Return Me._EstadoCliente
		End Get
		Set
			If (String.Equals(Me._EstadoCliente, value) = false) Then
				Me.OnEstadoClienteChanging(value)
				Me.SendPropertyChanging
				Me._EstadoCliente = value
				Me.SendPropertyChanged("EstadoCliente")
				Me.OnEstadoClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoClienteD", Storage:="_EstadoClienteD", DbType:="Varchar(20)")>  _
	Public Property EstadoClienteD() As String
		Get
			Return Me._EstadoClienteD
		End Get
		Set
			If (String.Equals(Me._EstadoClienteD, value) = false) Then
				Me.OnEstadoClienteDChanging(value)
				Me.SendPropertyChanging
				Me._EstadoClienteD = value
				Me.SendPropertyChanged("EstadoClienteD")
				Me.OnEstadoClienteDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEncabezadoRelacionado", Storage:="_IDEncabezadoRelacionado", DbType:="int", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IDEncabezadoRelacionado() As Integer
		Get
			Return Me._IDEncabezadoRelacionado
		End Get
		Set
			If (Object.Equals(Me._IDEncabezadoRelacionado, value) = false) Then
				Me.OnIDEncabezadoRelacionadoChanging(value)
				Me.SendPropertyChanging
				Me._IDEncabezadoRelacionado = value
				Me.SendPropertyChanged("IDEncabezadoRelacionado")
				Me.OnIDEncabezadoRelacionadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
	Public Property InfoSesion() As String
		Get
			Return Me._InfoSesion
		End Get
		Set
			If (String.Equals(Me._InfoSesion, value) = false) Then
				Me.OnInfoSesionChanging(value)
				Me.SendPropertyChanging
				Me._InfoSesion = value
				Me.SendPropertyChanged("InfoSesion")
				Me.OnInfoSesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCodigosTransaccion")>  _
Partial Public Class CodigosTransaccion
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Codigo As Integer
	
	Private _Transaccion As String
	
	Private _DetalleRC As String
	
	Private _Actualizacion As System.Nullable(Of System.Datetime)
	
	Private _Usuario As String
	
	Private _TipoTransaccion As String
	
	Private _infosesion As String
	
	Private _Accion As String
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnTransaccionChanging(value As String)
    End Sub
    Partial Private Sub OnTransaccionChanged()
    End Sub
    Partial Private Sub OnDetalleRCChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleRCChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of System.Datetime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnTipoTransaccionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoTransaccionChanged()
    End Sub
    Partial Private Sub OninfosesionChanging(value As String)
    End Sub
    Partial Private Sub OninfosesionChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As String)
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngId", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If (Object.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigo", Storage:="_Codigo", DbType:="Int NOT NULL")>  _
	Public Property Codigo() As Integer
		Get
			Return Me._Codigo
		End Get
		Set
			If ((Me._Codigo = value)  _
						= false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTransaccion", Storage:="_Transaccion", DbType:="Varchar(40)  NULL")>  _
	Public Property Transaccion() As String
		Get
			Return Me._Transaccion
		End Get
		Set
			If (String.Equals(Me._Transaccion, value) = false) Then
				Me.OnTransaccionChanging(value)
				Me.SendPropertyChanging
				Me._Transaccion = value
				Me.SendPropertyChanged("Transaccion")
				Me.OnTransaccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleRC", Storage:="_DetalleRC", DbType:="Varchar(40)  NULL")>  _
	Public Property DetalleRC() As String
		Get
			Return Me._DetalleRC
		End Get
		Set
			If (String.Equals(Me._DetalleRC, value) = false) Then
				Me.OnDetalleRCChanging(value)
				Me.SendPropertyChanging
				Me._DetalleRC = value
				Me.SendPropertyChanged("DetalleRC")
				Me.OnDetalleRCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NULL", CanBeNull:=false)>  _
	Public Property Actualizacion() As System.Nullable(Of System.Datetime)
		Get
			Return Me._Actualizacion
		End Get
		Set
			If (Object.Equals(Me._Actualizacion, value) = false) Then
				Me.OnActualizacionChanging(value)
				Me.SendPropertyChanging
				Me._Actualizacion = value
				Me.SendPropertyChanged("Actualizacion")
				Me.OnActualizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(8000)", CanBeNull:=false)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTransaccion", Storage:="_TipoTransaccion", DbType:="Varchar(1)  NULL")>  _
	Public Property TipoTransaccion() As String
		Get
			Return Me._TipoTransaccion
		End Get
		Set
			If (String.Equals(Me._TipoTransaccion, value) = false) Then
				Me.OnTipoTransaccionChanging(value)
				Me.SendPropertyChanging
				Me._TipoTransaccion = value
				Me.SendPropertyChanged("TipoTransaccion")
				Me.OnTipoTransaccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_infosesion", DbType:="Varchar(8000)")>  _
	Public Property infosesion() As String
		Get
			Return Me._infosesion
		End Get
		Set
			If (String.Equals(Me._infosesion, value) = false) Then
				Me.OninfosesionChanging(value)
				Me.SendPropertyChanging
				Me._infosesion = value
				Me.SendPropertyChanged("infosesion")
				Me.OninfosesionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accion", DbType:="varchar(20)")>  _
	Public Property Accion() As String
		Get
			Return Me._Accion
		End Get
		Set
			If (String.Equals(Me._Accion, value) = false) Then
				Me.OnAccionChanging(value)
				Me.SendPropertyChanging
				Me._Accion = value
				Me.SendPropertyChanged("Accion")
				Me.OnAccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
Partial Public Class ListadoActualizarLEO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _strTipoLEO As String
	
	Private _ObjMarcar As System.Nullable(Of Boolean)
	
	Private _lngIDLEO As System.Nullable(Of Integer)
	
	Private _strLEO As String
	
	Private _lngIDOrden As System.Nullable(Of Integer)
	
	Private _lngVersion As System.Nullable(Of Integer)
	
	Private _strTipo As String
	
	Private _strClase As String
	
	Private _strIDEspecie As String
	
	Private _dtmOrden As System.Nullable(Of Date)
	
	Private _dtmVencimiento As System.Nullable(Of Date)
	
	Private _lngIDComitente As String
	
	Private _strNroDocumento As String
	
	Private _strNombre As String
	
	Private _dblCantidad As System.Nullable(Of Double)
	
	Private _dblSuperior As System.Nullable(Of Double)
	
	Private _dblInferior As System.Nullable(Of Double)
	
	Private _dblEfectivaSuperior As System.Nullable(Of Double)
	
	Private _dblEfectivaInferior As System.Nullable(Of Double)
	
	Private _strIDReceptor As String
	
	Private _dblPorcentaje As System.Nullable(Of Double)
	
	Private _logEnPesos As System.Nullable(Of Boolean)
	
	Private _logLider As System.Nullable(Of Boolean)
	
	Private _strEstado As String
	
	Private _strTipoProductoClienteDesc As String
	
	Private _strTipoOperadorDesc As String
	
	Private _strUsuarioOperador As String
	
	Private _strTipoEspecieDesc As String
	
	Private _strNombreMesa As String
	
	Private _strCanalRec As String
	
	Private _strMedioVerificableLEO As String
	
	Private _strReceptorOrd As String
	
	Private _strSucursalRec As String
	
	Private _dtmSistema As System.Nullable(Of Date)
	
	Private _strTipoLimite As String
	
	Private _strHoraRec As String
	
	Private _dtmFechaHoraRecepcion As System.Nullable(Of Date)
	
	Private _dtmCumplimiento As System.Nullable(Of Date)
	
	Private _dtmVigenciaHasta As System.Nullable(Of Date)
	
	Private _strObjetoExtra As String
	
	Private _strUsuario As String
	
	Private _strIdReceptorToma As String
	
	Private _strNroExtensionToma As String
	
	Private _strNotas As String
	
	Private _strInstrucciones As String
	
	Private _strUsuarioIngreso As String
	
	Private _lngIDOrdenante As String
	
	Private _strNombreOrdenante As String
	
	Private _strNombreTipo As String
	
	Private _strEstadoMaximaVersion As String
	
	Private _lngVersionOriginal As System.Nullable(Of Integer)
	
	Private _pstrUsuarioConexion As String
	
	Private _pstrInfoConexion As String
	
	Private _intID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnstrTipoLEOChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoLEOChanged()
    End Sub
    Partial Private Sub OnObjMarcarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnObjMarcarChanged()
    End Sub
    Partial Private Sub OnlngIDLEOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDLEOChanged()
    End Sub
    Partial Private Sub OnstrLEOChanging(value As String)
    End Sub
    Partial Private Sub OnstrLEOChanged()
    End Sub
    Partial Private Sub OnlngIDOrdenChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDOrdenChanged()
    End Sub
    Partial Private Sub OnlngVersionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngVersionChanged()
    End Sub
    Partial Private Sub OnstrTipoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoChanged()
    End Sub
    Partial Private Sub OnstrClaseChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieChanged()
    End Sub
    Partial Private Sub OndtmOrdenChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmOrdenChanged()
    End Sub
    Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmVencimientoChanged()
    End Sub
    Partial Private Sub OnlngIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnlngIDComitenteChanged()
    End Sub
    Partial Private Sub OnstrNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnstrNroDocumentoChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblCantidadChanged()
    End Sub
    Partial Private Sub OndblSuperiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblSuperiorChanged()
    End Sub
    Partial Private Sub OndblInferiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblInferiorChanged()
    End Sub
    Partial Private Sub OndblEfectivaSuperiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblEfectivaSuperiorChanged()
    End Sub
    Partial Private Sub OndblEfectivaInferiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblEfectivaInferiorChanged()
    End Sub
    Partial Private Sub OnstrIDReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDReceptorChanged()
    End Sub
    Partial Private Sub OndblPorcentajeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblPorcentajeChanged()
    End Sub
    Partial Private Sub OnlogEnPesosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogEnPesosChanged()
    End Sub
    Partial Private Sub OnlogLiderChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogLiderChanged()
    End Sub
    Partial Private Sub OnstrEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoChanged()
    End Sub
    Partial Private Sub OnstrTipoProductoClienteDescChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoProductoClienteDescChanged()
    End Sub
    Partial Private Sub OnstrTipoOperadorDescChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoOperadorDescChanged()
    End Sub
    Partial Private Sub OnstrUsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnstrTipoEspecieDescChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoEspecieDescChanged()
    End Sub
    Partial Private Sub OnstrNombreMesaChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreMesaChanged()
    End Sub
    Partial Private Sub OnstrCanalRecChanging(value As String)
    End Sub
    Partial Private Sub OnstrCanalRecChanged()
    End Sub
    Partial Private Sub OnstrMedioVerificableLEOChanging(value As String)
    End Sub
    Partial Private Sub OnstrMedioVerificableLEOChanged()
    End Sub
    Partial Private Sub OnstrReceptorOrdChanging(value As String)
    End Sub
    Partial Private Sub OnstrReceptorOrdChanged()
    End Sub
    Partial Private Sub OnstrSucursalRecChanging(value As String)
    End Sub
    Partial Private Sub OnstrSucursalRecChanged()
    End Sub
    Partial Private Sub OndtmSistemaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmSistemaChanged()
    End Sub
    Partial Private Sub OnstrTipoLimiteChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoLimiteChanged()
    End Sub
    Partial Private Sub OnstrHoraRecChanging(value As String)
    End Sub
    Partial Private Sub OnstrHoraRecChanged()
    End Sub
    Partial Private Sub OndtmFechaHoraRecepcionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmFechaHoraRecepcionChanged()
    End Sub
    Partial Private Sub OndtmCumplimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmCumplimientoChanged()
    End Sub
    Partial Private Sub OndtmVigenciaHastaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmVigenciaHastaChanged()
    End Sub
    Partial Private Sub OnstrObjetoExtraChanging(value As String)
    End Sub
    Partial Private Sub OnstrObjetoExtraChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrIdReceptorTomaChanging(value As String)
    End Sub
    Partial Private Sub OnstrIdReceptorTomaChanged()
    End Sub
    Partial Private Sub OnstrNroExtensionTomaChanging(value As String)
    End Sub
    Partial Private Sub OnstrNroExtensionTomaChanged()
    End Sub
    Partial Private Sub OnstrNotasChanging(value As String)
    End Sub
    Partial Private Sub OnstrNotasChanged()
    End Sub
    Partial Private Sub OnstrInstruccionesChanging(value As String)
    End Sub
    Partial Private Sub OnstrInstruccionesChanged()
    End Sub
    Partial Private Sub OnstrUsuarioIngresoChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioIngresoChanged()
    End Sub
    Partial Private Sub OnlngIDOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnlngIDOrdenanteChanged()
    End Sub
    Partial Private Sub OnstrNombreOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreOrdenanteChanged()
    End Sub
    Partial Private Sub OnstrNombreTipoChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreTipoChanged()
    End Sub
    Partial Private Sub OnstrEstadoMaximaVersionChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoMaximaVersionChanged()
    End Sub
    Partial Private Sub OnlngVersionOriginalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngVersionOriginalChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    Partial Private Sub OnintIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoLEO", DbType:="VarChar(1000) NOT NULL")>  _
	Public Property strTipoLEO() As String
		Get
			Return Me._strTipoLEO
		End Get
		Set
			If (String.Equals(Me._strTipoLEO, value) = false) Then
				Me.OnstrTipoLEOChanging(value)
				Me.SendPropertyChanging
				Me._strTipoLEO = value
				Me.SendPropertyChanged("strTipoLEO")
				Me.OnstrTipoLEOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjMarcar", DbType:="Bit NOT NULL")>  _
	Public Property ObjMarcar() As System.Nullable(Of Boolean)
		Get
			Return Me._ObjMarcar
		End Get
		Set
			If (Me._ObjMarcar.Equals(value) = false) Then
				Me.OnObjMarcarChanging(value)
				Me.SendPropertyChanging
				Me._ObjMarcar = value
				Me.SendPropertyChanged("ObjMarcar")
				Me.OnObjMarcarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDLEO", DbType:="Int NOT NULL")>  _
	Public Property lngIDLEO() As System.Nullable(Of Integer)
		Get
			Return Me._lngIDLEO
		End Get
		Set
			If (Me._lngIDLEO.Equals(value) = false) Then
				Me.OnlngIDLEOChanging(value)
				Me.SendPropertyChanging
				Me._lngIDLEO = value
				Me.SendPropertyChanged("lngIDLEO")
				Me.OnlngIDLEOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strLEO", DbType:="VarChar(5000) NOT NULL")>  _
	Public Property strLEO() As String
		Get
			Return Me._strLEO
		End Get
		Set
			If (String.Equals(Me._strLEO, value) = false) Then
				Me.OnstrLEOChanging(value)
				Me.SendPropertyChanging
				Me._strLEO = value
				Me.SendPropertyChanged("strLEO")
				Me.OnstrLEOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDOrden", DbType:="Int")>  _
	Public Property lngIDOrden() As System.Nullable(Of Integer)
		Get
			Return Me._lngIDOrden
		End Get
		Set
			If (Me._lngIDOrden.Equals(value) = false) Then
				Me.OnlngIDOrdenChanging(value)
				Me.SendPropertyChanging
				Me._lngIDOrden = value
				Me.SendPropertyChanged("lngIDOrden")
				Me.OnlngIDOrdenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngVersion", DbType:="Int")>  _
	Public Property lngVersion() As System.Nullable(Of Integer)
		Get
			Return Me._lngVersion
		End Get
		Set
			If (Me._lngVersion.Equals(value) = false) Then
				Me.OnlngVersionChanging(value)
				Me.SendPropertyChanging
				Me._lngVersion = value
				Me.SendPropertyChanged("lngVersion")
				Me.OnlngVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="VarChar(1) NOT NULL")>  _
	Public Property strTipo() As String
		Get
			Return Me._strTipo
		End Get
		Set
			If (String.Equals(Me._strTipo, value) = false) Then
				Me.OnstrTipoChanging(value)
				Me.SendPropertyChanging
				Me._strTipo = value
				Me.SendPropertyChanged("strTipo")
				Me.OnstrTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClase", DbType:="VarChar(1) NOT NULL")>  _
	Public Property strClase() As String
		Get
			Return Me._strClase
		End Get
		Set
			If (String.Equals(Me._strClase, value) = false) Then
				Me.OnstrClaseChanging(value)
				Me.SendPropertyChanging
				Me._strClase = value
				Me.SendPropertyChanged("strClase")
				Me.OnstrClaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="VarChar(15) NOT NULL")>  _
	Public Property strIDEspecie() As String
		Get
			Return Me._strIDEspecie
		End Get
		Set
			If (String.Equals(Me._strIDEspecie, value) = false) Then
				Me.OnstrIDEspecieChanging(value)
				Me.SendPropertyChanging
				Me._strIDEspecie = value
				Me.SendPropertyChanged("strIDEspecie")
				Me.OnstrIDEspecieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmOrden", DbType:="DateTime")>  _
	Public Property dtmOrden() As System.Nullable(Of Date)
		Get
			Return Me._dtmOrden
		End Get
		Set
			If (Me._dtmOrden.Equals(value) = false) Then
				Me.OndtmOrdenChanging(value)
				Me.SendPropertyChanging
				Me._dtmOrden = value
				Me.SendPropertyChanged("dtmOrden")
				Me.OndtmOrdenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="DateTime")>  _
	Public Property dtmVencimiento() As System.Nullable(Of Date)
		Get
			Return Me._dtmVencimiento
		End Get
		Set
			If (Me._dtmVencimiento.Equals(value) = false) Then
				Me.OndtmVencimientoChanging(value)
				Me.SendPropertyChanging
				Me._dtmVencimiento = value
				Me.SendPropertyChanged("dtmVencimiento")
				Me.OndtmVencimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Char(17)")>  _
	Public Property lngIDComitente() As String
		Get
			Return Me._lngIDComitente
		End Get
		Set
			If (String.Equals(Me._lngIDComitente, value) = false) Then
				Me.OnlngIDComitenteChanging(value)
				Me.SendPropertyChanging
				Me._lngIDComitente = value
				Me.SendPropertyChanged("lngIDComitente")
				Me.OnlngIDComitenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroDocumento", DbType:="Char(30)")>  _
	Public Property strNroDocumento() As String
		Get
			Return Me._strNroDocumento
		End Get
		Set
			If (String.Equals(Me._strNroDocumento, value) = false) Then
				Me.OnstrNroDocumentoChanging(value)
				Me.SendPropertyChanging
				Me._strNroDocumento = value
				Me.SendPropertyChanged("strNroDocumento")
				Me.OnstrNroDocumentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strNombre() As String
		Get
			Return Me._strNombre
		End Get
		Set
			If (String.Equals(Me._strNombre, value) = false) Then
				Me.OnstrNombreChanging(value)
				Me.SendPropertyChanging
				Me._strNombre = value
				Me.SendPropertyChanged("strNombre")
				Me.OnstrNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float")>  _
	Public Property dblCantidad() As System.Nullable(Of Double)
		Get
			Return Me._dblCantidad
		End Get
		Set
			If (Me._dblCantidad.Equals(value) = false) Then
				Me.OndblCantidadChanging(value)
				Me.SendPropertyChanging
				Me._dblCantidad = value
				Me.SendPropertyChanged("dblCantidad")
				Me.OndblCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblSuperior", DbType:="Float")>  _
	Public Property dblSuperior() As System.Nullable(Of Double)
		Get
			Return Me._dblSuperior
		End Get
		Set
			If (Me._dblSuperior.Equals(value) = false) Then
				Me.OndblSuperiorChanging(value)
				Me.SendPropertyChanging
				Me._dblSuperior = value
				Me.SendPropertyChanged("dblSuperior")
				Me.OndblSuperiorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblInferior", DbType:="Float")>  _
	Public Property dblInferior() As System.Nullable(Of Double)
		Get
			Return Me._dblInferior
		End Get
		Set
			If (Me._dblInferior.Equals(value) = false) Then
				Me.OndblInferiorChanging(value)
				Me.SendPropertyChanging
				Me._dblInferior = value
				Me.SendPropertyChanged("dblInferior")
				Me.OndblInferiorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblEfectivaSuperior", DbType:="Float")>  _
	Public Property dblEfectivaSuperior() As System.Nullable(Of Double)
		Get
			Return Me._dblEfectivaSuperior
		End Get
		Set
			If (Me._dblEfectivaSuperior.Equals(value) = false) Then
				Me.OndblEfectivaSuperiorChanging(value)
				Me.SendPropertyChanging
				Me._dblEfectivaSuperior = value
				Me.SendPropertyChanged("dblEfectivaSuperior")
				Me.OndblEfectivaSuperiorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblEfectivaInferior", DbType:="Float")>  _
	Public Property dblEfectivaInferior() As System.Nullable(Of Double)
		Get
			Return Me._dblEfectivaInferior
		End Get
		Set
			If (Me._dblEfectivaInferior.Equals(value) = false) Then
				Me.OndblEfectivaInferiorChanging(value)
				Me.SendPropertyChanging
				Me._dblEfectivaInferior = value
				Me.SendPropertyChanged("dblEfectivaInferior")
				Me.OndblEfectivaInferiorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDReceptor", DbType:="VarChar(4) NOT NULL")>  _
	Public Property strIDReceptor() As String
		Get
			Return Me._strIDReceptor
		End Get
		Set
			If (String.Equals(Me._strIDReceptor, value) = false) Then
				Me.OnstrIDReceptorChanging(value)
				Me.SendPropertyChanging
				Me._strIDReceptor = value
				Me.SendPropertyChanged("strIDReceptor")
				Me.OnstrIDReceptorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentaje", DbType:="Float")>  _
	Public Property dblPorcentaje() As System.Nullable(Of Double)
		Get
			Return Me._dblPorcentaje
		End Get
		Set
			If (Me._dblPorcentaje.Equals(value) = false) Then
				Me.OndblPorcentajeChanging(value)
				Me.SendPropertyChanging
				Me._dblPorcentaje = value
				Me.SendPropertyChanged("dblPorcentaje")
				Me.OndblPorcentajeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEnPesos", DbType:="Bit NOT NULL")>  _
	Public Property logEnPesos() As System.Nullable(Of Boolean)
		Get
			Return Me._logEnPesos
		End Get
		Set
			If (Me._logEnPesos.Equals(value) = false) Then
				Me.OnlogEnPesosChanging(value)
				Me.SendPropertyChanging
				Me._logEnPesos = value
				Me.SendPropertyChanged("logEnPesos")
				Me.OnlogEnPesosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logLider", DbType:="Bit NOT NULL")>  _
	Public Property logLider() As System.Nullable(Of Boolean)
		Get
			Return Me._logLider
		End Get
		Set
			If (Me._logLider.Equals(value) = false) Then
				Me.OnlogLiderChanging(value)
				Me.SendPropertyChanging
				Me._logLider = value
				Me.SendPropertyChanged("logLider")
				Me.OnlogLiderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstado", DbType:="VarChar(1) NOT NULL")>  _
	Public Property strEstado() As String
		Get
			Return Me._strEstado
		End Get
		Set
			If (String.Equals(Me._strEstado, value) = false) Then
				Me.OnstrEstadoChanging(value)
				Me.SendPropertyChanging
				Me._strEstado = value
				Me.SendPropertyChanged("strEstado")
				Me.OnstrEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoProductoClienteDesc", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strTipoProductoClienteDesc() As String
		Get
			Return Me._strTipoProductoClienteDesc
		End Get
		Set
			If (String.Equals(Me._strTipoProductoClienteDesc, value) = false) Then
				Me.OnstrTipoProductoClienteDescChanging(value)
				Me.SendPropertyChanging
				Me._strTipoProductoClienteDesc = value
				Me.SendPropertyChanged("strTipoProductoClienteDesc")
				Me.OnstrTipoProductoClienteDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoOperadorDesc", DbType:="VarChar(30) NOT NULL")>  _
	Public Property strTipoOperadorDesc() As String
		Get
			Return Me._strTipoOperadorDesc
		End Get
		Set
			If (String.Equals(Me._strTipoOperadorDesc, value) = false) Then
				Me.OnstrTipoOperadorDescChanging(value)
				Me.SendPropertyChanging
				Me._strTipoOperadorDesc = value
				Me.SendPropertyChanged("strTipoOperadorDesc")
				Me.OnstrTipoOperadorDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuarioOperador", DbType:="VarChar(20) NOT NULL")>  _
	Public Property strUsuarioOperador() As String
		Get
			Return Me._strUsuarioOperador
		End Get
		Set
			If (String.Equals(Me._strUsuarioOperador, value) = false) Then
				Me.OnstrUsuarioOperadorChanging(value)
				Me.SendPropertyChanging
				Me._strUsuarioOperador = value
				Me.SendPropertyChanged("strUsuarioOperador")
				Me.OnstrUsuarioOperadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoEspecieDesc", DbType:="VarChar(15) NOT NULL")>  _
	Public Property strTipoEspecieDesc() As String
		Get
			Return Me._strTipoEspecieDesc
		End Get
		Set
			If (String.Equals(Me._strTipoEspecieDesc, value) = false) Then
				Me.OnstrTipoEspecieDescChanging(value)
				Me.SendPropertyChanging
				Me._strTipoEspecieDesc = value
				Me.SendPropertyChanged("strTipoEspecieDesc")
				Me.OnstrTipoEspecieDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreMesa", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strNombreMesa() As String
		Get
			Return Me._strNombreMesa
		End Get
		Set
			If (String.Equals(Me._strNombreMesa, value) = false) Then
				Me.OnstrNombreMesaChanging(value)
				Me.SendPropertyChanging
				Me._strNombreMesa = value
				Me.SendPropertyChanged("strNombreMesa")
				Me.OnstrNombreMesaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCanalRec", DbType:="VarChar(100) NOT NULL")>  _
	Public Property strCanalRec() As String
		Get
			Return Me._strCanalRec
		End Get
		Set
			If (String.Equals(Me._strCanalRec, value) = false) Then
				Me.OnstrCanalRecChanging(value)
				Me.SendPropertyChanging
				Me._strCanalRec = value
				Me.SendPropertyChanged("strCanalRec")
				Me.OnstrCanalRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMedioVerificableLEO", DbType:="VarChar(100) NOT NULL")>  _
	Public Property strMedioVerificableLEO() As String
		Get
			Return Me._strMedioVerificableLEO
		End Get
		Set
			If (String.Equals(Me._strMedioVerificableLEO, value) = false) Then
				Me.OnstrMedioVerificableLEOChanging(value)
				Me.SendPropertyChanging
				Me._strMedioVerificableLEO = value
				Me.SendPropertyChanged("strMedioVerificableLEO")
				Me.OnstrMedioVerificableLEOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strReceptorOrd", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strReceptorOrd() As String
		Get
			Return Me._strReceptorOrd
		End Get
		Set
			If (String.Equals(Me._strReceptorOrd, value) = false) Then
				Me.OnstrReceptorOrdChanging(value)
				Me.SendPropertyChanging
				Me._strReceptorOrd = value
				Me.SendPropertyChanged("strReceptorOrd")
				Me.OnstrReceptorOrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strSucursalRec", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strSucursalRec() As String
		Get
			Return Me._strSucursalRec
		End Get
		Set
			If (String.Equals(Me._strSucursalRec, value) = false) Then
				Me.OnstrSucursalRecChanging(value)
				Me.SendPropertyChanging
				Me._strSucursalRec = value
				Me.SendPropertyChanged("strSucursalRec")
				Me.OnstrSucursalRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmSistema", DbType:="DateTime")>  _
	Public Property dtmSistema() As System.Nullable(Of Date)
		Get
			Return Me._dtmSistema
		End Get
		Set
			If (Me._dtmSistema.Equals(value) = false) Then
				Me.OndtmSistemaChanging(value)
				Me.SendPropertyChanging
				Me._dtmSistema = value
				Me.SendPropertyChanged("dtmSistema")
				Me.OndtmSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoLimite", DbType:="VarChar(30) NOT NULL")>  _
	Public Property strTipoLimite() As String
		Get
			Return Me._strTipoLimite
		End Get
		Set
			If (String.Equals(Me._strTipoLimite, value) = false) Then
				Me.OnstrTipoLimiteChanging(value)
				Me.SendPropertyChanging
				Me._strTipoLimite = value
				Me.SendPropertyChanged("strTipoLimite")
				Me.OnstrTipoLimiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strHoraRec", DbType:="VarChar(10) NOT NULL")>  _
	Public Property strHoraRec() As String
		Get
			Return Me._strHoraRec
		End Get
		Set
			If (String.Equals(Me._strHoraRec, value) = false) Then
				Me.OnstrHoraRecChanging(value)
				Me.SendPropertyChanging
				Me._strHoraRec = value
				Me.SendPropertyChanged("strHoraRec")
				Me.OnstrHoraRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaHoraRecepcion", DbType:="DateTime")>  _
	Public Property dtmFechaHoraRecepcion() As System.Nullable(Of Date)
		Get
			Return Me._dtmFechaHoraRecepcion
		End Get
		Set
			If (Me._dtmFechaHoraRecepcion.Equals(value) = false) Then
				Me.OndtmFechaHoraRecepcionChanging(value)
				Me.SendPropertyChanging
				Me._dtmFechaHoraRecepcion = value
				Me.SendPropertyChanged("dtmFechaHoraRecepcion")
				Me.OndtmFechaHoraRecepcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmCumplimiento", DbType:="DateTime")>  _
	Public Property dtmCumplimiento() As System.Nullable(Of Date)
		Get
			Return Me._dtmCumplimiento
		End Get
		Set
			If (Me._dtmCumplimiento.Equals(value) = false) Then
				Me.OndtmCumplimientoChanging(value)
				Me.SendPropertyChanging
				Me._dtmCumplimiento = value
				Me.SendPropertyChanged("dtmCumplimiento")
				Me.OndtmCumplimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVigenciaHasta", DbType:="DateTime")>  _
	Public Property dtmVigenciaHasta() As System.Nullable(Of Date)
		Get
			Return Me._dtmVigenciaHasta
		End Get
		Set
			If (Me._dtmVigenciaHasta.Equals(value) = false) Then
				Me.OndtmVigenciaHastaChanging(value)
				Me.SendPropertyChanging
				Me._dtmVigenciaHasta = value
				Me.SendPropertyChanged("dtmVigenciaHasta")
				Me.OndtmVigenciaHastaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strObjetoExtra", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strObjetoExtra() As String
		Get
			Return Me._strObjetoExtra
		End Get
		Set
			If (String.Equals(Me._strObjetoExtra, value) = false) Then
				Me.OnstrObjetoExtraChanging(value)
				Me.SendPropertyChanging
				Me._strObjetoExtra = value
				Me.SendPropertyChanged("strObjetoExtra")
				Me.OnstrObjetoExtraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VarChar(60) NOT NULL")>  _
	Public Property strUsuario() As String
		Get
			Return Me._strUsuario
		End Get
		Set
			If (String.Equals(Me._strUsuario, value) = false) Then
				Me.OnstrUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._strUsuario = value
				Me.SendPropertyChanged("strUsuario")
				Me.OnstrUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIdReceptorToma", DbType:="VarChar(60) NOT NULL")>  _
	Public Property strIdReceptorToma() As String
		Get
			Return Me._strIdReceptorToma
		End Get
		Set
			If (String.Equals(Me._strIdReceptorToma, value) = false) Then
				Me.OnstrIdReceptorTomaChanging(value)
				Me.SendPropertyChanging
				Me._strIdReceptorToma = value
				Me.SendPropertyChanged("strIdReceptorToma")
				Me.OnstrIdReceptorTomaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroExtensionToma", DbType:="VarChar(10) NOT NULL")>  _
	Public Property strNroExtensionToma() As String
		Get
			Return Me._strNroExtensionToma
		End Get
		Set
			If (String.Equals(Me._strNroExtensionToma, value) = false) Then
				Me.OnstrNroExtensionTomaChanging(value)
				Me.SendPropertyChanging
				Me._strNroExtensionToma = value
				Me.SendPropertyChanged("strNroExtensionToma")
				Me.OnstrNroExtensionTomaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNotas", DbType:="VarChar(255) NOT NULL")>  _
	Public Property strNotas() As String
		Get
			Return Me._strNotas
		End Get
		Set
			If (String.Equals(Me._strNotas, value) = false) Then
				Me.OnstrNotasChanging(value)
				Me.SendPropertyChanging
				Me._strNotas = value
				Me.SendPropertyChanged("strNotas")
				Me.OnstrNotasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInstrucciones", DbType:="VarChar(255) NOT NULL")>  _
	Public Property strInstrucciones() As String
		Get
			Return Me._strInstrucciones
		End Get
		Set
			If (String.Equals(Me._strInstrucciones, value) = false) Then
				Me.OnstrInstruccionesChanging(value)
				Me.SendPropertyChanging
				Me._strInstrucciones = value
				Me.SendPropertyChanged("strInstrucciones")
				Me.OnstrInstruccionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuarioIngreso", DbType:="VarChar(60) NOT NULL")>  _
	Public Property strUsuarioIngreso() As String
		Get
			Return Me._strUsuarioIngreso
		End Get
		Set
			If (String.Equals(Me._strUsuarioIngreso, value) = false) Then
				Me.OnstrUsuarioIngresoChanging(value)
				Me.SendPropertyChanging
				Me._strUsuarioIngreso = value
				Me.SendPropertyChanged("strUsuarioIngreso")
				Me.OnstrUsuarioIngresoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDOrdenante", DbType:="Char(17)")>  _
	Public Property lngIDOrdenante() As String
		Get
			Return Me._lngIDOrdenante
		End Get
		Set
			If (String.Equals(Me._lngIDOrdenante, value) = false) Then
				Me.OnlngIDOrdenanteChanging(value)
				Me.SendPropertyChanging
				Me._lngIDOrdenante = value
				Me.SendPropertyChanged("lngIDOrdenante")
				Me.OnlngIDOrdenanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreOrdenante", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strNombreOrdenante() As String
		Get
			Return Me._strNombreOrdenante
		End Get
		Set
			If (String.Equals(Me._strNombreOrdenante, value) = false) Then
				Me.OnstrNombreOrdenanteChanging(value)
				Me.SendPropertyChanging
				Me._strNombreOrdenante = value
				Me.SendPropertyChanged("strNombreOrdenante")
				Me.OnstrNombreOrdenanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreTipo", DbType:="VarChar(50) NOT NULL")>  _
	Public Property strNombreTipo() As String
		Get
			Return Me._strNombreTipo
		End Get
		Set
			If (String.Equals(Me._strNombreTipo, value) = false) Then
				Me.OnstrNombreTipoChanging(value)
				Me.SendPropertyChanging
				Me._strNombreTipo = value
				Me.SendPropertyChanged("strNombreTipo")
				Me.OnstrNombreTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoMaximaVersion", DbType:="VarChar(1) NOT NULL")>  _
	Public Property strEstadoMaximaVersion() As String
		Get
			Return Me._strEstadoMaximaVersion
		End Get
		Set
			If (String.Equals(Me._strEstadoMaximaVersion, value) = false) Then
				Me.OnstrEstadoMaximaVersionChanging(value)
				Me.SendPropertyChanging
				Me._strEstadoMaximaVersion = value
				Me.SendPropertyChanged("strEstadoMaximaVersion")
				Me.OnstrEstadoMaximaVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngVersionOriginal", DbType:="Int")>  _
	Public Property lngVersionOriginal() As System.Nullable(Of Integer)
		Get
			Return Me._lngVersionOriginal
		End Get
		Set
			If (Me._lngVersionOriginal.Equals(value) = false) Then
				Me.OnlngVersionOriginalChanging(value)
				Me.SendPropertyChanging
				Me._lngVersionOriginal = value
				Me.SendPropertyChanged("lngVersionOriginal")
				Me.OnlngVersionOriginalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
	Public Property pstrUsuarioConexion() As String
		Get
			Return Me._pstrUsuarioConexion
		End Get
		Set
			If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
				Me.OnpstrUsuarioConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrUsuarioConexion = value
				Me.SendPropertyChanged("pstrUsuarioConexion")
				Me.OnpstrUsuarioConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
	Public Property pstrInfoConexion() As String
		Get
			Return Me._pstrInfoConexion
		End Get
		Set
			If (String.Equals(Me._pstrInfoConexion, value) = false) Then
				Me.OnpstrInfoConexionChanging(value)
				Me.SendPropertyChanging
				Me._pstrInfoConexion = value
				Me.SendPropertyChanged("pstrInfoConexion")
				Me.OnpstrInfoConexionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property intID() As Integer
		Get
			Return Me._intID
		End Get
		Set
			If ((Me._intID = value)  _
						= false) Then
				Me.OnintIDChanging(value)
				Me.SendPropertyChanging
				Me._intID = value
				Me.SendPropertyChanged("intID")
				Me.OnintIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class uspOyDNet_Maestros_EspeciesISIN_Importar_AmortizacionesResult
	
	Private _intIdAmortizacionEspecie As Integer
	
	Private _dtmFechaAmortizacionEspecie As Date
	
	Private _dblPorcentajeAmortizacionEspecie As Double
	
	Private _intIdIsinFungible As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdAmortizacionEspecie", DbType:="Int NOT NULL")>  _
	Public Property intIdAmortizacionEspecie() As Integer
		Get
			Return Me._intIdAmortizacionEspecie
		End Get
		Set
			If ((Me._intIdAmortizacionEspecie = value)  _
						= false) Then
				Me._intIdAmortizacionEspecie = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaAmortizacionEspecie", DbType:="DateTime NOT NULL")>  _
	Public Property dtmFechaAmortizacionEspecie() As Date
		Get
			Return Me._dtmFechaAmortizacionEspecie
		End Get
		Set
			If ((Me._dtmFechaAmortizacionEspecie = value)  _
						= false) Then
				Me._dtmFechaAmortizacionEspecie = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeAmortizacionEspecie", DbType:="Float NOT NULL")>  _
	Public Property dblPorcentajeAmortizacionEspecie() As Double
		Get
			Return Me._dblPorcentajeAmortizacionEspecie
		End Get
		Set
			If ((Me._dblPorcentajeAmortizacionEspecie = value)  _
						= false) Then
				Me._dblPorcentajeAmortizacionEspecie = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdIsinFungible", DbType:="Int NOT NULL")>  _
	Public Property intIdIsinFungible() As Integer
		Get
			Return Me._intIdIsinFungible
		End Get
		Set
			If ((Me._intIdIsinFungible = value)  _
						= false) Then
				Me._intIdIsinFungible = value
			End If
		End Set
	End Property
End Class

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class dbPLAT_PreordenesEntities
    Inherits DbContext

	Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property tblPreOrdenes() As DbSet(Of tblPreOrdenes)
    Public Overridable Property tblPreOrdenes_Portafolio() As DbSet(Of tblPreOrdenes_Portafolio)

    Public Overridable Function usp_PreOrdenes_Validar(pintID As Nullable(Of Integer), pdtmFechaInversion As Nullable(Of Date), pdtmFechaVigencia As Nullable(Of Date), pintIDPersona As Nullable(Of Integer), pstrIDComitente As String, pstrTipoPreOrden As String, pstrTipoInversion As String, pintIDEntidad As Nullable(Of Integer), pstrInstrumento As String, pstrIntencion As String, pdblValor As Nullable(Of Double), pdblPrecio As Nullable(Of Double), pdblRentabilidadMinima As Nullable(Of Double), pdblRentabilidadMaxima As Nullable(Of Double), pstrInstrucciones As String, plogActivo As Nullable(Of Boolean), pstrDetallePortafolio As String, plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrMaquina As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pdtmFechaInversionParameter As ObjectParameter = If(pdtmFechaInversion.HasValue, New ObjectParameter("pdtmFechaInversion", pdtmFechaInversion), New ObjectParameter("pdtmFechaInversion", GetType(Date)))

        Dim pdtmFechaVigenciaParameter As ObjectParameter = If(pdtmFechaVigencia.HasValue, New ObjectParameter("pdtmFechaVigencia", pdtmFechaVigencia), New ObjectParameter("pdtmFechaVigencia", GetType(Date)))

        Dim pintIDPersonaParameter As ObjectParameter = If(pintIDPersona.HasValue, New ObjectParameter("pintIDPersona", pintIDPersona), New ObjectParameter("pintIDPersona", GetType(Integer)))

        Dim pstrIDComitenteParameter As ObjectParameter = If(pstrIDComitente IsNot Nothing, New ObjectParameter("pstrIDComitente", pstrIDComitente), New ObjectParameter("pstrIDComitente", GetType(String)))

        Dim pstrTipoPreOrdenParameter As ObjectParameter = If(pstrTipoPreOrden IsNot Nothing, New ObjectParameter("pstrTipoPreOrden", pstrTipoPreOrden), New ObjectParameter("pstrTipoPreOrden", GetType(String)))

        Dim pstrTipoInversionParameter As ObjectParameter = If(pstrTipoInversion IsNot Nothing, New ObjectParameter("pstrTipoInversion", pstrTipoInversion), New ObjectParameter("pstrTipoInversion", GetType(String)))

        Dim pintIDEntidadParameter As ObjectParameter = If(pintIDEntidad.HasValue, New ObjectParameter("pintIDEntidad", pintIDEntidad), New ObjectParameter("pintIDEntidad", GetType(Integer)))

        Dim pstrInstrumentoParameter As ObjectParameter = If(pstrInstrumento IsNot Nothing, New ObjectParameter("pstrInstrumento", pstrInstrumento), New ObjectParameter("pstrInstrumento", GetType(String)))

        Dim pstrIntencionParameter As ObjectParameter = If(pstrIntencion IsNot Nothing, New ObjectParameter("pstrIntencion", pstrIntencion), New ObjectParameter("pstrIntencion", GetType(String)))

        Dim pdblValorParameter As ObjectParameter = If(pdblValor.HasValue, New ObjectParameter("pdblValor", pdblValor), New ObjectParameter("pdblValor", GetType(Double)))

        Dim pdblPrecioParameter As ObjectParameter = If(pdblPrecio.HasValue, New ObjectParameter("pdblPrecio", pdblPrecio), New ObjectParameter("pdblPrecio", GetType(Double)))

        Dim pdblRentabilidadMinimaParameter As ObjectParameter = If(pdblRentabilidadMinima.HasValue, New ObjectParameter("pdblRentabilidadMinima", pdblRentabilidadMinima), New ObjectParameter("pdblRentabilidadMinima", GetType(Double)))

        Dim pdblRentabilidadMaximaParameter As ObjectParameter = If(pdblRentabilidadMaxima.HasValue, New ObjectParameter("pdblRentabilidadMaxima", pdblRentabilidadMaxima), New ObjectParameter("pdblRentabilidadMaxima", GetType(Double)))

        Dim pstrInstruccionesParameter As ObjectParameter = If(pstrInstrucciones IsNot Nothing, New ObjectParameter("pstrInstrucciones", pstrInstrucciones), New ObjectParameter("pstrInstrucciones", GetType(String)))

        Dim plogActivoParameter As ObjectParameter = If(plogActivo.HasValue, New ObjectParameter("plogActivo", plogActivo), New ObjectParameter("plogActivo", GetType(Boolean)))

        Dim pstrDetallePortafolioParameter As ObjectParameter = If(pstrDetallePortafolio IsNot Nothing, New ObjectParameter("pstrDetallePortafolio", pstrDetallePortafolio), New ObjectParameter("pstrDetallePortafolio", GetType(String)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrMaquinaParameter As ObjectParameter = If(pstrMaquina IsNot Nothing, New ObjectParameter("pstrMaquina", pstrMaquina), New ObjectParameter("pstrMaquina", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_PreOrdenes_Validar", pintIDParameter, pdtmFechaInversionParameter, pdtmFechaVigenciaParameter, pintIDPersonaParameter, pstrIDComitenteParameter, pstrTipoPreOrdenParameter, pstrTipoInversionParameter, pintIDEntidadParameter, pstrInstrumentoParameter, pstrIntencionParameter, pdblValorParameter, pdblPrecioParameter, pdblRentabilidadMinimaParameter, pdblRentabilidadMaximaParameter, pstrInstruccionesParameter, plogActivoParameter, pstrDetallePortafolioParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrMaquinaParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_Cliente_ConsultarPortafolio(pstrIDComitente As String, pstrTipoInversion As String, pstrInstrumento As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblClientes_Portafolio)
        Dim pstrIDComitenteParameter As ObjectParameter = If(pstrIDComitente IsNot Nothing, New ObjectParameter("pstrIDComitente", pstrIDComitente), New ObjectParameter("pstrIDComitente", GetType(String)))

        Dim pstrTipoInversionParameter As ObjectParameter = If(pstrTipoInversion IsNot Nothing, New ObjectParameter("pstrTipoInversion", pstrTipoInversion), New ObjectParameter("pstrTipoInversion", GetType(String)))

        Dim pstrInstrumentoParameter As ObjectParameter = If(pstrInstrumento IsNot Nothing, New ObjectParameter("pstrInstrumento", pstrInstrumento), New ObjectParameter("pstrInstrumento", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblClientes_Portafolio)("usp_PreOrdenes_Cliente_ConsultarPortafolio", pstrIDComitenteParameter, pstrTipoInversionParameter, pstrInstrumentoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_Consultar(pintID As Nullable(Of Integer), pdtmFechaInversion As Nullable(Of Date), pdtmFechaVigencia As Nullable(Of Date), pintIDPersona As Nullable(Of Integer), pstrIDComitente As String, pstrTipoPreOrden As String, pstrTipoInversion As String, pintIDEntidad As Nullable(Of Integer), pstrIntencion As String, plogActivo As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblPreOrdenes)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pdtmFechaInversionParameter As ObjectParameter = If(pdtmFechaInversion.HasValue, New ObjectParameter("pdtmFechaInversion", pdtmFechaInversion), New ObjectParameter("pdtmFechaInversion", GetType(Date)))

        Dim pdtmFechaVigenciaParameter As ObjectParameter = If(pdtmFechaVigencia.HasValue, New ObjectParameter("pdtmFechaVigencia", pdtmFechaVigencia), New ObjectParameter("pdtmFechaVigencia", GetType(Date)))

        Dim pintIDPersonaParameter As ObjectParameter = If(pintIDPersona.HasValue, New ObjectParameter("pintIDPersona", pintIDPersona), New ObjectParameter("pintIDPersona", GetType(Integer)))

        Dim pstrIDComitenteParameter As ObjectParameter = If(pstrIDComitente IsNot Nothing, New ObjectParameter("pstrIDComitente", pstrIDComitente), New ObjectParameter("pstrIDComitente", GetType(String)))

        Dim pstrTipoPreOrdenParameter As ObjectParameter = If(pstrTipoPreOrden IsNot Nothing, New ObjectParameter("pstrTipoPreOrden", pstrTipoPreOrden), New ObjectParameter("pstrTipoPreOrden", GetType(String)))

        Dim pstrTipoInversionParameter As ObjectParameter = If(pstrTipoInversion IsNot Nothing, New ObjectParameter("pstrTipoInversion", pstrTipoInversion), New ObjectParameter("pstrTipoInversion", GetType(String)))

        Dim pintIDEntidadParameter As ObjectParameter = If(pintIDEntidad.HasValue, New ObjectParameter("pintIDEntidad", pintIDEntidad), New ObjectParameter("pintIDEntidad", GetType(Integer)))

        Dim pstrIntencionParameter As ObjectParameter = If(pstrIntencion IsNot Nothing, New ObjectParameter("pstrIntencion", pstrIntencion), New ObjectParameter("pstrIntencion", GetType(String)))

        Dim plogActivoParameter As ObjectParameter = If(plogActivo.HasValue, New ObjectParameter("plogActivo", plogActivo), New ObjectParameter("plogActivo", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblPreOrdenes)("usp_PreOrdenes_Consultar", pintIDParameter, pdtmFechaInversionParameter, pdtmFechaVigenciaParameter, pintIDPersonaParameter, pstrIDComitenteParameter, pstrTipoPreOrdenParameter, pstrTipoInversionParameter, pintIDEntidadParameter, pstrIntencionParameter, plogActivoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_Eliminar(pintID As Nullable(Of Integer), pstrObservaciones As String, pstrUsuario As String, pstrMaquina As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pstrObservacionesParameter As ObjectParameter = If(pstrObservaciones IsNot Nothing, New ObjectParameter("pstrObservaciones", pstrObservaciones), New ObjectParameter("pstrObservaciones", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrMaquinaParameter As ObjectParameter = If(pstrMaquina IsNot Nothing, New ObjectParameter("pstrMaquina", pstrMaquina), New ObjectParameter("pstrMaquina", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_PreOrdenes_Eliminar", pintIDParameter, pstrObservacionesParameter, pstrUsuarioParameter, pstrMaquinaParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblPreOrdenes)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblPreOrdenes)("usp_PreOrdenes_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_Portafolio_Consultar(pintIDPreOrden As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblClientes_Portafolio)
        Dim pintIDPreOrdenParameter As ObjectParameter = If(pintIDPreOrden.HasValue, New ObjectParameter("pintIDPreOrden", pintIDPreOrden), New ObjectParameter("pintIDPreOrden", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblClientes_Portafolio)("usp_PreOrdenes_Portafolio_Consultar", pintIDPreOrdenParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_ConsultarID(pintID As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblPreOrdenes)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreOrdenes)("usp_PreOrdenes_ConsultarID", pintIDParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_ConsultarID(pintID As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblPreOrdenes)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreOrdenes)("usp_PreOrdenes_ConsultarID", mergeOption, pintIDParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_Entidad_PorDefecto(pstrInstrumento As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblEntidadEspecie)
        Dim pstrInstrumentoParameter As ObjectParameter = If(pstrInstrumento IsNot Nothing, New ObjectParameter("pstrInstrumento", pstrInstrumento), New ObjectParameter("pstrInstrumento", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblEntidadEspecie)("usp_PreOrdenes_Entidad_PorDefecto", pstrInstrumentoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_VisorPreOrdenes_Consultar(pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblPreOrdenes_Visor)
        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblPreOrdenes_Visor)("usp_VisorPreOrdenes_Consultar", pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_VisorPreOrdenes_ConsultarCruzadas(pdtmFechaInicial As Nullable(Of Date), pdtmFechaFinal As Nullable(Of Date), pintIDPreOrden As Nullable(Of Integer), plogSoloUsuario As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblPreOrdenes_VisorCruces)
        Dim pdtmFechaInicialParameter As ObjectParameter = If(pdtmFechaInicial.HasValue, New ObjectParameter("pdtmFechaInicial", pdtmFechaInicial), New ObjectParameter("pdtmFechaInicial", GetType(Date)))

        Dim pdtmFechaFinalParameter As ObjectParameter = If(pdtmFechaFinal.HasValue, New ObjectParameter("pdtmFechaFinal", pdtmFechaFinal), New ObjectParameter("pdtmFechaFinal", GetType(Date)))

        Dim pintIDPreOrdenParameter As ObjectParameter = If(pintIDPreOrden.HasValue, New ObjectParameter("pintIDPreOrden", pintIDPreOrden), New ObjectParameter("pintIDPreOrden", GetType(Integer)))

        Dim plogSoloUsuarioParameter As ObjectParameter = If(plogSoloUsuario.HasValue, New ObjectParameter("plogSoloUsuario", plogSoloUsuario), New ObjectParameter("plogSoloUsuario", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblPreOrdenes_VisorCruces)("usp_VisorPreOrdenes_ConsultarCruzadas", pdtmFechaInicialParameter, pdtmFechaFinalParameter, pintIDPreOrdenParameter, plogSoloUsuarioParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_VisorPreOrdenes_Generar(pintIDRegistro As Nullable(Of Integer), pdblValorRegistro As Nullable(Of Double), pstrRegistrosAsociados As String, pstrUsuario As String, pstrMaquina As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIDRegistroParameter As ObjectParameter = If(pintIDRegistro.HasValue, New ObjectParameter("pintIDRegistro", pintIDRegistro), New ObjectParameter("pintIDRegistro", GetType(Integer)))

        Dim pdblValorRegistroParameter As ObjectParameter = If(pdblValorRegistro.HasValue, New ObjectParameter("pdblValorRegistro", pdblValorRegistro), New ObjectParameter("pdblValorRegistro", GetType(Double)))

        Dim pstrRegistrosAsociadosParameter As ObjectParameter = If(pstrRegistrosAsociados IsNot Nothing, New ObjectParameter("pstrRegistrosAsociados", pstrRegistrosAsociados), New ObjectParameter("pstrRegistrosAsociados", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrMaquinaParameter As ObjectParameter = If(pstrMaquina IsNot Nothing, New ObjectParameter("pstrMaquina", pstrMaquina), New ObjectParameter("pstrMaquina", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_VisorPreOrdenes_Generar", pintIDRegistroParameter, pdblValorRegistroParameter, pstrRegistrosAsociadosParameter, pstrUsuarioParameter, pstrMaquinaParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_PreOrdenes_ConsultarID_Cruzada(pintID As Nullable(Of Integer), pstrTipoOperacion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblPreOrdenes_Cruzadas)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pstrTipoOperacionParameter As ObjectParameter = If(pstrTipoOperacion IsNot Nothing, New ObjectParameter("pstrTipoOperacion", pstrTipoOperacion), New ObjectParameter("pstrTipoOperacion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblPreOrdenes_Cruzadas)("usp_PreOrdenes_ConsultarID_Cruzada", pintIDParameter, pstrTipoOperacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_VisorPreOrdenes_AsociarOrden(pintID As Nullable(Of Integer), pstrOrigenOrden As String, pintNroRegistro As Nullable(Of Integer), pstrClaseRegistro As String, pstrTipoOperacionRegistro As String, pstrTipoOrigenRegistro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pstrOrigenOrdenParameter As ObjectParameter = If(pstrOrigenOrden IsNot Nothing, New ObjectParameter("pstrOrigenOrden", pstrOrigenOrden), New ObjectParameter("pstrOrigenOrden", GetType(String)))

        Dim pintNroRegistroParameter As ObjectParameter = If(pintNroRegistro.HasValue, New ObjectParameter("pintNroRegistro", pintNroRegistro), New ObjectParameter("pintNroRegistro", GetType(Integer)))

        Dim pstrClaseRegistroParameter As ObjectParameter = If(pstrClaseRegistro IsNot Nothing, New ObjectParameter("pstrClaseRegistro", pstrClaseRegistro), New ObjectParameter("pstrClaseRegistro", GetType(String)))

        Dim pstrTipoOperacionRegistroParameter As ObjectParameter = If(pstrTipoOperacionRegistro IsNot Nothing, New ObjectParameter("pstrTipoOperacionRegistro", pstrTipoOperacionRegistro), New ObjectParameter("pstrTipoOperacionRegistro", GetType(String)))

        Dim pstrTipoOrigenRegistroParameter As ObjectParameter = If(pstrTipoOrigenRegistro IsNot Nothing, New ObjectParameter("pstrTipoOrigenRegistro", pstrTipoOrigenRegistro), New ObjectParameter("pstrTipoOrigenRegistro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_VisorPreOrdenes_AsociarOrden", pintIDParameter, pstrOrigenOrdenParameter, pintNroRegistroParameter, pstrClaseRegistroParameter, pstrTipoOperacionRegistroParameter, pstrTipoOrigenRegistroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_VisorPreOrdenes_VerificarAsociarOrden(pintID As Nullable(Of Integer), plogRegistroValido As ObjectParameter, pstrUsuario As String, pstrInfosesion As String) As Integer
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_VisorPreOrdenes_VerificarAsociarOrden", pintIDParameter, plogRegistroValido, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

End Class

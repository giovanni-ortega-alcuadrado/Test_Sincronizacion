'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYD_Gen_Net")>  _
Partial Public Class OYDUtilidadesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub InsertItemCombo(instance As OYDUtilidades.ItemCombo)
    End Sub
    Partial Private Sub UpdateItemCombo(instance As OYDUtilidades.ItemCombo)
    End Sub
    Partial Private Sub DeleteItemCombo(instance As OYDUtilidades.ItemCombo)
    End Sub
    Partial Private Sub InsertBuscadorEspecies(instance As OYDUtilidades.BuscadorEspecies)
    End Sub
    Partial Private Sub UpdateBuscadorEspecies(instance As OYDUtilidades.BuscadorEspecies)
    End Sub
    Partial Private Sub DeleteBuscadorEspecies(instance As OYDUtilidades.BuscadorEspecies)
    End Sub
    Partial Private Sub InsertBuscadorClientes(instance As OYDUtilidades.BuscadorClientes)
    End Sub
    Partial Private Sub UpdateBuscadorClientes(instance As OYDUtilidades.BuscadorClientes)
    End Sub
    Partial Private Sub DeleteBuscadorClientes(instance As OYDUtilidades.BuscadorClientes)
    End Sub
    Partial Private Sub InsertBuscadorGenerico(instance As OYDUtilidades.BuscadorGenerico)
    End Sub
    Partial Private Sub UpdateBuscadorGenerico(instance As OYDUtilidades.BuscadorGenerico)
    End Sub
    Partial Private Sub DeleteBuscadorGenerico(instance As OYDUtilidades.BuscadorGenerico)
    End Sub
    Partial Private Sub InsertBuscadorCuentasDeposito(instance As OYDUtilidades.BuscadorCuentasDeposito)
    End Sub
    Partial Private Sub UpdateBuscadorCuentasDeposito(instance As OYDUtilidades.BuscadorCuentasDeposito)
    End Sub
    Partial Private Sub DeleteBuscadorCuentasDeposito(instance As OYDUtilidades.BuscadorCuentasDeposito)
    End Sub
    Partial Private Sub InsertBuscadorOrdenantes(instance As OYDUtilidades.BuscadorOrdenantes)
    End Sub
    Partial Private Sub UpdateBuscadorOrdenantes(instance As OYDUtilidades.BuscadorOrdenantes)
    End Sub
    Partial Private Sub DeleteBuscadorOrdenantes(instance As OYDUtilidades.BuscadorOrdenantes)
    End Sub
    Partial Private Sub InsertRetornoCampoTabla(instance As OYDUtilidades.RetornoCampoTabla)
    End Sub
    Partial Private Sub UpdateRetornoCampoTabla(instance As OYDUtilidades.RetornoCampoTabla)
    End Sub
    Partial Private Sub DeleteRetornoCampoTabla(instance As OYDUtilidades.RetornoCampoTabla)
    End Sub
    Partial Private Sub DeleteDT(instance As OYDUtilidades.DT)
    End Sub
    Partial Private Sub InserttblReceptore(instance As OYDUtilidades.tblReceptore)
    End Sub
    Partial Private Sub UpdatetblReceptore(instance As OYDUtilidades.tblReceptore)
    End Sub
    Partial Private Sub DeletetblReceptore(instance As OYDUtilidades.tblReceptore)
    End Sub
    Partial Private Sub UpdateCamposObligatorios(instance As OYDUtilidades.CamposObligatorios)
    End Sub
    Partial Private Sub InserttblSaldosBancos(instance As OYDUtilidades.tblSaldosBancos)
    End Sub
    Partial Private Sub UpdatetblSaldosBancos(instance As OYDUtilidades.tblSaldosBancos)
    End Sub
    Partial Private Sub DeletetblSaldosBancos(instance As OYDUtilidades.tblSaldosBancos)
    End Sub
    Partial Private Sub InserttblLiquidacionesCliente(instance As OYDUtilidades.tblLiquidacionesCliente)
    End Sub
    Partial Private Sub UpdatetblLiquidacionesCliente(instance As OYDUtilidades.tblLiquidacionesCliente)
    End Sub
    Partial Private Sub DeletetblLiquidacionesCliente(instance As OYDUtilidades.tblLiquidacionesCliente)
    End Sub
    Partial Private Sub InsertClienteInhabilitado(instance As OYDUtilidades.ClienteInhabilitado)
    End Sub
    Partial Private Sub UpdateClienteInhabilitado(instance As OYDUtilidades.ClienteInhabilitado)
    End Sub
    Partial Private Sub DeleteClienteInhabilitado(instance As OYDUtilidades.ClienteInhabilitado)
    End Sub
    Partial Private Sub Insertvaloresparametro(instance As OYDUtilidades.valoresparametro)
    End Sub
    Partial Private Sub Updatevaloresparametro(instance As OYDUtilidades.valoresparametro)
    End Sub
    Partial Private Sub Deletevaloresparametro(instance As OYDUtilidades.valoresparametro)
    End Sub
    Partial Private Sub InsertInformeAuditoria(instance As OYDUtilidades.InformeAuditoria)
    End Sub
    Partial Private Sub UpdateInformeAuditoria(instance As OYDUtilidades.InformeAuditoria)
    End Sub
    Partial Private Sub DeleteInformeAuditoria(instance As OYDUtilidades.InformeAuditoria)
    End Sub
    Partial Private Sub InsertNIIFInicial(instance As OYDUtilidades.NIIFInicial)
    End Sub
    Partial Private Sub UpdateNIIFInicial(instance As OYDUtilidades.NIIFInicial)
    End Sub
    Partial Private Sub DeleteNIIFInicial(instance As OYDUtilidades.NIIFInicial)
    End Sub
    Partial Private Sub InsertGenerarArchivosPlanos(instance As OYDUtilidades.GenerarArchivosPlanos)
    End Sub
    Partial Private Sub UpdateGenerarArchivosPlanos(instance As OYDUtilidades.GenerarArchivosPlanos)
    End Sub
    Partial Private Sub DeleteGenerarArchivosPlanos(instance As OYDUtilidades.GenerarArchivosPlanos)
    End Sub
    Partial Private Sub InsertProcesoTipos(instance As OYDUtilidades.ProcesoTipos)
    End Sub
    Partial Private Sub UpdateProcesoTipos(instance As OYDUtilidades.ProcesoTipos)
    End Sub
    Partial Private Sub DeleteProcesoTipos(instance As OYDUtilidades.ProcesoTipos)
    End Sub
    Partial Private Sub InsertProceso(instance As OYDUtilidades.Proceso)
    End Sub
    Partial Private Sub UpdateProceso(instance As OYDUtilidades.Proceso)
    End Sub
    Partial Private Sub DeleteProceso(instance As OYDUtilidades.Proceso)
    End Sub
    Partial Private Sub InsertProcesoDetalle(instance As OYDUtilidades.ProcesoDetalle)
    End Sub
    Partial Private Sub UpdateProcesoDetalle(instance As OYDUtilidades.ProcesoDetalle)
    End Sub
    Partial Private Sub DeleteProcesoDetalle(instance As OYDUtilidades.ProcesoDetalle)
    End Sub
    Partial Private Sub InsertResultadoProceso(instance As OYDUtilidades.ResultadoProceso)
    End Sub
    Partial Private Sub UpdateResultadoProceso(instance As OYDUtilidades.ResultadoProceso)
    End Sub
    Partial Private Sub DeleteResultadoProceso(instance As OYDUtilidades.ResultadoProceso)
    End Sub
    Partial Private Sub InsertArchivosDirectorio(instance As OYDUtilidades.ArchivosDirectorio)
    End Sub
    Partial Private Sub UpdateArchivosDirectorio(instance As OYDUtilidades.ArchivosDirectorio)
    End Sub
    Partial Private Sub DeleteArchivosDirectorio(instance As OYDUtilidades.ArchivosDirectorio)
    End Sub
    Partial Private Sub InsertTempRetornoCalculo(instance As OYDUtilidades.TempRetornoCalculo)
    End Sub
    Partial Private Sub UpdateTempRetornoCalculo(instance As OYDUtilidades.TempRetornoCalculo)
    End Sub
    Partial Private Sub DeleteTempRetornoCalculo(instance As OYDUtilidades.TempRetornoCalculo)
    End Sub
    Partial Private Sub InserttblvalidarFechaCierre(instance As OYDUtilidades.tblvalidarFechaCierre)
    End Sub
    Partial Private Sub UpdatetblvalidarFechaCierre(instance As OYDUtilidades.tblvalidarFechaCierre)
    End Sub
    Partial Private Sub DeletetblvalidarFechaCierre(instance As OYDUtilidades.tblvalidarFechaCierre)
    End Sub
    Partial Private Sub InsertPLATAFORMA_CombosGenericos(instance As OYDUtilidades.PLATAFORMA_CombosGenericos)
    End Sub
    Partial Private Sub UpdatePLATAFORMA_CombosGenericos(instance As OYDUtilidades.PLATAFORMA_CombosGenericos)
    End Sub
    Partial Private Sub DeletePLATAFORMA_CombosGenericos(instance As OYDUtilidades.PLATAFORMA_CombosGenericos)
    End Sub
    Partial Private Sub InsertPantallasParametrizacion(instance As OYDUtilidades.PantallasParametrizacion)
    End Sub
    Partial Private Sub UpdatePantallasParametrizacion(instance As OYDUtilidades.PantallasParametrizacion)
    End Sub
    Partial Private Sub DeletePantallasParametrizacion(instance As OYDUtilidades.PantallasParametrizacion)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ItemCombos() As System.Data.Linq.Table(Of OYDUtilidades.ItemCombo)
		Get
			Return Me.GetTable(Of OYDUtilidades.ItemCombo)
		End Get
	End Property
	
	Public ReadOnly Property BuscadorEspecies() As System.Data.Linq.Table(Of OYDUtilidades.BuscadorEspecies)
		Get
			Return Me.GetTable(Of OYDUtilidades.BuscadorEspecies)
		End Get
	End Property
	
	Public ReadOnly Property BuscadorClientes() As System.Data.Linq.Table(Of OYDUtilidades.BuscadorClientes)
		Get
			Return Me.GetTable(Of OYDUtilidades.BuscadorClientes)
		End Get
	End Property
	
	Public ReadOnly Property BuscadorGenericos() As System.Data.Linq.Table(Of OYDUtilidades.BuscadorGenerico)
		Get
			Return Me.GetTable(Of OYDUtilidades.BuscadorGenerico)
		End Get
	End Property
	
	Public ReadOnly Property BuscadorCuentasDepositos() As System.Data.Linq.Table(Of OYDUtilidades.BuscadorCuentasDeposito)
		Get
			Return Me.GetTable(Of OYDUtilidades.BuscadorCuentasDeposito)
		End Get
	End Property
	
	Public ReadOnly Property BuscadorOrdenantes() As System.Data.Linq.Table(Of OYDUtilidades.BuscadorOrdenantes)
		Get
			Return Me.GetTable(Of OYDUtilidades.BuscadorOrdenantes)
		End Get
	End Property
	
	Public ReadOnly Property RetornoCampoTablas() As System.Data.Linq.Table(Of OYDUtilidades.RetornoCampoTabla)
		Get
			Return Me.GetTable(Of OYDUtilidades.RetornoCampoTabla)
		End Get
	End Property
	
	Public ReadOnly Property DTS() As System.Data.Linq.Table(Of OYDUtilidades.DT)
		Get
			Return Me.GetTable(Of OYDUtilidades.DT)
		End Get
	End Property
	
	Public ReadOnly Property AuditoriaTablas() As System.Data.Linq.Table(Of OYDUtilidades.AuditoriaTabla)
		Get
			Return Me.GetTable(Of OYDUtilidades.AuditoriaTabla)
		End Get
	End Property
	
	Public ReadOnly Property tblReceptores() As System.Data.Linq.Table(Of OYDUtilidades.tblReceptore)
		Get
			Return Me.GetTable(Of OYDUtilidades.tblReceptore)
		End Get
	End Property
	
	Public ReadOnly Property CamposObligatorios() As System.Data.Linq.Table(Of OYDUtilidades.CamposObligatorios)
		Get
			Return Me.GetTable(Of OYDUtilidades.CamposObligatorios)
		End Get
	End Property
	
	Public ReadOnly Property tblSaldosBancos() As System.Data.Linq.Table(Of OYDUtilidades.tblSaldosBancos)
		Get
			Return Me.GetTable(Of OYDUtilidades.tblSaldosBancos)
		End Get
	End Property
	
	Public ReadOnly Property tblLiquidacionesCliente() As System.Data.Linq.Table(Of OYDUtilidades.tblLiquidacionesCliente)
		Get
			Return Me.GetTable(Of OYDUtilidades.tblLiquidacionesCliente)
		End Get
	End Property
	
	Public ReadOnly Property ClienteInhabilitado() As System.Data.Linq.Table(Of OYDUtilidades.ClienteInhabilitado)
		Get
			Return Me.GetTable(Of OYDUtilidades.ClienteInhabilitado)
		End Get
	End Property
	
	Public ReadOnly Property valoresparametro() As System.Data.Linq.Table(Of OYDUtilidades.valoresparametro)
		Get
			Return Me.GetTable(Of OYDUtilidades.valoresparametro)
		End Get
	End Property
	
	Public ReadOnly Property InformeAuditoria() As System.Data.Linq.Table(Of OYDUtilidades.InformeAuditoria)
		Get
			Return Me.GetTable(Of OYDUtilidades.InformeAuditoria)
		End Get
	End Property
	
	Public ReadOnly Property NIIFInicial() As System.Data.Linq.Table(Of OYDUtilidades.NIIFInicial)
		Get
			Return Me.GetTable(Of OYDUtilidades.NIIFInicial)
		End Get
	End Property
	
	Public ReadOnly Property GenerarArchivosPlanos() As System.Data.Linq.Table(Of OYDUtilidades.GenerarArchivosPlanos)
		Get
			Return Me.GetTable(Of OYDUtilidades.GenerarArchivosPlanos)
		End Get
	End Property
	
	Public ReadOnly Property ProcesoTipos() As System.Data.Linq.Table(Of OYDUtilidades.ProcesoTipos)
		Get
			Return Me.GetTable(Of OYDUtilidades.ProcesoTipos)
		End Get
	End Property
	
	Public ReadOnly Property Proceso() As System.Data.Linq.Table(Of OYDUtilidades.Proceso)
		Get
			Return Me.GetTable(Of OYDUtilidades.Proceso)
		End Get
	End Property
	
	Public ReadOnly Property ProcesoDetalle() As System.Data.Linq.Table(Of OYDUtilidades.ProcesoDetalle)
		Get
			Return Me.GetTable(Of OYDUtilidades.ProcesoDetalle)
		End Get
	End Property
	
	Public ReadOnly Property ResultadoProceso() As System.Data.Linq.Table(Of OYDUtilidades.ResultadoProceso)
		Get
			Return Me.GetTable(Of OYDUtilidades.ResultadoProceso)
		End Get
	End Property
	
	Public ReadOnly Property ArchivosDirectorio() As System.Data.Linq.Table(Of OYDUtilidades.ArchivosDirectorio)
		Get
			Return Me.GetTable(Of OYDUtilidades.ArchivosDirectorio)
		End Get
	End Property
	
	Public ReadOnly Property TempRetornoCalculo() As System.Data.Linq.Table(Of OYDUtilidades.TempRetornoCalculo)
		Get
			Return Me.GetTable(Of OYDUtilidades.TempRetornoCalculo)
		End Get
	End Property
	
	Public ReadOnly Property tblvalidarFechaCierre() As System.Data.Linq.Table(Of OYDUtilidades.tblvalidarFechaCierre)
		Get
			Return Me.GetTable(Of OYDUtilidades.tblvalidarFechaCierre)
		End Get
	End Property
	
	Public ReadOnly Property PLATAFORMA_CombosGenericos() As System.Data.Linq.Table(Of OYDUtilidades.PLATAFORMA_CombosGenericos)
		Get
			Return Me.GetTable(Of OYDUtilidades.PLATAFORMA_CombosGenericos)
		End Get
	End Property
	
	Public ReadOnly Property PantallasParametrizacion() As System.Data.Linq.Table(Of OYDUtilidades.PantallasParametrizacion)
		Get
			Return Me.GetTable(Of OYDUtilidades.PantallasParametrizacion)
		End Get
	End Property
	
	Private Sub InsertDT(ByVal obj As OYDUtilidades.DT)
		Dim p1 As Integer = obj.IDDTS
		Me.uspOyDNet_Utilidades_DTS_Actualizar(obj.Descripcion, obj.NomSP, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDTS = p1
	End Sub
	
	Private Sub UpdateDT(ByVal obj As OYDUtilidades.DT)
		Dim p1 As Integer = obj.IDDTS
		Me.uspOyDNet_Utilidades_DTS_Actualizar(obj.Descripcion, obj.NomSP, obj.Usuario, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDDTS = p1
	End Sub
	
	Private Sub InsertAuditoriaTabla(ByVal obj As OYDUtilidades.AuditoriaTabla)
		Me.uspOyDNet_Utilidades_Auditorias(obj.strOpcion, obj.IdAuditoria, obj.NombreTabla, CType(obj.Ingreso,System.Nullable(Of Boolean)), CType(obj.Modificacion,System.Nullable(Of Boolean)), CType(obj.Eliminacion,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateAuditoriaTabla(ByVal obj As OYDUtilidades.AuditoriaTabla)
		Me.uspOyDNet_Utilidades_Auditorias(obj.strOpcion, obj.IdAuditoria, obj.NombreTabla, CType(obj.Ingreso,System.Nullable(Of Boolean)), CType(obj.Modificacion,System.Nullable(Of Boolean)), CType(obj.Eliminacion,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteAuditoriaTabla(ByVal obj As OYDUtilidades.AuditoriaTabla)
		Me.uspOyDNet_Utilidades_Auditorias(obj.strOpcion, obj.IdAuditoria, obj.NombreTabla, CType(obj.Ingreso,System.Nullable(Of Boolean)), CType(obj.Modificacion,System.Nullable(Of Boolean)), CType(obj.Eliminacion,System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCamposObligatorios(ByVal obj As OYDUtilidades.CamposObligatorios)
		Me.usp_OyD_CamposObligatorios_Ingresar_OyDNet(obj.NombreTabla, obj.NombreCampoObligado, obj.NombreCampoCondicionante, obj.ValorCampoCondicionante, obj.Actualizacion, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteCamposObligatorios(ByVal obj As OYDUtilidades.CamposObligatorios)
		Me.usp_OyD_CamposObligatorios_Eliminar_OyDNet(obj.NombreTabla, obj.NombreCampoCondicionante, obj.ValorCampoCondicionante, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2utils_CargarCombos")>  _
	Public Function uspA2utils_CargarCombos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrListaNombreCombos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OYDUtilidades.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrListaNombreCombos, pstrUsuario)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_Especies")>  _
	Public Function uspOyDNet_Buscador_Especies(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCondicionFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrMercado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrEstadoNemotecnico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrAgrupacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEspeciesconRestriccion As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTraerEspeciesVencidas As System.Nullable(Of Boolean)) As ISingleResult(Of OYDUtilidades.BuscadorEspecies)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCondicionFiltro, pstrMercado, pstrEstadoNemotecnico, pstrAgrupacion, plogEspeciesconRestriccion, pstrTipoNegocio, pstrTipoProducto, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogTraerEspeciesVencidas)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.BuscadorEspecies))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_Clientes")>  _
	Public Function uspOyDNet_Buscador_Clientes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCondicionFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrEstadoCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrTipoVinculacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrAgrupacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogExcluirCodigosCompania As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCompania As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltroAdicional1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltroAdicional2 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltroAdicional3 As String) As ISingleResult(Of OYDUtilidades.BuscadorClientes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCondicionFiltro, pstrEstadoCliente, pstrTipoVinculacion, pstrAgrupacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogExcluirCodigosCompania, pintIDCompania, pstrfiltroAdicional1, pstrfiltroAdicional2, pstrfiltroAdicional3)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.BuscadorClientes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_Clientes")>  _
	Public Function uspOyDNet_Buscador_ClientesOYDPLUS( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCondicionFiltro As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrEstadoCliente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrTipoVinculacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrAgrupacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogCargarUsuariosRestriccion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogClientesTerceros As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5)")> ByVal pstrIDReceptor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoNegocio As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoProducto As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrPerfilRiesgo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogExcluirCodigosCompania As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCompania As System.Nullable(Of System.Int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltroAdicional1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltroAdicional2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrfiltroAdicional3 As String) As ISingleResult(Of OYDUtilidades.BuscadorClientes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCondicionFiltro, pstrEstadoCliente, pstrTipoVinculacion, pstrAgrupacion, plogCargarUsuariosRestriccion, plogClientesTerceros, pstrIDReceptor, pstrTipoNegocio, pstrTipoProducto, pstrPerfilRiesgo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogExcluirCodigosCompania, pintIDCompania, pstrfiltroAdicional1, pstrfiltroAdicional2, pstrfiltroAdicional3)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.BuscadorClientes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_Generico")>  _
	Public Function uspOyDNet_Buscador_Generico(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCondicionFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrTipoItem As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrEstadoItem As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrAgrupacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrCondicion1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrCondicion2 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.BuscadorGenerico)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCondicionFiltro, pstrTipoItem, pstrEstadoItem, pstrAgrupacion, pstrCondicion1, pstrCondicion2, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.BuscadorGenerico))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_FechaCierre")>  _
	Public Function uspOyDNet_Buscador_FechaCierre(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByRef pdtmFechaCierre As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrModulo, pstrUsuario, pdtmFechaCierre, pstrInfosesion, pintErrorPersonalizado)
		pdtmFechaCierre = CType(result.GetParameterValue(2),System.Nullable(Of Date))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_ClientesCuentasDeposito")>  _
	Public Function uspOyDNet_Buscador_ClientesCuentasDeposito(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIdComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogRetornarTodosLosDepositos As System.Nullable(Of Boolean)) As ISingleResult(Of OYDUtilidades.BuscadorCuentasDeposito)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogRetornarTodosLosDepositos)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.BuscadorCuentasDeposito))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Buscador_ClientesOrdenantes")>  _
	Public Function uspOyDNet_Buscador_ClientesOrdenantes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIdComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.BuscadorOrdenantes)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.BuscadorOrdenantes))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_CampoTabla")>  _
	Public Function uspOyDNet_Utilidades_CampoTabla(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrIdCondicion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrCampo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrCondicion As String) As ISingleResult(Of OYDUtilidades.uspOyDNet_Utilidades_CampoTablaResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdCondicion, pstrCampo, pstrTabla, pstrCondicion)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.uspOyDNet_Utilidades_CampoTablaResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ufnOyDNet_Utilidades_IdConsecutivo", IsComposable:=true)>  _
	Public Function ufnOyDNet_Utilidades_IdConsecutivo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrIdOwner As String) As System.Nullable(Of Integer)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreConsecutivo, pstrIdOwner).ReturnValue,System.Nullable(Of Integer))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ufnOyDNet_Utilidades_PreimpresoOLineas", IsComposable:=true)>  _
	Public Function ufnOyDNet_Utilidades_PreimpresoOLineas() As System.Nullable(Of Boolean)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo)).ReturnValue,System.Nullable(Of Boolean))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_DTS_Actualizar")>  _
	Public Function uspOyDNet_Utilidades_DTS_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNomSP As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDDTS As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrDescripcion, pstrNomSP, pstrUsuario, pintIDDTS, infosesion, pintErrorPersonalizado)
		pintIDDTS = CType(result.GetParameterValue(3),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_DTS_Consultar")>  _
	Public Function uspOyDNet_Utilidades_DTS_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDDTS", DbType:="int")> ByVal lngIDDTS As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.DT)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngIDDTS, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.DT))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_DTS_Filtrar")>  _
	Public Function uspOyDNet_Utilidades_DTS_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.DT)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.DT))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_Auditorias")>  _
	Public Function uspOyDNet_Utilidades_Auditorias_Consulta(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrOpcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogIngreso As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogModificacion As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEliminacion As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.AuditoriaTabla)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrOpcion, pstrNombreTabla, plogIngreso, plogModificacion, plogEliminacion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.AuditoriaTabla))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Utilidades_Auditorias")>  _
	Public Function uspOyDNet_Utilidades_Auditorias(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrOpcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdAuditoria As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogIngreso As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogModificacion As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEliminacion As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As int32
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrOpcion, plngIdAuditoria, pstrNombreTabla, plogIngreso, plogModificacion, plogEliminacion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,int32)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2utils_CargarCombos_Utilidades")>  _
	Public Function uspA2utils_CargarCombosAuditoria(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrTipoOpcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoOpcion, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fnOyD_FechaHabilCalcular", IsComposable:=true)>  _
	Public Function fnOyD_FechaHabilCalcular(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FechaInicial", DbType:="DateTime")> ByVal fechaInicial As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intNroDias As System.Nullable(Of Integer)) As System.Nullable(Of Date)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fechaInicial, intNroDias).ReturnValue,System.Nullable(Of Date))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyDNet_ProgramacionesActualizar")>  _
	Public Function usp_OyDNet_ProgramacionesActualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intIdProgramacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intTipoProgramacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal dtmFechaInicio As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intRecurrencia As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intRepeticion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal strDiasEjecucion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal logEjecutaDia As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intDia As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal logOrdinal As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intOrdinal As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal dtmIntervalo_FechaInicio As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal logIntervalo_SinFechaFinalizacion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal logIntervalo_ConRepeticiones As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal intIntervalo_TotalRepeticiones As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal logIntervalo_ConFechaFinalizacion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal dtmIntervalo_FechaFinalizacion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Xml")> ByVal pxmlDetalleProgramaciones As System.Xml.Linq.XElement,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIdProgramacionOut As System.Nullable(Of Integer)) As ISingleResult(Of OYDUtilidades.usp_OyDNet_ProgramacionesActualizarResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), intIdProgramacion, intTipoProgramacion, dtmFechaInicio, intRecurrencia, intRepeticion, strDiasEjecucion, logEjecutaDia, intDia, logOrdinal, intOrdinal, dtmIntervalo_FechaInicio, logIntervalo_SinFechaFinalizacion, logIntervalo_ConRepeticiones, intIntervalo_TotalRepeticiones, logIntervalo_ConFechaFinalizacion, dtmIntervalo_FechaFinalizacion, pxmlDetalleProgramaciones, pintIdProgramacionOut)
		pintIdProgramacionOut = CType(result.GetParameterValue(17),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.usp_OyDNet_ProgramacionesActualizarResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_Validaparametro_OyDNet")>  _
	Public Function usp_Validaparametro_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(max)")> ByRef strvalor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrParametro, strvalor)
		strvalor = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_CamposObligatorios_Consultar_OyDNet")>  _
	Public Function usp_OyD_CamposObligatorios_Consultar_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreCampoObligado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreCampoCondicionante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrValorCampoCondicionante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.CamposObligatorios)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreTabla, pstrNombreCampoObligado, pstrNombreCampoCondicionante, pstrValorCampoCondicionante, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.CamposObligatorios))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_CamposObligatorios_Ingresar_OyDNet")>  _
	Public Function usp_OyD_CamposObligatorios_Ingresar_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreCampoObligado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreCampoCondicionante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrValorCampoCondicionante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmActualizacion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreTabla, pstrNombreCampoObligado, pstrNombreCampoCondicionante, pstrValorCampoCondicionante, pdtmActualizacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_OyD_CamposObligatorios_Eliminar_OyDNet")>  _
	Public Function usp_OyD_CamposObligatorios_Eliminar_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrNombreCampoCondicionante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200)")> ByVal pstrValorCampoCondicionante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreTabla, pstrNombreCampoCondicionante, pstrValorCampoCondicionante, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_ConsultarInhabilitados_OyDNet")>  _
	Public Function usp_ConsultarInhabilitados_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal pbitSegundoMensaje As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.ClienteInhabilitado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNroDocumento, pstrNombre, pbitSegundoMensaje, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ClienteInhabilitado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_InsertarlogListaClinton_OyDNet")>  _
	Public Function usp_InsertarlogListaClinton_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(30)")> ByVal pstrForma As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50)")> ByVal pstrCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrClienteInhabilitado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Decimal(5,2)")> ByVal pdblPorcentajeCercania As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrForma, plngIDComitente, pstrDocumento, pstrCliente, pstrClienteInhabilitado, pdblPorcentajeCercania, pstrUsuario)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2utils_CargarCombos_Especies_Calculos_Financieros")>  _
	Public Function uspA2utils_CargarCombos_Especies_Calculos_Financieros() As ISingleResult(Of OYDUtilidades.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2utils_CargarCombos_SistemasCargaArchivo")>  _
	Public Function uspA2utils_CargarCombos_SistemasCargaArchivo() As ISingleResult(Of OYDUtilidades.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_Validaparametro_OyDNet")>  _
	Public Function usp_listaValidaparametro_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByRef strvalor As String) As ISingleResult(Of OYDUtilidades.valoresparametro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrParametro, strvalor)
		strvalor = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.valoresparametro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2utils_CargarCombosCondicional")>  _
	Public Function uspA2utils_CargarCombosCondicional(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrListaNombreCombos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrCondicionTexto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintCondicionNumerica As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OYDUtilidades.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrListaNombreCombos, pstrCondicionTexto, pintCondicionNumerica, pstrUsuario)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_UsuariosDTS_Actualizar")>  _
	Public Function uspOyDNet_UsuariosDTS_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDTS As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(max)")> ByVal pstrUsuariosCons As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal InfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDDTS, pstrUsuariosCons, pstrUsuario, InfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Usp_AuditoriaInforme_OyDNet")>  _
	Public Function Usp_AuditoriaInforme_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechainicial As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechafin As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(100)")> ByVal pstrTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(100)")> ByVal pstrFiltroClave As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrFiltroContenido As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.InformeAuditoria)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pdtmFechainicial, pdtmFechafin, pstrTabla, pstrFiltroClave, pstrFiltroContenido, pstrUsuario, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.InformeAuditoria))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NIIF_ConsultarItemsPorEspecie_Cliente")>  _
	Public Function uspOyDNet_NIIF_ConsultarItemsPorEspecie_Cliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrCargarParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintItems As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrCriterio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.ItemCombo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrCargarParametro, pintItems, pstrCriterio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ItemCombo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Actualizar_SegmentosNegocios")>  _
	Public Function uspOyDNet_Actualizar_SegmentosNegocios(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text")> ByVal pxmlCodigosSegmentos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDConcepto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogOperacionesActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTesoreriaActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrSegmentoDefecto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pxmlCodigosSegmentos, pintIDConcepto, plogOperacionesActivo, plogTesoreriaActivo, pstrSegmentoDefecto, pstrUsuario, pInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_NIIF_ConsultaInicial")>  _
	Public Function uspOyDNet_NIIF_ConsultaInicial(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintConcepto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.NIIFInicial)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintConcepto, pstrUsuario, pInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.NIIFInicial))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Proceso_ConsultarTipos")>  _
	Public Function uspOyDNet_Proceso_ConsultarTipos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.ProcesoTipos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ProcesoTipos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Proceso_Consultar")>  _
	Public Function uspOyDNet_Proceso_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDTipoProceso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.Proceso)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDTipoProceso, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.Proceso))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Proceso_ConsultarDetalle")>  _
	Public Function uspOyDNet_Proceso_ConsultarDetalle(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDProceso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.ProcesoDetalle)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDProceso, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ProcesoDetalle))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Proceso_Iniciar")>  _
	Public Function uspOyDNet_Proceso_Iniciar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDTipoProceso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogSolicitarFecha As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaProceso As System.Nullable(Of System.DateTime)) As ISingleResult(Of OYDUtilidades.ResultadoProceso)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDTipoProceso, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, plogSolicitarFecha, pdtmFechaProceso)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.ResultadoProceso))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spA2utils_ConsultarConsecutivo")>  _
	Public Function spA2utils_ConsultarConsecutivo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef pBlnRegistro As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pBlnRegistro)
		pBlnRegistro = CType(result.GetParameterValue(4),System.Nullable(Of Boolean))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Compiania_DiaHabilPorterioFechaCierre")>  _
	Public Function uspOyDNet_Compiania_DiaHabilPorterioFechaCierre(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCompania As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByRef pdtmFechaHabil As System.Nullable(Of System.Datetime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByRef pdtmFechaCierre As System.Nullable(Of System.Datetime)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCompania, pdtmFechaHabil, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pdtmFechaCierre)
		pdtmFechaHabil = CType(result.GetParameterValue(1),System.Nullable(Of System.Datetime))
		pdtmFechaCierre = CType(result.GetParameterValue(5),System.Nullable(Of System.Datetime))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_VerificarCobroGMF")>  _
	Public Function uspOyDNet_VerificarCobroGMF(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDBanco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(200)")> ByVal pstrNombreBeneficiario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrDocumentoBeneficiario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoDocumentoBeneficiario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrFormaPago As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoCheque As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrCuentaBancaria As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(450)")> ByVal pstrDetalleInstruccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrDetalles As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(2)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.TempRetornoCalculo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreConsecutivo, pintIDBanco, pstrNombreBeneficiario, pstrDocumentoBeneficiario, pstrTipoDocumentoBeneficiario, pstrFormaPago, pstrTipoCheque, pstrCuentaBancaria, pstrDetalleInstruccion, pstrDetalles, pstrTipo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.TempRetornoCalculo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Validar_FechaCierre")>  _
	Public Function uspOyDNet_Validar_FechaCierre(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrAccionCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrDescripcionModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaAValidar As System.Nullable(Of System.Datetime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.tblvalidarFechaCierre)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrModulo, pstrAccionCliente, pstrDescripcionModulo, pdtmFechaAValidar, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.tblvalidarFechaCierre))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="PLATAFORMA.uspA2_Util_CargaCombosGenerico")>  _
	Public Function uspA2_Util_CargaCombosGenerico(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrCondicionTexto1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrCondicionTexto2 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pstrCondicionEntero1 As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pstrCondicionEntero2 As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.PLATAFORMA_CombosGenericos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrProducto, pstrCondicionTexto1, pstrCondicionTexto2, pstrCondicionEntero1, pstrCondicionEntero2, pstrModulo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.PLATAFORMA_CombosGenericos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_PantallasParametrizacion_Consultar")>  _
	Public Function uspOyDNet_PantallasParametrizacion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100) NOT NULL")> ByVal pstrPantalla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDUtilidades.PantallasParametrizacion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrPantalla, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of OYDUtilidades.PantallasParametrizacion))
	End Function
End Class

Namespace OYDUtilidades
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ItemCombo
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Categoria As String
		
		Private _ID As String
		
		Private _Descripcion As String
		
		Private _intID As System.Nullable(Of System.Int32)
		
		Private _Retorno As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnintIDChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Categoria() As String
			Get
				Return Me._Categoria
			End Get
			Set
				If (String.Equals(Me._Categoria, value) = false) Then
					Me.OnCategoriaChanging(value)
					Me.SendPropertyChanging
					Me._Categoria = value
					Me.SendPropertyChanged("Categoria")
					Me.OnCategoriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property ID() As String
			Get
				Return Me._ID
			End Get
			Set
				If (String.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", CanBeNull:=true)>  _
		Public Property intID() As System.Nullable(Of System.Int32)
			Get
				Return Me._intID
			End Get
			Set
				If (Object.Equals(Me._intID, value) = false) Then
					Me.OnintIDChanging(value)
					Me.SendPropertyChanging
					Me._intID = value
					Me.SendPropertyChanged("intID")
					Me.OnintIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Retorno")>  _
		Public Property Retorno() As String
			Get
				Return Me._Retorno
			End Get
			Set
				If (String.Equals(Me._Retorno, value) = false) Then
					Me.OnRetornoChanging(value)
					Me.SendPropertyChanging
					Me._Retorno = value
					Me.SendPropertyChanged("Retorno")
					Me.OnRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class BuscadorEspecies
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _strNemotecnico As String
		
		Private _strEspecie As String
		
		Private _intNitEmisor As System.Nullable(Of Decimal)
		
		Private _strEmisor As String
		
		Private _logEsAccion As Boolean
		
		Private _strMercado As String
		
		Private _logActivo As Boolean
		
		Private _strISIN As String
		
		Private _intIDFungible As System.Nullable(Of Integer)
		
		Private _dtmEmision As System.Nullable(Of Date)
		
		Private _dtmVencimiento As System.Nullable(Of Date)
		
		Private _dblTasaFacial As System.Nullable(Of Double)
		
		Private _dblTasaEfectiva As System.Nullable(Of Double)
		
		Private _strModalidad As String
		
		Private _intIdIndicador As String
		
		Private _strIndicador As String
		
		Private _intPuntosIndicador As System.Nullable(Of Double)
		
		Private _intId As Integer
		
		Private _IndicadorEspecie As String
		
		Private _TipoTasa As String
		
		Private _CodTipoTasaFija As String
		
		Private _CodModalidad As String
		
		Private _ClasificacionRiesgo As String
		
		Private _CodClasificacionRiesgo As String
		
		Private _Estandarizada As System.Nullable(Of Boolean)
		
		Private _lngEmision As System.Nullable(Of Integer)
		
		Private _strAlias As String
		
		Private _CantidadISIN As System.Nullable(Of System.Int32)
		
		Private _Seleccione As System.Nullable(Of Boolean)
		
		Private _IDMoneda As System.Nullable(Of System.Int32)
		
		Private _CodMoneda As String
		
		Private _NombreMoneda As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNemotecnicoChanging(value As String)
    End Sub
    Partial Private Sub OnNemotecnicoChanged()
    End Sub
    Partial Private Sub OnEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnEspecieChanged()
    End Sub
    Partial Private Sub OnNitEmisorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNitEmisorChanged()
    End Sub
    Partial Private Sub OnEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnEmisorChanged()
    End Sub
    Partial Private Sub OnEsAccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsAccionChanged()
    End Sub
    Partial Private Sub OnMercadoChanging(value As String)
    End Sub
    Partial Private Sub OnMercadoChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnISINChanging(value As String)
    End Sub
    Partial Private Sub OnISINChanged()
    End Sub
    Partial Private Sub OnIDFungibleChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDFungibleChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnTasaFacialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaFacialChanged()
    End Sub
    Partial Private Sub OnTasaEfectivaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaEfectivaChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnIdIndicadorChanging(value As String)
    End Sub
    Partial Private Sub OnIdIndicadorChanged()
    End Sub
    Partial Private Sub OnIndicadorChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorChanged()
    End Sub
    Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPuntosIndicadorChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIndicadorEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorEspecieChanged()
    End Sub
    Partial Private Sub OnTipoTasaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoTasaChanged()
    End Sub
    Partial Private Sub OnCodTipoTasaFijaChanging(value As String)
    End Sub
    Partial Private Sub OnCodTipoTasaFijaChanged()
    End Sub
    Partial Private Sub OnCodModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnCodModalidadChanged()
    End Sub
    Partial Private Sub OnClasificacionRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnClasificacionRiesgoChanged()
    End Sub
    Partial Private Sub OnCodClasificacionRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnCodClasificacionRiesgoChanged()
    End Sub
    Partial Private Sub OnEstandarizadaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEstandarizadaChanged()
    End Sub
    Partial Private Sub OnlngEmisionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngEmisionChanged()
    End Sub
    Partial Private Sub OnAliasEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnAliasEspecieChanged()
    End Sub
    Partial Private Sub OnCantidadISINChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnCantidadISINChanged()
    End Sub
    Partial Private Sub OnSeleccioneChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSeleccioneChanged()
    End Sub
    Partial Private Sub OnIDMonedaChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnIDMonedaChanged()
    End Sub
    Partial Private Sub OnCodMonedaChanging(value As String)
    End Sub
    Partial Private Sub OnCodMonedaChanged()
    End Sub
    Partial Private Sub OnNombreMonedaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreMonedaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNemotecnico", Storage:="_strNemotecnico", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property Nemotecnico() As String
			Get
				Return Me._strNemotecnico
			End Get
			Set
				If (String.Equals(Me._strNemotecnico, value) = false) Then
					Me.OnNemotecnicoChanging(value)
					Me.SendPropertyChanging
					Me._strNemotecnico = value
					Me.SendPropertyChanged("Nemotecnico")
					Me.OnNemotecnicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_strEspecie", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Especie() As String
			Get
				Return Me._strEspecie
			End Get
			Set
				If (String.Equals(Me._strEspecie, value) = false) Then
					Me.OnEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strEspecie = value
					Me.SendPropertyChanged("Especie")
					Me.OnEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNitEmisor", Storage:="_intNitEmisor", DbType:="Decimal(15,0)")>  _
		Public Property NitEmisor() As System.Nullable(Of Decimal)
			Get
				Return Me._intNitEmisor
			End Get
			Set
				If (Me._intNitEmisor.Equals(value) = false) Then
					Me.OnNitEmisorChanging(value)
					Me.SendPropertyChanging
					Me._intNitEmisor = value
					Me.SendPropertyChanged("NitEmisor")
					Me.OnNitEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEmisor", Storage:="_strEmisor", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Emisor() As String
			Get
				Return Me._strEmisor
			End Get
			Set
				If (String.Equals(Me._strEmisor, value) = false) Then
					Me.OnEmisorChanging(value)
					Me.SendPropertyChanging
					Me._strEmisor = value
					Me.SendPropertyChanged("Emisor")
					Me.OnEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsAccion", Storage:="_logEsAccion", DbType:="Bit NOT NULL")>  _
		Public Property EsAccion() As Boolean
			Get
				Return Me._logEsAccion
			End Get
			Set
				If ((Me._logEsAccion = value)  _
							= false) Then
					Me.OnEsAccionChanging(value)
					Me.SendPropertyChanging
					Me._logEsAccion = value
					Me.SendPropertyChanged("EsAccion")
					Me.OnEsAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_strMercado", DbType:="VarChar(14) NOT NULL", CanBeNull:=false)>  _
		Public Property Mercado() As String
			Get
				Return Me._strMercado
			End Get
			Set
				If (String.Equals(Me._strMercado, value) = false) Then
					Me.OnMercadoChanging(value)
					Me.SendPropertyChanging
					Me._strMercado = value
					Me.SendPropertyChanged("Mercado")
					Me.OnMercadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_logActivo", DbType:="Bit NOT NULL")>  _
		Public Property Activo() As Boolean
			Get
				Return Me._logActivo
			End Get
			Set
				If ((Me._logActivo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strISIN", Storage:="_strISIN", DbType:="VarChar(12)")>  _
		Public Property ISIN() As String
			Get
				Return Me._strISIN
			End Get
			Set
				If (String.Equals(Me._strISIN, value) = false) Then
					Me.OnISINChanging(value)
					Me.SendPropertyChanging
					Me._strISIN = value
					Me.SendPropertyChanged("ISIN")
					Me.OnISINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDFungible", Storage:="_intIDFungible", DbType:="Int")>  _
		Public Property IDFungible() As System.Nullable(Of Integer)
			Get
				Return Me._intIDFungible
			End Get
			Set
				If (Me._intIDFungible.Equals(value) = false) Then
					Me.OnIDFungibleChanging(value)
					Me.SendPropertyChanging
					Me._intIDFungible = value
					Me.SendPropertyChanged("IDFungible")
					Me.OnIDFungibleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_dtmEmision", DbType:="DateTime")>  _
		Public Property Emision() As System.Nullable(Of Date)
			Get
				Return Me._dtmEmision
			End Get
			Set
				If (Me._dtmEmision.Equals(value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._dtmEmision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_dtmVencimiento", DbType:="DateTime")>  _
		Public Property Vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._dtmVencimiento
			End Get
			Set
				If (Me._dtmVencimiento.Equals(value) = false) Then
					Me.OnVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._dtmVencimiento = value
					Me.SendPropertyChanged("Vencimiento")
					Me.OnVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaFacial", Storage:="_dblTasaFacial", DbType:="Float")>  _
		Public Property TasaFacial() As System.Nullable(Of Double)
			Get
				Return Me._dblTasaFacial
			End Get
			Set
				If (Me._dblTasaFacial.Equals(value) = false) Then
					Me.OnTasaFacialChanging(value)
					Me.SendPropertyChanging
					Me._dblTasaFacial = value
					Me.SendPropertyChanged("TasaFacial")
					Me.OnTasaFacialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaEfectiva", Storage:="_dblTasaEfectiva", DbType:="Float")>  _
		Public Property TasaEfectiva() As System.Nullable(Of Double)
			Get
				Return Me._dblTasaEfectiva
			End Get
			Set
				If (Me._dblTasaEfectiva.Equals(value) = false) Then
					Me.OnTasaEfectivaChanging(value)
					Me.SendPropertyChanging
					Me._dblTasaEfectiva = value
					Me.SendPropertyChanged("TasaEfectiva")
					Me.OnTasaEfectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_strModalidad", DbType:="VarChar(2)")>  _
		Public Property Modalidad() As String
			Get
				Return Me._strModalidad
			End Get
			Set
				If (String.Equals(Me._strModalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._strModalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdIndicador", Storage:="_intIdIndicador", DbType:="VarChar(5)")>  _
		Public Property IdIndicador() As String
			Get
				Return Me._intIdIndicador
			End Get
			Set
				If (String.Equals(Me._intIdIndicador, value) = false) Then
					Me.OnIdIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._intIdIndicador = value
					Me.SendPropertyChanged("IdIndicador")
					Me.OnIdIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_strIndicador", DbType:="VarChar(50)")>  _
		Public Property Indicador() As String
			Get
				Return Me._strIndicador
			End Get
			Set
				If (String.Equals(Me._strIndicador, value) = false) Then
					Me.OnIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._strIndicador = value
					Me.SendPropertyChanged("Indicador")
					Me.OnIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPuntosIndicador", Storage:="_intPuntosIndicador", DbType:="Float")>  _
		Public Property PuntosIndicador() As System.Nullable(Of Double)
			Get
				Return Me._intPuntosIndicador
			End Get
			Set
				If (Me._intPuntosIndicador.Equals(value) = false) Then
					Me.OnPuntosIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._intPuntosIndicador = value
					Me.SendPropertyChanged("PuntosIndicador")
					Me.OnPuntosIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_intId", DbType:="Int", IsPrimaryKey:=true)>  _
		Public Property Id() As Integer
			Get
				Return Me._intId
			End Get
			Set
				If ((Me._intId = value)  _
							= false) Then
					Me.OnIdChanging(value)
					Me.SendPropertyChanging
					Me._intId = value
					Me.SendPropertyChanged("Id")
					Me.OnIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicadorEspecie", Storage:="_IndicadorEspecie", DbType:="Varchar(50)")>  _
		Public Property IndicadorEspecie() As String
			Get
				Return Me._IndicadorEspecie
			End Get
			Set
				If (String.Equals(Me._IndicadorEspecie, value) = false) Then
					Me.OnIndicadorEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IndicadorEspecie = value
					Me.SendPropertyChanged("IndicadorEspecie")
					Me.OnIndicadorEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTasa", Storage:="_TipoTasa", DbType:="Varchar(25)")>  _
		Public Property TipoTasa() As String
			Get
				Return Me._TipoTasa
			End Get
			Set
				If (String.Equals(Me._TipoTasa, value) = false) Then
					Me.OnTipoTasaChanging(value)
					Me.SendPropertyChanging
					Me._TipoTasa = value
					Me.SendPropertyChanged("TipoTasa")
					Me.OnTipoTasaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodTipoTasa", Storage:="_CodTipoTasaFija", DbType:="Varchar(4)")>  _
		Public Property CodTipoTasaFija() As String
			Get
				Return Me._CodTipoTasaFija
			End Get
			Set
				If (String.Equals(Me._CodTipoTasaFija, value) = false) Then
					Me.OnCodTipoTasaFijaChanging(value)
					Me.SendPropertyChanging
					Me._CodTipoTasaFija = value
					Me.SendPropertyChanged("CodTipoTasaFija")
					Me.OnCodTipoTasaFijaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodModalidad", Storage:="_CodModalidad", DbType:="Varchar(3)")>  _
		Public Property CodModalidad() As String
			Get
				Return Me._CodModalidad
			End Get
			Set
				If (String.Equals(Me._CodModalidad, value) = false) Then
					Me.OnCodModalidadChanging(value)
					Me.SendPropertyChanging
					Me._CodModalidad = value
					Me.SendPropertyChanged("CodModalidad")
					Me.OnCodModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacionRiesgo", Storage:="_ClasificacionRiesgo", DbType:="Varchar(50)")>  _
		Public Property ClasificacionRiesgo() As String
			Get
				Return Me._ClasificacionRiesgo
			End Get
			Set
				If (String.Equals(Me._ClasificacionRiesgo, value) = false) Then
					Me.OnClasificacionRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._ClasificacionRiesgo = value
					Me.SendPropertyChanged("ClasificacionRiesgo")
					Me.OnClasificacionRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodClasificacionRiesgo", Storage:="_CodClasificacionRiesgo", DbType:="Varchar(3)")>  _
		Public Property CodClasificacionRiesgo() As String
			Get
				Return Me._CodClasificacionRiesgo
			End Get
			Set
				If (String.Equals(Me._CodClasificacionRiesgo, value) = false) Then
					Me.OnCodClasificacionRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._CodClasificacionRiesgo = value
					Me.SendPropertyChanged("CodClasificacionRiesgo")
					Me.OnCodClasificacionRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEstandarizada", Storage:="_Estandarizada", DbType:="Bit NULL")>  _
		Public Property Estandarizada() As System.Nullable(Of Boolean)
			Get
				Return Me._Estandarizada
			End Get
			Set
				If (Me._Estandarizada.Equals(value) = false) Then
					Me.OnEstandarizadaChanging(value)
					Me.SendPropertyChanging
					Me._Estandarizada = value
					Me.SendPropertyChanged("Estandarizada")
					Me.OnEstandarizadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngEmision", DbType:="Int")>  _
		Public Property lngEmision() As System.Nullable(Of Integer)
			Get
				Return Me._lngEmision
			End Get
			Set
				If (Me._lngEmision.Equals(value) = false) Then
					Me.OnlngEmisionChanging(value)
					Me.SendPropertyChanging
					Me._lngEmision = value
					Me.SendPropertyChanged("lngEmision")
					Me.OnlngEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAlias", Storage:="_strAlias", DbType:="VarChar(50) NULL")>  _
		Public Property AliasEspecie() As String
			Get
				Return Me._strAlias
			End Get
			Set
				If (String.Equals(Me._strAlias, value) = false) Then
					Me.OnAliasEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strAlias = value
					Me.SendPropertyChanged("AliasEspecie")
					Me.OnAliasEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadISIN", Storage:="_CantidadISIN", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property CantidadISIN() As System.Nullable(Of System.Int32)
			Get
				Return Me._CantidadISIN
			End Get
			Set
				If (Object.Equals(Me._CantidadISIN, value) = false) Then
					Me.OnCantidadISINChanging(value)
					Me.SendPropertyChanging
					Me._CantidadISIN = value
					Me.SendPropertyChanged("CantidadISIN")
					Me.OnCantidadISINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccione", Storage:="_Seleccione", DbType:="Bit NULL")>  _
		Public Property Seleccione() As System.Nullable(Of Boolean)
			Get
				Return Me._Seleccione
			End Get
			Set
				If (Me._Seleccione.Equals(value) = false) Then
					Me.OnSeleccioneChanging(value)
					Me.SendPropertyChanging
					Me._Seleccione = value
					Me.SendPropertyChanged("Seleccione")
					Me.OnSeleccioneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMoneda", Storage:="_IDMoneda", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property IDMoneda() As System.Nullable(Of System.Int32)
			Get
				Return Me._IDMoneda
			End Get
			Set
				If (Object.Equals(Me._IDMoneda, value) = false) Then
					Me.OnIDMonedaChanging(value)
					Me.SendPropertyChanging
					Me._IDMoneda = value
					Me.SendPropertyChanged("IDMoneda")
					Me.OnIDMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDMoneda", Storage:="_CodMoneda", DbType:="VarChar(4) NULL")>  _
		Public Property CodMoneda() As String
			Get
				Return Me._CodMoneda
			End Get
			Set
				If (String.Equals(Me._CodMoneda, value) = false) Then
					Me.OnCodMonedaChanging(value)
					Me.SendPropertyChanging
					Me._CodMoneda = value
					Me.SendPropertyChanged("CodMoneda")
					Me.OnCodMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreMoneda", Storage:="_NombreMoneda", DbType:="VarChar(100) NULL")>  _
		Public Property NombreMoneda() As String
			Get
				Return Me._NombreMoneda
			End Get
			Set
				If (String.Equals(Me._NombreMoneda, value) = false) Then
					Me.OnNombreMonedaChanging(value)
					Me.SendPropertyChanging
					Me._NombreMoneda = value
					Me.SendPropertyChanged("NombreMoneda")
					Me.OnNombreMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class BuscadorClientes
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _strIdComitente As String
		
		Private _strCodigoOYD As String
		
		Private _strNroDocumento As String
		
		Private _strSucursalFiducia As String
		
		Private _strCodTipoIdentificacion As String
		
		Private _strTipoIdentificacion As String
		
		Private _strNombreCodigoOYD As String
		
		Private _strNombre As String
		
		Private _strTipoVinculacion As Char
		
		Private _strDireccionEnvio As String
		
		Private _strTelefono As String
		
		Private _strCelular As String
		
		Private _strTipoRetencion As String
		
		Private _logRetFuente As Boolean
		
		Private _logContribuyente As Boolean
		
		Private _dtmUltimoMovimiento As System.Nullable(Of Date)
		
		Private _strCodCategoria As String
		
		Private _strCategoria As String
		
		Private _strCodEstado As String
		
		Private _strEstado As String
		
		Private _strCodPerfilRiesgo As String
		
		Private _strPerfilRiesgo As String
		
		Private _strCodTipoProducto As String
		
		Private _strTipoProducto As String
		
		Private _strCodTipoCliente As String
		
		Private _strTipoCliente As String
		
		Private _strCodPerfil As String
		
		Private _strPerfil As String
		
		Private _strCodFormaPago As String
		
		Private _strFormaPago As String
		
		Private _strCodOrdenanteLider As String
		
		Private _strCodReceptorLider As String
		
		Private _ClasificacionInversionista As String
		
		Private _CodClasificacionInversionista As String
		
		Private _Asociados As System.Nullable(Of Integer)
		
		Private _TipoCuenta As String
		
		Private _AdmonValores As String
		
		Private _PrimerNombre As String
		
		Private _SegundoNombre As String
		
		Private _PrimerApellido As String
		
		Private _SegundoApellido As String
		
		Private _FactorComisionCliente As System.Nullable(Of Double)
		
		Private _dtmFechaCierrePortafolio As System.Nullable(of System.Datetime)
		
		Private _IDCompania As System.Nullable(Of System.Int32)
		
		Private _NombreCompania As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Private _strTipoCompania As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIdComitenteChanged()
    End Sub
    Partial Private Sub OnCodigoOYDChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoOYDChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnSucursalFiduciaChanging(value As String)
    End Sub
    Partial Private Sub OnSucursalFiduciaChanged()
    End Sub
    Partial Private Sub OnCodTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnCodTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNombreCodigoOYDChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCodigoOYDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTipoVinculacionChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoVinculacionChanged()
    End Sub
    Partial Private Sub OnDireccionEnvioChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionEnvioChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    Partial Private Sub OnTipoRetencionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoRetencionChanged()
    End Sub
    Partial Private Sub OnRetFuenteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRetFuenteChanged()
    End Sub
    Partial Private Sub OnContribuyenteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnContribuyenteChanged()
    End Sub
    Partial Private Sub OnUltimoMovimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUltimoMovimientoChanged()
    End Sub
    Partial Private Sub OnCodCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCodCategoriaChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnCodEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnCodEstadoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnCodPerfilRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnCodPerfilRiesgoChanged()
    End Sub
    Partial Private Sub OnPerfilRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnPerfilRiesgoChanged()
    End Sub
    Partial Private Sub OnCodTipoProductoChanging(value As String)
    End Sub
    Partial Private Sub OnCodTipoProductoChanged()
    End Sub
    Partial Private Sub OnTipoProductoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoProductoChanged()
    End Sub
    Partial Private Sub OnCodTipoClienteChanging(value As String)
    End Sub
    Partial Private Sub OnCodTipoClienteChanged()
    End Sub
    Partial Private Sub OnTipoClienteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoClienteChanged()
    End Sub
    Partial Private Sub OnCodPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnCodPerfilChanged()
    End Sub
    Partial Private Sub OnPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnPerfilChanged()
    End Sub
    Partial Private Sub OnCodFormaPagoChanging(value As String)
    End Sub
    Partial Private Sub OnCodFormaPagoChanged()
    End Sub
    Partial Private Sub OnFormaPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFormaPagoChanged()
    End Sub
    Partial Private Sub OnCodOrdenanteLiderChanging(value As String)
    End Sub
    Partial Private Sub OnCodOrdenanteLiderChanged()
    End Sub
    Partial Private Sub OnCodReceptorLiderChanging(value As String)
    End Sub
    Partial Private Sub OnCodReceptorLiderChanged()
    End Sub
    Partial Private Sub OnClasificacionInversionistaChanging(value As String)
    End Sub
    Partial Private Sub OnClasificacionInversionistaChanged()
    End Sub
    Partial Private Sub OnCodClasificacionInversionistaChanging(value As String)
    End Sub
    Partial Private Sub OnCodClasificacionInversionistaChanged()
    End Sub
    Partial Private Sub OnAsociadosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAsociadosChanged()
    End Sub
    Partial Private Sub OnTipoCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCuentaChanged()
    End Sub
    Partial Private Sub OnAdmonValoresChanging(value As String)
    End Sub
    Partial Private Sub OnAdmonValoresChanged()
    End Sub
    Partial Private Sub OnPrimerNombreChanging(value As String)
    End Sub
    Partial Private Sub OnPrimerNombreChanged()
    End Sub
    Partial Private Sub OnSegundoNombreChanging(value As String)
    End Sub
    Partial Private Sub OnSegundoNombreChanged()
    End Sub
    Partial Private Sub OnPrimerApellidoChanging(value As String)
    End Sub
    Partial Private Sub OnPrimerApellidoChanged()
    End Sub
    Partial Private Sub OnSegundoApellidoChanging(value As String)
    End Sub
    Partial Private Sub OnSegundoApellidoChanged()
    End Sub
    Partial Private Sub OnFactorComisionClienteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFactorComisionClienteChanged()
    End Sub
    Partial Private Sub OndtmFechaCierrePortafolioChanging(value As System.Nullable(of System.Datetime))
    End Sub
    Partial Private Sub OndtmFechaCierrePortafolioChanged()
    End Sub
    Partial Private Sub OnIDCompaniaChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnIDCompaniaChanged()
    End Sub
    Partial Private Sub OnNombreCompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCompaniaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    Partial Private Sub OnstrTipoCompaniaChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoCompaniaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdComitente", Storage:="_strIdComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property IdComitente() As String
			Get
				Return Me._strIdComitente
			End Get
			Set
				If (String.Equals(Me._strIdComitente, value) = false) Then
					Me.OnIdComitenteChanging(value)
					Me.SendPropertyChanging
					Me._strIdComitente = value
					Me.SendPropertyChanged("IdComitente")
					Me.OnIdComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_strCodigoOYD", DbType:="Char(17) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property CodigoOYD() As String
			Get
				Return Me._strCodigoOYD
			End Get
			Set
				If (String.Equals(Me._strCodigoOYD, value) = false) Then
					Me.OnCodigoOYDChanging(value)
					Me.SendPropertyChanging
					Me._strCodigoOYD = value
					Me.SendPropertyChanged("CodigoOYD")
					Me.OnCodigoOYDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_strNroDocumento", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property NroDocumento() As String
			Get
				Return Me._strNroDocumento
			End Get
			Set
				If (String.Equals(Me._strNroDocumento, value) = false) Then
					Me.OnNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._strNroDocumento = value
					Me.SendPropertyChanged("NroDocumento")
					Me.OnNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSucursalFiducia", Storage:="_strSucursalFiducia", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
		Public Property SucursalFiducia() As String
			Get
				Return Me._strSucursalFiducia
			End Get
			Set
				If (String.Equals(Me._strSucursalFiducia, value) = false) Then
					Me.OnSucursalFiduciaChanging(value)
					Me.SendPropertyChanging
					Me._strSucursalFiducia = value
					Me.SendPropertyChanged("SucursalFiducia")
					Me.OnSucursalFiduciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodTipoIdentificacion", Storage:="_strCodTipoIdentificacion", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property CodTipoIdentificacion() As String
			Get
				Return Me._strCodTipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._strCodTipoIdentificacion, value) = false) Then
					Me.OnCodTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._strCodTipoIdentificacion = value
					Me.SendPropertyChanged("CodTipoIdentificacion")
					Me.OnCodTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_strTipoIdentificacion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoIdentificacion() As String
			Get
				Return Me._strTipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._strTipoIdentificacion, value) = false) Then
					Me.OnTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoIdentificacion = value
					Me.SendPropertyChanged("TipoIdentificacion")
					Me.OnTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCodigoOYD", Storage:="_strNombreCodigoOYD", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property NombreCodigoOYD() As String
			Get
				Return Me._strNombreCodigoOYD
			End Get
			Set
				If (String.Equals(Me._strNombreCodigoOYD, value) = false) Then
					Me.OnNombreCodigoOYDChanging(value)
					Me.SendPropertyChanging
					Me._strNombreCodigoOYD = value
					Me.SendPropertyChanged("NombreCodigoOYD")
					Me.OnNombreCodigoOYDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_strNombre", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoVinculacion", Storage:="_strTipoVinculacion", DbType:="VarChar(1) NOT NULL")>  _
		Public Property TipoVinculacion() As Char
			Get
				Return Me._strTipoVinculacion
			End Get
			Set
				If ((Me._strTipoVinculacion = value)  _
							= false) Then
					Me.OnTipoVinculacionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoVinculacion = value
					Me.SendPropertyChanged("TipoVinculacion")
					Me.OnTipoVinculacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccionEnvio", Storage:="_strDireccionEnvio", DbType:="VarChar(100)")>  _
		Public Property DireccionEnvio() As String
			Get
				Return Me._strDireccionEnvio
			End Get
			Set
				If (String.Equals(Me._strDireccionEnvio, value) = false) Then
					Me.OnDireccionEnvioChanging(value)
					Me.SendPropertyChanging
					Me._strDireccionEnvio = value
					Me.SendPropertyChanged("DireccionEnvio")
					Me.OnDireccionEnvioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono", Storage:="_strTelefono", DbType:="VarChar(25)")>  _
		Public Property Telefono() As String
			Get
				Return Me._strTelefono
			End Get
			Set
				If (String.Equals(Me._strTelefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._strTelefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCelular", Storage:="_strCelular", DbType:="VarChar(25)")>  _
		Public Property Celular() As String
			Get
				Return Me._strCelular
			End Get
			Set
				If (String.Equals(Me._strCelular, value) = false) Then
					Me.OnCelularChanging(value)
					Me.SendPropertyChanging
					Me._strCelular = value
					Me.SendPropertyChanged("Celular")
					Me.OnCelularChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoRetencion", Storage:="_strTipoRetencion", DbType:="VarChar(50)")>  _
		Public Property TipoRetencion() As String
			Get
				Return Me._strTipoRetencion
			End Get
			Set
				If (String.Equals(Me._strTipoRetencion, value) = false) Then
					Me.OnTipoRetencionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoRetencion = value
					Me.SendPropertyChanged("TipoRetencion")
					Me.OnTipoRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRetFuente", Storage:="_logRetFuente", DbType:="Bit NOT NULL")>  _
		Public Property RetFuente() As Boolean
			Get
				Return Me._logRetFuente
			End Get
			Set
				If ((Me._logRetFuente = value)  _
							= false) Then
					Me.OnRetFuenteChanging(value)
					Me.SendPropertyChanging
					Me._logRetFuente = value
					Me.SendPropertyChanged("RetFuente")
					Me.OnRetFuenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logContribuyente", Storage:="_logContribuyente", DbType:="Bit NOT NULL")>  _
		Public Property Contribuyente() As Boolean
			Get
				Return Me._logContribuyente
			End Get
			Set
				If ((Me._logContribuyente = value)  _
							= false) Then
					Me.OnContribuyenteChanging(value)
					Me.SendPropertyChanging
					Me._logContribuyente = value
					Me.SendPropertyChanged("Contribuyente")
					Me.OnContribuyenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmUltimoMovimiento", Storage:="_dtmUltimoMovimiento", DbType:="DateTime")>  _
		Public Property UltimoMovimiento() As System.Nullable(Of Date)
			Get
				Return Me._dtmUltimoMovimiento
			End Get
			Set
				If (Me._dtmUltimoMovimiento.Equals(value) = false) Then
					Me.OnUltimoMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._dtmUltimoMovimiento = value
					Me.SendPropertyChanged("UltimoMovimiento")
					Me.OnUltimoMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodCategoria", Storage:="_strCodCategoria", DbType:="VarChar(2)")>  _
		Public Property CodCategoria() As String
			Get
				Return Me._strCodCategoria
			End Get
			Set
				If (String.Equals(Me._strCodCategoria, value) = false) Then
					Me.OnCodCategoriaChanging(value)
					Me.SendPropertyChanging
					Me._strCodCategoria = value
					Me.SendPropertyChanged("CodCategoria")
					Me.OnCodCategoriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCategoria", Storage:="_strCategoria", DbType:="VarChar(50)")>  _
		Public Property Categoria() As String
			Get
				Return Me._strCategoria
			End Get
			Set
				If (String.Equals(Me._strCategoria, value) = false) Then
					Me.OnCategoriaChanging(value)
					Me.SendPropertyChanging
					Me._strCategoria = value
					Me.SendPropertyChanged("Categoria")
					Me.OnCategoriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodEstado", Storage:="_strCodEstado", DbType:="VarChar(2)")>  _
		Public Property CodEstado() As String
			Get
				Return Me._strCodEstado
			End Get
			Set
				If (String.Equals(Me._strCodEstado, value) = false) Then
					Me.OnCodEstadoChanging(value)
					Me.SendPropertyChanging
					Me._strCodEstado = value
					Me.SendPropertyChanged("CodEstado")
					Me.OnCodEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_strEstado", DbType:="VarChar(50)")>  _
		Public Property Estado() As String
			Get
				Return Me._strEstado
			End Get
			Set
				If (String.Equals(Me._strEstado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._strEstado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodPerfilRiesgo", Storage:="_strCodPerfilRiesgo", DbType:="VarChar(2)")>  _
		Public Property CodPerfilRiesgo() As String
			Get
				Return Me._strCodPerfilRiesgo
			End Get
			Set
				If (String.Equals(Me._strCodPerfilRiesgo, value) = false) Then
					Me.OnCodPerfilRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._strCodPerfilRiesgo = value
					Me.SendPropertyChanged("CodPerfilRiesgo")
					Me.OnCodPerfilRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfilRiesgo", Storage:="_strPerfilRiesgo", DbType:="VarChar(50)")>  _
		Public Property PerfilRiesgo() As String
			Get
				Return Me._strPerfilRiesgo
			End Get
			Set
				If (String.Equals(Me._strPerfilRiesgo, value) = false) Then
					Me.OnPerfilRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._strPerfilRiesgo = value
					Me.SendPropertyChanged("PerfilRiesgo")
					Me.OnPerfilRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodTipoProducto", Storage:="_strCodTipoProducto", DbType:="VarChar(3)")>  _
		Public Property CodTipoProducto() As String
			Get
				Return Me._strCodTipoProducto
			End Get
			Set
				If (String.Equals(Me._strCodTipoProducto, value) = false) Then
					Me.OnCodTipoProductoChanging(value)
					Me.SendPropertyChanging
					Me._strCodTipoProducto = value
					Me.SendPropertyChanged("CodTipoProducto")
					Me.OnCodTipoProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_strTipoProducto", DbType:="VarChar(50)")>  _
		Public Property TipoProducto() As String
			Get
				Return Me._strTipoProducto
			End Get
			Set
				If (String.Equals(Me._strTipoProducto, value) = false) Then
					Me.OnTipoProductoChanging(value)
					Me.SendPropertyChanging
					Me._strTipoProducto = value
					Me.SendPropertyChanged("TipoProducto")
					Me.OnTipoProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodTipoCliente", Storage:="_strCodTipoCliente", DbType:="VarChar(3)")>  _
		Public Property CodTipoCliente() As String
			Get
				Return Me._strCodTipoCliente
			End Get
			Set
				If (String.Equals(Me._strCodTipoCliente, value) = false) Then
					Me.OnCodTipoClienteChanging(value)
					Me.SendPropertyChanging
					Me._strCodTipoCliente = value
					Me.SendPropertyChanged("CodTipoCliente")
					Me.OnCodTipoClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCliente", Storage:="_strTipoCliente", DbType:="VarChar(50)")>  _
		Public Property TipoCliente() As String
			Get
				Return Me._strTipoCliente
			End Get
			Set
				If (String.Equals(Me._strTipoCliente, value) = false) Then
					Me.OnTipoClienteChanging(value)
					Me.SendPropertyChanging
					Me._strTipoCliente = value
					Me.SendPropertyChanged("TipoCliente")
					Me.OnTipoClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodPerfil", Storage:="_strCodPerfil", DbType:="VarChar(10)")>  _
		Public Property CodPerfil() As String
			Get
				Return Me._strCodPerfil
			End Get
			Set
				If (String.Equals(Me._strCodPerfil, value) = false) Then
					Me.OnCodPerfilChanging(value)
					Me.SendPropertyChanging
					Me._strCodPerfil = value
					Me.SendPropertyChanged("CodPerfil")
					Me.OnCodPerfilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfil", Storage:="_strPerfil", DbType:="VarChar(50)")>  _
		Public Property Perfil() As String
			Get
				Return Me._strPerfil
			End Get
			Set
				If (String.Equals(Me._strPerfil, value) = false) Then
					Me.OnPerfilChanging(value)
					Me.SendPropertyChanging
					Me._strPerfil = value
					Me.SendPropertyChanged("Perfil")
					Me.OnPerfilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodFormaPago", Storage:="_strCodFormaPago", DbType:="VarChar(1)")>  _
		Public Property CodFormaPago() As String
			Get
				Return Me._strCodFormaPago
			End Get
			Set
				If (String.Equals(Me._strCodFormaPago, value) = false) Then
					Me.OnCodFormaPagoChanging(value)
					Me.SendPropertyChanging
					Me._strCodFormaPago = value
					Me.SendPropertyChanged("CodFormaPago")
					Me.OnCodFormaPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFormaPago", Storage:="_strFormaPago", DbType:="VarChar(50)")>  _
		Public Property FormaPago() As String
			Get
				Return Me._strFormaPago
			End Get
			Set
				If (String.Equals(Me._strFormaPago, value) = false) Then
					Me.OnFormaPagoChanging(value)
					Me.SendPropertyChanging
					Me._strFormaPago = value
					Me.SendPropertyChanged("FormaPago")
					Me.OnFormaPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodOrdenanteLider", Storage:="_strCodOrdenanteLider", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property CodOrdenanteLider() As String
			Get
				Return Me._strCodOrdenanteLider
			End Get
			Set
				If (String.Equals(Me._strCodOrdenanteLider, value) = false) Then
					Me.OnCodOrdenanteLiderChanging(value)
					Me.SendPropertyChanging
					Me._strCodOrdenanteLider = value
					Me.SendPropertyChanged("CodOrdenanteLider")
					Me.OnCodOrdenanteLiderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodReceptorLider", Storage:="_strCodReceptorLider", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property CodReceptorLider() As String
			Get
				Return Me._strCodReceptorLider
			End Get
			Set
				If (String.Equals(Me._strCodReceptorLider, value) = false) Then
					Me.OnCodReceptorLiderChanging(value)
					Me.SendPropertyChanging
					Me._strCodReceptorLider = value
					Me.SendPropertyChanged("CodReceptorLider")
					Me.OnCodReceptorLiderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacionInversionista", Storage:="_ClasificacionInversionista", DbType:="Varchar(50)")>  _
		Public Property ClasificacionInversionista() As String
			Get
				Return Me._ClasificacionInversionista
			End Get
			Set
				If (String.Equals(Me._ClasificacionInversionista, value) = false) Then
					Me.OnClasificacionInversionistaChanging(value)
					Me.SendPropertyChanging
					Me._ClasificacionInversionista = value
					Me.SendPropertyChanged("ClasificacionInversionista")
					Me.OnClasificacionInversionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodClasificacionInversionista", Storage:="_CodClasificacionInversionista", DbType:="Varchar(3)")>  _
		Public Property CodClasificacionInversionista() As String
			Get
				Return Me._CodClasificacionInversionista
			End Get
			Set
				If (String.Equals(Me._CodClasificacionInversionista, value) = false) Then
					Me.OnCodClasificacionInversionistaChanging(value)
					Me.SendPropertyChanging
					Me._CodClasificacionInversionista = value
					Me.SendPropertyChanged("CodClasificacionInversionista")
					Me.OnCodClasificacionInversionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDAsociados", Storage:="_Asociados", DbType:="Int")>  _
		Public Property Asociados() As System.Nullable(Of Integer)
			Get
				Return Me._Asociados
			End Get
			Set
				If (Me._Asociados.Equals(value) = false) Then
					Me.OnAsociadosChanging(value)
					Me.SendPropertyChanging
					Me._Asociados = value
					Me.SendPropertyChanged("Asociados")
					Me.OnAsociadosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCuenta", Storage:="_TipoCuenta", DbType:="VarChar(16)")>  _
		Public Property TipoCuenta() As String
			Get
				Return Me._TipoCuenta
			End Get
			Set
				If (String.Equals(Me._TipoCuenta, value) = false) Then
					Me.OnTipoCuentaChanging(value)
					Me.SendPropertyChanging
					Me._TipoCuenta = value
					Me.SendPropertyChanged("TipoCuenta")
					Me.OnTipoCuentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAdmonValores", Storage:="_AdmonValores", DbType:="Varchar(1)")>  _
		Public Property AdmonValores() As String
			Get
				Return Me._AdmonValores
			End Get
			Set
				If (String.Equals(Me._AdmonValores, value) = false) Then
					Me.OnAdmonValoresChanging(value)
					Me.SendPropertyChanging
					Me._AdmonValores = value
					Me.SendPropertyChanged("AdmonValores")
					Me.OnAdmonValoresChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrimerNombre", Storage:="_PrimerNombre", DbType:="Varchar(100)")>  _
		Public Property PrimerNombre() As String
			Get
				Return Me._PrimerNombre
			End Get
			Set
				If (String.Equals(Me._PrimerNombre, value) = false) Then
					Me.OnPrimerNombreChanging(value)
					Me.SendPropertyChanging
					Me._PrimerNombre = value
					Me.SendPropertyChanged("PrimerNombre")
					Me.OnPrimerNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSegundoNombre", Storage:="_SegundoNombre", DbType:="Varchar(100)")>  _
		Public Property SegundoNombre() As String
			Get
				Return Me._SegundoNombre
			End Get
			Set
				If (String.Equals(Me._SegundoNombre, value) = false) Then
					Me.OnSegundoNombreChanging(value)
					Me.SendPropertyChanging
					Me._SegundoNombre = value
					Me.SendPropertyChanged("SegundoNombre")
					Me.OnSegundoNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrimerApellido", Storage:="_PrimerApellido", DbType:="Varchar(100)")>  _
		Public Property PrimerApellido() As String
			Get
				Return Me._PrimerApellido
			End Get
			Set
				If (String.Equals(Me._PrimerApellido, value) = false) Then
					Me.OnPrimerApellidoChanging(value)
					Me.SendPropertyChanging
					Me._PrimerApellido = value
					Me.SendPropertyChanged("PrimerApellido")
					Me.OnPrimerApellidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSegundoApellido", Storage:="_SegundoApellido", DbType:="Varchar(100)")>  _
		Public Property SegundoApellido() As String
			Get
				Return Me._SegundoApellido
			End Get
			Set
				If (String.Equals(Me._SegundoApellido, value) = false) Then
					Me.OnSegundoApellidoChanging(value)
					Me.SendPropertyChanging
					Me._SegundoApellido = value
					Me.SendPropertyChanged("SegundoApellido")
					Me.OnSegundoApellidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblFactorComisionCliente", Storage:="_FactorComisionCliente", DbType:="float")>  _
		Public Property FactorComisionCliente() As System.Nullable(Of Double)
			Get
				Return Me._FactorComisionCliente
			End Get
			Set
				If (Me._FactorComisionCliente.Equals(value) = false) Then
					Me.OnFactorComisionClienteChanging(value)
					Me.SendPropertyChanging
					Me._FactorComisionCliente = value
					Me.SendPropertyChanged("FactorComisionCliente")
					Me.OnFactorComisionClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaCierrePortafolio", DbType:="Datetime", CanBeNull:=true)>  _
		Public Property dtmFechaCierrePortafolio() As System.Nullable(of System.Datetime)
			Get
				Return Me._dtmFechaCierrePortafolio
			End Get
			Set
				If (Object.Equals(Me._dtmFechaCierrePortafolio, value) = false) Then
					Me.OndtmFechaCierrePortafolioChanging(value)
					Me.SendPropertyChanging
					Me._dtmFechaCierrePortafolio = value
					Me.SendPropertyChanged("dtmFechaCierrePortafolio")
					Me.OndtmFechaCierrePortafolioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCompania", Storage:="_IDCompania", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCompania() As System.Nullable(Of System.Int32)
			Get
				Return Me._IDCompania
			End Get
			Set
				If (Object.Equals(Me._IDCompania, value) = false) Then
					Me.OnIDCompaniaChanging(value)
					Me.SendPropertyChanging
					Me._IDCompania = value
					Me.SendPropertyChanged("IDCompania")
					Me.OnIDCompaniaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCompania", Storage:="_NombreCompania", DbType:="Varchar(100)")>  _
		Public Property NombreCompania() As String
			Get
				Return Me._NombreCompania
			End Get
			Set
				If (String.Equals(Me._NombreCompania, value) = false) Then
					Me.OnNombreCompaniaChanging(value)
					Me.SendPropertyChanging
					Me._NombreCompania = value
					Me.SendPropertyChanged("NombreCompania")
					Me.OnNombreCompaniaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCompania", DbType:="Varchar(80)")>  _
		Public Property strTipoCompania() As String
			Get
				Return Me._strTipoCompania
			End Get
			Set
				If (String.Equals(Me._strTipoCompania, value) = false) Then
					Me.OnstrTipoCompaniaChanging(value)
					Me.SendPropertyChanging
					Me._strTipoCompania = value
					Me.SendPropertyChanged("strTipoCompania")
					Me.OnstrTipoCompaniaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class BuscadorGenerico
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdItem As Integer
		
		Private _strIdItem As String
		
		Private _strCodItem As String
		
		Private _strNombre As String
		
		Private _strDescripcion As String
		
		Private _strClasificacion As String
		
		Private _strCodEstado As String
		
		Private _strEstado As String
		
		Private _strEtiquetaCodItem As String = CType(Nothing, String)
		
		Private _EtiquetaIdItem As String
		
		Private _CodigoAuxiliar As String
		
		Private _InfoAdicional As String
		
		Private _InfoAdicional02 As String
		
		Private _InfoAdicional03 As String
		
		Private _InfoAdicional04 As String
		
		Private _InfoAdicional05 As String
		
		Private _InfoAdicional06 As String
		
		Private _InfoAdicional07 As String
		
		Private _InfoAdicional08 As String
		
		Private _InfoAdicional09 As String
		
		Private _InfoAdicional10 As String
		
		Private _InfoAdicional11 As String
		
		Private _InfoAdicional12 As String
		
		Private _InfoAdicional13 As String
		
		Private _InfoAdicional14 As String
		
		Private _InfoAdicional15 As String
		
		Private _InfoAdicional16 As String
		
		Private _InfoAdicional17 As String
		
		Private _InfoAdicional18 As String
		
		Private _InfoAdicional19 As String
		
		Private _InfoAdicional20 As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdItemChanging(value As String)
    End Sub
    Partial Private Sub OnIdItemChanged()
    End Sub
    Partial Private Sub OnCodItemChanging(value As String)
    End Sub
    Partial Private Sub OnCodItemChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnClasificacionChanging(value As String)
    End Sub
    Partial Private Sub OnClasificacionChanged()
    End Sub
    Partial Private Sub OnCodEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnCodEstadoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnEtiquetaIdItemChanging(value As String)
    End Sub
    Partial Private Sub OnEtiquetaIdItemChanged()
    End Sub
    Partial Private Sub OnCodigoAuxiliarChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoAuxiliarChanged()
    End Sub
    Partial Private Sub OnInfoAdicional01Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional01Changed()
    End Sub
    Partial Private Sub OnInfoAdicional02Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional02Changed()
    End Sub
    Partial Private Sub OnInfoAdicional03Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional03Changed()
    End Sub
    Partial Private Sub OnInfoAdicional04Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional04Changed()
    End Sub
    Partial Private Sub OnInfoAdicional05Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional05Changed()
    End Sub
    Partial Private Sub OnInfoAdicional06Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional06Changed()
    End Sub
    Partial Private Sub OnInfoAdicional07Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional07Changed()
    End Sub
    Partial Private Sub OnInfoAdicional08Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional08Changed()
    End Sub
    Partial Private Sub OnInfoAdicional09Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional09Changed()
    End Sub
    Partial Private Sub OnInfoAdicional10Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional10Changed()
    End Sub
    Partial Private Sub OnInfoAdicional11Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional11Changed()
    End Sub
    Partial Private Sub OnInfoAdicional12Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional12Changed()
    End Sub
    Partial Private Sub OnInfoAdicional13Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional13Changed()
    End Sub
    Partial Private Sub OnInfoAdicional14Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional14Changed()
    End Sub
    Partial Private Sub OnInfoAdicional15Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional15Changed()
    End Sub
    Partial Private Sub OnInfoAdicional16Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional16Changed()
    End Sub
    Partial Private Sub OnInfoAdicional17Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional17Changed()
    End Sub
    Partial Private Sub OnInfoAdicional18Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional18Changed()
    End Sub
    Partial Private Sub OnInfoAdicional19Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional19Changed()
    End Sub
    Partial Private Sub OnInfoAdicional20Changing(value As String)
    End Sub
    Partial Private Sub OnInfoAdicional20Changed()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdItem", Storage:="_intIdItem", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true)>  _
		Public Property Id() As Integer
			Get
				Return Me._intIdItem
			End Get
			Set
				If ((Me._intIdItem = value)  _
							= false) Then
					Me.OnIdChanging(value)
					Me.SendPropertyChanging
					Me._intIdItem = value
					Me.SendPropertyChanged("Id")
					Me.OnIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdItem", Storage:="_strIdItem", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property IdItem() As String
			Get
				Return Me._strIdItem
			End Get
			Set
				If (String.Equals(Me._strIdItem, value) = false) Then
					Me.OnIdItemChanging(value)
					Me.SendPropertyChanging
					Me._strIdItem = value
					Me.SendPropertyChanged("IdItem")
					Me.OnIdItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodItem", Storage:="_strCodItem", DbType:="VarChar(80)")>  _
		Public Property CodItem() As String
			Get
				Return Me._strCodItem
			End Get
			Set
				If (String.Equals(Me._strCodItem, value) = false) Then
					Me.OnCodItemChanging(value)
					Me.SendPropertyChanging
					Me._strCodItem = value
					Me.SendPropertyChanged("CodItem")
					Me.OnCodItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_strNombre", DbType:="VarChar(100)")>  _
		Public Property Nombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_strDescripcion", DbType:="VarChar(200)")>  _
		Public Property Descripcion() As String
			Get
				Return Me._strDescripcion
			End Get
			Set
				If (String.Equals(Me._strDescripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacion", Storage:="_strClasificacion", DbType:="VarChar(50)")>  _
		Public Property Clasificacion() As String
			Get
				Return Me._strClasificacion
			End Get
			Set
				If (String.Equals(Me._strClasificacion, value) = false) Then
					Me.OnClasificacionChanging(value)
					Me.SendPropertyChanging
					Me._strClasificacion = value
					Me.SendPropertyChanged("Clasificacion")
					Me.OnClasificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodEstado", Storage:="_strCodEstado", DbType:="VarChar(2)")>  _
		Public Property CodEstado() As String
			Get
				Return Me._strCodEstado
			End Get
			Set
				If (String.Equals(Me._strCodEstado, value) = false) Then
					Me.OnCodEstadoChanging(value)
					Me.SendPropertyChanging
					Me._strCodEstado = value
					Me.SendPropertyChanged("CodEstado")
					Me.OnCodEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_strEstado", DbType:="VarChar(50)")>  _
		Public Property Estado() As String
			Get
				Return Me._strEstado
			End Get
			Set
				If (String.Equals(Me._strEstado, value) = false) Then
					Me.OnEstadoChanging(value)
					Me.SendPropertyChanging
					Me._strEstado = value
					Me.SendPropertyChanged("Estado")
					Me.OnEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEtiquetaCodItem", Storage:="_strEtiquetaCodItem", DbType:="VarChar(30)", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Public ReadOnly Property EtiquetaCodItem() As String
			Get
				Return Me._strEtiquetaCodItem
			End Get
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEtiquetaIdItem", Storage:="_EtiquetaIdItem", DbType:="Varchar(30)", CanBeNull:=false)>  _
		Public Property EtiquetaIdItem() As String
			Get
				Return Me._EtiquetaIdItem
			End Get
			Set
				If (String.Equals(Me._EtiquetaIdItem, value) = false) Then
					Me.OnEtiquetaIdItemChanging(value)
					Me.SendPropertyChanging
					Me._EtiquetaIdItem = value
					Me.SendPropertyChanged("EtiquetaIdItem")
					Me.OnEtiquetaIdItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoAuxiliar", Storage:="_CodigoAuxiliar", DbType:="Varchar(50)")>  _
		Public Property CodigoAuxiliar() As String
			Get
				Return Me._CodigoAuxiliar
			End Get
			Set
				If (String.Equals(Me._CodigoAuxiliar, value) = false) Then
					Me.OnCodigoAuxiliarChanging(value)
					Me.SendPropertyChanging
					Me._CodigoAuxiliar = value
					Me.SendPropertyChanged("CodigoAuxiliar")
					Me.OnCodigoAuxiliarChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional01", Storage:="_InfoAdicional", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional01() As String
			Get
				Return Me._InfoAdicional
			End Get
			Set
				If (String.Equals(Me._InfoAdicional, value) = false) Then
					Me.OnInfoAdicional01Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional = value
					Me.SendPropertyChanged("InfoAdicional01")
					Me.OnInfoAdicional01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional02", Storage:="_InfoAdicional02", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional02() As String
			Get
				Return Me._InfoAdicional02
			End Get
			Set
				If (String.Equals(Me._InfoAdicional02, value) = false) Then
					Me.OnInfoAdicional02Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional02 = value
					Me.SendPropertyChanged("InfoAdicional02")
					Me.OnInfoAdicional02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional03", Storage:="_InfoAdicional03", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional03() As String
			Get
				Return Me._InfoAdicional03
			End Get
			Set
				If (String.Equals(Me._InfoAdicional03, value) = false) Then
					Me.OnInfoAdicional03Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional03 = value
					Me.SendPropertyChanged("InfoAdicional03")
					Me.OnInfoAdicional03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional04", Storage:="_InfoAdicional04", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional04() As String
			Get
				Return Me._InfoAdicional04
			End Get
			Set
				If (String.Equals(Me._InfoAdicional04, value) = false) Then
					Me.OnInfoAdicional04Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional04 = value
					Me.SendPropertyChanged("InfoAdicional04")
					Me.OnInfoAdicional04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional05", Storage:="_InfoAdicional05", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional05() As String
			Get
				Return Me._InfoAdicional05
			End Get
			Set
				If (String.Equals(Me._InfoAdicional05, value) = false) Then
					Me.OnInfoAdicional05Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional05 = value
					Me.SendPropertyChanged("InfoAdicional05")
					Me.OnInfoAdicional05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional06", Storage:="_InfoAdicional06", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional06() As String
			Get
				Return Me._InfoAdicional06
			End Get
			Set
				If (String.Equals(Me._InfoAdicional06, value) = false) Then
					Me.OnInfoAdicional06Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional06 = value
					Me.SendPropertyChanged("InfoAdicional06")
					Me.OnInfoAdicional06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional07", Storage:="_InfoAdicional07", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional07() As String
			Get
				Return Me._InfoAdicional07
			End Get
			Set
				If (String.Equals(Me._InfoAdicional07, value) = false) Then
					Me.OnInfoAdicional07Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional07 = value
					Me.SendPropertyChanged("InfoAdicional07")
					Me.OnInfoAdicional07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional08", Storage:="_InfoAdicional08", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional08() As String
			Get
				Return Me._InfoAdicional08
			End Get
			Set
				If (String.Equals(Me._InfoAdicional08, value) = false) Then
					Me.OnInfoAdicional08Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional08 = value
					Me.SendPropertyChanged("InfoAdicional08")
					Me.OnInfoAdicional08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional09", Storage:="_InfoAdicional09", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional09() As String
			Get
				Return Me._InfoAdicional09
			End Get
			Set
				If (String.Equals(Me._InfoAdicional09, value) = false) Then
					Me.OnInfoAdicional09Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional09 = value
					Me.SendPropertyChanged("InfoAdicional09")
					Me.OnInfoAdicional09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional10", Storage:="_InfoAdicional10", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional10() As String
			Get
				Return Me._InfoAdicional10
			End Get
			Set
				If (String.Equals(Me._InfoAdicional10, value) = false) Then
					Me.OnInfoAdicional10Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional10 = value
					Me.SendPropertyChanged("InfoAdicional10")
					Me.OnInfoAdicional10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional11", Storage:="_InfoAdicional11", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional11() As String
			Get
				Return Me._InfoAdicional11
			End Get
			Set
				If (String.Equals(Me._InfoAdicional11, value) = false) Then
					Me.OnInfoAdicional11Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional11 = value
					Me.SendPropertyChanged("InfoAdicional11")
					Me.OnInfoAdicional11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional12", Storage:="_InfoAdicional12", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional12() As String
			Get
				Return Me._InfoAdicional12
			End Get
			Set
				If (String.Equals(Me._InfoAdicional12, value) = false) Then
					Me.OnInfoAdicional12Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional12 = value
					Me.SendPropertyChanged("InfoAdicional12")
					Me.OnInfoAdicional12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional13", Storage:="_InfoAdicional13", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional13() As String
			Get
				Return Me._InfoAdicional13
			End Get
			Set
				If (String.Equals(Me._InfoAdicional13, value) = false) Then
					Me.OnInfoAdicional13Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional13 = value
					Me.SendPropertyChanged("InfoAdicional13")
					Me.OnInfoAdicional13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional14", Storage:="_InfoAdicional14", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional14() As String
			Get
				Return Me._InfoAdicional14
			End Get
			Set
				If (String.Equals(Me._InfoAdicional14, value) = false) Then
					Me.OnInfoAdicional14Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional14 = value
					Me.SendPropertyChanged("InfoAdicional14")
					Me.OnInfoAdicional14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional15", Storage:="_InfoAdicional15", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional15() As String
			Get
				Return Me._InfoAdicional15
			End Get
			Set
				If (String.Equals(Me._InfoAdicional15, value) = false) Then
					Me.OnInfoAdicional15Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional15 = value
					Me.SendPropertyChanged("InfoAdicional15")
					Me.OnInfoAdicional15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional16", Storage:="_InfoAdicional16", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional16() As String
			Get
				Return Me._InfoAdicional16
			End Get
			Set
				If (String.Equals(Me._InfoAdicional16, value) = false) Then
					Me.OnInfoAdicional16Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional16 = value
					Me.SendPropertyChanged("InfoAdicional16")
					Me.OnInfoAdicional16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional17", Storage:="_InfoAdicional17", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional17() As String
			Get
				Return Me._InfoAdicional17
			End Get
			Set
				If (String.Equals(Me._InfoAdicional17, value) = false) Then
					Me.OnInfoAdicional17Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional17 = value
					Me.SendPropertyChanged("InfoAdicional17")
					Me.OnInfoAdicional17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional18", Storage:="_InfoAdicional18", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional18() As String
			Get
				Return Me._InfoAdicional18
			End Get
			Set
				If (String.Equals(Me._InfoAdicional18, value) = false) Then
					Me.OnInfoAdicional18Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional18 = value
					Me.SendPropertyChanged("InfoAdicional18")
					Me.OnInfoAdicional18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional19", Storage:="_InfoAdicional19", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional19() As String
			Get
				Return Me._InfoAdicional19
			End Get
			Set
				If (String.Equals(Me._InfoAdicional19, value) = false) Then
					Me.OnInfoAdicional19Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional19 = value
					Me.SendPropertyChanged("InfoAdicional19")
					Me.OnInfoAdicional19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoAdicional20", Storage:="_InfoAdicional20", DbType:="Varchar(250)")>  _
		Public Property InfoAdicional20() As String
			Get
				Return Me._InfoAdicional20
			End Get
			Set
				If (String.Equals(Me._InfoAdicional20, value) = false) Then
					Me.OnInfoAdicional20Changing(value)
					Me.SendPropertyChanging
					Me._InfoAdicional20 = value
					Me.SendPropertyChanged("InfoAdicional20")
					Me.OnInfoAdicional20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ztmpCuentasDeposito")>  _
	Partial Public Class BuscadorCuentasDeposito
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _IdComitente As String
		
		Private _NroCuentaDeposito As System.Nullable(Of System.Int32)
		
		Private _TipoIdBenef1 As String
		
		Private _NroDocBenef1 As System.Nullable(Of Decimal)
		
		Private _Conector1 As String
		
		Private _Nombre1 As String
		
		Private _TipoIdBenef2 As String
		
		Private _NroDocBenef2 As System.Nullable(Of Decimal)
		
		Private _Conector2 As String
		
		Private _Nombre2 As String
		
		Private _Deposito As String
		
		Private _NombreDeposito As String
		
		Private _DescripcionCta As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIdComitenteChanged()
    End Sub
    Partial Private Sub OnNroCuentaDepositoChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnNroCuentaDepositoChanged()
    End Sub
    Partial Private Sub OnTipoIdBeneficiario1Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdBeneficiario1Changed()
    End Sub
    Partial Private Sub OnNroDocBeneficiario1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocBeneficiario1Changed()
    End Sub
    Partial Private Sub OnConector1Changing(value As String)
    End Sub
    Partial Private Sub OnConector1Changed()
    End Sub
    Partial Private Sub OnNombreBeneficiario1Changing(value As String)
    End Sub
    Partial Private Sub OnNombreBeneficiario1Changed()
    End Sub
    Partial Private Sub OnTipoIdBeneficiario2Changing(value As String)
    End Sub
    Partial Private Sub OnTipoIdBeneficiario2Changed()
    End Sub
    Partial Private Sub OnNroDocBeneficiario2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNroDocBeneficiario2Changed()
    End Sub
    Partial Private Sub OnConector2Changing(value As String)
    End Sub
    Partial Private Sub OnConector2Changed()
    End Sub
    Partial Private Sub OnNombreBeneficiario2Changing(value As String)
    End Sub
    Partial Private Sub OnNombreBeneficiario2Changed()
    End Sub
    Partial Private Sub OnDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnDepositoChanged()
    End Sub
    Partial Private Sub OnNombreDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDepositoChanged()
    End Sub
    Partial Private Sub OnDescripcionCtaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionCtaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdComitente", Storage:="_IdComitente", DbType:="Char(17)")>  _
		Public Property IdComitente() As String
			Get
				Return Me._IdComitente
			End Get
			Set
				If (String.Equals(Me._IdComitente, value) = false) Then
					Me.OnIdComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IdComitente = value
					Me.SendPropertyChanged("IdComitente")
					Me.OnIdComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroCuentaDeposito", Storage:="_NroCuentaDeposito", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property NroCuentaDeposito() As System.Nullable(Of System.Int32)
			Get
				Return Me._NroCuentaDeposito
			End Get
			Set
				If (Object.Equals(Me._NroCuentaDeposito, value) = false) Then
					Me.OnNroCuentaDepositoChanging(value)
					Me.SendPropertyChanging
					Me._NroCuentaDeposito = value
					Me.SendPropertyChanged("NroCuentaDeposito")
					Me.OnNroCuentaDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdBeneficiario1", Storage:="_TipoIdBenef1", DbType:="Varchar(50)")>  _
		Public Property TipoIdBeneficiario1() As String
			Get
				Return Me._TipoIdBenef1
			End Get
			Set
				If (String.Equals(Me._TipoIdBenef1, value) = false) Then
					Me.OnTipoIdBeneficiario1Changing(value)
					Me.SendPropertyChanging
					Me._TipoIdBenef1 = value
					Me.SendPropertyChanged("TipoIdBeneficiario1")
					Me.OnTipoIdBeneficiario1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocBenef1", Storage:="_NroDocBenef1", DbType:="Decimal(15,0)")>  _
		Public Property NroDocBeneficiario1() As System.Nullable(Of Decimal)
			Get
				Return Me._NroDocBenef1
			End Get
			Set
				If (Me._NroDocBenef1.Equals(value) = false) Then
					Me.OnNroDocBeneficiario1Changing(value)
					Me.SendPropertyChanging
					Me._NroDocBenef1 = value
					Me.SendPropertyChanged("NroDocBeneficiario1")
					Me.OnNroDocBeneficiario1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConector1", Storage:="_Conector1", DbType:="VarChar(3)")>  _
		Public Property Conector1() As String
			Get
				Return Me._Conector1
			End Get
			Set
				If (String.Equals(Me._Conector1, value) = false) Then
					Me.OnConector1Changing(value)
					Me.SendPropertyChanging
					Me._Conector1 = value
					Me.SendPropertyChanged("Conector1")
					Me.OnConector1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre1", Storage:="_Nombre1", DbType:="VarChar(50)")>  _
		Public Property NombreBeneficiario1() As String
			Get
				Return Me._Nombre1
			End Get
			Set
				If (String.Equals(Me._Nombre1, value) = false) Then
					Me.OnNombreBeneficiario1Changing(value)
					Me.SendPropertyChanging
					Me._Nombre1 = value
					Me.SendPropertyChanged("NombreBeneficiario1")
					Me.OnNombreBeneficiario1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdBeneficiario2", Storage:="_TipoIdBenef2", DbType:="Varchar(50)")>  _
		Public Property TipoIdBeneficiario2() As String
			Get
				Return Me._TipoIdBenef2
			End Get
			Set
				If (String.Equals(Me._TipoIdBenef2, value) = false) Then
					Me.OnTipoIdBeneficiario2Changing(value)
					Me.SendPropertyChanging
					Me._TipoIdBenef2 = value
					Me.SendPropertyChanged("TipoIdBeneficiario2")
					Me.OnTipoIdBeneficiario2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocBenef2", Storage:="_NroDocBenef2", DbType:="Decimal(15,0)")>  _
		Public Property NroDocBeneficiario2() As System.Nullable(Of Decimal)
			Get
				Return Me._NroDocBenef2
			End Get
			Set
				If (Me._NroDocBenef2.Equals(value) = false) Then
					Me.OnNroDocBeneficiario2Changing(value)
					Me.SendPropertyChanging
					Me._NroDocBenef2 = value
					Me.SendPropertyChanged("NroDocBeneficiario2")
					Me.OnNroDocBeneficiario2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConector2", Storage:="_Conector2", DbType:="VarChar(3)")>  _
		Public Property Conector2() As String
			Get
				Return Me._Conector2
			End Get
			Set
				If (String.Equals(Me._Conector2, value) = false) Then
					Me.OnConector2Changing(value)
					Me.SendPropertyChanging
					Me._Conector2 = value
					Me.SendPropertyChanged("Conector2")
					Me.OnConector2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre2", Storage:="_Nombre2", DbType:="VarChar(50)")>  _
		Public Property NombreBeneficiario2() As String
			Get
				Return Me._Nombre2
			End Get
			Set
				If (String.Equals(Me._Nombre2, value) = false) Then
					Me.OnNombreBeneficiario2Changing(value)
					Me.SendPropertyChanging
					Me._Nombre2 = value
					Me.SendPropertyChanged("NombreBeneficiario2")
					Me.OnNombreBeneficiario2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDeposito", Storage:="_Deposito", DbType:="Varchar(2)", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Deposito() As String
			Get
				Return Me._Deposito
			End Get
			Set
				If (String.Equals(Me._Deposito, value) = false) Then
					Me.OnDepositoChanging(value)
					Me.SendPropertyChanging
					Me._Deposito = value
					Me.SendPropertyChanged("Deposito")
					Me.OnDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNomDeposito", Storage:="_NombreDeposito", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property NombreDeposito() As String
			Get
				Return Me._NombreDeposito
			End Get
			Set
				If (String.Equals(Me._NombreDeposito, value) = false) Then
					Me.OnNombreDepositoChanging(value)
					Me.SendPropertyChanging
					Me._NombreDeposito = value
					Me.SendPropertyChanged("NombreDeposito")
					Me.OnNombreDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionCta", Storage:="_DescripcionCta", DbType:="Varchar(100)")>  _
		Public Property DescripcionCta() As String
			Get
				Return Me._DescripcionCta
			End Get
			Set
				If (String.Equals(Me._DescripcionCta, value) = false) Then
					Me.OnDescripcionCtaChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionCta = value
					Me.SendPropertyChanged("DescripcionCta")
					Me.OnDescripcionCtaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class BuscadorOrdenantes
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdOrdenante As String
		
		Private _IdComitente As String
		
		Private _TipoIdentificacion As String
		
		Private _NroDocumento As String
		
		Private _Nombre As String
		
		Private _Lider As Boolean
		
		Private _DescripcionOrdenante As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnIdOrdenanteChanged()
    End Sub
    Partial Private Sub OnIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIdComitenteChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnLiderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLiderChanged()
    End Sub
    Partial Private Sub OnDescripcionOrdenanteChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionOrdenanteChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOrdenante", Storage:="_IdOrdenante", DbType:="Char(17) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property IdOrdenante() As String
			Get
				Return Me._IdOrdenante
			End Get
			Set
				If (String.Equals(Me._IdOrdenante, value) = false) Then
					Me.OnIdOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._IdOrdenante = value
					Me.SendPropertyChanged("IdOrdenante")
					Me.OnIdOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdComitente", Storage:="_IdComitente", DbType:="Char(17) NOT NULL", CanBeNull:=false)>  _
		Public Property IdComitente() As String
			Get
				Return Me._IdComitente
			End Get
			Set
				If (String.Equals(Me._IdComitente, value) = false) Then
					Me.OnIdComitenteChanging(value)
					Me.SendPropertyChanging
					Me._IdComitente = value
					Me.SendPropertyChanged("IdComitente")
					Me.OnIdComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property TipoIdentificacion() As String
			Get
				Return Me._TipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacion, value) = false) Then
					Me.OnTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacion = value
					Me.SendPropertyChanged("TipoIdentificacion")
					Me.OnTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property NroDocumento() As String
			Get
				Return Me._NroDocumento
			End Get
			Set
				If (String.Equals(Me._NroDocumento, value) = false) Then
					Me.OnNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._NroDocumento = value
					Me.SendPropertyChanged("NroDocumento")
					Me.OnNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>  _
		Public Property Lider() As Boolean
			Get
				Return Me._Lider
			End Get
			Set
				If ((Me._Lider = value)  _
							= false) Then
					Me.OnLiderChanging(value)
					Me.SendPropertyChanging
					Me._Lider = value
					Me.SendPropertyChanged("Lider")
					Me.OnLiderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionOrdenante", Storage:="_DescripcionOrdenante", DbType:="Varchar(150)")>  _
		Public Property DescripcionOrdenante() As String
			Get
				Return Me._DescripcionOrdenante
			End Get
			Set
				If (String.Equals(Me._DescripcionOrdenante, value) = false) Then
					Me.OnDescripcionOrdenanteChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionOrdenante = value
					Me.SendPropertyChanged("DescripcionOrdenante")
					Me.OnDescripcionOrdenanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class RetornoCampoTabla
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Categoria As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="Varchar(100)", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Retorno() As String
			Get
				Return Me._Categoria
			End Get
			Set
				If (String.Equals(Me._Categoria, value) = false) Then
					Me.OnRetornoChanging(value)
					Me.SendPropertyChanging
					Me._Categoria = value
					Me.SendPropertyChanged("Retorno")
					Me.OnRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDTS")>  _
	Partial Public Class DT
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _DTS As Integer
		
		Private _Descripcion As String
		
		Private _NomSP As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDDTS As Integer
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnDTSChanging(value As Integer)
    End Sub
    Partial Private Sub OnDTSChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnNomSPChanging(value As String)
    End Sub
    Partial Private Sub OnNomSPChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDDTSChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDTSChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDTS", Storage:="_DTS", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property DTS() As Integer
			Get
				Return Me._DTS
			End Get
			Set
				If (Object.Equals(Me._DTS, value) = false) Then
					Me.OnDTSChanging(value)
					Me.SendPropertyChanging
					Me._DTS = value
					Me.SendPropertyChanged("DTS")
					Me.OnDTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNomSP", Storage:="_NomSP", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NomSP() As String
			Get
				Return Me._NomSP
			End Get
			Set
				If (String.Equals(Me._NomSP, value) = false) Then
					Me.OnNomSPChanging(value)
					Me.SendPropertyChanging
					Me._NomSP = value
					Me.SendPropertyChanged("NomSP")
					Me.OnNomSPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDTS", Storage:="_IDDTS", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDDTS() As Integer
			Get
				Return Me._IDDTS
			End Get
			Set
				If (Object.Equals(Me._IDDTS, value) = false) Then
					Me.OnIDDTSChanging(value)
					Me.SendPropertyChanging
					Me._IDDTS = value
					Me.SendPropertyChanged("IDDTS")
					Me.OnIDDTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAuditoria")>  _
	Partial Public Class AuditoriaTabla
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdAuditoria As Integer
		
		Private _NombreTabla As String
		
		Private _Ingreso As System.Nullable(Of Boolean)
		
		Private _Modificacion As System.Nullable(Of Boolean)
		
		Private _Eliminacion As System.Nullable(Of Boolean)
		
		Private _Usuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Private _strOpcion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdAuditoriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAuditoriaChanged()
    End Sub
    Partial Private Sub OnNombreTablaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTablaChanged()
    End Sub
    Partial Private Sub OnIngresoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIngresoChanged()
    End Sub
    Partial Private Sub OnModificacionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnModificacionChanged()
    End Sub
    Partial Private Sub OnEliminacionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEliminacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    Partial Private Sub OnstrOpcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrOpcionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdAuditoria", Storage:="_IdAuditoria", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IdAuditoria() As Integer
			Get
				Return Me._IdAuditoria
			End Get
			Set
				If (Object.Equals(Me._IdAuditoria, value) = false) Then
					Me.OnIdAuditoriaChanging(value)
					Me.SendPropertyChanging
					Me._IdAuditoria = value
					Me.SendPropertyChanged("IdAuditoria")
					Me.OnIdAuditoriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTabla", Storage:="_NombreTabla", DbType:="Varchar(255) NULL")>  _
		Public Property NombreTabla() As String
			Get
				Return Me._NombreTabla
			End Get
			Set
				If (String.Equals(Me._NombreTabla, value) = false) Then
					Me.OnNombreTablaChanging(value)
					Me.SendPropertyChanging
					Me._NombreTabla = value
					Me.SendPropertyChanged("NombreTabla")
					Me.OnNombreTablaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logIngreso", Storage:="_Ingreso", DbType:="Bit NULL")>  _
		Public Property Ingreso() As System.Nullable(Of Boolean)
			Get
				Return Me._Ingreso
			End Get
			Set
				If (Me._Ingreso.Equals(value) = false) Then
					Me.OnIngresoChanging(value)
					Me.SendPropertyChanging
					Me._Ingreso = value
					Me.SendPropertyChanged("Ingreso")
					Me.OnIngresoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logModificacion", Storage:="_Modificacion", DbType:="Bit NULL")>  _
		Public Property Modificacion() As System.Nullable(Of Boolean)
			Get
				Return Me._Modificacion
			End Get
			Set
				If (Me._Modificacion.Equals(value) = false) Then
					Me.OnModificacionChanging(value)
					Me.SendPropertyChanging
					Me._Modificacion = value
					Me.SendPropertyChanged("Modificacion")
					Me.OnModificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEliminacion", Storage:="_Eliminacion", DbType:="Bit NULL")>  _
		Public Property Eliminacion() As System.Nullable(Of Boolean)
			Get
				Return Me._Eliminacion
			End Get
			Set
				If (Me._Eliminacion.Equals(value) = false) Then
					Me.OnEliminacionChanging(value)
					Me.SendPropertyChanging
					Me._Eliminacion = value
					Me.SendPropertyChanged("Eliminacion")
					Me.OnEliminacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NULL")>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOpcion", DbType:="Varchar(3)")>  _
		Public Property strOpcion() As String
			Get
				Return Me._strOpcion
			End Get
			Set
				If (String.Equals(Me._strOpcion, value) = false) Then
					Me.OnstrOpcionChanging(value)
					Me.SendPropertyChanging
					Me._strOpcion = value
					Me.SendPropertyChanged("strOpcion")
					Me.OnstrOpcionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptores")>  _
	Partial Public Class tblReceptore
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _lngIDComisionista As Integer
		
		Private _lngIDSucComisionista As Integer
		
		Private _lngSucReceptor As Integer
		
		Private _strID As String
		
		Private _strNombre As String
		
		Private _logActivo As Boolean
		
		Private _strTipoReceptor As String
		
		Private _dtmEstado As System.Nullable(Of Date)
		
		Private _strCcostos As String
		
		Private _strLogin As String
		
		Private _logLiderMesa As Boolean
		
		Private _lngIdMesa As System.Nullable(Of Integer)
		
		Private _strNroDocumento As String
		
		Private _strEMail As String
		
		Private _dtmActualizacion As Date
		
		Private _strUsuario As String
		
		Private _lngIdOficina As System.Nullable(Of Integer)
		
		Private _lngIdReceptor As System.Nullable(Of Integer)
		
		Private _strNumTrader As String
		
		Private _strCodSetFX As String
		
		Private _logRepresentanteLegalOtrosNegocios As System.Nullable(Of Boolean)
		
		Private _intIdReceptores As Integer
		
		Private _strSucursalContable As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDComisionistaChanged()
    End Sub
    Partial Private Sub OnlngIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnlngSucReceptorChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngSucReceptorChanged()
    End Sub
    Partial Private Sub OnstrIDChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnstrTipoReceptorChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoReceptorChanged()
    End Sub
    Partial Private Sub OndtmEstadoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmEstadoChanged()
    End Sub
    Partial Private Sub OnstrCcostosChanging(value As String)
    End Sub
    Partial Private Sub OnstrCcostosChanged()
    End Sub
    Partial Private Sub OnstrLoginChanging(value As String)
    End Sub
    Partial Private Sub OnstrLoginChanged()
    End Sub
    Partial Private Sub OnlogLiderMesaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogLiderMesaChanged()
    End Sub
    Partial Private Sub OnlngIdMesaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIdMesaChanged()
    End Sub
    Partial Private Sub OnstrNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnstrNroDocumentoChanged()
    End Sub
    Partial Private Sub OnstrEMailChanging(value As String)
    End Sub
    Partial Private Sub OnstrEMailChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnlngIdOficinaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIdOficinaChanged()
    End Sub
    Partial Private Sub OnlngIdReceptorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIdReceptorChanged()
    End Sub
    Partial Private Sub OnstrNumTraderChanging(value As String)
    End Sub
    Partial Private Sub OnstrNumTraderChanged()
    End Sub
    Partial Private Sub OnstrCodSetFXChanging(value As String)
    End Sub
    Partial Private Sub OnstrCodSetFXChanged()
    End Sub
    Partial Private Sub OnlogRepresentanteLegalOtrosNegociosChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogRepresentanteLegalOtrosNegociosChanged()
    End Sub
    Partial Private Sub OnintIdReceptoresChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdReceptoresChanged()
    End Sub
    Partial Private Sub OnstrSucursalContableChanging(value As String)
    End Sub
    Partial Private Sub OnstrSucursalContableChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComisionista", DbType:="Int NOT NULL")>  _
		Public Property lngIDComisionista() As Integer
			Get
				Return Me._lngIDComisionista
			End Get
			Set
				If ((Me._lngIDComisionista = value)  _
							= false) Then
					Me.OnlngIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._lngIDComisionista = value
					Me.SendPropertyChanged("lngIDComisionista")
					Me.OnlngIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDSucComisionista", DbType:="Int NOT NULL")>  _
		Public Property lngIDSucComisionista() As Integer
			Get
				Return Me._lngIDSucComisionista
			End Get
			Set
				If ((Me._lngIDSucComisionista = value)  _
							= false) Then
					Me.OnlngIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._lngIDSucComisionista = value
					Me.SendPropertyChanged("lngIDSucComisionista")
					Me.OnlngIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngSucReceptor", DbType:="Int NOT NULL")>  _
		Public Property lngSucReceptor() As Integer
			Get
				Return Me._lngSucReceptor
			End Get
			Set
				If ((Me._lngSucReceptor = value)  _
							= false) Then
					Me.OnlngSucReceptorChanging(value)
					Me.SendPropertyChanging
					Me._lngSucReceptor = value
					Me.SendPropertyChanged("lngSucReceptor")
					Me.OnlngSucReceptorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strID", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
		Public Property strID() As String
			Get
				Return Me._strID
			End Get
			Set
				If (String.Equals(Me._strID, value) = false) Then
					Me.OnstrIDChanging(value)
					Me.SendPropertyChanging
					Me._strID = value
					Me.SendPropertyChanged("strID")
					Me.OnstrIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property strNombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnstrNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("strNombre")
					Me.OnstrNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="Bit NOT NULL")>  _
		Public Property logActivo() As Boolean
			Get
				Return Me._logActivo
			End Get
			Set
				If ((Me._logActivo = value)  _
							= false) Then
					Me.OnlogActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("logActivo")
					Me.OnlogActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoReceptor", DbType:="VarChar(1)")>  _
		Public Property strTipoReceptor() As String
			Get
				Return Me._strTipoReceptor
			End Get
			Set
				If (String.Equals(Me._strTipoReceptor, value) = false) Then
					Me.OnstrTipoReceptorChanging(value)
					Me.SendPropertyChanging
					Me._strTipoReceptor = value
					Me.SendPropertyChanged("strTipoReceptor")
					Me.OnstrTipoReceptorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEstado", DbType:="DateTime")>  _
		Public Property dtmEstado() As System.Nullable(Of Date)
			Get
				Return Me._dtmEstado
			End Get
			Set
				If (Me._dtmEstado.Equals(value) = false) Then
					Me.OndtmEstadoChanging(value)
					Me.SendPropertyChanging
					Me._dtmEstado = value
					Me.SendPropertyChanged("dtmEstado")
					Me.OndtmEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCcostos", DbType:="VarChar(20)")>  _
		Public Property strCcostos() As String
			Get
				Return Me._strCcostos
			End Get
			Set
				If (String.Equals(Me._strCcostos, value) = false) Then
					Me.OnstrCcostosChanging(value)
					Me.SendPropertyChanging
					Me._strCcostos = value
					Me.SendPropertyChanged("strCcostos")
					Me.OnstrCcostosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strLogin", DbType:="VarChar(50)")>  _
		Public Property strLogin() As String
			Get
				Return Me._strLogin
			End Get
			Set
				If (String.Equals(Me._strLogin, value) = false) Then
					Me.OnstrLoginChanging(value)
					Me.SendPropertyChanging
					Me._strLogin = value
					Me.SendPropertyChanged("strLogin")
					Me.OnstrLoginChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logLiderMesa", DbType:="Bit NOT NULL")>  _
		Public Property logLiderMesa() As Boolean
			Get
				Return Me._logLiderMesa
			End Get
			Set
				If ((Me._logLiderMesa = value)  _
							= false) Then
					Me.OnlogLiderMesaChanging(value)
					Me.SendPropertyChanging
					Me._logLiderMesa = value
					Me.SendPropertyChanged("logLiderMesa")
					Me.OnlogLiderMesaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdMesa", DbType:="Int")>  _
		Public Property lngIdMesa() As System.Nullable(Of Integer)
			Get
				Return Me._lngIdMesa
			End Get
			Set
				If (Me._lngIdMesa.Equals(value) = false) Then
					Me.OnlngIdMesaChanging(value)
					Me.SendPropertyChanging
					Me._lngIdMesa = value
					Me.SendPropertyChanged("lngIdMesa")
					Me.OnlngIdMesaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroDocumento", DbType:="VarChar(15)")>  _
		Public Property strNroDocumento() As String
			Get
				Return Me._strNroDocumento
			End Get
			Set
				If (String.Equals(Me._strNroDocumento, value) = false) Then
					Me.OnstrNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._strNroDocumento = value
					Me.SendPropertyChanged("strNroDocumento")
					Me.OnstrNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEMail", DbType:="VarChar(50)")>  _
		Public Property strEMail() As String
			Get
				Return Me._strEMail
			End Get
			Set
				If (String.Equals(Me._strEMail, value) = false) Then
					Me.OnstrEMailChanging(value)
					Me.SendPropertyChanging
					Me._strEMail = value
					Me.SendPropertyChanged("strEMail")
					Me.OnstrEMailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="DateTime NOT NULL")>  _
		Public Property dtmActualizacion() As Date
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If ((Me._dtmActualizacion = value)  _
							= false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdOficina", DbType:="Int")>  _
		Public Property lngIdOficina() As System.Nullable(Of Integer)
			Get
				Return Me._lngIdOficina
			End Get
			Set
				If (Me._lngIdOficina.Equals(value) = false) Then
					Me.OnlngIdOficinaChanging(value)
					Me.SendPropertyChanging
					Me._lngIdOficina = value
					Me.SendPropertyChanged("lngIdOficina")
					Me.OnlngIdOficinaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdReceptor", DbType:="Int")>  _
		Public Property lngIdReceptor() As System.Nullable(Of Integer)
			Get
				Return Me._lngIdReceptor
			End Get
			Set
				If (Me._lngIdReceptor.Equals(value) = false) Then
					Me.OnlngIdReceptorChanging(value)
					Me.SendPropertyChanging
					Me._lngIdReceptor = value
					Me.SendPropertyChanged("lngIdReceptor")
					Me.OnlngIdReceptorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNumTrader", DbType:="VarChar(3)")>  _
		Public Property strNumTrader() As String
			Get
				Return Me._strNumTrader
			End Get
			Set
				If (String.Equals(Me._strNumTrader, value) = false) Then
					Me.OnstrNumTraderChanging(value)
					Me.SendPropertyChanging
					Me._strNumTrader = value
					Me.SendPropertyChanged("strNumTrader")
					Me.OnstrNumTraderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodSetFX", DbType:="VarChar(13)")>  _
		Public Property strCodSetFX() As String
			Get
				Return Me._strCodSetFX
			End Get
			Set
				If (String.Equals(Me._strCodSetFX, value) = false) Then
					Me.OnstrCodSetFXChanging(value)
					Me.SendPropertyChanging
					Me._strCodSetFX = value
					Me.SendPropertyChanged("strCodSetFX")
					Me.OnstrCodSetFXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logRepresentanteLegalOtrosNegocios", DbType:="Bit")>  _
		Public Property logRepresentanteLegalOtrosNegocios() As System.Nullable(Of Boolean)
			Get
				Return Me._logRepresentanteLegalOtrosNegocios
			End Get
			Set
				If (Me._logRepresentanteLegalOtrosNegocios.Equals(value) = false) Then
					Me.OnlogRepresentanteLegalOtrosNegociosChanging(value)
					Me.SendPropertyChanging
					Me._logRepresentanteLegalOtrosNegocios = value
					Me.SendPropertyChanged("logRepresentanteLegalOtrosNegocios")
					Me.OnlogRepresentanteLegalOtrosNegociosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdReceptores", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdReceptores() As Integer
			Get
				Return Me._intIdReceptores
			End Get
			Set
				If ((Me._intIdReceptores = value)  _
							= false) Then
					Me.OnintIdReceptoresChanging(value)
					Me.SendPropertyChanging
					Me._intIdReceptores = value
					Me.SendPropertyChanged("intIdReceptores")
					Me.OnintIdReceptoresChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strSucursalContable", DbType:="VarChar(2)")>  _
		Public Property strSucursalContable() As String
			Get
				Return Me._strSucursalContable
			End Get
			Set
				If (String.Equals(Me._strSucursalContable, value) = false) Then
					Me.OnstrSucursalContableChanging(value)
					Me.SendPropertyChanging
					Me._strSucursalContable = value
					Me.SendPropertyChanged("strSucursalContable")
					Me.OnstrSucursalContableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCamposObligatorios")>  _
	Partial Public Class CamposObligatorios
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _NombreTabla As String
		
		Private _NombreCampoObligado As String
		
		Private _NombreCampoCondicionante As String
		
		Private _ValorCampoCondicionante As String
		
		Private _Actualizacion As System.Nullable(Of System.DateTime)
		
		Private _Usuario As String
		
		Private _FormadePago As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreTablaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTablaChanged()
    End Sub
    Partial Private Sub OnNombreCampoObligadoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCampoObligadoChanged()
    End Sub
    Partial Private Sub OnNombreCampoCondicionanteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCampoCondicionanteChanged()
    End Sub
    Partial Private Sub OnValorCampoCondicionanteChanging(value As String)
    End Sub
    Partial Private Sub OnValorCampoCondicionanteChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of System.DateTime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnFormadePagoChanging(value As String)
    End Sub
    Partial Private Sub OnFormadePagoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTabla", Storage:="_NombreTabla", DbType:="Varchar(200)", CanBeNull:=false)>  _
		Public Property NombreTabla() As String
			Get
				Return Me._NombreTabla
			End Get
			Set
				If (String.Equals(Me._NombreTabla, value) = false) Then
					Me.OnNombreTablaChanging(value)
					Me.SendPropertyChanging
					Me._NombreTabla = value
					Me.SendPropertyChanged("NombreTabla")
					Me.OnNombreTablaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCampoObligado", Storage:="_NombreCampoObligado", DbType:="Varchar(200)", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property NombreCampoObligado() As String
			Get
				Return Me._NombreCampoObligado
			End Get
			Set
				If (String.Equals(Me._NombreCampoObligado, value) = false) Then
					Me.OnNombreCampoObligadoChanging(value)
					Me.SendPropertyChanging
					Me._NombreCampoObligado = value
					Me.SendPropertyChanged("NombreCampoObligado")
					Me.OnNombreCampoObligadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCampoCondicionante", Storage:="_NombreCampoCondicionante", DbType:="Varchar(200)", CanBeNull:=false)>  _
		Public Property NombreCampoCondicionante() As String
			Get
				Return Me._NombreCampoCondicionante
			End Get
			Set
				If (String.Equals(Me._NombreCampoCondicionante, value) = false) Then
					Me.OnNombreCampoCondicionanteChanging(value)
					Me.SendPropertyChanging
					Me._NombreCampoCondicionante = value
					Me.SendPropertyChanged("NombreCampoCondicionante")
					Me.OnNombreCampoCondicionanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValorCampoCondicionante", Storage:="_ValorCampoCondicionante", DbType:="Varchar(100)", CanBeNull:=false)>  _
		Public Property ValorCampoCondicionante() As String
			Get
				Return Me._ValorCampoCondicionante
			End Get
			Set
				If (String.Equals(Me._ValorCampoCondicionante, value) = false) Then
					Me.OnValorCampoCondicionanteChanging(value)
					Me.SendPropertyChanging
					Me._ValorCampoCondicionante = value
					Me.SendPropertyChanged("ValorCampoCondicionante")
					Me.OnValorCampoCondicionanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property Actualizacion() As System.Nullable(Of System.DateTime)
			Get
				Return Me._Actualizacion
			End Get
			Set
				If (Object.Equals(Me._Actualizacion, value) = false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormadePago", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property FormadePago() As String
			Get
				Return Me._FormadePago
			End Get
			Set
				If (String.Equals(Me._FormadePago, value) = false) Then
					Me.OnFormadePagoChanging(value)
					Me.SendPropertyChanging
					Me._FormadePago = value
					Me.SendPropertyChanged("FormadePago")
					Me.OnFormadePagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class tblSaldosBancos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _lngIdBanco As Integer
		
		Private _strNombre As String
		
		Private _strNombreSucursal As String
		
		Private _strNroCuenta As String
		
		Private _curValor As Double
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlngIdBancoChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIdBancoChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnstrNombreSucursalChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreSucursalChanged()
    End Sub
    Partial Private Sub OnstrNroCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnstrNroCuentaChanged()
    End Sub
    Partial Private Sub OncurValorChanging(value As Double)
    End Sub
    Partial Private Sub OncurValorChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdBanco", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property lngIdBanco() As Integer
			Get
				Return Me._lngIdBanco
			End Get
			Set
				If ((Me._lngIdBanco = value)  _
							= false) Then
					Me.OnlngIdBancoChanging(value)
					Me.SendPropertyChanging
					Me._lngIdBanco = value
					Me.SendPropertyChanged("lngIdBanco")
					Me.OnlngIdBancoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property strNombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnstrNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("strNombre")
					Me.OnstrNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreSucursal", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property strNombreSucursal() As String
			Get
				Return Me._strNombreSucursal
			End Get
			Set
				If (String.Equals(Me._strNombreSucursal, value) = false) Then
					Me.OnstrNombreSucursalChanging(value)
					Me.SendPropertyChanging
					Me._strNombreSucursal = value
					Me.SendPropertyChanged("strNombreSucursal")
					Me.OnstrNombreSucursalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroCuenta", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property strNroCuenta() As String
			Get
				Return Me._strNroCuenta
			End Get
			Set
				If (String.Equals(Me._strNroCuenta, value) = false) Then
					Me.OnstrNroCuentaChanging(value)
					Me.SendPropertyChanging
					Me._strNroCuenta = value
					Me.SendPropertyChanged("strNroCuenta")
					Me.OnstrNroCuentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curValor", DbType:="money NOT NULL")>  _
		Public Property curValor() As Double
			Get
				Return Me._curValor
			End Get
			Set
				If ((Me._curValor = value)  _
							= false) Then
					Me.OncurValorChanging(value)
					Me.SendPropertyChanging
					Me._curValor = value
					Me.SendPropertyChanged("curValor")
					Me.OncurValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class tblLiquidacionesCliente
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _NroLiquidacion As Integer
		
		Private _Parcial As Integer
		
		Private _FechaLiquidacion As Date
		
		Private _FechaCumplimiento As Date
		
		Private _ClaseOrden As String
		
		Private _NombreClaseOrden As String
		
		Private _TotalLiquidacion As Double
		
		Private _Seleccione As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNroLiquidacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnNroLiquidacionChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnFechaLiquidacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaLiquidacionChanged()
    End Sub
    Partial Private Sub OnFechaCumplimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaCumplimientoChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OnNombreClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnNombreClaseOrdenChanged()
    End Sub
    Partial Private Sub OnTotalLiquidacionChanging(value As Double)
    End Sub
    Partial Private Sub OnTotalLiquidacionChanged()
    End Sub
    Partial Private Sub OnSeleccioneChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSeleccioneChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLiquidacion", Storage:="_NroLiquidacion", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property NroLiquidacion() As Integer
			Get
				Return Me._NroLiquidacion
			End Get
			Set
				If ((Me._NroLiquidacion = value)  _
							= false) Then
					Me.OnNroLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._NroLiquidacion = value
					Me.SendPropertyChanged("NroLiquidacion")
					Me.OnNroLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intParcial", Storage:="_Parcial", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Parcial() As Integer
			Get
				Return Me._Parcial
			End Get
			Set
				If ((Me._Parcial = value)  _
							= false) Then
					Me.OnParcialChanging(value)
					Me.SendPropertyChanging
					Me._Parcial = value
					Me.SendPropertyChanged("Parcial")
					Me.OnParcialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaLiquidacion", Storage:="_FechaLiquidacion", DbType:="DateTime NOT NULL")>  _
		Public Property FechaLiquidacion() As Date
			Get
				Return Me._FechaLiquidacion
			End Get
			Set
				If ((Me._FechaLiquidacion = value)  _
							= false) Then
					Me.OnFechaLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._FechaLiquidacion = value
					Me.SendPropertyChanged("FechaLiquidacion")
					Me.OnFechaLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCumplimiento", Storage:="_FechaCumplimiento", DbType:="DateTime NOT NULL")>  _
		Public Property FechaCumplimiento() As Date
			Get
				Return Me._FechaCumplimiento
			End Get
			Set
				If ((Me._FechaCumplimiento = value)  _
							= false) Then
					Me.OnFechaCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._FechaCumplimiento = value
					Me.SendPropertyChanged("FechaCumplimiento")
					Me.OnFechaCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(2) NOT NULL", CanBeNull:=false)>  _
		Public Property ClaseOrden() As String
			Get
				Return Me._ClaseOrden
			End Get
			Set
				If (String.Equals(Me._ClaseOrden, value) = false) Then
					Me.OnClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._ClaseOrden = value
					Me.SendPropertyChanged("ClaseOrden")
					Me.OnClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClaseOrden", Storage:="_NombreClaseOrden", DbType:="Varchar(30) NULL")>  _
		Public Property NombreClaseOrden() As String
			Get
				Return Me._NombreClaseOrden
			End Get
			Set
				If (String.Equals(Me._NombreClaseOrden, value) = false) Then
					Me.OnNombreClaseOrdenChanging(value)
					Me.SendPropertyChanging
					Me._NombreClaseOrden = value
					Me.SendPropertyChanged("NombreClaseOrden")
					Me.OnNombreClaseOrdenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTotalLiquidacion", Storage:="_TotalLiquidacion", DbType:="Float NOT NULL")>  _
		Public Property TotalLiquidacion() As Double
			Get
				Return Me._TotalLiquidacion
			End Get
			Set
				If ((Me._TotalLiquidacion = value)  _
							= false) Then
					Me.OnTotalLiquidacionChanging(value)
					Me.SendPropertyChanging
					Me._TotalLiquidacion = value
					Me.SendPropertyChanged("TotalLiquidacion")
					Me.OnTotalLiquidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccione", Storage:="_Seleccione", DbType:="Bit NULL")>  _
		Public Property Seleccione() As System.Nullable(Of Boolean)
			Get
				Return Me._Seleccione
			End Get
			Set
				If (Me._Seleccione.Equals(value) = false) Then
					Me.OnSeleccioneChanging(value)
					Me.SendPropertyChanging
					Me._Seleccione = value
					Me.SendPropertyChanged("Seleccione")
					Me.OnSeleccioneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ClienteInhabilitado")>  _
	Partial Public Class ClienteInhabilitado
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Nombre As String
		
		Private _Clienteinhabilitado As String
		
		Private _Forma As String
		
		Private _Comitente As String
		
		Private _NroDocumento As String
		
		Private _Motivo As String
		
		Private _Ingreso As System.Nullable(Of Date)
		
		Private _porcentaje As System.Nullable(Of Double)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnClienteinhabilitadoChanging(value As String)
    End Sub
    Partial Private Sub OnClienteinhabilitadoChanged()
    End Sub
    Partial Private Sub OnFormaChanging(value As String)
    End Sub
    Partial Private Sub OnFormaChanged()
    End Sub
    Partial Private Sub OnComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnComitenteChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnMotivoChanging(value As String)
    End Sub
    Partial Private Sub OnMotivoChanged()
    End Sub
    Partial Private Sub OnIngresoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnIngresoChanged()
    End Sub
    Partial Private Sub OnporcentajeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnporcentajeChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strnombre", Storage:="_Nombre", DbType:="Varchar(50)")>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClienteinhabilitado", Storage:="_Clienteinhabilitado", DbType:="Varchar(50)")>  _
		Public Property Clienteinhabilitado() As String
			Get
				Return Me._Clienteinhabilitado
			End Get
			Set
				If (String.Equals(Me._Clienteinhabilitado, value) = false) Then
					Me.OnClienteinhabilitadoChanging(value)
					Me.SendPropertyChanging
					Me._Clienteinhabilitado = value
					Me.SendPropertyChanged("Clienteinhabilitado")
					Me.OnClienteinhabilitadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strForma", Storage:="_Forma", DbType:="Varchar(50)")>  _
		Public Property Forma() As String
			Get
				Return Me._Forma
			End Get
			Set
				If (String.Equals(Me._Forma, value) = false) Then
					Me.OnFormaChanging(value)
					Me.SendPropertyChanging
					Me._Forma = value
					Me.SendPropertyChanged("Forma")
					Me.OnFormaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComitente", Storage:="_Comitente", DbType:="Varchar(17)")>  _
		Public Property Comitente() As String
			Get
				Return Me._Comitente
			End Get
			Set
				If (String.Equals(Me._Comitente, value) = false) Then
					Me.OnComitenteChanging(value)
					Me.SendPropertyChanging
					Me._Comitente = value
					Me.SendPropertyChanged("Comitente")
					Me.OnComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(15)", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property NroDocumento() As String
			Get
				Return Me._NroDocumento
			End Get
			Set
				If (String.Equals(Me._NroDocumento, value) = false) Then
					Me.OnNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._NroDocumento = value
					Me.SendPropertyChanged("NroDocumento")
					Me.OnNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motivo", DbType:="Varchar(50)")>  _
		Public Property Motivo() As String
			Get
				Return Me._Motivo
			End Get
			Set
				If (String.Equals(Me._Motivo, value) = false) Then
					Me.OnMotivoChanging(value)
					Me.SendPropertyChanging
					Me._Motivo = value
					Me.SendPropertyChanged("Motivo")
					Me.OnMotivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmingreso", Storage:="_Ingreso", DbType:="DateTime")>  _
		Public Property Ingreso() As System.Nullable(Of Date)
			Get
				Return Me._Ingreso
			End Get
			Set
				If (Me._Ingreso.Equals(value) = false) Then
					Me.OnIngresoChanging(value)
					Me.SendPropertyChanging
					Me._Ingreso = value
					Me.SendPropertyChanged("Ingreso")
					Me.OnIngresoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_porcentaje", DbType:="Float")>  _
		Public Property porcentaje() As System.Nullable(Of Double)
			Get
				Return Me._porcentaje
			End Get
			Set
				If (Me._porcentaje.Equals(value) = false) Then
					Me.OnporcentajeChanging(value)
					Me.SendPropertyChanging
					Me._porcentaje = value
					Me.SendPropertyChanged("porcentaje")
					Me.OnporcentajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.valoresparametro")>  _
	Partial Public Class valoresparametro
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Parametro As String
		
		Private _Valor As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnParametroChanging(value As String)
    End Sub
    Partial Private Sub OnParametroChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParametro", Storage:="_Parametro", DbType:="Varchar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Parametro() As String
			Get
				Return Me._Parametro
			End Get
			Set
				If (String.Equals(Me._Parametro, value) = false) Then
					Me.OnParametroChanging(value)
					Me.SendPropertyChanging
					Me._Parametro = value
					Me.SendPropertyChanged("Parametro")
					Me.OnParametroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(5000)")>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblInformeAuditoria")>  _
	Partial Public Class InformeAuditoria
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Long
		
		Private _Tabla As String
		
		Private _FechaSuceso As System.Nullable(of System.DateTime)
		
		Private _Operacion As String
		
		Private _ClaveSuceso As String
		
		Private _Datos As String
		
		Private _Usuario As String
		
		Private _Aplicacion As String
		
		Private _Maquina As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTablaChanging(value As String)
    End Sub
    Partial Private Sub OnTablaChanged()
    End Sub
    Partial Private Sub OnFechaSucesoChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnFechaSucesoChanged()
    End Sub
    Partial Private Sub OnOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnOperacionChanged()
    End Sub
    Partial Private Sub OnClaveSucesoChanging(value As String)
    End Sub
    Partial Private Sub OnClaveSucesoChanged()
    End Sub
    Partial Private Sub OnDatosChanging(value As String)
    End Sub
    Partial Private Sub OnDatosChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnAplicacionChanging(value As String)
    End Sub
    Partial Private Sub OnAplicacionChanged()
    End Sub
    Partial Private Sub OnMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnMaquinaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdLog", Storage:="_ID", IsPrimaryKey:=true)>  _
		Public Property ID() As Long
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTabla", Storage:="_Tabla", DbType:="Varchar(255)", CanBeNull:=false)>  _
		Public Property Tabla() As String
			Get
				Return Me._Tabla
			End Get
			Set
				If (String.Equals(Me._Tabla, value) = false) Then
					Me.OnTablaChanging(value)
					Me.SendPropertyChanging
					Me._Tabla = value
					Me.SendPropertyChanged("Tabla")
					Me.OnTablaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaSuceso", Storage:="_FechaSuceso", DbType:="DateTime", CanBeNull:=false)>  _
		Public Property FechaSuceso() As System.Nullable(of System.DateTime)
			Get
				Return Me._FechaSuceso
			End Get
			Set
				If (Object.Equals(Me._FechaSuceso, value) = false) Then
					Me.OnFechaSucesoChanging(value)
					Me.SendPropertyChanging
					Me._FechaSuceso = value
					Me.SendPropertyChanged("FechaSuceso")
					Me.OnFechaSucesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_Operacion", DbType:="Varchar(50)", CanBeNull:=false)>  _
		Public Property Operacion() As String
			Get
				Return Me._Operacion
			End Get
			Set
				If (String.Equals(Me._Operacion, value) = false) Then
					Me.OnOperacionChanging(value)
					Me.SendPropertyChanging
					Me._Operacion = value
					Me.SendPropertyChanged("Operacion")
					Me.OnOperacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaveSuceso", Storage:="_ClaveSuceso", DbType:="varchar(200)")>  _
		Public Property ClaveSuceso() As String
			Get
				Return Me._ClaveSuceso
			End Get
			Set
				If (String.Equals(Me._ClaveSuceso, value) = false) Then
					Me.OnClaveSucesoChanging(value)
					Me.SendPropertyChanging
					Me._ClaveSuceso = value
					Me.SendPropertyChanged("ClaveSuceso")
					Me.OnClaveSucesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strData", Storage:="_Datos", DbType:="Varchar(6000)")>  _
		Public Property Datos() As String
			Get
				Return Me._Datos
			End Get
			Set
				If (String.Equals(Me._Datos, value) = false) Then
					Me.OnDatosChanging(value)
					Me.SendPropertyChanging
					Me._Datos = value
					Me.SendPropertyChanged("Datos")
					Me.OnDatosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreUsuario", Storage:="_Usuario", DbType:="Varchar(155)")>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreAplicacion", Storage:="_Aplicacion", DbType:="Varchar(200)")>  _
		Public Property Aplicacion() As String
			Get
				Return Me._Aplicacion
			End Get
			Set
				If (String.Equals(Me._Aplicacion, value) = false) Then
					Me.OnAplicacionChanging(value)
					Me.SendPropertyChanging
					Me._Aplicacion = value
					Me.SendPropertyChanged("Aplicacion")
					Me.OnAplicacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreMaquina", Storage:="_Maquina", DbType:="Varchar(30)")>  _
		Public Property Maquina() As String
			Get
				Return Me._Maquina
			End Get
			Set
				If (String.Equals(Me._Maquina, value) = false) Then
					Me.OnMaquinaChanging(value)
					Me.SendPropertyChanging
					Me._Maquina = value
					Me.SendPropertyChanged("Maquina")
					Me.OnMaquinaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class NIIFInicial
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _strConceptoPorDefecto As String
		
		Private _Concepto As System.Nullable(Of System.Int32)
		
		Private _Criterio As System.Nullable(Of System.Int32)
		
		Private _Operaciones As System.Nullable(Of Boolean)
		
		Private _Tesoreria As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnstrConceptoPorDefectoChanging(value As String)
    End Sub
    Partial Private Sub OnstrConceptoPorDefectoChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnCriterioChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnCriterioChanged()
    End Sub
    Partial Private Sub OnOperacionesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOperacionesChanged()
    End Sub
    Partial Private Sub OnTesoreriaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTesoreriaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strConceptoPorDefecto", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property strConceptoPorDefecto() As String
			Get
				Return Me._strConceptoPorDefecto
			End Get
			Set
				If (String.Equals(Me._strConceptoPorDefecto, value) = false) Then
					Me.OnstrConceptoPorDefectoChanging(value)
					Me.SendPropertyChanging
					Me._strConceptoPorDefecto = value
					Me.SendPropertyChanged("strConceptoPorDefecto")
					Me.OnstrConceptoPorDefectoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", CanBeNull:=true)>  _
		Public Property Concepto() As System.Nullable(Of System.Int32)
			Get
				Return Me._Concepto
			End Get
			Set
				If (Object.Equals(Me._Concepto, value) = false) Then
					Me.OnConceptoChanging(value)
					Me.SendPropertyChanging
					Me._Concepto = value
					Me.SendPropertyChanged("Concepto")
					Me.OnConceptoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Criterio", CanBeNull:=true)>  _
		Public Property Criterio() As System.Nullable(Of System.Int32)
			Get
				Return Me._Criterio
			End Get
			Set
				If (Object.Equals(Me._Criterio, value) = false) Then
					Me.OnCriterioChanging(value)
					Me.SendPropertyChanging
					Me._Criterio = value
					Me.SendPropertyChanged("Criterio")
					Me.OnCriterioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Operaciones")>  _
		Public Property Operaciones() As System.Nullable(Of Boolean)
			Get
				Return Me._Operaciones
			End Get
			Set
				If (Me._Operaciones.Equals(value) = false) Then
					Me.OnOperacionesChanging(value)
					Me.SendPropertyChanging
					Me._Operaciones = value
					Me.SendPropertyChanged("Operaciones")
					Me.OnOperacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tesoreria")>  _
		Public Property Tesoreria() As System.Nullable(Of Boolean)
			Get
				Return Me._Tesoreria
			End Get
			Set
				If (Me._Tesoreria.Equals(value) = false) Then
					Me.OnTesoreriaChanging(value)
					Me.SendPropertyChanging
					Me._Tesoreria = value
					Me.SendPropertyChanged("Tesoreria")
					Me.OnTesoreriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class GenerarArchivosPlanos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _RutaArchivoPlano As String
		
		Private _Exitoso As System.Nullable(Of Boolean)
		
		Private _Mensaje As String
		
		Private _NombreArchivoPlano As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRutaArchivoPlanoChanging(value As String)
    End Sub
    Partial Private Sub OnRutaArchivoPlanoChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnNombreArchivoPlanoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreArchivoPlanoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRutaArchivoPlano", Storage:="_RutaArchivoPlano", DbType:="varchar(1000) NULL")>  _
		Public Property RutaArchivoPlano() As String
			Get
				Return Me._RutaArchivoPlano
			End Get
			Set
				If (String.Equals(Me._RutaArchivoPlano, value) = false) Then
					Me.OnRutaArchivoPlanoChanging(value)
					Me.SendPropertyChanging
					Me._RutaArchivoPlano = value
					Me.SendPropertyChanged("RutaArchivoPlano")
					Me.OnRutaArchivoPlanoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NULL")>  _
		Public Property Exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._Exitoso
			End Get
			Set
				If (Me._Exitoso.Equals(value) = false) Then
					Me.OnExitosoChanging(value)
					Me.SendPropertyChanging
					Me._Exitoso = value
					Me.SendPropertyChanged("Exitoso")
					Me.OnExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(1000) NULL")>  _
		Public Property Mensaje() As String
			Get
				Return Me._Mensaje
			End Get
			Set
				If (String.Equals(Me._Mensaje, value) = false) Then
					Me.OnMensajeChanging(value)
					Me.SendPropertyChanging
					Me._Mensaje = value
					Me.SendPropertyChanged("Mensaje")
					Me.OnMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreArchivoPlano", Storage:="_NombreArchivoPlano", DbType:="varchar(200) NULL")>  _
		Public Property NombreArchivoPlano() As String
			Get
				Return Me._NombreArchivoPlano
			End Get
			Set
				If (String.Equals(Me._NombreArchivoPlano, value) = false) Then
					Me.OnNombreArchivoPlanoChanging(value)
					Me.SendPropertyChanging
					Me._NombreArchivoPlano = value
					Me.SendPropertyChanged("NombreArchivoPlano")
					Me.OnNombreArchivoPlanoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ProcesoTipos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _NombreProceso As String
		
		Private _TipoProceso As String
		
		Private _EjecucionProceso As String
		
		Private _Activo As Boolean
		
		Private _Actualizacion As System.Nullable(of System.DateTime)
		
		Private _Usuario As String
		
		Private _SolicitarFecha As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreProcesoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreProcesoChanged()
    End Sub
    Partial Private Sub OnTipoProcesoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoProcesoChanged()
    End Sub
    Partial Private Sub OnEjecucionProcesoChanging(value As String)
    End Sub
    Partial Private Sub OnEjecucionProcesoChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnSolicitarFechaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSolicitarFechaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreProceso", Storage:="_NombreProceso", DbType:="varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NombreProceso() As String
			Get
				Return Me._NombreProceso
			End Get
			Set
				If (String.Equals(Me._NombreProceso, value) = false) Then
					Me.OnNombreProcesoChanging(value)
					Me.SendPropertyChanging
					Me._NombreProceso = value
					Me.SendPropertyChanged("NombreProceso")
					Me.OnNombreProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProceso", Storage:="_TipoProceso", DbType:="varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoProceso() As String
			Get
				Return Me._TipoProceso
			End Get
			Set
				If (String.Equals(Me._TipoProceso, value) = false) Then
					Me.OnTipoProcesoChanging(value)
					Me.SendPropertyChanging
					Me._TipoProceso = value
					Me.SendPropertyChanged("TipoProceso")
					Me.OnTipoProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEjecucionProceso", Storage:="_EjecucionProceso", DbType:="Varchar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property EjecucionProceso() As String
			Get
				Return Me._EjecucionProceso
			End Get
			Set
				If (String.Equals(Me._EjecucionProceso, value) = false) Then
					Me.OnEjecucionProcesoChanging(value)
					Me.SendPropertyChanging
					Me._EjecucionProceso = value
					Me.SendPropertyChanged("EjecucionProceso")
					Me.OnEjecucionProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime", CanBeNull:=false)>  _
		Public Property Actualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._Actualizacion
			End Get
			Set
				If (Object.Equals(Me._Actualizacion, value) = false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSolicitarFecha", Storage:="_SolicitarFecha", DbType:="BIT NULL")>  _
		Public Property SolicitarFecha() As System.Nullable(Of Boolean)
			Get
				Return Me._SolicitarFecha
			End Get
			Set
				If (Me._SolicitarFecha.Equals(value) = false) Then
					Me.OnSolicitarFechaChanging(value)
					Me.SendPropertyChanging
					Me._SolicitarFecha = value
					Me.SendPropertyChanged("SolicitarFecha")
					Me.OnSolicitarFechaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class Proceso
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _TipoProceso As Integer
		
		Private _ProcesoActivo As Boolean
		
		Private _FechaProceso As System.Nullable(of System.DateTime)
		
		Private _FechaInicio As System.Nullable(of System.DateTime)
		
		Private _FechaFin As System.Nullable(of System.DateTime)
		
		Private _IDRegistroActual As String
		
		Private _IDPrimerRegistro As String
		
		Private _IDUltimoRegistro As String
		
		Private _CantidadTotal As System.Nullable(Of Integer)
		
		Private _CantidadActual As System.Nullable(Of Integer)
		
		Private _CantidadRestante As System.Nullable(Of Integer)
		
		Private _Actualizacion As System.Nullable(of System.DateTime)
		
		Private _Usuario As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTipoProcesoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTipoProcesoChanged()
    End Sub
    Partial Private Sub OnProcesoActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnProcesoActivoChanged()
    End Sub
    Partial Private Sub OnFechaProcesoChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnFechaProcesoChanged()
    End Sub
    Partial Private Sub OnFechaInicioChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnFechaInicioChanged()
    End Sub
    Partial Private Sub OnFechaFinChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnFechaFinChanged()
    End Sub
    Partial Private Sub OnIDRegistroActualChanging(value As String)
    End Sub
    Partial Private Sub OnIDRegistroActualChanged()
    End Sub
    Partial Private Sub OnIDPrimerRegistroChanging(value As String)
    End Sub
    Partial Private Sub OnIDPrimerRegistroChanged()
    End Sub
    Partial Private Sub OnIDUltimoRegistroChanging(value As String)
    End Sub
    Partial Private Sub OnIDUltimoRegistroChanged()
    End Sub
    Partial Private Sub OnCantidadTotalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadTotalChanged()
    End Sub
    Partial Private Sub OnCantidadActualChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadActualChanged()
    End Sub
    Partial Private Sub OnCantidadRestanteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadRestanteChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTipoProceso", Storage:="_TipoProceso", DbType:="Int NOT NULL")>  _
		Public Property TipoProceso() As Integer
			Get
				Return Me._TipoProceso
			End Get
			Set
				If ((Me._TipoProceso = value)  _
							= false) Then
					Me.OnTipoProcesoChanging(value)
					Me.SendPropertyChanging
					Me._TipoProceso = value
					Me.SendPropertyChanged("TipoProceso")
					Me.OnTipoProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logProcesoActivo", Storage:="_ProcesoActivo", DbType:="Bit NOT NULL")>  _
		Public Property ProcesoActivo() As Boolean
			Get
				Return Me._ProcesoActivo
			End Get
			Set
				If ((Me._ProcesoActivo = value)  _
							= false) Then
					Me.OnProcesoActivoChanging(value)
					Me.SendPropertyChanging
					Me._ProcesoActivo = value
					Me.SendPropertyChanged("ProcesoActivo")
					Me.OnProcesoActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaProceso", Storage:="_FechaProceso", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property FechaProceso() As System.Nullable(of System.DateTime)
			Get
				Return Me._FechaProceso
			End Get
			Set
				If (Object.Equals(Me._FechaProceso, value) = false) Then
					Me.OnFechaProcesoChanging(value)
					Me.SendPropertyChanging
					Me._FechaProceso = value
					Me.SendPropertyChanged("FechaProceso")
					Me.OnFechaProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInicio", Storage:="_FechaInicio", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property FechaInicio() As System.Nullable(of System.DateTime)
			Get
				Return Me._FechaInicio
			End Get
			Set
				If (Object.Equals(Me._FechaInicio, value) = false) Then
					Me.OnFechaInicioChanging(value)
					Me.SendPropertyChanging
					Me._FechaInicio = value
					Me.SendPropertyChanged("FechaInicio")
					Me.OnFechaInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaFin", Storage:="_FechaFin", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property FechaFin() As System.Nullable(of System.DateTime)
			Get
				Return Me._FechaFin
			End Get
			Set
				If (Object.Equals(Me._FechaFin, value) = false) Then
					Me.OnFechaFinChanging(value)
					Me.SendPropertyChanging
					Me._FechaFin = value
					Me.SendPropertyChanged("FechaFin")
					Me.OnFechaFinChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDRegistroActual", Storage:="_IDRegistroActual", DbType:="varchar(100) NULL")>  _
		Public Property IDRegistroActual() As String
			Get
				Return Me._IDRegistroActual
			End Get
			Set
				If (String.Equals(Me._IDRegistroActual, value) = false) Then
					Me.OnIDRegistroActualChanging(value)
					Me.SendPropertyChanging
					Me._IDRegistroActual = value
					Me.SendPropertyChanged("IDRegistroActual")
					Me.OnIDRegistroActualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDPrimerRegistro", Storage:="_IDPrimerRegistro", DbType:="varchar(100) NULL")>  _
		Public Property IDPrimerRegistro() As String
			Get
				Return Me._IDPrimerRegistro
			End Get
			Set
				If (String.Equals(Me._IDPrimerRegistro, value) = false) Then
					Me.OnIDPrimerRegistroChanging(value)
					Me.SendPropertyChanging
					Me._IDPrimerRegistro = value
					Me.SendPropertyChanged("IDPrimerRegistro")
					Me.OnIDPrimerRegistroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDUltimoRegistro", Storage:="_IDUltimoRegistro", DbType:="varchar(100) NULL")>  _
		Public Property IDUltimoRegistro() As String
			Get
				Return Me._IDUltimoRegistro
			End Get
			Set
				If (String.Equals(Me._IDUltimoRegistro, value) = false) Then
					Me.OnIDUltimoRegistroChanging(value)
					Me.SendPropertyChanging
					Me._IDUltimoRegistro = value
					Me.SendPropertyChanged("IDUltimoRegistro")
					Me.OnIDUltimoRegistroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadTotal", Storage:="_CantidadTotal", DbType:="Int NULL")>  _
		Public Property CantidadTotal() As System.Nullable(Of Integer)
			Get
				Return Me._CantidadTotal
			End Get
			Set
				If (Me._CantidadTotal.Equals(value) = false) Then
					Me.OnCantidadTotalChanging(value)
					Me.SendPropertyChanging
					Me._CantidadTotal = value
					Me.SendPropertyChanged("CantidadTotal")
					Me.OnCantidadTotalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadActual", Storage:="_CantidadActual", DbType:="Int NULL")>  _
		Public Property CantidadActual() As System.Nullable(Of Integer)
			Get
				Return Me._CantidadActual
			End Get
			Set
				If (Me._CantidadActual.Equals(value) = false) Then
					Me.OnCantidadActualChanging(value)
					Me.SendPropertyChanging
					Me._CantidadActual = value
					Me.SendPropertyChanged("CantidadActual")
					Me.OnCantidadActualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadRestante", Storage:="_CantidadRestante", DbType:="Int NULL")>  _
		Public Property CantidadRestante() As System.Nullable(Of Integer)
			Get
				Return Me._CantidadRestante
			End Get
			Set
				If (Me._CantidadRestante.Equals(value) = false) Then
					Me.OnCantidadRestanteChanging(value)
					Me.SendPropertyChanging
					Me._CantidadRestante = value
					Me.SendPropertyChanged("CantidadRestante")
					Me.OnCantidadRestanteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime", CanBeNull:=false)>  _
		Public Property Actualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._Actualizacion
			End Get
			Set
				If (Object.Equals(Me._Actualizacion, value) = false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ProcesoDetalle
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _IDProceso As Integer
		
		Private _IDRegistro As String
		
		Private _Exitoso As System.Nullable(Of Boolean)
		
		Private _Error As String
		
		Private _Actualizacion As System.Nullable(of System.DateTime)
		
		Private _Usuario As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDProcesoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDProcesoChanged()
    End Sub
    Partial Private Sub OnIDRegistroChanging(value As String)
    End Sub
    Partial Private Sub OnIDRegistroChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnErrorChanging(value As String)
    End Sub
    Partial Private Sub OnErrorChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDProceso", Storage:="_IDProceso", DbType:="Int NOT NULL")>  _
		Public Property IDProceso() As Integer
			Get
				Return Me._IDProceso
			End Get
			Set
				If ((Me._IDProceso = value)  _
							= false) Then
					Me.OnIDProcesoChanging(value)
					Me.SendPropertyChanging
					Me._IDProceso = value
					Me.SendPropertyChanged("IDProceso")
					Me.OnIDProcesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDRegistro", Storage:="_IDRegistro", DbType:="Varchar(100)  NULL")>  _
		Public Property IDRegistro() As String
			Get
				Return Me._IDRegistro
			End Get
			Set
				If (String.Equals(Me._IDRegistro, value) = false) Then
					Me.OnIDRegistroChanging(value)
					Me.SendPropertyChanging
					Me._IDRegistro = value
					Me.SendPropertyChanged("IDRegistro")
					Me.OnIDRegistroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NULL")>  _
		Public Property Exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._Exitoso
			End Get
			Set
				If (Me._Exitoso.Equals(value) = false) Then
					Me.OnExitosoChanging(value)
					Me.SendPropertyChanging
					Me._Exitoso = value
					Me.SendPropertyChanged("Exitoso")
					Me.OnExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strError", Storage:="_Error", DbType:="Varchar(8000) NULL")>  _
		Public Property [Error]() As String
			Get
				Return Me._Error
			End Get
			Set
				If (String.Equals(Me._Error, value) = false) Then
					Me.OnErrorChanging(value)
					Me.SendPropertyChanging
					Me._Error = value
					Me.SendPropertyChanged("[Error]")
					Me.OnErrorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime", CanBeNull:=false)>  _
		Public Property Actualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._Actualizacion
			End Get
			Set
				If (Object.Equals(Me._Actualizacion, value) = false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ResultadoProceso
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Exitoso As System.Nullable(Of Boolean)
		
		Private _Mensaje As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NULL")>  _
		Public Property Exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._Exitoso
			End Get
			Set
				If (Me._Exitoso.Equals(value) = false) Then
					Me.OnExitosoChanging(value)
					Me.SendPropertyChanging
					Me._Exitoso = value
					Me.SendPropertyChanged("Exitoso")
					Me.OnExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(500)  NULL")>  _
		Public Property Mensaje() As String
			Get
				Return Me._Mensaje
			End Get
			Set
				If (String.Equals(Me._Mensaje, value) = false) Then
					Me.OnMensajeChanging(value)
					Me.SendPropertyChanging
					Me._Mensaje = value
					Me.SendPropertyChanged("Mensaje")
					Me.OnMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ArchivosDirectorio
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Ruta As String
		
		Private _FechaHora As System.Nullable(Of System.Datetime)
		
		Private _Bytes As System.Nullable(Of System.Int32)
		
		Private _Nombre As String
		
		Private _Extension As String
		
		Private _RutaWeb As String
		
		Private _Seleccionado As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRutaChanging(value As String)
    End Sub
    Partial Private Sub OnRutaChanged()
    End Sub
    Partial Private Sub OnFechaHoraChanging(value As System.Nullable(Of System.Datetime))
    End Sub
    Partial Private Sub OnFechaHoraChanged()
    End Sub
    Partial Private Sub OnBytesChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnBytesChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnExtensionChanging(value As String)
    End Sub
    Partial Private Sub OnExtensionChanged()
    End Sub
    Partial Private Sub OnRutaWebChanging(value As String)
    End Sub
    Partial Private Sub OnRutaWebChanged()
    End Sub
    Partial Private Sub OnSeleccionadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSeleccionadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ruta", DbType:="varchar(max) NULL")>  _
		Public Property Ruta() As String
			Get
				Return Me._Ruta
			End Get
			Set
				If (String.Equals(Me._Ruta, value) = false) Then
					Me.OnRutaChanging(value)
					Me.SendPropertyChanging
					Me._Ruta = value
					Me.SendPropertyChanged("Ruta")
					Me.OnRutaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaHora", DbType:="Datetime NULL", CanBeNull:=true)>  _
		Public Property FechaHora() As System.Nullable(Of System.Datetime)
			Get
				Return Me._FechaHora
			End Get
			Set
				If (Object.Equals(Me._FechaHora, value) = false) Then
					Me.OnFechaHoraChanging(value)
					Me.SendPropertyChanging
					Me._FechaHora = value
					Me.SendPropertyChanged("FechaHora")
					Me.OnFechaHoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bytes", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property Bytes() As System.Nullable(Of System.Int32)
			Get
				Return Me._Bytes
			End Get
			Set
				If (Object.Equals(Me._Bytes, value) = false) Then
					Me.OnBytesChanging(value)
					Me.SendPropertyChanging
					Me._Bytes = value
					Me.SendPropertyChanged("Bytes")
					Me.OnBytesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="varchar(max) NULL")>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extension", DbType:="varchar(max) NULL")>  _
		Public Property Extension() As String
			Get
				Return Me._Extension
			End Get
			Set
				If (String.Equals(Me._Extension, value) = false) Then
					Me.OnExtensionChanging(value)
					Me.SendPropertyChanging
					Me._Extension = value
					Me.SendPropertyChanged("Extension")
					Me.OnExtensionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutaWeb", DbType:="varchar(max) NULL")>  _
		Public Property RutaWeb() As String
			Get
				Return Me._RutaWeb
			End Get
			Set
				If (String.Equals(Me._RutaWeb, value) = false) Then
					Me.OnRutaWebChanging(value)
					Me.SendPropertyChanging
					Me._RutaWeb = value
					Me.SendPropertyChanged("RutaWeb")
					Me.OnRutaWebChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seleccionado", DbType:="Bit NULL")>  _
		Public Property Seleccionado() As System.Nullable(Of Boolean)
			Get
				Return Me._Seleccionado
			End Get
			Set
				If (Me._Seleccionado.Equals(value) = false) Then
					Me.OnSeleccionadoChanging(value)
					Me.SendPropertyChanging
					Me._Seleccionado = value
					Me.SendPropertyChanged("Seleccionado")
					Me.OnSeleccionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class TempRetornoCalculo
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _TipoRegistro As String
		
		Private _IDDetalle As Integer
		
		Private _Exitoso As System.Nullable(Of Boolean)
		
		Private _Confirmacion As System.Nullable(Of Boolean)
		
		Private _Mensaje As String
		
		Private _IDRetorno As Integer
		
		Private _CobraGMF As String
		
		Private _MensajeCobroGMF As String
		
		Private _TipoCobroGMF As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTipoRegistroChanging(value As String)
    End Sub
    Partial Private Sub OnTipoRegistroChanged()
    End Sub
    Partial Private Sub OnIDDetalleChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDetalleChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnConfirmacionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnConfirmacionChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnIDRetornoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRetornoChanged()
    End Sub
    Partial Private Sub OnCobraGMFChanging(value As String)
    End Sub
    Partial Private Sub OnCobraGMFChanged()
    End Sub
    Partial Private Sub OnMensajeCobroGMFChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeCobroGMFChanged()
    End Sub
    Partial Private Sub OnTipoCobroGMFChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCobroGMFChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoRegistro", Storage:="_TipoRegistro", DbType:="varchar(100) NULL")>  _
		Public Property TipoRegistro() As String
			Get
				Return Me._TipoRegistro
			End Get
			Set
				If (String.Equals(Me._TipoRegistro, value) = false) Then
					Me.OnTipoRegistroChanging(value)
					Me.SendPropertyChanging
					Me._TipoRegistro = value
					Me.SendPropertyChanged("TipoRegistro")
					Me.OnTipoRegistroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDetalle", Storage:="_IDDetalle", DbType:="Int NOT NULL")>  _
		Public Property IDDetalle() As Integer
			Get
				Return Me._IDDetalle
			End Get
			Set
				If ((Me._IDDetalle = value)  _
							= false) Then
					Me.OnIDDetalleChanging(value)
					Me.SendPropertyChanging
					Me._IDDetalle = value
					Me.SendPropertyChanged("IDDetalle")
					Me.OnIDDetalleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit")>  _
		Public Property Exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._Exitoso
			End Get
			Set
				If (Me._Exitoso.Equals(value) = false) Then
					Me.OnExitosoChanging(value)
					Me.SendPropertyChanging
					Me._Exitoso = value
					Me.SendPropertyChanged("Exitoso")
					Me.OnExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logConfirmacion", Storage:="_Confirmacion", DbType:="Bit")>  _
		Public Property Confirmacion() As System.Nullable(Of Boolean)
			Get
				Return Me._Confirmacion
			End Get
			Set
				If (Me._Confirmacion.Equals(value) = false) Then
					Me.OnConfirmacionChanging(value)
					Me.SendPropertyChanging
					Me._Confirmacion = value
					Me.SendPropertyChanged("Confirmacion")
					Me.OnConfirmacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="varchar(1000) NULL")>  _
		Public Property Mensaje() As String
			Get
				Return Me._Mensaje
			End Get
			Set
				If (String.Equals(Me._Mensaje, value) = false) Then
					Me.OnMensajeChanging(value)
					Me.SendPropertyChanging
					Me._Mensaje = value
					Me.SendPropertyChanged("Mensaje")
					Me.OnMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="IntIDRetorno", Storage:="_IDRetorno", DbType:="Int NOT NULL")>  _
		Public Property IDRetorno() As Integer
			Get
				Return Me._IDRetorno
			End Get
			Set
				If ((Me._IDRetorno = value)  _
							= false) Then
					Me.OnIDRetornoChanging(value)
					Me.SendPropertyChanging
					Me._IDRetorno = value
					Me.SendPropertyChanged("IDRetorno")
					Me.OnIDRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCobraGMF", Storage:="_CobraGMF", DbType:="varchar(2)")>  _
		Public Property CobraGMF() As String
			Get
				Return Me._CobraGMF
			End Get
			Set
				If (String.Equals(Me._CobraGMF, value) = false) Then
					Me.OnCobraGMFChanging(value)
					Me.SendPropertyChanging
					Me._CobraGMF = value
					Me.SendPropertyChanged("CobraGMF")
					Me.OnCobraGMFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensajeCobroGMF", Storage:="_MensajeCobroGMF", DbType:="varchar(500)")>  _
		Public Property MensajeCobroGMF() As String
			Get
				Return Me._MensajeCobroGMF
			End Get
			Set
				If (String.Equals(Me._MensajeCobroGMF, value) = false) Then
					Me.OnMensajeCobroGMFChanging(value)
					Me.SendPropertyChanging
					Me._MensajeCobroGMF = value
					Me.SendPropertyChanged("MensajeCobroGMF")
					Me.OnMensajeCobroGMFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCobroGMF", Storage:="_TipoCobroGMF", DbType:="varchar(20)")>  _
		Public Property TipoCobroGMF() As String
			Get
				Return Me._TipoCobroGMF
			End Get
			Set
				If (String.Equals(Me._TipoCobroGMF, value) = false) Then
					Me.OnTipoCobroGMFChanging(value)
					Me.SendPropertyChanging
					Me._TipoCobroGMF = value
					Me.SendPropertyChanged("TipoCobroGMF")
					Me.OnTipoCobroGMFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class tblvalidarFechaCierre
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _exitoso As System.Nullable(Of Boolean)
		
		Private _mensaje As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnexitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnexitosoChanged()
    End Sub
    Partial Private Sub OnmensajeChanging(value As String)
    End Sub
    Partial Private Sub OnmensajeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Exitoso", Storage:="_exitoso", DbType:="Bit")>  _
		Public Property exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._exitoso
			End Get
			Set
				If (Me._exitoso.Equals(value) = false) Then
					Me.OnexitosoChanging(value)
					Me.SendPropertyChanging
					Me._exitoso = value
					Me.SendPropertyChanged("exitoso")
					Me.OnexitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Mensaje", Storage:="_mensaje", DbType:="varchar(1000) NULL")>  _
		Public Property mensaje() As String
			Get
				Return Me._mensaje
			End Get
			Set
				If (String.Equals(Me._mensaje, value) = false) Then
					Me.OnmensajeChanging(value)
					Me.SendPropertyChanging
					Me._mensaje = value
					Me.SendPropertyChanged("mensaje")
					Me.OnmensajeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class PLATAFORMA_CombosGenericos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDPK As Integer
		
		Private _intID As System.Nullable(Of System.Int32)
		
		Private _intIDDependencia1 As System.Nullable(Of System.Int32)
		
		Private _intIDDependencia2 As System.Nullable(Of System.Int32)
		
		Private _strDependencia1 As String
		
		Private _strDependencia2 As String
		
		Private _strDescripcion As String
		
		Private _strRetorno As String
		
		Private _strTopico As String
		
		Private _strOrigen As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDPKChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDPKChanged()
    End Sub
    Partial Private Sub OnintIDChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnintIDDependencia1Changing(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDDependencia1Changed()
    End Sub
    Partial Private Sub OnintIDDependencia2Changing(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDDependencia2Changed()
    End Sub
    Partial Private Sub OnstrDependencia1Changing(value As String)
    End Sub
    Partial Private Sub OnstrDependencia1Changed()
    End Sub
    Partial Private Sub OnstrDependencia2Changing(value As String)
    End Sub
    Partial Private Sub OnstrDependencia2Changed()
    End Sub
    Partial Private Sub OnstrDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionChanged()
    End Sub
    Partial Private Sub OnstrRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnstrRetornoChanged()
    End Sub
    Partial Private Sub OnstrTopicoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTopicoChanged()
    End Sub
    Partial Private Sub OnstrOrigenChanging(value As String)
    End Sub
    Partial Private Sub OnstrOrigenChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDPK", IsPrimaryKey:=true)>  _
		Public Property intIDPK() As Integer
			Get
				Return Me._intIDPK
			End Get
			Set
				If ((Me._intIDPK = value)  _
							= false) Then
					Me.OnintIDPKChanging(value)
					Me.SendPropertyChanging
					Me._intIDPK = value
					Me.SendPropertyChanged("intIDPK")
					Me.OnintIDPKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", CanBeNull:=true)>  _
		Public Property intID() As System.Nullable(Of System.Int32)
			Get
				Return Me._intID
			End Get
			Set
				If (Object.Equals(Me._intID, value) = false) Then
					Me.OnintIDChanging(value)
					Me.SendPropertyChanging
					Me._intID = value
					Me.SendPropertyChanged("intID")
					Me.OnintIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDDependencia1", CanBeNull:=true)>  _
		Public Property intIDDependencia1() As System.Nullable(Of System.Int32)
			Get
				Return Me._intIDDependencia1
			End Get
			Set
				If (Object.Equals(Me._intIDDependencia1, value) = false) Then
					Me.OnintIDDependencia1Changing(value)
					Me.SendPropertyChanging
					Me._intIDDependencia1 = value
					Me.SendPropertyChanged("intIDDependencia1")
					Me.OnintIDDependencia1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDDependencia2", CanBeNull:=true)>  _
		Public Property intIDDependencia2() As System.Nullable(Of System.Int32)
			Get
				Return Me._intIDDependencia2
			End Get
			Set
				If (Object.Equals(Me._intIDDependencia2, value) = false) Then
					Me.OnintIDDependencia2Changing(value)
					Me.SendPropertyChanging
					Me._intIDDependencia2 = value
					Me.SendPropertyChanged("intIDDependencia2")
					Me.OnintIDDependencia2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDependencia1", DbType:="Varchar(Max)")>  _
		Public Property strDependencia1() As String
			Get
				Return Me._strDependencia1
			End Get
			Set
				If (String.Equals(Me._strDependencia1, value) = false) Then
					Me.OnstrDependencia1Changing(value)
					Me.SendPropertyChanging
					Me._strDependencia1 = value
					Me.SendPropertyChanged("strDependencia1")
					Me.OnstrDependencia1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDependencia2", DbType:="Varchar(Max)")>  _
		Public Property strDependencia2() As String
			Get
				Return Me._strDependencia2
			End Get
			Set
				If (String.Equals(Me._strDependencia2, value) = false) Then
					Me.OnstrDependencia2Changing(value)
					Me.SendPropertyChanging
					Me._strDependencia2 = value
					Me.SendPropertyChanged("strDependencia2")
					Me.OnstrDependencia2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="Varchar(Max)")>  _
		Public Property strDescripcion() As String
			Get
				Return Me._strDescripcion
			End Get
			Set
				If (String.Equals(Me._strDescripcion, value) = false) Then
					Me.OnstrDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcion = value
					Me.SendPropertyChanged("strDescripcion")
					Me.OnstrDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strRetorno", DbType:="Varchar(Max)")>  _
		Public Property strRetorno() As String
			Get
				Return Me._strRetorno
			End Get
			Set
				If (String.Equals(Me._strRetorno, value) = false) Then
					Me.OnstrRetornoChanging(value)
					Me.SendPropertyChanging
					Me._strRetorno = value
					Me.SendPropertyChanged("strRetorno")
					Me.OnstrRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTopico", DbType:="Varchar(Max)")>  _
		Public Property strTopico() As String
			Get
				Return Me._strTopico
			End Get
			Set
				If (String.Equals(Me._strTopico, value) = false) Then
					Me.OnstrTopicoChanging(value)
					Me.SendPropertyChanging
					Me._strTopico = value
					Me.SendPropertyChanged("strTopico")
					Me.OnstrTopicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOrigen", DbType:="Varchar(100)")>  _
		Public Property strOrigen() As String
			Get
				Return Me._strOrigen
			End Get
			Set
				If (String.Equals(Me._strOrigen, value) = false) Then
					Me.OnstrOrigenChanging(value)
					Me.SendPropertyChanging
					Me._strOrigen = value
					Me.SendPropertyChanged("strOrigen")
					Me.OnstrOrigenChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPantallasParametrizacion")>  _
	Partial Public Class PantallasParametrizacion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDPantallasParametrizacion As Integer
		
		Private _strPantalla As String
		
		Private _strCampo As String
		
		Private _logEsObligatorio As Boolean
		
		Private _strValorPorDefecto As String
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDPantallasParametrizacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDPantallasParametrizacionChanged()
    End Sub
    Partial Private Sub OnstrPantallaChanging(value As String)
    End Sub
    Partial Private Sub OnstrPantallaChanged()
    End Sub
    Partial Private Sub OnstrCampoChanging(value As String)
    End Sub
    Partial Private Sub OnstrCampoChanged()
    End Sub
    Partial Private Sub OnlogEsObligatorioChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogEsObligatorioChanged()
    End Sub
    Partial Private Sub OnstrValorPorDefectoChanging(value As String)
    End Sub
    Partial Private Sub OnstrValorPorDefectoChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDPantallasParametrizacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDPantallasParametrizacion() As Integer
			Get
				Return Me._intIDPantallasParametrizacion
			End Get
			Set
				If ((Me._intIDPantallasParametrizacion = value)  _
							= false) Then
					Me.OnintIDPantallasParametrizacionChanging(value)
					Me.SendPropertyChanging
					Me._intIDPantallasParametrizacion = value
					Me.SendPropertyChanged("intIDPantallasParametrizacion")
					Me.OnintIDPantallasParametrizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPantalla", DbType:="Varchar(100) NOT NULL")>  _
		Public Property strPantalla() As String
			Get
				Return Me._strPantalla
			End Get
			Set
				If (String.Equals(Me._strPantalla, value) = false) Then
					Me.OnstrPantallaChanging(value)
					Me.SendPropertyChanging
					Me._strPantalla = value
					Me.SendPropertyChanged("strPantalla")
					Me.OnstrPantallaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCampo", DbType:="Varchar(100) NOT NULL")>  _
		Public Property strCampo() As String
			Get
				Return Me._strCampo
			End Get
			Set
				If (String.Equals(Me._strCampo, value) = false) Then
					Me.OnstrCampoChanging(value)
					Me.SendPropertyChanging
					Me._strCampo = value
					Me.SendPropertyChanged("strCampo")
					Me.OnstrCampoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEsObligatorio", DbType:="Bit NOT NULL")>  _
		Public Property logEsObligatorio() As Boolean
			Get
				Return Me._logEsObligatorio
			End Get
			Set
				If ((Me._logEsObligatorio = value)  _
							= false) Then
					Me.OnlogEsObligatorioChanging(value)
					Me.SendPropertyChanging
					Me._logEsObligatorio = value
					Me.SendPropertyChanged("logEsObligatorio")
					Me.OnlogEsObligatorioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strValorPorDefecto", DbType:="Varchar(50) NULL")>  _
		Public Property strValorPorDefecto() As String
			Get
				Return Me._strValorPorDefecto
			End Get
			Set
				If (String.Equals(Me._strValorPorDefecto, value) = false) Then
					Me.OnstrValorPorDefectoChanging(value)
					Me.SendPropertyChanging
					Me._strValorPorDefecto = value
					Me.SendPropertyChanged("strValorPorDefecto")
					Me.OnstrValorPorDefectoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	Partial Public Class uspOyDNet_Utilidades_CampoTablaResult
		
		Private _Resultado As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(100)")>  _
		Public Property Resultado() As String
			Get
				Return Me._Resultado
			End Get
			Set
				If (String.Equals(Me._Resultado, value) = false) Then
					Me._Resultado = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class usp_OyDNet_ProgramacionesActualizarResult
		
		Private _IdDevuelto As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdDevuelto", DbType:="Int")>  _
		Public Property IdDevuelto() As System.Nullable(Of Integer)
			Get
				Return Me._IdDevuelto
			End Get
			Set
				If (Me._IdDevuelto.Equals(value) = false) Then
					Me._IdDevuelto = value
				End If
			End Set
		End Property
	End Class
End Namespace

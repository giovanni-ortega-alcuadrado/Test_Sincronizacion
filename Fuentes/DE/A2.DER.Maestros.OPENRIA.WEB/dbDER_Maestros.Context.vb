'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class dbDER_MaestrosEntities
    Inherits DbContext


    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property tblClientesCuentasCRCC() As DbSet(Of tblClientesCuentasCRCC)
    Public Overridable Property tblClientesSubcuentasCRCC() As DbSet(Of tblClientesSubcuentasCRCC)
    Public Overridable Property tblComercialesAsistentes() As DbSet(Of tblComercialesAsistentes)
    Public Overridable Property tblConceptosContables() As DbSet(Of tblConceptosContables)
    Public Overridable Property tblDatosTributarios() As DbSet(Of tblDatosTributarios)
    Public Overridable Property tblDetalleDatosTributarios() As DbSet(Of tblDetalleDatosTributarios)
    Public Overridable Property tblDocumentador_ControlIngreso() As DbSet(Of tblDocumentador_ControlIngreso)
    Public Overridable Property tblFinalidadOperaciones() As DbSet(Of tblFinalidadOperaciones)
    Public Overridable Property tblFirmasGiveUp() As DbSet(Of tblFirmasGiveUp)
    Public Overridable Property tblGestionOperacionesLog() As DbSet(Of tblGestionOperacionesLog)
    Public Overridable Property tblLiquidacionesDVLog() As DbSet(Of tblLiquidacionesDVLog)
    Public Overridable Property tblMensajesCumPolitica() As DbSet(Of tblMensajesCumPolitica)
    Public Overridable Property tblMvtocontable() As DbSet(Of tblMvtocontable)
    Public Overridable Property tblPersonasTipoDocumento() As DbSet(Of tblPersonasTipoDocumento)
    Public Overridable Property tblPreciosDerivados() As DbSet(Of tblPreciosDerivados)
    Public Overridable Property tblProductos() As DbSet(Of tblProductos)
    Public Overridable Property tblProductosEspeciales() As DbSet(Of tblProductosEspeciales)
    Public Overridable Property tblProductosVencimientos() As DbSet(Of tblProductosVencimientos)
    Public Overridable Property tblTipoFinalidad() As DbSet(Of tblTipoFinalidad)
    Public Overridable Property tblTipoOpcionProducto() As DbSet(Of tblTipoOpcionProducto)
    Public Overridable Property tblTipoOperaciones() As DbSet(Of tblTipoOperaciones)
    Public Overridable Property tblTipoOrdenDuracion() As DbSet(Of tblTipoOrdenDuracion)
    Public Overridable Property tblTipoOrdenEjecucion() As DbSet(Of tblTipoOrdenEjecucion)
    Public Overridable Property tblTipoRegistro() As DbSet(Of tblTipoRegistro)
    Public Overridable Property tblCodComEnc() As DbSet(Of tblCodComEnc)
    Public Overridable Property tblCuentasInstrumentos() As DbSet(Of tblCuentasInstrumentos)
    Public Overridable Property tblTipoEjercicio() As DbSet(Of tblTipoEjercicio)
    Public Overridable Property tblTipoDocAutorizacion() As DbSet(Of tblTipoDocAutorizacion)
    Public Overridable Property tblNivelAutorizacion() As DbSet(Of tblNivelAutorizacion)
    Public Overridable Property tblTipoOrdenNaturaleza() As DbSet(Of tblTipoOrdenNaturaleza)

    Public Overridable Function usp_Maestros_Productos_Consultar(pstrNombreProducto As String, pintTipoProducto As Nullable(Of Short), pintTipoCumplimiento As Nullable(Of Integer), pintActivoSubyacente As Nullable(Of Integer), plogEstado As Nullable(Of Short), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblProductos)
        Dim pstrNombreProductoParameter As ObjectParameter = If(pstrNombreProducto IsNot Nothing, New ObjectParameter("pstrNombreProducto", pstrNombreProducto), New ObjectParameter("pstrNombreProducto", GetType(String)))

        Dim pintTipoProductoParameter As ObjectParameter = If(pintTipoProducto.HasValue, New ObjectParameter("pintTipoProducto", pintTipoProducto), New ObjectParameter("pintTipoProducto", GetType(Short)))

        Dim pintTipoCumplimientoParameter As ObjectParameter = If(pintTipoCumplimiento.HasValue, New ObjectParameter("pintTipoCumplimiento", pintTipoCumplimiento), New ObjectParameter("pintTipoCumplimiento", GetType(Integer)))

        Dim pintActivoSubyacenteParameter As ObjectParameter = If(pintActivoSubyacente.HasValue, New ObjectParameter("pintActivoSubyacente", pintActivoSubyacente), New ObjectParameter("pintActivoSubyacente", GetType(Integer)))

        Dim plogEstadoParameter As ObjectParameter = If(plogEstado.HasValue, New ObjectParameter("plogEstado", plogEstado), New ObjectParameter("plogEstado", GetType(Short)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblProductos)("usp_Maestros_Productos_Consultar", pstrNombreProductoParameter, pintTipoProductoParameter, pintTipoCumplimientoParameter, pintActivoSubyacenteParameter, plogEstadoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_Productos_ConsultarID(pintIdProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblProductos)
        Dim pintIdProductoParameter As ObjectParameter = If(pintIdProducto.HasValue, New ObjectParameter("pintIdProducto", pintIdProducto), New ObjectParameter("pintIdProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductos)("usp_Maestros_Productos_ConsultarID", pintIdProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_Productos_ConsultarID(pintIdProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblProductos)
        Dim pintIdProductoParameter As ObjectParameter = If(pintIdProducto.HasValue, New ObjectParameter("pintIdProducto", pintIdProducto), New ObjectParameter("pintIdProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductos)("usp_Maestros_Productos_ConsultarID", mergeOption, pintIdProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_Productos_Eliminar(intIdProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim intIdProductoParameter As ObjectParameter = If(intIdProducto.HasValue, New ObjectParameter("intIdProducto", intIdProducto), New ObjectParameter("intIdProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_Productos_Eliminar", intIdProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_Productos_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblProductos)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblProductos)("usp_Maestros_Productos_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_Productos_Validar(pintIdProducto As Nullable(Of Integer), pstrNombreProducto As String, pstrDescripcion As String, pintIdTipoProducto As Nullable(Of Integer), pintIdActivoSubyacente As Nullable(Of Integer), pintIdTipoCumplimiento As Nullable(Of Integer), pintIdTipoEjercicio As Nullable(Of Integer), pintUltimoDiaNegociacion As Nullable(Of Integer), pnumValorNominalContrato As Nullable(Of Decimal), pintIdTipoNegociacionPrima As Nullable(Of Integer), pintIdEstado As Nullable(Of Integer), pstrPrefijoProducto As String, pintNroDecimalesPrecio As Nullable(Of Integer), pintNroDecimalesPrima As Nullable(Of Integer), pnumTickPrecio As Nullable(Of Decimal), pintMaximoNegociacion As Nullable(Of Integer), pintMinimoRegistro As Nullable(Of Integer), pintMinimoNegociacionPolitica As Nullable(Of Integer), pintTipoContrato As Nullable(Of Integer), pnumPorcenAutoretencion As Nullable(Of Decimal), pintIdTipoLiquidacion As Nullable(Of Integer), pintIdTipoDerivado As Nullable(Of Integer), pintIdTipoCurva As Nullable(Of Integer), pintIdTipoSubyacente As Nullable(Of Integer), pbitPrecioPorcentual As Nullable(Of Boolean), pintIdProductoSubyacente As Nullable(Of Integer), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdProductoParameter As ObjectParameter = If(pintIdProducto.HasValue, New ObjectParameter("pintIdProducto", pintIdProducto), New ObjectParameter("pintIdProducto", GetType(Integer)))

        Dim pstrNombreProductoParameter As ObjectParameter = If(pstrNombreProducto IsNot Nothing, New ObjectParameter("pstrNombreProducto", pstrNombreProducto), New ObjectParameter("pstrNombreProducto", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pintIdTipoProductoParameter As ObjectParameter = If(pintIdTipoProducto.HasValue, New ObjectParameter("pintIdTipoProducto", pintIdTipoProducto), New ObjectParameter("pintIdTipoProducto", GetType(Integer)))

        Dim pintIdActivoSubyacenteParameter As ObjectParameter = If(pintIdActivoSubyacente.HasValue, New ObjectParameter("pintIdActivoSubyacente", pintIdActivoSubyacente), New ObjectParameter("pintIdActivoSubyacente", GetType(Integer)))

        Dim pintIdTipoCumplimientoParameter As ObjectParameter = If(pintIdTipoCumplimiento.HasValue, New ObjectParameter("pintIdTipoCumplimiento", pintIdTipoCumplimiento), New ObjectParameter("pintIdTipoCumplimiento", GetType(Integer)))

        Dim pintIdTipoEjercicioParameter As ObjectParameter = If(pintIdTipoEjercicio.HasValue, New ObjectParameter("pintIdTipoEjercicio", pintIdTipoEjercicio), New ObjectParameter("pintIdTipoEjercicio", GetType(Integer)))

        Dim pintUltimoDiaNegociacionParameter As ObjectParameter = If(pintUltimoDiaNegociacion.HasValue, New ObjectParameter("pintUltimoDiaNegociacion", pintUltimoDiaNegociacion), New ObjectParameter("pintUltimoDiaNegociacion", GetType(Integer)))

        Dim pnumValorNominalContratoParameter As ObjectParameter = If(pnumValorNominalContrato.HasValue, New ObjectParameter("pnumValorNominalContrato", pnumValorNominalContrato), New ObjectParameter("pnumValorNominalContrato", GetType(Decimal)))

        Dim pintIdTipoNegociacionPrimaParameter As ObjectParameter = If(pintIdTipoNegociacionPrima.HasValue, New ObjectParameter("pintIdTipoNegociacionPrima", pintIdTipoNegociacionPrima), New ObjectParameter("pintIdTipoNegociacionPrima", GetType(Integer)))

        Dim pintIdEstadoParameter As ObjectParameter = If(pintIdEstado.HasValue, New ObjectParameter("pintIdEstado", pintIdEstado), New ObjectParameter("pintIdEstado", GetType(Integer)))

        Dim pstrPrefijoProductoParameter As ObjectParameter = If(pstrPrefijoProducto IsNot Nothing, New ObjectParameter("pstrPrefijoProducto", pstrPrefijoProducto), New ObjectParameter("pstrPrefijoProducto", GetType(String)))

        Dim pintNroDecimalesPrecioParameter As ObjectParameter = If(pintNroDecimalesPrecio.HasValue, New ObjectParameter("pintNroDecimalesPrecio", pintNroDecimalesPrecio), New ObjectParameter("pintNroDecimalesPrecio", GetType(Integer)))

        Dim pintNroDecimalesPrimaParameter As ObjectParameter = If(pintNroDecimalesPrima.HasValue, New ObjectParameter("pintNroDecimalesPrima", pintNroDecimalesPrima), New ObjectParameter("pintNroDecimalesPrima", GetType(Integer)))

        Dim pnumTickPrecioParameter As ObjectParameter = If(pnumTickPrecio.HasValue, New ObjectParameter("pnumTickPrecio", pnumTickPrecio), New ObjectParameter("pnumTickPrecio", GetType(Decimal)))

        Dim pintMaximoNegociacionParameter As ObjectParameter = If(pintMaximoNegociacion.HasValue, New ObjectParameter("pintMaximoNegociacion", pintMaximoNegociacion), New ObjectParameter("pintMaximoNegociacion", GetType(Integer)))

        Dim pintMinimoRegistroParameter As ObjectParameter = If(pintMinimoRegistro.HasValue, New ObjectParameter("pintMinimoRegistro", pintMinimoRegistro), New ObjectParameter("pintMinimoRegistro", GetType(Integer)))

        Dim pintMinimoNegociacionPoliticaParameter As ObjectParameter = If(pintMinimoNegociacionPolitica.HasValue, New ObjectParameter("pintMinimoNegociacionPolitica", pintMinimoNegociacionPolitica), New ObjectParameter("pintMinimoNegociacionPolitica", GetType(Integer)))

        Dim pintTipoContratoParameter As ObjectParameter = If(pintTipoContrato.HasValue, New ObjectParameter("pintTipoContrato", pintTipoContrato), New ObjectParameter("pintTipoContrato", GetType(Integer)))

        Dim pnumPorcenAutoretencionParameter As ObjectParameter = If(pnumPorcenAutoretencion.HasValue, New ObjectParameter("pnumPorcenAutoretencion", pnumPorcenAutoretencion), New ObjectParameter("pnumPorcenAutoretencion", GetType(Decimal)))

        Dim pintIdTipoLiquidacionParameter As ObjectParameter = If(pintIdTipoLiquidacion.HasValue, New ObjectParameter("pintIdTipoLiquidacion", pintIdTipoLiquidacion), New ObjectParameter("pintIdTipoLiquidacion", GetType(Integer)))

        Dim pintIdTipoDerivadoParameter As ObjectParameter = If(pintIdTipoDerivado.HasValue, New ObjectParameter("pintIdTipoDerivado", pintIdTipoDerivado), New ObjectParameter("pintIdTipoDerivado", GetType(Integer)))

        Dim pintIdTipoCurvaParameter As ObjectParameter = If(pintIdTipoCurva.HasValue, New ObjectParameter("pintIdTipoCurva", pintIdTipoCurva), New ObjectParameter("pintIdTipoCurva", GetType(Integer)))

        Dim pintIdTipoSubyacenteParameter As ObjectParameter = If(pintIdTipoSubyacente.HasValue, New ObjectParameter("pintIdTipoSubyacente", pintIdTipoSubyacente), New ObjectParameter("pintIdTipoSubyacente", GetType(Integer)))

        Dim pbitPrecioPorcentualParameter As ObjectParameter = If(pbitPrecioPorcentual.HasValue, New ObjectParameter("pbitPrecioPorcentual", pbitPrecioPorcentual), New ObjectParameter("pbitPrecioPorcentual", GetType(Boolean)))

        Dim pintIdProductoSubyacenteParameter As ObjectParameter = If(pintIdProductoSubyacente.HasValue, New ObjectParameter("pintIdProductoSubyacente", pintIdProductoSubyacente), New ObjectParameter("pintIdProductoSubyacente", GetType(Integer)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_Productos_Validar", pintIdProductoParameter, pstrNombreProductoParameter, pstrDescripcionParameter, pintIdTipoProductoParameter, pintIdActivoSubyacenteParameter, pintIdTipoCumplimientoParameter, pintIdTipoEjercicioParameter, pintUltimoDiaNegociacionParameter, pnumValorNominalContratoParameter, pintIdTipoNegociacionPrimaParameter, pintIdEstadoParameter, pstrPrefijoProductoParameter, pintNroDecimalesPrecioParameter, pintNroDecimalesPrimaParameter, pnumTickPrecioParameter, pintMaximoNegociacionParameter, pintMinimoRegistroParameter, pintMinimoNegociacionPoliticaParameter, pintTipoContratoParameter, pnumPorcenAutoretencionParameter, pintIdTipoLiquidacionParameter, pintIdTipoDerivadoParameter, pintIdTipoCurvaParameter, pintIdTipoSubyacenteParameter, pbitPrecioPorcentualParameter, pintIdProductoSubyacenteParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_Consultar(pintidproducto As Nullable(Of Integer), pstrVencimiento As String, pstrNemotecnico As String, plogActivo As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblProductosVencimientos)
        Dim pintidproductoParameter As ObjectParameter = If(pintidproducto.HasValue, New ObjectParameter("pintidproducto", pintidproducto), New ObjectParameter("pintidproducto", GetType(Integer)))

        Dim pstrVencimientoParameter As ObjectParameter = If(pstrVencimiento IsNot Nothing, New ObjectParameter("pstrVencimiento", pstrVencimiento), New ObjectParameter("pstrVencimiento", GetType(String)))

        Dim pstrNemotecnicoParameter As ObjectParameter = If(pstrNemotecnico IsNot Nothing, New ObjectParameter("pstrNemotecnico", pstrNemotecnico), New ObjectParameter("pstrNemotecnico", GetType(String)))

        Dim plogActivoParameter As ObjectParameter = If(plogActivo.HasValue, New ObjectParameter("plogActivo", plogActivo), New ObjectParameter("plogActivo", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductosVencimientos)("usp_Maestros_ProductosVencimientos_Consultar", pintidproductoParameter, pstrVencimientoParameter, pstrNemotecnicoParameter, plogActivoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_Consultar(pintidproducto As Nullable(Of Integer), pstrVencimiento As String, pstrNemotecnico As String, plogActivo As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblProductosVencimientos)
        Dim pintidproductoParameter As ObjectParameter = If(pintidproducto.HasValue, New ObjectParameter("pintidproducto", pintidproducto), New ObjectParameter("pintidproducto", GetType(Integer)))

        Dim pstrVencimientoParameter As ObjectParameter = If(pstrVencimiento IsNot Nothing, New ObjectParameter("pstrVencimiento", pstrVencimiento), New ObjectParameter("pstrVencimiento", GetType(String)))

        Dim pstrNemotecnicoParameter As ObjectParameter = If(pstrNemotecnico IsNot Nothing, New ObjectParameter("pstrNemotecnico", pstrNemotecnico), New ObjectParameter("pstrNemotecnico", GetType(String)))

        Dim plogActivoParameter As ObjectParameter = If(plogActivo.HasValue, New ObjectParameter("plogActivo", plogActivo), New ObjectParameter("plogActivo", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductosVencimientos)("usp_Maestros_ProductosVencimientos_Consultar", mergeOption, pintidproductoParameter, pstrVencimientoParameter, pstrNemotecnicoParameter, plogActivoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_ConsultarID(pintIdProductosVencimiento As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblProductosVencimientos)
        Dim pintIdProductosVencimientoParameter As ObjectParameter = If(pintIdProductosVencimiento.HasValue, New ObjectParameter("pintIdProductosVencimiento", pintIdProductosVencimiento), New ObjectParameter("pintIdProductosVencimiento", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductosVencimientos)("usp_Maestros_ProductosVencimientos_ConsultarID", pintIdProductosVencimientoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_ConsultarID(pintIdProductosVencimiento As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblProductosVencimientos)
        Dim pintIdProductosVencimientoParameter As ObjectParameter = If(pintIdProductosVencimiento.HasValue, New ObjectParameter("pintIdProductosVencimiento", pintIdProductosVencimiento), New ObjectParameter("pintIdProductosVencimiento", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductosVencimientos)("usp_Maestros_ProductosVencimientos_ConsultarID", mergeOption, pintIdProductosVencimientoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_Eliminar(pintIdProductoVencimiento As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdProductoVencimientoParameter As ObjectParameter = If(pintIdProductoVencimiento.HasValue, New ObjectParameter("pintIdProductoVencimiento", pintIdProductoVencimiento), New ObjectParameter("pintIdProductoVencimiento", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_ProductosVencimientos_Eliminar", pintIdProductoVencimientoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_Filtrar(pintidproducto As Nullable(Of Integer), pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblProductosVencimientos)
        Dim pintidproductoParameter As ObjectParameter = If(pintidproducto.HasValue, New ObjectParameter("pintidproducto", pintidproducto), New ObjectParameter("pintidproducto", GetType(Integer)))

        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductosVencimientos)("usp_Maestros_ProductosVencimientos_Filtrar", pintidproductoParameter, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_Filtrar(pintidproducto As Nullable(Of Integer), pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblProductosVencimientos)
        Dim pintidproductoParameter As ObjectParameter = If(pintidproducto.HasValue, New ObjectParameter("pintidproducto", pintidproducto), New ObjectParameter("pintidproducto", GetType(Integer)))

        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblProductosVencimientos)("usp_Maestros_ProductosVencimientos_Filtrar", mergeOption, pintidproductoParameter, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_ProductosVencimientos_Validar(pintIdProductoVencimiento As Nullable(Of Integer), pintIdProducto As Nullable(Of Integer), pstrVencimiento As String, pstrNemotecnico As String, pdtmFechaVencimiento As Nullable(Of Date), plogActivo As Nullable(Of Boolean), pintUltimoDiaNegPV As Nullable(Of Integer), pdtmFechaUltDiaNeg As Nullable(Of Date), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdProductoVencimientoParameter As ObjectParameter = If(pintIdProductoVencimiento.HasValue, New ObjectParameter("pintIdProductoVencimiento", pintIdProductoVencimiento), New ObjectParameter("pintIdProductoVencimiento", GetType(Integer)))

        Dim pintIdProductoParameter As ObjectParameter = If(pintIdProducto.HasValue, New ObjectParameter("pintIdProducto", pintIdProducto), New ObjectParameter("pintIdProducto", GetType(Integer)))

        Dim pstrVencimientoParameter As ObjectParameter = If(pstrVencimiento IsNot Nothing, New ObjectParameter("pstrVencimiento", pstrVencimiento), New ObjectParameter("pstrVencimiento", GetType(String)))

        Dim pstrNemotecnicoParameter As ObjectParameter = If(pstrNemotecnico IsNot Nothing, New ObjectParameter("pstrNemotecnico", pstrNemotecnico), New ObjectParameter("pstrNemotecnico", GetType(String)))

        Dim pdtmFechaVencimientoParameter As ObjectParameter = If(pdtmFechaVencimiento.HasValue, New ObjectParameter("pdtmFechaVencimiento", pdtmFechaVencimiento), New ObjectParameter("pdtmFechaVencimiento", GetType(Date)))

        Dim plogActivoParameter As ObjectParameter = If(plogActivo.HasValue, New ObjectParameter("plogActivo", plogActivo), New ObjectParameter("plogActivo", GetType(Boolean)))

        Dim pintUltimoDiaNegPVParameter As ObjectParameter = If(pintUltimoDiaNegPV.HasValue, New ObjectParameter("pintUltimoDiaNegPV", pintUltimoDiaNegPV), New ObjectParameter("pintUltimoDiaNegPV", GetType(Integer)))

        Dim pdtmFechaUltDiaNegParameter As ObjectParameter = If(pdtmFechaUltDiaNeg.HasValue, New ObjectParameter("pdtmFechaUltDiaNeg", pdtmFechaUltDiaNeg), New ObjectParameter("pdtmFechaUltDiaNeg", GetType(Date)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_ProductosVencimientos_Validar", pintIdProductoVencimientoParameter, pintIdProductoParameter, pstrVencimientoParameter, pstrNemotecnicoParameter, pdtmFechaVencimientoParameter, plogActivoParameter, pintUltimoDiaNegPVParameter, pdtmFechaUltDiaNegParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Procesos_Utilitarios_CargarCombos(pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblCombos)
        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblCombos)("usp_Procesos_Utilitarios_CargarCombos", pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_Consultar(pstrNombre As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblDatosTributarios)
        Dim pstrNombreParameter As ObjectParameter = If(pstrNombre IsNot Nothing, New ObjectParameter("pstrNombre", pstrNombre), New ObjectParameter("pstrNombre", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDatosTributarios)("usp_Maestros_DatosTributarios_Consultar", pstrNombreParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_Consultar(pstrNombre As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblDatosTributarios)
        Dim pstrNombreParameter As ObjectParameter = If(pstrNombre IsNot Nothing, New ObjectParameter("pstrNombre", pstrNombre), New ObjectParameter("pstrNombre", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDatosTributarios)("usp_Maestros_DatosTributarios_Consultar", mergeOption, pstrNombreParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_ConsultarID(pintIdDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblDatosTributarios)
        Dim pintIdDatosTributariosParameter As ObjectParameter = If(pintIdDatosTributarios.HasValue, New ObjectParameter("pintIdDatosTributarios", pintIdDatosTributarios), New ObjectParameter("pintIdDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDatosTributarios)("usp_Maestros_DatosTributarios_ConsultarID", pintIdDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_ConsultarID(pintIdDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblDatosTributarios)
        Dim pintIdDatosTributariosParameter As ObjectParameter = If(pintIdDatosTributarios.HasValue, New ObjectParameter("pintIdDatosTributarios", pintIdDatosTributarios), New ObjectParameter("pintIdDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDatosTributarios)("usp_Maestros_DatosTributarios_ConsultarID", mergeOption, pintIdDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_Eliminar(pintIdDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdDatosTributariosParameter As ObjectParameter = If(pintIdDatosTributarios.HasValue, New ObjectParameter("pintIdDatosTributarios", pintIdDatosTributarios), New ObjectParameter("pintIdDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_DatosTributarios_Eliminar", pintIdDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblDatosTributarios)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDatosTributarios)("usp_Maestros_DatosTributarios_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblDatosTributarios)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDatosTributarios)("usp_Maestros_DatosTributarios_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DatosTributarios_Validar(pintIdDatoTribuario As Nullable(Of Integer), pstrNombre As String, pstrDescripcion As String, plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdDatoTribuarioParameter As ObjectParameter = If(pintIdDatoTribuario.HasValue, New ObjectParameter("pintIdDatoTribuario", pintIdDatoTribuario), New ObjectParameter("pintIdDatoTribuario", GetType(Integer)))

        Dim pstrNombreParameter As ObjectParameter = If(pstrNombre IsNot Nothing, New ObjectParameter("pstrNombre", pstrNombre), New ObjectParameter("pstrNombre", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_DatosTributarios_Validar", pintIdDatoTribuarioParameter, pstrNombreParameter, pstrDescripcionParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_Consultar(pintIdDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblDetalleDatosTributarios)
        Dim pintIdDatosTributariosParameter As ObjectParameter = If(pintIdDatosTributarios.HasValue, New ObjectParameter("pintIdDatosTributarios", pintIdDatosTributarios), New ObjectParameter("pintIdDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDetalleDatosTributarios)("usp_Maestros_DetalleDatosTributarios_Consultar", pintIdDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_Consultar(pintIdDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblDetalleDatosTributarios)
        Dim pintIdDatosTributariosParameter As ObjectParameter = If(pintIdDatosTributarios.HasValue, New ObjectParameter("pintIdDatosTributarios", pintIdDatosTributarios), New ObjectParameter("pintIdDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDetalleDatosTributarios)("usp_Maestros_DetalleDatosTributarios_Consultar", mergeOption, pintIdDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_ConsultarID(pintIdDetalleDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblDetalleDatosTributarios)
        Dim pintIdDetalleDatosTributariosParameter As ObjectParameter = If(pintIdDetalleDatosTributarios.HasValue, New ObjectParameter("pintIdDetalleDatosTributarios", pintIdDetalleDatosTributarios), New ObjectParameter("pintIdDetalleDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDetalleDatosTributarios)("usp_Maestros_DetalleDatosTributarios_ConsultarID", pintIdDetalleDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_ConsultarID(pintIdDetalleDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblDetalleDatosTributarios)
        Dim pintIdDetalleDatosTributariosParameter As ObjectParameter = If(pintIdDetalleDatosTributarios.HasValue, New ObjectParameter("pintIdDetalleDatosTributarios", pintIdDetalleDatosTributarios), New ObjectParameter("pintIdDetalleDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDetalleDatosTributarios)("usp_Maestros_DetalleDatosTributarios_ConsultarID", mergeOption, pintIdDetalleDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_Eliminar(pintIdDetalleDatosTributarios As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdDetalleDatosTributariosParameter As ObjectParameter = If(pintIdDetalleDatosTributarios.HasValue, New ObjectParameter("pintIdDetalleDatosTributarios", pintIdDetalleDatosTributarios), New ObjectParameter("pintIdDetalleDatosTributarios", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_DetalleDatosTributarios_Eliminar", pintIdDetalleDatosTributariosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblDetalleDatosTributarios)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDetalleDatosTributarios)("usp_Maestros_DetalleDatosTributarios_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblDetalleDatosTributarios)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblDetalleDatosTributarios)("usp_Maestros_DetalleDatosTributarios_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_DetalleDatosTributarios_Validar(pintIdDetalleDatosTributarios As Nullable(Of Integer), pintIdDatoTributario As Nullable(Of Integer), pdtmFechaInicial As Nullable(Of Date), pdtmFechaFinal As Nullable(Of Date), pnumValor As Nullable(Of Decimal), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdDetalleDatosTributariosParameter As ObjectParameter = If(pintIdDetalleDatosTributarios.HasValue, New ObjectParameter("pintIdDetalleDatosTributarios", pintIdDetalleDatosTributarios), New ObjectParameter("pintIdDetalleDatosTributarios", GetType(Integer)))

        Dim pintIdDatoTributarioParameter As ObjectParameter = If(pintIdDatoTributario.HasValue, New ObjectParameter("pintIdDatoTributario", pintIdDatoTributario), New ObjectParameter("pintIdDatoTributario", GetType(Integer)))

        Dim pdtmFechaInicialParameter As ObjectParameter = If(pdtmFechaInicial.HasValue, New ObjectParameter("pdtmFechaInicial", pdtmFechaInicial), New ObjectParameter("pdtmFechaInicial", GetType(Date)))

        Dim pdtmFechaFinalParameter As ObjectParameter = If(pdtmFechaFinal.HasValue, New ObjectParameter("pdtmFechaFinal", pdtmFechaFinal), New ObjectParameter("pdtmFechaFinal", GetType(Date)))

        Dim pnumValorParameter As ObjectParameter = If(pnumValor.HasValue, New ObjectParameter("pnumValor", pnumValor), New ObjectParameter("pnumValor", GetType(Decimal)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_DetalleDatosTributarios_Validar", pintIdDetalleDatosTributariosParameter, pintIdDatoTributarioParameter, pdtmFechaInicialParameter, pdtmFechaFinalParameter, pnumValorParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CodCompaniaEncuenta_Consultar(pintIdPlanoContable As Nullable(Of Integer), pstrNroDocumento As String, pintIdCuentaMultiproducto As Nullable(Of Integer), pstrCodComEnc As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblCodComEnc)
        Dim pintIdPlanoContableParameter As ObjectParameter = If(pintIdPlanoContable.HasValue, New ObjectParameter("pintIdPlanoContable", pintIdPlanoContable), New ObjectParameter("pintIdPlanoContable", GetType(Integer)))

        Dim pstrNroDocumentoParameter As ObjectParameter = If(pstrNroDocumento IsNot Nothing, New ObjectParameter("pstrNroDocumento", pstrNroDocumento), New ObjectParameter("pstrNroDocumento", GetType(String)))

        Dim pintIdCuentaMultiproductoParameter As ObjectParameter = If(pintIdCuentaMultiproducto.HasValue, New ObjectParameter("pintIdCuentaMultiproducto", pintIdCuentaMultiproducto), New ObjectParameter("pintIdCuentaMultiproducto", GetType(Integer)))

        Dim pstrCodComEncParameter As ObjectParameter = If(pstrCodComEnc IsNot Nothing, New ObjectParameter("pstrCodComEnc", pstrCodComEnc), New ObjectParameter("pstrCodComEnc", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblCodComEnc)("usp_Maestros_CodCompaniaEncuenta_Consultar", pintIdPlanoContableParameter, pstrNroDocumentoParameter, pintIdCuentaMultiproductoParameter, pstrCodComEncParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CodCompaniaEncuenta_ConsultarID(pintIdCodComEnc As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblCodComEnc)
        Dim pintIdCodComEncParameter As ObjectParameter = If(pintIdCodComEnc.HasValue, New ObjectParameter("pintIdCodComEnc", pintIdCodComEnc), New ObjectParameter("pintIdCodComEnc", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblCodComEnc)("usp_Maestros_CodCompaniaEncuenta_ConsultarID", pintIdCodComEncParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CodCompaniaEncuenta_ConsultarID(pintIdCodComEnc As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblCodComEnc)
        Dim pintIdCodComEncParameter As ObjectParameter = If(pintIdCodComEnc.HasValue, New ObjectParameter("pintIdCodComEnc", pintIdCodComEnc), New ObjectParameter("pintIdCodComEnc", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblCodComEnc)("usp_Maestros_CodCompaniaEncuenta_ConsultarID", mergeOption, pintIdCodComEncParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CodCompaniaEncuenta_Eliminar(pintIdCodComEnc As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdCodComEncParameter As ObjectParameter = If(pintIdCodComEnc.HasValue, New ObjectParameter("pintIdCodComEnc", pintIdCodComEnc), New ObjectParameter("pintIdCodComEnc", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_CodCompaniaEncuenta_Eliminar", pintIdCodComEncParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CodCompaniaEncuenta_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblCodComEnc)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblCodComEnc)("usp_Maestros_CodCompaniaEncuenta_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CodCompaniaEncuenta_Validar(pintIdCodComEnc As Nullable(Of Integer), pintIdPlanoContable As Nullable(Of Integer), pintIdCuentaMultiproducto As Nullable(Of Integer), pstrCodComEnc As String, plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdCodComEncParameter As ObjectParameter = If(pintIdCodComEnc.HasValue, New ObjectParameter("pintIdCodComEnc", pintIdCodComEnc), New ObjectParameter("pintIdCodComEnc", GetType(Integer)))

        Dim pintIdPlanoContableParameter As ObjectParameter = If(pintIdPlanoContable.HasValue, New ObjectParameter("pintIdPlanoContable", pintIdPlanoContable), New ObjectParameter("pintIdPlanoContable", GetType(Integer)))

        Dim pintIdCuentaMultiproductoParameter As ObjectParameter = If(pintIdCuentaMultiproducto.HasValue, New ObjectParameter("pintIdCuentaMultiproducto", pintIdCuentaMultiproducto), New ObjectParameter("pintIdCuentaMultiproducto", GetType(Integer)))

        Dim pstrCodComEncParameter As ObjectParameter = If(pstrCodComEnc IsNot Nothing, New ObjectParameter("pstrCodComEnc", pstrCodComEnc), New ObjectParameter("pstrCodComEnc", GetType(String)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_CodCompaniaEncuenta_Validar", pintIdCodComEncParameter, pintIdPlanoContableParameter, pintIdCuentaMultiproductoParameter, pstrCodComEncParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_Consultar(pdtmFecha As Nullable(Of Date), pstrNemotecnico As String, pstrNemotecnicoSubyacente As String, pstrFuentePrecio As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblPreciosDerivados)
        Dim pdtmFechaParameter As ObjectParameter = If(pdtmFecha.HasValue, New ObjectParameter("pdtmFecha", pdtmFecha), New ObjectParameter("pdtmFecha", GetType(Date)))

        Dim pstrNemotecnicoParameter As ObjectParameter = If(pstrNemotecnico IsNot Nothing, New ObjectParameter("pstrNemotecnico", pstrNemotecnico), New ObjectParameter("pstrNemotecnico", GetType(String)))

        Dim pstrNemotecnicoSubyacenteParameter As ObjectParameter = If(pstrNemotecnicoSubyacente IsNot Nothing, New ObjectParameter("pstrNemotecnicoSubyacente", pstrNemotecnicoSubyacente), New ObjectParameter("pstrNemotecnicoSubyacente", GetType(String)))

        Dim pstrFuentePrecioParameter As ObjectParameter = If(pstrFuentePrecio IsNot Nothing, New ObjectParameter("pstrFuentePrecio", pstrFuentePrecio), New ObjectParameter("pstrFuentePrecio", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreciosDerivados)("usp_Maestros_PreciosDerivados_Consultar", pdtmFechaParameter, pstrNemotecnicoParameter, pstrNemotecnicoSubyacenteParameter, pstrFuentePrecioParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_Consultar(pdtmFecha As Nullable(Of Date), pstrNemotecnico As String, pstrNemotecnicoSubyacente As String, pstrFuentePrecio As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblPreciosDerivados)
        Dim pdtmFechaParameter As ObjectParameter = If(pdtmFecha.HasValue, New ObjectParameter("pdtmFecha", pdtmFecha), New ObjectParameter("pdtmFecha", GetType(Date)))

        Dim pstrNemotecnicoParameter As ObjectParameter = If(pstrNemotecnico IsNot Nothing, New ObjectParameter("pstrNemotecnico", pstrNemotecnico), New ObjectParameter("pstrNemotecnico", GetType(String)))

        Dim pstrNemotecnicoSubyacenteParameter As ObjectParameter = If(pstrNemotecnicoSubyacente IsNot Nothing, New ObjectParameter("pstrNemotecnicoSubyacente", pstrNemotecnicoSubyacente), New ObjectParameter("pstrNemotecnicoSubyacente", GetType(String)))

        Dim pstrFuentePrecioParameter As ObjectParameter = If(pstrFuentePrecio IsNot Nothing, New ObjectParameter("pstrFuentePrecio", pstrFuentePrecio), New ObjectParameter("pstrFuentePrecio", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreciosDerivados)("usp_Maestros_PreciosDerivados_Consultar", mergeOption, pdtmFechaParameter, pstrNemotecnicoParameter, pstrNemotecnicoSubyacenteParameter, pstrFuentePrecioParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_ConsultarID(pintIdPrecioDerivado As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblPreciosDerivados)
        Dim pintIdPrecioDerivadoParameter As ObjectParameter = If(pintIdPrecioDerivado.HasValue, New ObjectParameter("pintIdPrecioDerivado", pintIdPrecioDerivado), New ObjectParameter("pintIdPrecioDerivado", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreciosDerivados)("usp_Maestros_PreciosDerivados_ConsultarID", pintIdPrecioDerivadoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_ConsultarID(pintIdPrecioDerivado As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblPreciosDerivados)
        Dim pintIdPrecioDerivadoParameter As ObjectParameter = If(pintIdPrecioDerivado.HasValue, New ObjectParameter("pintIdPrecioDerivado", pintIdPrecioDerivado), New ObjectParameter("pintIdPrecioDerivado", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreciosDerivados)("usp_Maestros_PreciosDerivados_ConsultarID", mergeOption, pintIdPrecioDerivadoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblPreciosDerivados)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreciosDerivados)("usp_Maestros_PreciosDerivados_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblPreciosDerivados)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblPreciosDerivados)("usp_Maestros_PreciosDerivados_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_Eliminar(intID As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim intIDParameter As ObjectParameter = If(intID.HasValue, New ObjectParameter("intID", intID), New ObjectParameter("intID", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_PreciosDerivados_Eliminar", intIDParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_PreciosDerivados_Validar(pintID As Nullable(Of Integer), pdtmFechaRegistro As Nullable(Of Date), pstrNemotecnico As String, pnumStrike As Nullable(Of Decimal), pnumPrecio As Nullable(Of Decimal), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIDParameter As ObjectParameter = If(pintID.HasValue, New ObjectParameter("pintID", pintID), New ObjectParameter("pintID", GetType(Integer)))

        Dim pdtmFechaRegistroParameter As ObjectParameter = If(pdtmFechaRegistro.HasValue, New ObjectParameter("pdtmFechaRegistro", pdtmFechaRegistro), New ObjectParameter("pdtmFechaRegistro", GetType(Date)))

        Dim pstrNemotecnicoParameter As ObjectParameter = If(pstrNemotecnico IsNot Nothing, New ObjectParameter("pstrNemotecnico", pstrNemotecnico), New ObjectParameter("pstrNemotecnico", GetType(String)))

        Dim pnumStrikeParameter As ObjectParameter = If(pnumStrike.HasValue, New ObjectParameter("pnumStrike", pnumStrike), New ObjectParameter("pnumStrike", GetType(Decimal)))

        Dim pnumPrecioParameter As ObjectParameter = If(pnumPrecio.HasValue, New ObjectParameter("pnumPrecio", pnumPrecio), New ObjectParameter("pnumPrecio", GetType(Decimal)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_PreciosDerivados_Validar", pintIDParameter, pdtmFechaRegistroParameter, pstrNemotecnicoParameter, pnumStrikeParameter, pnumPrecioParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_MensajesCumPolitica_Consultar(pstrMensaje As String, pintEstadoCumplimiento As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblMensajesCumPolitica)
        Dim pstrMensajeParameter As ObjectParameter = If(pstrMensaje IsNot Nothing, New ObjectParameter("pstrMensaje", pstrMensaje), New ObjectParameter("pstrMensaje", GetType(String)))

        Dim pintEstadoCumplimientoParameter As ObjectParameter = If(pintEstadoCumplimiento.HasValue, New ObjectParameter("pintEstadoCumplimiento", pintEstadoCumplimiento), New ObjectParameter("pintEstadoCumplimiento", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblMensajesCumPolitica)("usp_Maestros_MensajesCumPolitica_Consultar", pstrMensajeParameter, pintEstadoCumplimientoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_MensajesCumPolitica_ConsultarID(pintidMensajeCumPolitica As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblMensajesCumPolitica)
        Dim pintidMensajeCumPoliticaParameter As ObjectParameter = If(pintidMensajeCumPolitica.HasValue, New ObjectParameter("pintidMensajeCumPolitica", pintidMensajeCumPolitica), New ObjectParameter("pintidMensajeCumPolitica", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblMensajesCumPolitica)("usp_Maestros_MensajesCumPolitica_ConsultarID", pintidMensajeCumPoliticaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_MensajesCumPolitica_ConsultarID(pintidMensajeCumPolitica As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblMensajesCumPolitica)
        Dim pintidMensajeCumPoliticaParameter As ObjectParameter = If(pintidMensajeCumPolitica.HasValue, New ObjectParameter("pintidMensajeCumPolitica", pintidMensajeCumPolitica), New ObjectParameter("pintidMensajeCumPolitica", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblMensajesCumPolitica)("usp_Maestros_MensajesCumPolitica_ConsultarID", mergeOption, pintidMensajeCumPoliticaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_MensajesCumPolitica_Eliminar(pintidMensajeCumPolitica As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintidMensajeCumPoliticaParameter As ObjectParameter = If(pintidMensajeCumPolitica.HasValue, New ObjectParameter("pintidMensajeCumPolitica", pintidMensajeCumPolitica), New ObjectParameter("pintidMensajeCumPolitica", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_MensajesCumPolitica_Eliminar", pintidMensajeCumPoliticaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_MensajesCumPolitica_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblMensajesCumPolitica)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblMensajesCumPolitica)("usp_Maestros_MensajesCumPolitica_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_MensajesCumPolitica_Validar(pintidMensajeCumPolitica As Nullable(Of Integer), pintEstadoCumplimiento As Nullable(Of Integer), pstrMensaje As String, plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintidMensajeCumPoliticaParameter As ObjectParameter = If(pintidMensajeCumPolitica.HasValue, New ObjectParameter("pintidMensajeCumPolitica", pintidMensajeCumPolitica), New ObjectParameter("pintidMensajeCumPolitica", GetType(Integer)))

        Dim pintEstadoCumplimientoParameter As ObjectParameter = If(pintEstadoCumplimiento.HasValue, New ObjectParameter("pintEstadoCumplimiento", pintEstadoCumplimiento), New ObjectParameter("pintEstadoCumplimiento", GetType(Integer)))

        Dim pstrMensajeParameter As ObjectParameter = If(pstrMensaje IsNot Nothing, New ObjectParameter("pstrMensaje", pstrMensaje), New ObjectParameter("pstrMensaje", GetType(String)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_MensajesCumPolitica_Validar", pintidMensajeCumPoliticaParameter, pintEstadoCumplimientoParameter, pstrMensajeParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CuentasInstrumentosCRCC_Consultar(pintIdCuentaCRCC As Nullable(Of Integer), pintIdProducto As Nullable(Of Integer), pintIdCuentaCRCCReem As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblCuentasInstrumentos)
        Dim pintIdCuentaCRCCParameter As ObjectParameter = If(pintIdCuentaCRCC.HasValue, New ObjectParameter("pintIdCuentaCRCC", pintIdCuentaCRCC), New ObjectParameter("pintIdCuentaCRCC", GetType(Integer)))

        Dim pintIdProductoParameter As ObjectParameter = If(pintIdProducto.HasValue, New ObjectParameter("pintIdProducto", pintIdProducto), New ObjectParameter("pintIdProducto", GetType(Integer)))

        Dim pintIdCuentaCRCCReemParameter As ObjectParameter = If(pintIdCuentaCRCCReem.HasValue, New ObjectParameter("pintIdCuentaCRCCReem", pintIdCuentaCRCCReem), New ObjectParameter("pintIdCuentaCRCCReem", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblCuentasInstrumentos)("usp_Maestros_CuentasInstrumentosCRCC_Consultar", pintIdCuentaCRCCParameter, pintIdProductoParameter, pintIdCuentaCRCCReemParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CuentasInstrumentosCRCC_ConsultarID(pintIdCuentasInstrumentos As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblCuentasInstrumentos)
        Dim pintIdCuentasInstrumentosParameter As ObjectParameter = If(pintIdCuentasInstrumentos.HasValue, New ObjectParameter("pintIdCuentasInstrumentos", pintIdCuentasInstrumentos), New ObjectParameter("pintIdCuentasInstrumentos", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblCuentasInstrumentos)("usp_Maestros_CuentasInstrumentosCRCC_ConsultarID", pintIdCuentasInstrumentosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CuentasInstrumentosCRCC_ConsultarID(pintIdCuentasInstrumentos As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblCuentasInstrumentos)
        Dim pintIdCuentasInstrumentosParameter As ObjectParameter = If(pintIdCuentasInstrumentos.HasValue, New ObjectParameter("pintIdCuentasInstrumentos", pintIdCuentasInstrumentos), New ObjectParameter("pintIdCuentasInstrumentos", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblCuentasInstrumentos)("usp_Maestros_CuentasInstrumentosCRCC_ConsultarID", mergeOption, pintIdCuentasInstrumentosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CuentasInstrumentosCRCC_Eliminar(pintIdCuentasInstrumentos As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdCuentasInstrumentosParameter As ObjectParameter = If(pintIdCuentasInstrumentos.HasValue, New ObjectParameter("pintIdCuentasInstrumentos", pintIdCuentasInstrumentos), New ObjectParameter("pintIdCuentasInstrumentos", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_CuentasInstrumentosCRCC_Eliminar", pintIdCuentasInstrumentosParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CuentasInstrumentosCRCC_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblCuentasInstrumentos)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblCuentasInstrumentos)("usp_Maestros_CuentasInstrumentosCRCC_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_CuentasInstrumentosCRCC_Validar(pintIdCuentasInstrumentos As Nullable(Of Integer), pintIdCuentaCRCC As Nullable(Of Integer), pintIdSubcuentaCRCC As Nullable(Of Integer), pintIdProducto As Nullable(Of Integer), pintIdCuentaCRCCReem As Nullable(Of Integer), pintIdSubcuentaCRCCReem As Nullable(Of Integer), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdCuentasInstrumentosParameter As ObjectParameter = If(pintIdCuentasInstrumentos.HasValue, New ObjectParameter("pintIdCuentasInstrumentos", pintIdCuentasInstrumentos), New ObjectParameter("pintIdCuentasInstrumentos", GetType(Integer)))

        Dim pintIdCuentaCRCCParameter As ObjectParameter = If(pintIdCuentaCRCC.HasValue, New ObjectParameter("pintIdCuentaCRCC", pintIdCuentaCRCC), New ObjectParameter("pintIdCuentaCRCC", GetType(Integer)))

        Dim pintIdSubcuentaCRCCParameter As ObjectParameter = If(pintIdSubcuentaCRCC.HasValue, New ObjectParameter("pintIdSubcuentaCRCC", pintIdSubcuentaCRCC), New ObjectParameter("pintIdSubcuentaCRCC", GetType(Integer)))

        Dim pintIdProductoParameter As ObjectParameter = If(pintIdProducto.HasValue, New ObjectParameter("pintIdProducto", pintIdProducto), New ObjectParameter("pintIdProducto", GetType(Integer)))

        Dim pintIdCuentaCRCCReemParameter As ObjectParameter = If(pintIdCuentaCRCCReem.HasValue, New ObjectParameter("pintIdCuentaCRCCReem", pintIdCuentaCRCCReem), New ObjectParameter("pintIdCuentaCRCCReem", GetType(Integer)))

        Dim pintIdSubcuentaCRCCReemParameter As ObjectParameter = If(pintIdSubcuentaCRCCReem.HasValue, New ObjectParameter("pintIdSubcuentaCRCCReem", pintIdSubcuentaCRCCReem), New ObjectParameter("pintIdSubcuentaCRCCReem", GetType(Integer)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_CuentasInstrumentosCRCC_Validar", pintIdCuentasInstrumentosParameter, pintIdCuentaCRCCParameter, pintIdSubcuentaCRCCParameter, pintIdProductoParameter, pintIdCuentaCRCCReemParameter, pintIdSubcuentaCRCCReemParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FirmasGiveUp_Consultar(pintIdFirmaNegocio As Nullable(Of Integer), pstrReferenciaGiveOut As String, pbitAceptaGiveOut As Nullable(Of Boolean), pbitAceptaGiveIn As Nullable(Of Boolean), plogActiva As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblFirmasGiveUp)
        Dim pintIdFirmaNegocioParameter As ObjectParameter = If(pintIdFirmaNegocio.HasValue, New ObjectParameter("pintIdFirmaNegocio", pintIdFirmaNegocio), New ObjectParameter("pintIdFirmaNegocio", GetType(Integer)))

        Dim pstrReferenciaGiveOutParameter As ObjectParameter = If(pstrReferenciaGiveOut IsNot Nothing, New ObjectParameter("pstrReferenciaGiveOut", pstrReferenciaGiveOut), New ObjectParameter("pstrReferenciaGiveOut", GetType(String)))

        Dim pbitAceptaGiveOutParameter As ObjectParameter = If(pbitAceptaGiveOut.HasValue, New ObjectParameter("pbitAceptaGiveOut", pbitAceptaGiveOut), New ObjectParameter("pbitAceptaGiveOut", GetType(Boolean)))

        Dim pbitAceptaGiveInParameter As ObjectParameter = If(pbitAceptaGiveIn.HasValue, New ObjectParameter("pbitAceptaGiveIn", pbitAceptaGiveIn), New ObjectParameter("pbitAceptaGiveIn", GetType(Boolean)))

        Dim plogActivaParameter As ObjectParameter = If(plogActiva.HasValue, New ObjectParameter("plogActiva", plogActiva), New ObjectParameter("plogActiva", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblFirmasGiveUp)("usp_Maestros_FirmasGiveUp_Consultar", pintIdFirmaNegocioParameter, pstrReferenciaGiveOutParameter, pbitAceptaGiveOutParameter, pbitAceptaGiveInParameter, plogActivaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FirmasGiveUp_ConsultarID(pintIdFirmaGiveUp As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblFirmasGiveUp)
        Dim pintIdFirmaGiveUpParameter As ObjectParameter = If(pintIdFirmaGiveUp.HasValue, New ObjectParameter("pintIdFirmaGiveUp", pintIdFirmaGiveUp), New ObjectParameter("pintIdFirmaGiveUp", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFirmasGiveUp)("usp_Maestros_FirmasGiveUp_ConsultarID", pintIdFirmaGiveUpParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FirmasGiveUp_ConsultarID(pintIdFirmaGiveUp As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblFirmasGiveUp)
        Dim pintIdFirmaGiveUpParameter As ObjectParameter = If(pintIdFirmaGiveUp.HasValue, New ObjectParameter("pintIdFirmaGiveUp", pintIdFirmaGiveUp), New ObjectParameter("pintIdFirmaGiveUp", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFirmasGiveUp)("usp_Maestros_FirmasGiveUp_ConsultarID", mergeOption, pintIdFirmaGiveUpParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FirmasGiveUp_Eliminar(pintIdFirmaGiveUp As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdFirmaGiveUpParameter As ObjectParameter = If(pintIdFirmaGiveUp.HasValue, New ObjectParameter("pintIdFirmaGiveUp", pintIdFirmaGiveUp), New ObjectParameter("pintIdFirmaGiveUp", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_FirmasGiveUp_Eliminar", pintIdFirmaGiveUpParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FirmasGiveUp_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblFirmasGiveUp)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblFirmasGiveUp)("usp_Maestros_FirmasGiveUp_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FirmasGiveUp_Validar(pintIdFirmaGiveUp As Nullable(Of Integer), pintIdFirmaNegocio As Nullable(Of Integer), pstrReferenciaGiveOut As String, pbitAceptaGiveOut As Nullable(Of Boolean), pbitAceptaGiveIn As Nullable(Of Boolean), plogActiva As Nullable(Of Boolean), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdFirmaGiveUpParameter As ObjectParameter = If(pintIdFirmaGiveUp.HasValue, New ObjectParameter("pintIdFirmaGiveUp", pintIdFirmaGiveUp), New ObjectParameter("pintIdFirmaGiveUp", GetType(Integer)))

        Dim pintIdFirmaNegocioParameter As ObjectParameter = If(pintIdFirmaNegocio.HasValue, New ObjectParameter("pintIdFirmaNegocio", pintIdFirmaNegocio), New ObjectParameter("pintIdFirmaNegocio", GetType(Integer)))

        Dim pstrReferenciaGiveOutParameter As ObjectParameter = If(pstrReferenciaGiveOut IsNot Nothing, New ObjectParameter("pstrReferenciaGiveOut", pstrReferenciaGiveOut), New ObjectParameter("pstrReferenciaGiveOut", GetType(String)))

        Dim pbitAceptaGiveOutParameter As ObjectParameter = If(pbitAceptaGiveOut.HasValue, New ObjectParameter("pbitAceptaGiveOut", pbitAceptaGiveOut), New ObjectParameter("pbitAceptaGiveOut", GetType(Boolean)))

        Dim pbitAceptaGiveInParameter As ObjectParameter = If(pbitAceptaGiveIn.HasValue, New ObjectParameter("pbitAceptaGiveIn", pbitAceptaGiveIn), New ObjectParameter("pbitAceptaGiveIn", GetType(Boolean)))

        Dim plogActivaParameter As ObjectParameter = If(plogActiva.HasValue, New ObjectParameter("plogActiva", plogActiva), New ObjectParameter("plogActiva", GetType(Boolean)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_FirmasGiveUp_Validar", pintIdFirmaGiveUpParameter, pintIdFirmaNegocioParameter, pstrReferenciaGiveOutParameter, pbitAceptaGiveOutParameter, pbitAceptaGiveInParameter, plogActivaParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_Consultar(pintIdTipoProducto As Nullable(Of Integer), pstrNombre As String, pstrCodigo As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoEjercicio)
        Dim pintIdTipoProductoParameter As ObjectParameter = If(pintIdTipoProducto.HasValue, New ObjectParameter("pintIdTipoProducto", pintIdTipoProducto), New ObjectParameter("pintIdTipoProducto", GetType(Integer)))

        Dim pstrNombreParameter As ObjectParameter = If(pstrNombre IsNot Nothing, New ObjectParameter("pstrNombre", pstrNombre), New ObjectParameter("pstrNombre", GetType(String)))

        Dim pstrCodigoParameter As ObjectParameter = If(pstrCodigo IsNot Nothing, New ObjectParameter("pstrCodigo", pstrCodigo), New ObjectParameter("pstrCodigo", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoEjercicio)("usp_Maestros_TipoEjercicio_Consultar", pintIdTipoProductoParameter, pstrNombreParameter, pstrCodigoParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_Consultar(pintIdTipoProducto As Nullable(Of Integer), pstrNombre As String, pstrCodigo As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoEjercicio)
        Dim pintIdTipoProductoParameter As ObjectParameter = If(pintIdTipoProducto.HasValue, New ObjectParameter("pintIdTipoProducto", pintIdTipoProducto), New ObjectParameter("pintIdTipoProducto", GetType(Integer)))

        Dim pstrNombreParameter As ObjectParameter = If(pstrNombre IsNot Nothing, New ObjectParameter("pstrNombre", pstrNombre), New ObjectParameter("pstrNombre", GetType(String)))

        Dim pstrCodigoParameter As ObjectParameter = If(pstrCodigo IsNot Nothing, New ObjectParameter("pstrCodigo", pstrCodigo), New ObjectParameter("pstrCodigo", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoEjercicio)("usp_Maestros_TipoEjercicio_Consultar", mergeOption, pintIdTipoProductoParameter, pstrNombreParameter, pstrCodigoParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_ConsultarID(pintIdTipoEjercicio As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoEjercicio)
        Dim pintIdTipoEjercicioParameter As ObjectParameter = If(pintIdTipoEjercicio.HasValue, New ObjectParameter("pintIdTipoEjercicio", pintIdTipoEjercicio), New ObjectParameter("pintIdTipoEjercicio", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoEjercicio)("usp_Maestros_TipoEjercicio_ConsultarID", pintIdTipoEjercicioParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_ConsultarID(pintIdTipoEjercicio As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoEjercicio)
        Dim pintIdTipoEjercicioParameter As ObjectParameter = If(pintIdTipoEjercicio.HasValue, New ObjectParameter("pintIdTipoEjercicio", pintIdTipoEjercicio), New ObjectParameter("pintIdTipoEjercicio", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoEjercicio)("usp_Maestros_TipoEjercicio_ConsultarID", mergeOption, pintIdTipoEjercicioParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_Eliminar(pintIdTipoEjercicio As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoEjercicioParameter As ObjectParameter = If(pintIdTipoEjercicio.HasValue, New ObjectParameter("pintIdTipoEjercicio", pintIdTipoEjercicio), New ObjectParameter("pintIdTipoEjercicio", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoEjercicio_Eliminar", pintIdTipoEjercicioParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoEjercicio)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoEjercicio)("usp_Maestros_TipoEjercicio_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoEjercicio)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoEjercicio)("usp_Maestros_TipoEjercicio_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoEjercicio_Validar(pintIdTipoEjercicio As Nullable(Of Integer), pintIdTipoProducto As Nullable(Of Integer), pstrCodigoTipoEjercicio As String, pstrNombreTipoEjercicio As String, pstrDescripcion As String, pbitPorDefecto As Nullable(Of Boolean), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoEjercicioParameter As ObjectParameter = If(pintIdTipoEjercicio.HasValue, New ObjectParameter("pintIdTipoEjercicio", pintIdTipoEjercicio), New ObjectParameter("pintIdTipoEjercicio", GetType(Integer)))

        Dim pintIdTipoProductoParameter As ObjectParameter = If(pintIdTipoProducto.HasValue, New ObjectParameter("pintIdTipoProducto", pintIdTipoProducto), New ObjectParameter("pintIdTipoProducto", GetType(Integer)))

        Dim pstrCodigoTipoEjercicioParameter As ObjectParameter = If(pstrCodigoTipoEjercicio IsNot Nothing, New ObjectParameter("pstrCodigoTipoEjercicio", pstrCodigoTipoEjercicio), New ObjectParameter("pstrCodigoTipoEjercicio", GetType(String)))

        Dim pstrNombreTipoEjercicioParameter As ObjectParameter = If(pstrNombreTipoEjercicio IsNot Nothing, New ObjectParameter("pstrNombreTipoEjercicio", pstrNombreTipoEjercicio), New ObjectParameter("pstrNombreTipoEjercicio", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pbitPorDefectoParameter As ObjectParameter = If(pbitPorDefecto.HasValue, New ObjectParameter("pbitPorDefecto", pbitPorDefecto), New ObjectParameter("pbitPorDefecto", GetType(Boolean)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoEjercicio_Validar", pintIdTipoEjercicioParameter, pintIdTipoProductoParameter, pstrCodigoTipoEjercicioParameter, pstrNombreTipoEjercicioParameter, pstrDescripcionParameter, pbitPorDefectoParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_Consultar(pstrCodigoTipoOrdenEjecucion As String, pstrNombreTipoOrdenEjecucion As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenEjecucion)
        Dim pstrCodigoTipoOrdenEjecucionParameter As ObjectParameter = If(pstrCodigoTipoOrdenEjecucion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenEjecucion", pstrCodigoTipoOrdenEjecucion), New ObjectParameter("pstrCodigoTipoOrdenEjecucion", GetType(String)))

        Dim pstrNombreTipoOrdenEjecucionParameter As ObjectParameter = If(pstrNombreTipoOrdenEjecucion IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenEjecucion", pstrNombreTipoOrdenEjecucion), New ObjectParameter("pstrNombreTipoOrdenEjecucion", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenEjecucion)("usp_Maestros_TipoOrdenEjecucion_Consultar", pstrCodigoTipoOrdenEjecucionParameter, pstrNombreTipoOrdenEjecucionParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_Consultar(pstrCodigoTipoOrdenEjecucion As String, pstrNombreTipoOrdenEjecucion As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenEjecucion)
        Dim pstrCodigoTipoOrdenEjecucionParameter As ObjectParameter = If(pstrCodigoTipoOrdenEjecucion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenEjecucion", pstrCodigoTipoOrdenEjecucion), New ObjectParameter("pstrCodigoTipoOrdenEjecucion", GetType(String)))

        Dim pstrNombreTipoOrdenEjecucionParameter As ObjectParameter = If(pstrNombreTipoOrdenEjecucion IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenEjecucion", pstrNombreTipoOrdenEjecucion), New ObjectParameter("pstrNombreTipoOrdenEjecucion", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenEjecucion)("usp_Maestros_TipoOrdenEjecucion_Consultar", mergeOption, pstrCodigoTipoOrdenEjecucionParameter, pstrNombreTipoOrdenEjecucionParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_ConsultarID(pintIdTipoOrdenEjecucion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenEjecucion)
        Dim pintIdTipoOrdenEjecucionParameter As ObjectParameter = If(pintIdTipoOrdenEjecucion.HasValue, New ObjectParameter("pintIdTipoOrdenEjecucion", pintIdTipoOrdenEjecucion), New ObjectParameter("pintIdTipoOrdenEjecucion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenEjecucion)("usp_Maestros_TipoOrdenEjecucion_ConsultarID", pintIdTipoOrdenEjecucionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_ConsultarID(pintIdTipoOrdenEjecucion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenEjecucion)
        Dim pintIdTipoOrdenEjecucionParameter As ObjectParameter = If(pintIdTipoOrdenEjecucion.HasValue, New ObjectParameter("pintIdTipoOrdenEjecucion", pintIdTipoOrdenEjecucion), New ObjectParameter("pintIdTipoOrdenEjecucion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenEjecucion)("usp_Maestros_TipoOrdenEjecucion_ConsultarID", mergeOption, pintIdTipoOrdenEjecucionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_Eliminar(pintIdTipoOrdenEjecucion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOrdenEjecucionParameter As ObjectParameter = If(pintIdTipoOrdenEjecucion.HasValue, New ObjectParameter("pintIdTipoOrdenEjecucion", pintIdTipoOrdenEjecucion), New ObjectParameter("pintIdTipoOrdenEjecucion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOrdenEjecucion_Eliminar", pintIdTipoOrdenEjecucionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenEjecucion)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenEjecucion)("usp_Maestros_TipoOrdenEjecucion_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenEjecucion)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenEjecucion)("usp_Maestros_TipoOrdenEjecucion_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenEjecucion_Validar(pintIdTipoOrdenEjecucion As Nullable(Of Integer), pstrCodigoTipoOrdenEjecucion As String, pstrNombreTipoOrdenEjecucion As String, pbitPorDefecto As Nullable(Of Boolean), pbitCantidadMinima As Nullable(Of Boolean), pstrDescripcion As String, pbitRequiereInstrumento As Nullable(Of Boolean), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOrdenEjecucionParameter As ObjectParameter = If(pintIdTipoOrdenEjecucion.HasValue, New ObjectParameter("pintIdTipoOrdenEjecucion", pintIdTipoOrdenEjecucion), New ObjectParameter("pintIdTipoOrdenEjecucion", GetType(Integer)))

        Dim pstrCodigoTipoOrdenEjecucionParameter As ObjectParameter = If(pstrCodigoTipoOrdenEjecucion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenEjecucion", pstrCodigoTipoOrdenEjecucion), New ObjectParameter("pstrCodigoTipoOrdenEjecucion", GetType(String)))

        Dim pstrNombreTipoOrdenEjecucionParameter As ObjectParameter = If(pstrNombreTipoOrdenEjecucion IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenEjecucion", pstrNombreTipoOrdenEjecucion), New ObjectParameter("pstrNombreTipoOrdenEjecucion", GetType(String)))

        Dim pbitPorDefectoParameter As ObjectParameter = If(pbitPorDefecto.HasValue, New ObjectParameter("pbitPorDefecto", pbitPorDefecto), New ObjectParameter("pbitPorDefecto", GetType(Boolean)))

        Dim pbitCantidadMinimaParameter As ObjectParameter = If(pbitCantidadMinima.HasValue, New ObjectParameter("pbitCantidadMinima", pbitCantidadMinima), New ObjectParameter("pbitCantidadMinima", GetType(Boolean)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pbitRequiereInstrumentoParameter As ObjectParameter = If(pbitRequiereInstrumento.HasValue, New ObjectParameter("pbitRequiereInstrumento", pbitRequiereInstrumento), New ObjectParameter("pbitRequiereInstrumento", GetType(Boolean)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOrdenEjecucion_Validar", pintIdTipoOrdenEjecucionParameter, pstrCodigoTipoOrdenEjecucionParameter, pstrNombreTipoOrdenEjecucionParameter, pbitPorDefectoParameter, pbitCantidadMinimaParameter, pstrDescripcionParameter, pbitRequiereInstrumentoParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_Consultar(pstrCodigoTipoOrdenNaturaleza As String, pstrNombreTipoOrdenNaturaleza As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenNaturaleza)
        Dim pstrCodigoTipoOrdenNaturalezaParameter As ObjectParameter = If(pstrCodigoTipoOrdenNaturaleza IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenNaturaleza", pstrCodigoTipoOrdenNaturaleza), New ObjectParameter("pstrCodigoTipoOrdenNaturaleza", GetType(String)))

        Dim pstrNombreTipoOrdenNaturalezaParameter As ObjectParameter = If(pstrNombreTipoOrdenNaturaleza IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenNaturaleza", pstrNombreTipoOrdenNaturaleza), New ObjectParameter("pstrNombreTipoOrdenNaturaleza", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenNaturaleza)("usp_Maestros_TipoOrdenNaturaleza_Consultar", pstrCodigoTipoOrdenNaturalezaParameter, pstrNombreTipoOrdenNaturalezaParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_Consultar(pstrCodigoTipoOrdenNaturaleza As String, pstrNombreTipoOrdenNaturaleza As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenNaturaleza)
        Dim pstrCodigoTipoOrdenNaturalezaParameter As ObjectParameter = If(pstrCodigoTipoOrdenNaturaleza IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenNaturaleza", pstrCodigoTipoOrdenNaturaleza), New ObjectParameter("pstrCodigoTipoOrdenNaturaleza", GetType(String)))

        Dim pstrNombreTipoOrdenNaturalezaParameter As ObjectParameter = If(pstrNombreTipoOrdenNaturaleza IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenNaturaleza", pstrNombreTipoOrdenNaturaleza), New ObjectParameter("pstrNombreTipoOrdenNaturaleza", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenNaturaleza)("usp_Maestros_TipoOrdenNaturaleza_Consultar", mergeOption, pstrCodigoTipoOrdenNaturalezaParameter, pstrNombreTipoOrdenNaturalezaParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_ConsultarID(pintIdTipoOrdenNaturaleza As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenNaturaleza)
        Dim pintIdTipoOrdenNaturalezaParameter As ObjectParameter = If(pintIdTipoOrdenNaturaleza.HasValue, New ObjectParameter("pintIdTipoOrdenNaturaleza", pintIdTipoOrdenNaturaleza), New ObjectParameter("pintIdTipoOrdenNaturaleza", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenNaturaleza)("usp_Maestros_TipoOrdenNaturaleza_ConsultarID", pintIdTipoOrdenNaturalezaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_ConsultarID(pintIdTipoOrdenNaturaleza As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenNaturaleza)
        Dim pintIdTipoOrdenNaturalezaParameter As ObjectParameter = If(pintIdTipoOrdenNaturaleza.HasValue, New ObjectParameter("pintIdTipoOrdenNaturaleza", pintIdTipoOrdenNaturaleza), New ObjectParameter("pintIdTipoOrdenNaturaleza", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenNaturaleza)("usp_Maestros_TipoOrdenNaturaleza_ConsultarID", mergeOption, pintIdTipoOrdenNaturalezaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_Eliminar(pintIdTipoOrdenNaturaleza As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOrdenNaturalezaParameter As ObjectParameter = If(pintIdTipoOrdenNaturaleza.HasValue, New ObjectParameter("pintIdTipoOrdenNaturaleza", pintIdTipoOrdenNaturaleza), New ObjectParameter("pintIdTipoOrdenNaturaleza", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOrdenNaturaleza_Eliminar", pintIdTipoOrdenNaturalezaParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenNaturaleza)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenNaturaleza)("usp_Maestros_TipoOrdenNaturaleza_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenNaturaleza)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenNaturaleza)("usp_Maestros_TipoOrdenNaturaleza_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenNaturaleza_Validar(pintIdTipoOrdenNaturaleza As Nullable(Of Integer), pstrCodigoTipoOrdenNaturaleza As String, pstrNombreTipoOrdenNaturaleza As String, pbitPorDefecto As Nullable(Of Boolean), pbitRequierePrecio As Nullable(Of Boolean), pbitPrecioStop As Nullable(Of Boolean), pbitCantidadOculta As Nullable(Of Boolean), pbitSeguirInstrumento As Nullable(Of Boolean), pintIdTipoListaPrecio As Nullable(Of Integer), pstrDescripcion As String, pbitRequiereCantidad As Nullable(Of Boolean), pbitRequierePrecioActivar As Nullable(Of Boolean), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOrdenNaturalezaParameter As ObjectParameter = If(pintIdTipoOrdenNaturaleza.HasValue, New ObjectParameter("pintIdTipoOrdenNaturaleza", pintIdTipoOrdenNaturaleza), New ObjectParameter("pintIdTipoOrdenNaturaleza", GetType(Integer)))

        Dim pstrCodigoTipoOrdenNaturalezaParameter As ObjectParameter = If(pstrCodigoTipoOrdenNaturaleza IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenNaturaleza", pstrCodigoTipoOrdenNaturaleza), New ObjectParameter("pstrCodigoTipoOrdenNaturaleza", GetType(String)))

        Dim pstrNombreTipoOrdenNaturalezaParameter As ObjectParameter = If(pstrNombreTipoOrdenNaturaleza IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenNaturaleza", pstrNombreTipoOrdenNaturaleza), New ObjectParameter("pstrNombreTipoOrdenNaturaleza", GetType(String)))

        Dim pbitPorDefectoParameter As ObjectParameter = If(pbitPorDefecto.HasValue, New ObjectParameter("pbitPorDefecto", pbitPorDefecto), New ObjectParameter("pbitPorDefecto", GetType(Boolean)))

        Dim pbitRequierePrecioParameter As ObjectParameter = If(pbitRequierePrecio.HasValue, New ObjectParameter("pbitRequierePrecio", pbitRequierePrecio), New ObjectParameter("pbitRequierePrecio", GetType(Boolean)))

        Dim pbitPrecioStopParameter As ObjectParameter = If(pbitPrecioStop.HasValue, New ObjectParameter("pbitPrecioStop", pbitPrecioStop), New ObjectParameter("pbitPrecioStop", GetType(Boolean)))

        Dim pbitCantidadOcultaParameter As ObjectParameter = If(pbitCantidadOculta.HasValue, New ObjectParameter("pbitCantidadOculta", pbitCantidadOculta), New ObjectParameter("pbitCantidadOculta", GetType(Boolean)))

        Dim pbitSeguirInstrumentoParameter As ObjectParameter = If(pbitSeguirInstrumento.HasValue, New ObjectParameter("pbitSeguirInstrumento", pbitSeguirInstrumento), New ObjectParameter("pbitSeguirInstrumento", GetType(Boolean)))

        Dim pintIdTipoListaPrecioParameter As ObjectParameter = If(pintIdTipoListaPrecio.HasValue, New ObjectParameter("pintIdTipoListaPrecio", pintIdTipoListaPrecio), New ObjectParameter("pintIdTipoListaPrecio", GetType(Integer)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pbitRequiereCantidadParameter As ObjectParameter = If(pbitRequiereCantidad.HasValue, New ObjectParameter("pbitRequiereCantidad", pbitRequiereCantidad), New ObjectParameter("pbitRequiereCantidad", GetType(Boolean)))

        Dim pbitRequierePrecioActivarParameter As ObjectParameter = If(pbitRequierePrecioActivar.HasValue, New ObjectParameter("pbitRequierePrecioActivar", pbitRequierePrecioActivar), New ObjectParameter("pbitRequierePrecioActivar", GetType(Boolean)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOrdenNaturaleza_Validar", pintIdTipoOrdenNaturalezaParameter, pstrCodigoTipoOrdenNaturalezaParameter, pstrNombreTipoOrdenNaturalezaParameter, pbitPorDefectoParameter, pbitRequierePrecioParameter, pbitPrecioStopParameter, pbitCantidadOcultaParameter, pbitSeguirInstrumentoParameter, pintIdTipoListaPrecioParameter, pstrDescripcionParameter, pbitRequiereCantidadParameter, pbitRequierePrecioActivarParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_Consultar(pstrCodigoTipoOrdenDuracion As String, pstrNombreTipoOrdenDuracion As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenDuracion)
        Dim pstrCodigoTipoOrdenDuracionParameter As ObjectParameter = If(pstrCodigoTipoOrdenDuracion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenDuracion", pstrCodigoTipoOrdenDuracion), New ObjectParameter("pstrCodigoTipoOrdenDuracion", GetType(String)))

        Dim pstrNombreTipoOrdenDuracionParameter As ObjectParameter = If(pstrNombreTipoOrdenDuracion IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenDuracion", pstrNombreTipoOrdenDuracion), New ObjectParameter("pstrNombreTipoOrdenDuracion", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenDuracion)("usp_Maestros_TipoOrdenDuracion_Consultar", pstrCodigoTipoOrdenDuracionParameter, pstrNombreTipoOrdenDuracionParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_Consultar(pstrCodigoTipoOrdenDuracion As String, pstrNombreTipoOrdenDuracion As String, pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenDuracion)
        Dim pstrCodigoTipoOrdenDuracionParameter As ObjectParameter = If(pstrCodigoTipoOrdenDuracion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenDuracion", pstrCodigoTipoOrdenDuracion), New ObjectParameter("pstrCodigoTipoOrdenDuracion", GetType(String)))

        Dim pstrNombreTipoOrdenDuracionParameter As ObjectParameter = If(pstrNombreTipoOrdenDuracion IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenDuracion", pstrNombreTipoOrdenDuracion), New ObjectParameter("pstrNombreTipoOrdenDuracion", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenDuracion)("usp_Maestros_TipoOrdenDuracion_Consultar", mergeOption, pstrCodigoTipoOrdenDuracionParameter, pstrNombreTipoOrdenDuracionParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_ConsultarID(pintIdTipoOrdenDuracion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenDuracion)
        Dim pintIdTipoOrdenDuracionParameter As ObjectParameter = If(pintIdTipoOrdenDuracion.HasValue, New ObjectParameter("pintIdTipoOrdenDuracion", pintIdTipoOrdenDuracion), New ObjectParameter("pintIdTipoOrdenDuracion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenDuracion)("usp_Maestros_TipoOrdenDuracion_ConsultarID", pintIdTipoOrdenDuracionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_ConsultarID(pintIdTipoOrdenDuracion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenDuracion)
        Dim pintIdTipoOrdenDuracionParameter As ObjectParameter = If(pintIdTipoOrdenDuracion.HasValue, New ObjectParameter("pintIdTipoOrdenDuracion", pintIdTipoOrdenDuracion), New ObjectParameter("pintIdTipoOrdenDuracion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenDuracion)("usp_Maestros_TipoOrdenDuracion_ConsultarID", mergeOption, pintIdTipoOrdenDuracionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_Eliminar(pintIdTipoOrdenDuracion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOrdenDuracionParameter As ObjectParameter = If(pintIdTipoOrdenDuracion.HasValue, New ObjectParameter("pintIdTipoOrdenDuracion", pintIdTipoOrdenDuracion), New ObjectParameter("pintIdTipoOrdenDuracion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOrdenDuracion_Eliminar", pintIdTipoOrdenDuracionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOrdenDuracion)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenDuracion)("usp_Maestros_TipoOrdenDuracion_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOrdenDuracion)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOrdenDuracion)("usp_Maestros_TipoOrdenDuracion_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOrdenDuracion_Validar(pintIdTipoOrdenDuracion As Nullable(Of Integer), pstrCodigoTipoOrdenDuracion As String, pstrNombreTipoOrdenDuracion As String, pstrDescripcion As String, pbitPorDefecto As Nullable(Of Boolean), pbitRequiereFecha As Nullable(Of Boolean), pintIdTipoListaAsociada As Nullable(Of Integer), pstrEtiquetaLista As String, pbitVigenciaMax As Nullable(Of Boolean), pintIdTipoOpcionProducto As Nullable(Of Short), pbitPermiteSeleccionarTipoSesion As Nullable(Of Boolean), pintNroDiasVencimiento As Nullable(Of Integer), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOrdenDuracionParameter As ObjectParameter = If(pintIdTipoOrdenDuracion.HasValue, New ObjectParameter("pintIdTipoOrdenDuracion", pintIdTipoOrdenDuracion), New ObjectParameter("pintIdTipoOrdenDuracion", GetType(Integer)))

        Dim pstrCodigoTipoOrdenDuracionParameter As ObjectParameter = If(pstrCodigoTipoOrdenDuracion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOrdenDuracion", pstrCodigoTipoOrdenDuracion), New ObjectParameter("pstrCodigoTipoOrdenDuracion", GetType(String)))

        Dim pstrNombreTipoOrdenDuracionParameter As ObjectParameter = If(pstrNombreTipoOrdenDuracion IsNot Nothing, New ObjectParameter("pstrNombreTipoOrdenDuracion", pstrNombreTipoOrdenDuracion), New ObjectParameter("pstrNombreTipoOrdenDuracion", GetType(String)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pbitPorDefectoParameter As ObjectParameter = If(pbitPorDefecto.HasValue, New ObjectParameter("pbitPorDefecto", pbitPorDefecto), New ObjectParameter("pbitPorDefecto", GetType(Boolean)))

        Dim pbitRequiereFechaParameter As ObjectParameter = If(pbitRequiereFecha.HasValue, New ObjectParameter("pbitRequiereFecha", pbitRequiereFecha), New ObjectParameter("pbitRequiereFecha", GetType(Boolean)))

        Dim pintIdTipoListaAsociadaParameter As ObjectParameter = If(pintIdTipoListaAsociada.HasValue, New ObjectParameter("pintIdTipoListaAsociada", pintIdTipoListaAsociada), New ObjectParameter("pintIdTipoListaAsociada", GetType(Integer)))

        Dim pstrEtiquetaListaParameter As ObjectParameter = If(pstrEtiquetaLista IsNot Nothing, New ObjectParameter("pstrEtiquetaLista", pstrEtiquetaLista), New ObjectParameter("pstrEtiquetaLista", GetType(String)))

        Dim pbitVigenciaMaxParameter As ObjectParameter = If(pbitVigenciaMax.HasValue, New ObjectParameter("pbitVigenciaMax", pbitVigenciaMax), New ObjectParameter("pbitVigenciaMax", GetType(Boolean)))

        Dim pintIdTipoOpcionProductoParameter As ObjectParameter = If(pintIdTipoOpcionProducto.HasValue, New ObjectParameter("pintIdTipoOpcionProducto", pintIdTipoOpcionProducto), New ObjectParameter("pintIdTipoOpcionProducto", GetType(Short)))

        Dim pbitPermiteSeleccionarTipoSesionParameter As ObjectParameter = If(pbitPermiteSeleccionarTipoSesion.HasValue, New ObjectParameter("pbitPermiteSeleccionarTipoSesion", pbitPermiteSeleccionarTipoSesion), New ObjectParameter("pbitPermiteSeleccionarTipoSesion", GetType(Boolean)))

        Dim pintNroDiasVencimientoParameter As ObjectParameter = If(pintNroDiasVencimiento.HasValue, New ObjectParameter("pintNroDiasVencimiento", pintNroDiasVencimiento), New ObjectParameter("pintNroDiasVencimiento", GetType(Integer)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOrdenDuracion_Validar", pintIdTipoOrdenDuracionParameter, pstrCodigoTipoOrdenDuracionParameter, pstrNombreTipoOrdenDuracionParameter, pstrDescripcionParameter, pbitPorDefectoParameter, pbitRequiereFechaParameter, pintIdTipoListaAsociadaParameter, pstrEtiquetaListaParameter, pbitVigenciaMaxParameter, pintIdTipoOpcionProductoParameter, pbitPermiteSeleccionarTipoSesionParameter, pintNroDiasVencimientoParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_Consultar(pstrNombreTipoOpcion As String, pstrCodigoTipoOpcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOpcionProducto)
        Dim pstrNombreTipoOpcionParameter As ObjectParameter = If(pstrNombreTipoOpcion IsNot Nothing, New ObjectParameter("pstrNombreTipoOpcion", pstrNombreTipoOpcion), New ObjectParameter("pstrNombreTipoOpcion", GetType(String)))

        Dim pstrCodigoTipoOpcionParameter As ObjectParameter = If(pstrCodigoTipoOpcion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOpcion", pstrCodigoTipoOpcion), New ObjectParameter("pstrCodigoTipoOpcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOpcionProducto)("usp_Maestros_TipoOpcionProducto_Consultar", pstrNombreTipoOpcionParameter, pstrCodigoTipoOpcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_Consultar(pstrNombreTipoOpcion As String, pstrCodigoTipoOpcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOpcionProducto)
        Dim pstrNombreTipoOpcionParameter As ObjectParameter = If(pstrNombreTipoOpcion IsNot Nothing, New ObjectParameter("pstrNombreTipoOpcion", pstrNombreTipoOpcion), New ObjectParameter("pstrNombreTipoOpcion", GetType(String)))

        Dim pstrCodigoTipoOpcionParameter As ObjectParameter = If(pstrCodigoTipoOpcion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOpcion", pstrCodigoTipoOpcion), New ObjectParameter("pstrCodigoTipoOpcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOpcionProducto)("usp_Maestros_TipoOpcionProducto_Consultar", mergeOption, pstrNombreTipoOpcionParameter, pstrCodigoTipoOpcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_ConsultarID(pintIdTipoOpcionProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOpcionProducto)
        Dim pintIdTipoOpcionProductoParameter As ObjectParameter = If(pintIdTipoOpcionProducto.HasValue, New ObjectParameter("pintIdTipoOpcionProducto", pintIdTipoOpcionProducto), New ObjectParameter("pintIdTipoOpcionProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOpcionProducto)("usp_Maestros_TipoOpcionProducto_ConsultarID", pintIdTipoOpcionProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_ConsultarID(pintIdTipoOpcionProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOpcionProducto)
        Dim pintIdTipoOpcionProductoParameter As ObjectParameter = If(pintIdTipoOpcionProducto.HasValue, New ObjectParameter("pintIdTipoOpcionProducto", pintIdTipoOpcionProducto), New ObjectParameter("pintIdTipoOpcionProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOpcionProducto)("usp_Maestros_TipoOpcionProducto_ConsultarID", mergeOption, pintIdTipoOpcionProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_Eliminar(pintIdTipoOpcionProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOpcionProductoParameter As ObjectParameter = If(pintIdTipoOpcionProducto.HasValue, New ObjectParameter("pintIdTipoOpcionProducto", pintIdTipoOpcionProducto), New ObjectParameter("pintIdTipoOpcionProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOpcionProducto_Eliminar", pintIdTipoOpcionProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoOpcionProducto)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOpcionProducto)("usp_Maestros_TipoOpcionProducto_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoOpcionProducto)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoOpcionProducto)("usp_Maestros_TipoOpcionProducto_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoOpcionProducto_Validar(pintIdTipoOpcionProducto As Nullable(Of Integer), pstrCodigoTipoOpcion As String, pstrNombreTipoOpcion As String, pintIdTipoProducto As Nullable(Of Integer), pbitProductosEspeciales As Nullable(Of Boolean), pbitPrima As Nullable(Of Boolean), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoOpcionProductoParameter As ObjectParameter = If(pintIdTipoOpcionProducto.HasValue, New ObjectParameter("pintIdTipoOpcionProducto", pintIdTipoOpcionProducto), New ObjectParameter("pintIdTipoOpcionProducto", GetType(Integer)))

        Dim pstrCodigoTipoOpcionParameter As ObjectParameter = If(pstrCodigoTipoOpcion IsNot Nothing, New ObjectParameter("pstrCodigoTipoOpcion", pstrCodigoTipoOpcion), New ObjectParameter("pstrCodigoTipoOpcion", GetType(String)))

        Dim pstrNombreTipoOpcionParameter As ObjectParameter = If(pstrNombreTipoOpcion IsNot Nothing, New ObjectParameter("pstrNombreTipoOpcion", pstrNombreTipoOpcion), New ObjectParameter("pstrNombreTipoOpcion", GetType(String)))

        Dim pintIdTipoProductoParameter As ObjectParameter = If(pintIdTipoProducto.HasValue, New ObjectParameter("pintIdTipoProducto", pintIdTipoProducto), New ObjectParameter("pintIdTipoProducto", GetType(Integer)))

        Dim pbitProductosEspecialesParameter As ObjectParameter = If(pbitProductosEspeciales.HasValue, New ObjectParameter("pbitProductosEspeciales", pbitProductosEspeciales), New ObjectParameter("pbitProductosEspeciales", GetType(Boolean)))

        Dim pbitPrimaParameter As ObjectParameter = If(pbitPrima.HasValue, New ObjectParameter("pbitPrima", pbitPrima), New ObjectParameter("pbitPrima", GetType(Boolean)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoOpcionProducto_Validar", pintIdTipoOpcionProductoParameter, pstrCodigoTipoOpcionParameter, pstrNombreTipoOpcionParameter, pintIdTipoProductoParameter, pbitProductosEspecialesParameter, pbitPrimaParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_Consultar(pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblFinalidadOperaciones)
        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFinalidadOperaciones)("usp_Maestros_FinalidadOperaciones_Consultar", pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_Consultar(pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblFinalidadOperaciones)
        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFinalidadOperaciones)("usp_Maestros_FinalidadOperaciones_Consultar", mergeOption, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_ConsultarID(pintIdFinalidadOperacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblFinalidadOperaciones)
        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFinalidadOperaciones)("usp_Maestros_FinalidadOperaciones_ConsultarID", pintIdFinalidadOperacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_ConsultarID(pintIdFinalidadOperacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblFinalidadOperaciones)
        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFinalidadOperaciones)("usp_Maestros_FinalidadOperaciones_ConsultarID", mergeOption, pintIdFinalidadOperacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_Eliminar(pintIdFinalidadOperacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_FinalidadOperaciones_Eliminar", pintIdFinalidadOperacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblFinalidadOperaciones)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFinalidadOperaciones)("usp_Maestros_FinalidadOperaciones_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblFinalidadOperaciones)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblFinalidadOperaciones)("usp_Maestros_FinalidadOperaciones_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_FinalidadOperaciones_Validar(pintIdFinalidadOperacion As Nullable(Of Integer), pstrDescripcion As String, pbitPorDefecto As Nullable(Of Boolean), pbitPermiteComplemento As Nullable(Of Boolean), pintIdTipoLista As Nullable(Of Integer), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pbitPorDefectoParameter As ObjectParameter = If(pbitPorDefecto.HasValue, New ObjectParameter("pbitPorDefecto", pbitPorDefecto), New ObjectParameter("pbitPorDefecto", GetType(Boolean)))

        Dim pbitPermiteComplementoParameter As ObjectParameter = If(pbitPermiteComplemento.HasValue, New ObjectParameter("pbitPermiteComplemento", pbitPermiteComplemento), New ObjectParameter("pbitPermiteComplemento", GetType(Boolean)))

        Dim pintIdTipoListaParameter As ObjectParameter = If(pintIdTipoLista.HasValue, New ObjectParameter("pintIdTipoLista", pintIdTipoLista), New ObjectParameter("pintIdTipoLista", GetType(Integer)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_FinalidadOperaciones_Validar", pintIdFinalidadOperacionParameter, pstrDescripcionParameter, pbitPorDefectoParameter, pbitPermiteComplementoParameter, pintIdTipoListaParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_Consultar(pintIdFinalidadOperacion As Nullable(Of Integer), pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoFinalidad)
        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoFinalidad)("usp_Maestros_TipoFinalidad_Consultar", pintIdFinalidadOperacionParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_Consultar(pintIdFinalidadOperacion As Nullable(Of Integer), pstrDescripcion As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoFinalidad)
        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoFinalidad)("usp_Maestros_TipoFinalidad_Consultar", mergeOption, pintIdFinalidadOperacionParameter, pstrDescripcionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_ConsultarID(pintidTipoFinalidad As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoFinalidad)
        Dim pintidTipoFinalidadParameter As ObjectParameter = If(pintidTipoFinalidad.HasValue, New ObjectParameter("pintidTipoFinalidad", pintidTipoFinalidad), New ObjectParameter("pintidTipoFinalidad", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoFinalidad)("usp_Maestros_TipoFinalidad_ConsultarID", pintidTipoFinalidadParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_ConsultarID(pintidTipoFinalidad As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoFinalidad)
        Dim pintidTipoFinalidadParameter As ObjectParameter = If(pintidTipoFinalidad.HasValue, New ObjectParameter("pintidTipoFinalidad", pintidTipoFinalidad), New ObjectParameter("pintidTipoFinalidad", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoFinalidad)("usp_Maestros_TipoFinalidad_ConsultarID", mergeOption, pintidTipoFinalidadParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_Eliminar(pintIdTipoFinalidad As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoFinalidadParameter As ObjectParameter = If(pintIdTipoFinalidad.HasValue, New ObjectParameter("pintIdTipoFinalidad", pintIdTipoFinalidad), New ObjectParameter("pintIdTipoFinalidad", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoFinalidad_Eliminar", pintIdTipoFinalidadParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoFinalidad)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoFinalidad)("usp_Maestros_TipoFinalidad_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoFinalidad)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoFinalidad)("usp_Maestros_TipoFinalidad_Filtrar", mergeOption, pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoFinalidad_Validar(pintIdTipoFinalidad As Nullable(Of Integer), pstrDescripcion As String, pbitPorDefecto As Nullable(Of Boolean), pintIdFinalidadOperacion As Nullable(Of Integer), pintIdTipoLista As Nullable(Of Integer), pbitSolicitarMonto As Nullable(Of Boolean), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoFinalidadParameter As ObjectParameter = If(pintIdTipoFinalidad.HasValue, New ObjectParameter("pintIdTipoFinalidad", pintIdTipoFinalidad), New ObjectParameter("pintIdTipoFinalidad", GetType(Integer)))

        Dim pstrDescripcionParameter As ObjectParameter = If(pstrDescripcion IsNot Nothing, New ObjectParameter("pstrDescripcion", pstrDescripcion), New ObjectParameter("pstrDescripcion", GetType(String)))

        Dim pbitPorDefectoParameter As ObjectParameter = If(pbitPorDefecto.HasValue, New ObjectParameter("pbitPorDefecto", pbitPorDefecto), New ObjectParameter("pbitPorDefecto", GetType(Boolean)))

        Dim pintIdFinalidadOperacionParameter As ObjectParameter = If(pintIdFinalidadOperacion.HasValue, New ObjectParameter("pintIdFinalidadOperacion", pintIdFinalidadOperacion), New ObjectParameter("pintIdFinalidadOperacion", GetType(Integer)))

        Dim pintIdTipoListaParameter As ObjectParameter = If(pintIdTipoLista.HasValue, New ObjectParameter("pintIdTipoLista", pintIdTipoLista), New ObjectParameter("pintIdTipoLista", GetType(Integer)))

        Dim pbitSolicitarMontoParameter As ObjectParameter = If(pbitSolicitarMonto.HasValue, New ObjectParameter("pbitSolicitarMonto", pbitSolicitarMonto), New ObjectParameter("pbitSolicitarMonto", GetType(Boolean)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoFinalidad_Validar", pintIdTipoFinalidadParameter, pstrDescripcionParameter, pbitPorDefectoParameter, pintIdFinalidadOperacionParameter, pintIdTipoListaParameter, pbitSolicitarMontoParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoDocAutorizacion_Consultar(pstrCodigoTipoDocumento As String, pintTipoProducto As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblTipoDocAutorizacion)
        Dim pstrCodigoTipoDocumentoParameter As ObjectParameter = If(pstrCodigoTipoDocumento IsNot Nothing, New ObjectParameter("pstrCodigoTipoDocumento", pstrCodigoTipoDocumento), New ObjectParameter("pstrCodigoTipoDocumento", GetType(String)))

        Dim pintTipoProductoParameter As ObjectParameter = If(pintTipoProducto.HasValue, New ObjectParameter("pintTipoProducto", pintTipoProducto), New ObjectParameter("pintTipoProducto", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblTipoDocAutorizacion)("usp_Maestros_TipoDocAutorizacion_Consultar", pstrCodigoTipoDocumentoParameter, pintTipoProductoParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoDocAutorizacion_ConsultarID(pintidTipoDocAutorizacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblTipoDocAutorizacion)
        Dim pintidTipoDocAutorizacionParameter As ObjectParameter = If(pintidTipoDocAutorizacion.HasValue, New ObjectParameter("pintidTipoDocAutorizacion", pintidTipoDocAutorizacion), New ObjectParameter("pintidTipoDocAutorizacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoDocAutorizacion)("usp_Maestros_TipoDocAutorizacion_ConsultarID", pintidTipoDocAutorizacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoDocAutorizacion_ConsultarID(pintidTipoDocAutorizacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblTipoDocAutorizacion)
        Dim pintidTipoDocAutorizacionParameter As ObjectParameter = If(pintidTipoDocAutorizacion.HasValue, New ObjectParameter("pintidTipoDocAutorizacion", pintidTipoDocAutorizacion), New ObjectParameter("pintidTipoDocAutorizacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblTipoDocAutorizacion)("usp_Maestros_TipoDocAutorizacion_ConsultarID", mergeOption, pintidTipoDocAutorizacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoDocAutorizacion_Eliminar(pintIdTipoDocAutorizacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintIdTipoDocAutorizacionParameter As ObjectParameter = If(pintIdTipoDocAutorizacion.HasValue, New ObjectParameter("pintIdTipoDocAutorizacion", pintIdTipoDocAutorizacion), New ObjectParameter("pintIdTipoDocAutorizacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoDocAutorizacion_Eliminar", pintIdTipoDocAutorizacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoDocAutorizacion_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblTipoDocAutorizacion)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblTipoDocAutorizacion)("usp_Maestros_TipoDocAutorizacion_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_TipoDocAutorizacion_Validar(pintidTipoDocAutorizacion As Nullable(Of Integer), pintidTipoProducto As Nullable(Of Integer), pstrCodigoTipoDocumento As String, plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintidTipoDocAutorizacionParameter As ObjectParameter = If(pintidTipoDocAutorizacion.HasValue, New ObjectParameter("pintidTipoDocAutorizacion", pintidTipoDocAutorizacion), New ObjectParameter("pintidTipoDocAutorizacion", GetType(Integer)))

        Dim pintidTipoProductoParameter As ObjectParameter = If(pintidTipoProducto.HasValue, New ObjectParameter("pintidTipoProducto", pintidTipoProducto), New ObjectParameter("pintidTipoProducto", GetType(Integer)))

        Dim pstrCodigoTipoDocumentoParameter As ObjectParameter = If(pstrCodigoTipoDocumento IsNot Nothing, New ObjectParameter("pstrCodigoTipoDocumento", pstrCodigoTipoDocumento), New ObjectParameter("pstrCodigoTipoDocumento", GetType(String)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_TipoDocAutorizacion_Validar", pintidTipoDocAutorizacionParameter, pintidTipoProductoParameter, pstrCodigoTipoDocumentoParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_NivelAutorizacion_Consultar(pintIdSucursal As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblNivelAutorizacion)
        Dim pintIdSucursalParameter As ObjectParameter = If(pintIdSucursal.HasValue, New ObjectParameter("pintIdSucursal", pintIdSucursal), New ObjectParameter("pintIdSucursal", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblNivelAutorizacion)("usp_Maestros_NivelAutorizacion_Consultar", pintIdSucursalParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_NivelAutorizacion_ConsultarID(pintidNivelAutorizacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of tblNivelAutorizacion)
        Dim pintidNivelAutorizacionParameter As ObjectParameter = If(pintidNivelAutorizacion.HasValue, New ObjectParameter("pintidNivelAutorizacion", pintidNivelAutorizacion), New ObjectParameter("pintidNivelAutorizacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblNivelAutorizacion)("usp_Maestros_NivelAutorizacion_ConsultarID", pintidNivelAutorizacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_NivelAutorizacion_ConsultarID(pintidNivelAutorizacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String, mergeOption As MergeOption) As ObjectResult(Of tblNivelAutorizacion)
        Dim pintidNivelAutorizacionParameter As ObjectParameter = If(pintidNivelAutorizacion.HasValue, New ObjectParameter("pintidNivelAutorizacion", pintidNivelAutorizacion), New ObjectParameter("pintidNivelAutorizacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of tblNivelAutorizacion)("usp_Maestros_NivelAutorizacion_ConsultarID", mergeOption, pintidNivelAutorizacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_NivelAutorizacion_Eliminar(pintidNivelAutorizacion As Nullable(Of Integer), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintidNivelAutorizacionParameter As ObjectParameter = If(pintidNivelAutorizacion.HasValue, New ObjectParameter("pintidNivelAutorizacion", pintidNivelAutorizacion), New ObjectParameter("pintidNivelAutorizacion", GetType(Integer)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_NivelAutorizacion_Eliminar", pintidNivelAutorizacionParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_NivelAutorizacion_Filtrar(pstrFiltro As String, pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblNivelAutorizacion)
        Dim pstrFiltroParameter As ObjectParameter = If(pstrFiltro IsNot Nothing, New ObjectParameter("pstrFiltro", pstrFiltro), New ObjectParameter("pstrFiltro", GetType(String)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblNivelAutorizacion)("usp_Maestros_NivelAutorizacion_Filtrar", pstrFiltroParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

    Public Overridable Function usp_Maestros_NivelAutorizacion_Validar(pintidNivelAutorizacion As Nullable(Of Integer), pintidSucursal As Nullable(Of Integer), pbitAplicaValorInversion As Nullable(Of Boolean), pnumRangoInicial As Nullable(Of Decimal), pnumRangoFinal As Nullable(Of Decimal), pintNumNivelAutorizacion As Nullable(Of Integer), plogSoloValidar As Nullable(Of Boolean), pstrUsuario As String, pstrInfosesion As String) As ObjectResult(Of CPX_tblValidacionesGenerales)
        Dim pintidNivelAutorizacionParameter As ObjectParameter = If(pintidNivelAutorizacion.HasValue, New ObjectParameter("pintidNivelAutorizacion", pintidNivelAutorizacion), New ObjectParameter("pintidNivelAutorizacion", GetType(Integer)))

        Dim pintidSucursalParameter As ObjectParameter = If(pintidSucursal.HasValue, New ObjectParameter("pintidSucursal", pintidSucursal), New ObjectParameter("pintidSucursal", GetType(Integer)))

        Dim pbitAplicaValorInversionParameter As ObjectParameter = If(pbitAplicaValorInversion.HasValue, New ObjectParameter("pbitAplicaValorInversion", pbitAplicaValorInversion), New ObjectParameter("pbitAplicaValorInversion", GetType(Boolean)))

        Dim pnumRangoInicialParameter As ObjectParameter = If(pnumRangoInicial.HasValue, New ObjectParameter("pnumRangoInicial", pnumRangoInicial), New ObjectParameter("pnumRangoInicial", GetType(Decimal)))

        Dim pnumRangoFinalParameter As ObjectParameter = If(pnumRangoFinal.HasValue, New ObjectParameter("pnumRangoFinal", pnumRangoFinal), New ObjectParameter("pnumRangoFinal", GetType(Decimal)))

        Dim pintNumNivelAutorizacionParameter As ObjectParameter = If(pintNumNivelAutorizacion.HasValue, New ObjectParameter("pintNumNivelAutorizacion", pintNumNivelAutorizacion), New ObjectParameter("pintNumNivelAutorizacion", GetType(Integer)))

        Dim plogSoloValidarParameter As ObjectParameter = If(plogSoloValidar.HasValue, New ObjectParameter("plogSoloValidar", plogSoloValidar), New ObjectParameter("plogSoloValidar", GetType(Boolean)))

        Dim pstrUsuarioParameter As ObjectParameter = If(pstrUsuario IsNot Nothing, New ObjectParameter("pstrUsuario", pstrUsuario), New ObjectParameter("pstrUsuario", GetType(String)))

        Dim pstrInfosesionParameter As ObjectParameter = If(pstrInfosesion IsNot Nothing, New ObjectParameter("pstrInfosesion", pstrInfosesion), New ObjectParameter("pstrInfosesion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CPX_tblValidacionesGenerales)("usp_Maestros_NivelAutorizacion_Validar", pintidNivelAutorizacionParameter, pintidSucursalParameter, pbitAplicaValorInversionParameter, pnumRangoInicialParameter, pnumRangoFinalParameter, pintNumNivelAutorizacionParameter, plogSoloValidarParameter, pstrUsuarioParameter, pstrInfosesionParameter)
    End Function

End Class

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYDPlus")>
Partial Public Class OyDPLUSOrdenesBolsaDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertBeneficiariosOrden(instance As OyDPLUSOrdenesBolsa.BeneficiariosOrden)
    End Sub
    Partial Private Sub UpdateBeneficiariosOrden(instance As OyDPLUSOrdenesBolsa.BeneficiariosOrden)
    End Sub
    Partial Private Sub DeleteBeneficiariosOrden(instance As OyDPLUSOrdenesBolsa.BeneficiariosOrden)
    End Sub
    Partial Private Sub InsertReceptoresOrden(instance As OyDPLUSOrdenesBolsa.ReceptoresOrden)
    End Sub
    Partial Private Sub UpdateReceptoresOrden(instance As OyDPLUSOrdenesBolsa.ReceptoresOrden)
    End Sub
    Partial Private Sub DeleteReceptoresOrden(instance As OyDPLUSOrdenesBolsa.ReceptoresOrden)
    End Sub
    Partial Private Sub InsertLiquidacionesOrden(instance As OyDPLUSOrdenesBolsa.LiquidacionesOrden)
    End Sub
    Partial Private Sub UpdateLiquidacionesOrden(instance As OyDPLUSOrdenesBolsa.LiquidacionesOrden)
    End Sub
    Partial Private Sub DeleteLiquidacionesOrden(instance As OyDPLUSOrdenesBolsa.LiquidacionesOrden)
    End Sub
    Partial Private Sub InsertOrdenSAE(instance As OyDPLUSOrdenesBolsa.OrdenSAE)
    End Sub
    Partial Private Sub UpdateOrdenSAE(instance As OyDPLUSOrdenesBolsa.OrdenSAE)
    End Sub
    Partial Private Sub DeleteOrdenSAE(instance As OyDPLUSOrdenesBolsa.OrdenSAE)
    End Sub
    Partial Private Sub InserttblMensajes(instance As OyDPLUSOrdenesBolsa.tblMensajes)
    End Sub
    Partial Private Sub UpdatetblMensajes(instance As OyDPLUSOrdenesBolsa.tblMensajes)
    End Sub
    Partial Private Sub DeletetblMensajes(instance As OyDPLUSOrdenesBolsa.tblMensajes)
    End Sub
    Partial Private Sub InsertOrdenModificable(instance As OyDPLUSOrdenesBolsa.OrdenModificable)
    End Sub
    Partial Private Sub UpdateOrdenModificable(instance As OyDPLUSOrdenesBolsa.OrdenModificable)
    End Sub
    Partial Private Sub DeleteOrdenModificable(instance As OyDPLUSOrdenesBolsa.OrdenModificable)
    End Sub
    Partial Private Sub InsertValidarFecha(instance As OyDPLUSOrdenesBolsa.ValidarFecha)
    End Sub
    Partial Private Sub UpdateValidarFecha(instance As OyDPLUSOrdenesBolsa.ValidarFecha)
    End Sub
    Partial Private Sub DeleteValidarFecha(instance As OyDPLUSOrdenesBolsa.ValidarFecha)
    End Sub
    Partial Private Sub InserttblRespuestaValidaciones(instance As OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
    End Sub
    Partial Private Sub UpdatetblRespuestaValidaciones(instance As OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
    End Sub
    Partial Private Sub DeletetblRespuestaValidaciones(instance As OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
    End Sub
    Partial Private Sub InsertOrdenSeteador(instance As OyDPLUSOrdenesBolsa.OrdenSeteador)
    End Sub
    Partial Private Sub UpdateOrdenSeteador(instance As OyDPLUSOrdenesBolsa.OrdenSeteador)
    End Sub
    Partial Private Sub DeleteOrdenSeteador(instance As OyDPLUSOrdenesBolsa.OrdenSeteador)
    End Sub
    Partial Private Sub DeleteOrdenOYDPLUS(instance As OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
    End Sub
    Partial Private Sub InsertMejorPrecioEspecieOrden(instance As OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden)
    End Sub
    Partial Private Sub UpdateMejorPrecioEspecieOrden(instance As OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden)
    End Sub
    Partial Private Sub DeleteMejorPrecioEspecieOrden(instance As OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden)
    End Sub
    Partial Private Sub InsertLiquidacion(instance As OyDPLUSOrdenesBolsa.Liquidacion)
    End Sub
    Partial Private Sub UpdateLiquidacion(instance As OyDPLUSOrdenesBolsa.Liquidacion)
    End Sub
    Partial Private Sub DeleteLiquidacion(instance As OyDPLUSOrdenesBolsa.Liquidacion)
    End Sub
    Partial Private Sub InsertEstadoFlujoOrden(instance As OyDPLUSOrdenesBolsa.EstadoFlujoOrden)
    End Sub
    Partial Private Sub UpdateEstadoFlujoOrden(instance As OyDPLUSOrdenesBolsa.EstadoFlujoOrden)
    End Sub
    Partial Private Sub DeleteEstadoFlujoOrden(instance As OyDPLUSOrdenesBolsa.EstadoFlujoOrden)
    End Sub
    Partial Private Sub InserttblReceptoresOrdenesPorCruzar(instance As OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar)
    End Sub
    Partial Private Sub UpdatetblReceptoresOrdenesPorCruzar(instance As OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar)
    End Sub
    Partial Private Sub DeletetblReceptoresOrdenesPorCruzar(instance As OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar)
    End Sub
    Partial Private Sub InserttblOrdenesCruzadas(instance As OyDPLUSOrdenesBolsa.tblOrdenesCruzadas)
    End Sub
    Partial Private Sub UpdatetblOrdenesCruzadas(instance As OyDPLUSOrdenesBolsa.tblOrdenesCruzadas)
    End Sub
    Partial Private Sub DeletetblOrdenesCruzadas(instance As OyDPLUSOrdenesBolsa.tblOrdenesCruzadas)
    End Sub
    Partial Private Sub InsertDatosPortafolioPPropia(instance As OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
    End Sub
    Partial Private Sub UpdateDatosPortafolioPPropia(instance As OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
    End Sub
    Partial Private Sub DeleteDatosPortafolioPPropia(instance As OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
    End Sub
    Partial Private Sub InsertCamposEditablesOrden(instance As OyDPLUSOrdenesBolsa.CamposEditablesOrden)
    End Sub
    Partial Private Sub UpdateCamposEditablesOrden(instance As OyDPLUSOrdenesBolsa.CamposEditablesOrden)
    End Sub
    Partial Private Sub DeleteCamposEditablesOrden(instance As OyDPLUSOrdenesBolsa.CamposEditablesOrden)
    End Sub
    Partial Private Sub InsertCargaMasivaCantidadProcesadas(instance As OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas)
    End Sub
    Partial Private Sub UpdateCargaMasivaCantidadProcesadas(instance As OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas)
    End Sub
    Partial Private Sub DeleteCargaMasivaCantidadProcesadas(instance As OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas)
    End Sub
    Partial Private Sub InsertOrdenOYDPLUS_Calculos(instance As OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos)
    End Sub
    Partial Private Sub UpdateOrdenOYDPLUS_Calculos(instance As OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos)
    End Sub
    Partial Private Sub DeleteOrdenOYDPLUS_Calculos(instance As OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos)
    End Sub
    Partial Private Sub InsertLiqAsociadasOrden(instance As OyDPLUSOrdenesBolsa.LiqAsociadasOrden)
    End Sub
    Partial Private Sub UpdateLiqAsociadasOrden(instance As OyDPLUSOrdenesBolsa.LiqAsociadasOrden)
    End Sub
    Partial Private Sub DeleteLiqAsociadasOrden(instance As OyDPLUSOrdenesBolsa.LiqAsociadasOrden)
    End Sub
    Partial Private Sub InsertOperacionesPPropia(instance As OyDPLUSOrdenesBolsa.OperacionesPPropia)
    End Sub
    Partial Private Sub UpdateOperacionesPPropia(instance As OyDPLUSOrdenesBolsa.OperacionesPPropia)
    End Sub
    Partial Private Sub DeleteOperacionesPPropia(instance As OyDPLUSOrdenesBolsa.OperacionesPPropia)
    End Sub
    Partial Private Sub InserttblSaldoOrdenSinCalzar(instance As OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar)
    End Sub
    Partial Private Sub UpdatetblSaldoOrdenSinCalzar(instance As OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar)
    End Sub
    Partial Private Sub DeletetblSaldoOrdenSinCalzar(instance As OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar)
    End Sub
    Partial Private Sub InsertEnrutamientoOrden(instance As OyDPLUSOrdenesBolsa.EnrutamientoOrden)
    End Sub
    Partial Private Sub UpdateEnrutamientoOrden(instance As OyDPLUSOrdenesBolsa.EnrutamientoOrden)
    End Sub
    Partial Private Sub DeleteEnrutamientoOrden(instance As OyDPLUSOrdenesBolsa.EnrutamientoOrden)
    End Sub
    Partial Private Sub InsertInstruccionesOrdene(instance As OyDPLUSOrdenesBolsa.InstruccionesOrdene)
    End Sub
    Partial Private Sub UpdateInstruccionesOrdene(instance As OyDPLUSOrdenesBolsa.InstruccionesOrdene)
    End Sub
    Partial Private Sub DeleteInstruccionesOrdene(instance As OyDPLUSOrdenesBolsa.InstruccionesOrdene)
    End Sub
    Partial Private Sub InsertCuentasClientes(instance As OyDPLUSOrdenesBolsa.CuentasClientes)
    End Sub
    Partial Private Sub UpdateCuentasClientes(instance As OyDPLUSOrdenesBolsa.CuentasClientes)
    End Sub
    Partial Private Sub DeleteCuentasClientes(instance As OyDPLUSOrdenesBolsa.CuentasClientes)
    End Sub
    Partial Private Sub InsertCombinacionesTipoLimite(instance As OyDPLUSOrdenesBolsa.CombinacionesTipoLimite)
    End Sub
    Partial Private Sub UpdateCombinacionesTipoLimite(instance As OyDPLUSOrdenesBolsa.CombinacionesTipoLimite)
    End Sub
    Partial Private Sub DeleteCombinacionesTipoLimite(instance As OyDPLUSOrdenesBolsa.CombinacionesTipoLimite)
    End Sub
    Partial Private Sub InsertRegistroOperacionesPorReceptor_Calculos(instance As OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos)
    End Sub
    Partial Private Sub UpdateRegistroOperacionesPorReceptor_Calculos(instance As OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos)
    End Sub
    Partial Private Sub DeleteRegistroOperacionesPorReceptor_Calculos(instance As OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property BeneficiariosOrdenes() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.BeneficiariosOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.BeneficiariosOrden)
        End Get
    End Property

    Public ReadOnly Property ReceptoresOrdenes() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.ReceptoresOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.ReceptoresOrden)
        End Get
    End Property

    Public ReadOnly Property LiquidacionesOrden() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.LiquidacionesOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.LiquidacionesOrden)
        End Get
    End Property

    Public ReadOnly Property OrdenSAE() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.OrdenSAE)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.OrdenSAE)
        End Get
    End Property

    Public ReadOnly Property tblMensajes() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.tblMensajes)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.tblMensajes)
        End Get
    End Property

    Public ReadOnly Property OrdenModificables() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.OrdenModificable)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.OrdenModificable)
        End Get
    End Property

    Public ReadOnly Property ValidarFecha() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.ValidarFecha)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.ValidarFecha)
        End Get
    End Property

    Public ReadOnly Property tblRespuestaValidaciones() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        End Get
    End Property

    Public ReadOnly Property OrdenSeteador() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.OrdenSeteador)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.OrdenSeteador)
        End Get
    End Property

    Public ReadOnly Property OrdenOYDPLUS() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        End Get
    End Property

    Public ReadOnly Property MejorPrecioEspecieOrden() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden)
        End Get
    End Property

    Public ReadOnly Property Liquidacions() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.Liquidacion)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.Liquidacion)
        End Get
    End Property

    Public ReadOnly Property EstadoFlujoOrden() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.EstadoFlujoOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.EstadoFlujoOrden)
        End Get
    End Property

    Public ReadOnly Property tblReceptoresOrdenesPorCruzar() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar)
        End Get
    End Property

    Public ReadOnly Property tblOrdenesCruzadas() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.tblOrdenesCruzadas)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.tblOrdenesCruzadas)
        End Get
    End Property

    Public ReadOnly Property DatosPortafolioPPropia() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
        End Get
    End Property

    Public ReadOnly Property RegistroOperacionesPorReceptor() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        End Get
    End Property

    Public ReadOnly Property CamposEditablesOrden() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.CamposEditablesOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.CamposEditablesOrden)
        End Get
    End Property

    Public ReadOnly Property CargaMasivaCantidadProcesadas() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas)
        End Get
    End Property

    Public ReadOnly Property OrdenOYDPLUS_Calculos() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos)
        End Get
    End Property

    Public ReadOnly Property LiqAsociadasOrdenes() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.LiqAsociadasOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.LiqAsociadasOrden)
        End Get
    End Property

    Public ReadOnly Property OperacionesPPropia() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.OperacionesPPropia)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.OperacionesPPropia)
        End Get
    End Property

    Public ReadOnly Property tblSaldoOrdenSinCalzar() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar)
        End Get
    End Property

    Public ReadOnly Property tblEnrutamientoOrden() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.EnrutamientoOrden)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.EnrutamientoOrden)
        End Get
    End Property

    Public ReadOnly Property InstruccionesOrdenes() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene)
        End Get
    End Property

    Public ReadOnly Property CuentasClientes() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.CuentasClientes)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.CuentasClientes)
        End Get
    End Property

    Public ReadOnly Property CombinacionesTipoLimite() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.CombinacionesTipoLimite)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.CombinacionesTipoLimite)
        End Get
    End Property

    Public ReadOnly Property RegistroOperacionesPorReceptor_Calculos() As System.Data.Linq.Table(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos)
        End Get
    End Property

    Private Sub InsertOrdenOYDPLUS(ByVal obj As OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        Me.uspOyDNet_OyDNet_ActualizarOrden(obj.IDNroOrden, obj.NroOrden)
    End Sub

    Private Sub UpdateOrdenOYDPLUS(ByVal obj As OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        Me.uspOyDNet_OyDNet_ActualizarOrden(obj.IDNroOrden, obj.NroOrden)
    End Sub

    Private Sub InsertRegistroOperacionesPorReceptor(ByVal obj As OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        Dim p1 As System.Nullable(Of Integer) = obj.IdOperacion
        Me.uspOyDNet_RegistroOperacionesPorReceptor_Actualizar(p1, obj.ReceptorA, obj.TipoProducto, obj.Clase, obj.TipoOperacion, obj.ReceptorB, obj.IdCliente, obj.IdEspecie, obj.Isin, obj.Emision, obj.Vencimiento, obj.IdOrdenante, obj.CuentaDeposito, obj.UbicacionTitulo, obj.TasaFacial, obj.Modalidad, obj.Indicador, obj.PuntosIndicador, obj.Cantidad, obj.ValorNominal, obj.ValorGiro, obj.ValorGiro2, obj.ValorGiroContraparte, obj.ComisionVenta, obj.ComisionCompra, obj.Tasa, obj.AcumCupon, obj.PrecioSucio, obj.Observaciones, CType(obj.TrasladoEnDinero, System.Nullable(Of Boolean)), obj.Usuario, obj.FechaLiquidacion, obj.FechaCumplimiento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.FechaRegreso, obj.Plazo)
        obj.IdOperacion = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateRegistroOperacionesPorReceptor(ByVal obj As OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        Dim p1 As System.Nullable(Of Integer) = obj.IdOperacion
        Me.uspOyDNet_RegistroOperacionesPorReceptor_Actualizar(p1, obj.ReceptorA, obj.TipoProducto, obj.Clase, obj.TipoOperacion, obj.ReceptorB, obj.IdCliente, obj.IdEspecie, obj.Isin, obj.Emision, obj.Vencimiento, obj.IdOrdenante, obj.CuentaDeposito, obj.UbicacionTitulo, obj.TasaFacial, obj.Modalidad, obj.Indicador, obj.PuntosIndicador, obj.Cantidad, obj.ValorNominal, obj.ValorGiro, obj.ValorGiro2, obj.ValorGiroContraparte, obj.ComisionVenta, obj.ComisionCompra, obj.Tasa, obj.AcumCupon, obj.PrecioSucio, obj.Observaciones, CType(obj.TrasladoEnDinero, System.Nullable(Of Boolean)), obj.Usuario, obj.FechaLiquidacion, obj.FechaCumplimiento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.FechaRegreso, obj.Plazo)
        obj.IdOperacion = p1.GetValueOrDefault
    End Sub

    Private Sub DeleteRegistroOperacionesPorReceptor(ByVal obj As OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        Me.uspOyDNet_RegistroOperacionesPorReceptor_Eliminar(CType(obj.IdOperacion, System.Nullable(Of Integer)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_VerificarEstadoOrden_Consultar")>
    Public Function uspOyDNet_Ordenes_VerificarEstadoOrden_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenModificable)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClase, pstrTipo, plngID, plngVersion, pstrModulo, pstrAccion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenModificable))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_BeneficiariosOrdenes_Consultar")>
    Public Function uspOyDNet_Ordenes_BeneficiariosOrdenes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.BeneficiariosOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClaseOrden, pstrTipoOrden, pintNroOrden, pintVersion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.BeneficiariosOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_ReceptoresOrdenes_Consultar")>
    Public Function uspOyDNet_Ordenes_ReceptoresOrdenes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal pstrEstadoMakerChecker As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.ReceptoresOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClaseOrden, pstrTipoOrden, pintNroOrden, pintVersion, pstrUsuario, pstrEstadoMakerChecker, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.ReceptoresOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_ReceptoresCliente_Consultar")>
    Public Function uspOyDNet_Ordenes_ReceptoresCliente_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.ReceptoresOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClaseOrden, pstrTipoOrden, pstrIDComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.ReceptoresOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_VerificarDiaHabil")>
    Public Function uspOyDNet_Ordenes_VerificarDiaHabil(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFecha As System.Nullable(Of Date)) As ISingleResult(Of OyDPLUSOrdenesBolsa.ValidarFecha)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFecha)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.ValidarFecha))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_CalcularDiasOrden")>
    Public Function uspOyDNet_Ordenes_CalcularDiasOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrTipoCalculo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaInicial As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaFinal As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroDias As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.ValidarFecha)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoCalculo, pdtmFechaInicial, pdtmFechaFinal, pintNroDias, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.ValidarFecha))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_Ordenes_LiquidacionesAsociadas")>
    Public Function uspOyDNet_Ordenes_Ordenes_LiquidacionesAsociadas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintNroOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.LiquidacionesOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClase, pstrTipo, pintNroOrden, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.LiquidacionesOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ValidarOrden")>
    Public Function uspOyDNet_ValidarOrden(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDOrden As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrBolsa As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrReceptor As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoOrden As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoNegocio As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoProducto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmOrden As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrEstadoOrden As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrEstadoLEO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrClasificacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoLimite As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrDuracion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVigencia As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pstrHoraVigencia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasVigencia As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCondicionesNegociacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrFormaPago As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoInversion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrEjecucion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrMercado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDOrdenante As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrUBICACIONTITULO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCuentaDeposito As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrUsuarioOperador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCanalRecepcion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrMedioVerificable As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaHoraRecepcion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrNroExtensionToma As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(12)")> ByVal pstrISIN As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEstandarizada As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCumplimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaFacial As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPuntosIndicador As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEnPesos As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioMaximoMinimo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorCaptacionGiro As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorFuturoRepo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaRegistro As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaCliente As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaNominal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCastigo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorAccion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorOrden As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasRepo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintProductoValores As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCostosAdicionales As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(255)")> ByVal pstrInstrucciones As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(255)")> ByVal pstrNotas As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByVal pstrReceptoresXML As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByVal pstrLiquidacionesAsociadasXML As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrPagosOrdenesXML As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByVal pstrInstruccionesOrdenesXML As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByVal pstrComisionesOrdenesXML As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrConfirmaciones As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrConfirmacionesUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrJustificaciones As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrJustificacionUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrAprobaciones As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrAprobacionesUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCustodia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintSecuenciaCustodia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasCumplimiento As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrRuedaNegocio As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioLimpio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrEstadoTitulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblIvaComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorFuturoCliente As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByVal pstrReceptoresCruzadasXML As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogOrdenCruzada As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogOrdenCruzadaCliente As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogOrdenCruzadaReceptor As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrdenOriginal As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogGuardarComoPlantilla As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombrePlantilla As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrBrokenTrader As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrEntidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrEstrategia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuarioWindows As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaConstancia As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorConstancia As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitenteADR As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrReceptorToma As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaSalida As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoGarantia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEliminarAsociacion As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrExistePreacuerdo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrVendeTodo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogExentoRetencion As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentajePagoEfectivo As System.Nullable(Of Double)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrden, plngID, pstrBolsa, pstrReceptor, pstrTipoOrden, pstrTipoNegocio, pstrTipoProducto, pstrTipoOperacion, pstrClase, pdtmOrden, pstrEstadoOrden, pstrEstadoLEO, pstrClasificacion, pstrTipoLimite, pstrDuracion, pdtmFechaVigencia, pstrHoraVigencia, pintDiasVigencia, pstrCondicionesNegociacion, pstrFormaPago, pstrTipoInversion, pstrEjecucion, pstrMercado, pstrIDComitente, pstrIDOrdenante, pstrUBICACIONTITULO, pintCuentaDeposito, pstrUsuarioOperador, pstrCanalRecepcion, pstrMedioVerificable, pdtmFechaHoraRecepcion, pstrNroExtensionToma, pstrEspecie, pstrISIN, pdtmFechaEmision, pdtmFechaVencimiento, plogEstandarizada, pdtmFechaCumplimiento, pdblTasaFacial, pstrModalidad, pstrIndicador, pdblPuntosIndicador, plogEnPesos, pdblCantidad, pdblPrecio, pdblPrecioMaximoMinimo, pdblValorCaptacionGiro, pdblValorFuturoRepo, pdblTasaRegistro, pdblTasaCliente, pdblTasaNominal, pdblCastigo, pdblComision, pdblValorComision, pdblValorAccion, pdblValorOrden, pintDiasRepo, pintProductoValores, pdblCostosAdicionales, pstrInstrucciones, pstrNotas, pstrReceptoresXML, pstrLiquidacionesAsociadasXML, pstrPagosOrdenesXML, pstrInstruccionesOrdenesXML, pstrComisionesOrdenesXML, pstrConfirmaciones, pstrConfirmacionesUsuario, pstrJustificaciones, pstrJustificacionUsuario, pstrAprobaciones, pstrAprobacionesUsuario, pintCustodia, pintSecuenciaCustodia, pintDiasCumplimiento, pstrRuedaNegocio, pdblPrecioLimpio, pstrEstadoTitulo, pdblIvaComision, pdblValorFuturoCliente, pstrReceptoresCruzadasXML, plogOrdenCruzada, plogOrdenCruzadaCliente, plogOrdenCruzadaReceptor, pintIDOrdenOriginal, pstrMaquina, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogGuardarComoPlantilla, pstrNombrePlantilla, pstrBrokenTrader, pstrEntidad, pstrEstrategia, pstrUsuarioWindows, pdtmFechaConstancia, pdblValorConstancia, plngIDComitenteADR, pstrReceptorToma, pdtmFechaSalida, pstrTipoGarantia, plogEliminarAsociacion, pstrExistePreacuerdo, pstrVendeTodo, plogExentoRetencion, pdblPorcentajePagoEfectivo)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_OyDNet_ActualizarOrden")>
    Public Function uspOyDNet_OyDNet_ActualizarOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrden, plngID)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarOrden")>
    Public Function uspOyDNet_ConsultarOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintVersion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrEstadoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmOrden As System.Nullable(Of DateTime)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrModulo, pstrEstado, pintNroOrden, pintVersion, pstrEstadoOrden, pstrReceptor, pstrTipoOrden, pstrTipoNegocio, pstrTipoOperacion, pstrTipoProducto, pstrIDComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pdtmOrden)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_FiltrarOrden")>
    Public Function uspOyDNet_FiltrarOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrEstado, pstrFiltro, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_Ordenes_Seteador")>
    Public Function uspOyDNet_Ordenes_Seteador(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintFolderVisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSeteador)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pintFolderVisor, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSeteador))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_OrdenesSeteadorEstado_Actualizar")>
    Public Function uspOyDNet_OrdenesSeteadorEstado_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrdenes As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrEstado As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstadoLEO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrEstadoVisor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintFolderVisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT")> ByVal bitError As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSeteador)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrdenes, pstrUsuario, pstrEstado, pstrEstadoLEO, pstrEstadoVisor, pintFolderVisor, bitError, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSeteador))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_LiquidacionesProbables_Ingresar")>
    Public Function uspOyDNet_LiquidacionesProbables_Ingresar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(MAX)")> ByVal pxmlLiquidaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pxmlLiquidaciones, plngIDOrden, pdtmLiquidacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_OrdenesSeteador_Borrar")>
    Public Function uspOyDNet_OrdenesSeteador_Borrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrdenes As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintFolderVisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrObservaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSeteador)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrdenes, plngID, pstrUsuario, pintFolderVisor, pstrObservaciones, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSeteador))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_Ordenes_Obtener_Datos_Visor_Seteador_Campos_Modificados")>
    Public Function uspOyDNet_Ordenes_Obtener_Datos_Visor_Seteador_Campos_Modificados(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblMensajes)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblMensajes))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarOrdenesLiquidacionesDisponibles")>
    Public Function uspOyDNet_ConsultarOrdenesLiquidacionesDisponibles(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIdReceptorToma As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.Liquidacion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIdOrden, pstrIdReceptorToma, pstrTipoNegocio, pstrTipo, pstrEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.Liquidacion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_AnularOrdenes")>
    Public Function uspOyDNet_AnularOrdenOYDPLUS(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(250)")> ByVal pstrInstrucciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(250)")> ByVal pstrNotas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEsOYDPLUS As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSAE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClase, pstrTipo, plngID, plngVersion, pstrInstrucciones, pstrNotas, plogEsOYDPLUS, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSAE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarMejorPrecioEspecie")>
    Public Function uspOyDNet_ConsultarMejorPrecioEspecie(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrTipoNegocio As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoOperacion, pstrIDEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.MejorPrecioEspecieOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_Ordenes_Seteador_Obtener_Lista_Por_Topico")>
    Public Function uspOyDNet_Ordenes_Seteador_Obtener_Lista_Por_Topico(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblMensajes)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTopico, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblMensajes))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CancelarEdicionOrden")>
    Public Function uspOyDNet_CancelarEdicionOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_VerificarDisponibilidadOrden")>
    Public Function uspOyDNet_VerificarDisponibilidadOrden(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDDocumento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.EstadoFlujoOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDDocumento, pstrEstado, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.EstadoFlujoOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_Ordenes_EnrutarOrdenSAE_Desde_Seteador")>
    Public Function uspOyDNet_Ordenes_EnrutarOrdenSAE_Desde_Seteador(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogAnularOrden As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSAE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClase, pstrTipo, plngIDOrden, plogAnularOrden, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSAE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_LiquidacionesProbables_Calce_Automatico")>
    Public Function uspOyDNet_LiquidacionesProbables_Calce_Automatico(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.Liquidacion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.Liquidacion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarReceptoresOrdenesPorCruzar")>
    Public Function uspOyDNet_ConsultarReceptoresOrdenesPorCruzar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogPorAprobar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrden, plogPorAprobar, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblReceptoresOrdenesPorCruzar))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarOrdenesCruzadas")>
    Public Function uspOyDNet_ConsultarOrdenesCruzadas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogOrdenOriginal As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogValidarCambioReceptor As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrReceptorId As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblOrdenesCruzadas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrden, plogOrdenOriginal, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogValidarCambioReceptor, pstrReceptorId)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblOrdenesCruzadas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ValidarExistenciaOrdenesCruzadas")>
    Public Function uspOyDNet_ValidarExistenciaOrdenesCruzadas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuarioConsulta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuarioConsulta, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_PortafolioPosicionPropiaConsultar")>
    Public Function uspOyDNet_PortafolioPosicionPropiaConsultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTodoslosClientes As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIDCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogDiaActual As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFecha As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pstrTipoProducto, plogTodoslosClientes, pstrIDCliente, plogDiaActual, pdtmFecha, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.DatosPortafolioPPropia))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_PortafolioRentabilidadConsultar")>
    Public Function uspOyDNet_PortafolioRentabilidadConsultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdEmisor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdMesa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogIncluirFechas As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaInicial As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaFinal As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.DatosPortafolioPPropia)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pintIdEmisor, pintIdMesa, pstrEspecie, plogIncluirFechas, pdtmFechaInicial, pdtmFechaFinal, pstrTipoProducto, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.DatosPortafolioPPropia))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_RegistroOperacionesPorReceptor_Filtrar")>
    Public Function uspOyDNet_RegistroOperacionesPorReceptor_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTrasladoEnDinero As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, plogTrasladoEnDinero, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_RegistroOperacionesPorReceptor_Consultar")>
    Public Function uspOyDNet_RegistroOperacionesPorReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdOperacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrTipoOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrReceptorA As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrReceptorB As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTrasladoEnDinero As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaLiquidacion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCumplimiento As System.Nullable(Of System.DateTime)) As ISingleResult(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdOperacion, pstrClase, pstrTipoOperacion, pstrReceptorA, pstrReceptorB, pstrIdEspecie, plogTrasladoEnDinero, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pdtmFechaLiquidacion, pdtmFechaCumplimiento)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_RegistroOperacionesPorReceptor_Actualizar")>
    Public Function uspOyDNet_RegistroOperacionesPorReceptor_Actualizar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute()> ByRef pintIdOperacion As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrReceptorA As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrReceptorB As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdCliente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(12)")> ByVal pstrIsin As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdOrdenante As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute()> ByVal pintCuentaDeposito As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrUbicacionTitulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaFacial As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPuntosIndicador As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorNominal As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorGiro As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorGiro2 As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorGiroContraparte As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComisionVenta As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComisionCompra As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasa As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblAcumCupon As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioSucio As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrObservaciones As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTrasladoEnDinero As System.Nullable(Of System.Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80) ")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCumplimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaRegreso As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintPlazo As System.Nullable(Of System.Int32)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdOperacion, pstrReceptorA, pstrTipoProducto, pstrClase, pstrTipoOperacion, pstrReceptorB, plngIdCliente, pstrIdEspecie, pstrIsin, pdtmEmision, pdtmVencimiento, plngIdOrdenante, pintCuentaDeposito, pstrUbicacionTitulo, pdblTasaFacial, pstrModalidad, pstrIndicador, pdblPuntosIndicador, pdblCantidad, pdblValorNominal, pdblValorGiro, pdblValorGiro2, pdblValorGiroContraparte, pdblComisionVenta, pdblComisionCompra, pdblTasa, pdblAcumCupon, pdblPrecioSucio, pstrObservaciones, plogTrasladoEnDinero, pstrUsuario, pdtmLiquidacion, pdtmCumplimiento, pstrInfosesion, pintErrorPersonalizado, pdtmFechaRegreso, pintPlazo)
        pintIdOperacion = CType(result.GetParameterValue(0), System.Nullable(Of System.Int32))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_RegistroOperacionesPorReceptor_Eliminar")>
    Public Function uspOyDNet_RegistroOperacionesPorReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute()> ByVal pintIdOperacion As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80) ")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdOperacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_OrdenesPlantillas_Eliminar")>
    Public Function uspOyDNet_OrdenesPlantillas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max)")> ByVal pstrIDEliminar As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDEliminar, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_OrdenesPlantillas_Consultar")>
    Public Function uspOyDNet_OrdenesPlantillas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_OrdenesPlantillas_VerificarNombre")>
    Public Function uspOyDNet_OrdenesPlantillas_VerificarNombre(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrNombrePlantilla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogPuedeCrearNombre As System.Nullable(Of Boolean)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNombrePlantilla, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogPuedeCrearNombre)
        plogPuedeCrearNombre = CType(result.GetParameterValue(5), System.Nullable(Of Boolean))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_Ordenes_Autorizar")>
    Public Function uspOyDNet_Ordenes_Ordenes_Autorizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAprobar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintClasificacionRiesgoEspecie As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPerfilInversionista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSAE)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClase, pstrTipo, plngID, plngVersion, plogAprobar, pintClasificacionRiesgoEspecie, pintPerfilInversionista, pintIDOrden, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintIDOrden = CType(result.GetParameterValue(7), Integer)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenSAE))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_CargaMasivaOrdenes_ValidarDatosOrden")>
    Public Function uspOyDNet_CargaMasivaOrdenes_ValidarDatosOrden(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrReceptor As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoOrden As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoNegocio As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrClasificacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoLimite As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrDuracion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVigencia As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pstrHoraVigencia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasVigencia As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCondicionesNegociacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrFormaPago As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoInversion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrEjecucion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrMercado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrUBICACIONTITULO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCuentaDeposito As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrUsuarioOperador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCanalRecepcion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrMedioVerificable As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaHoraRecepcion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrNroExtensionToma As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrBrokenTrader As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrEntidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrEstrategia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(12)")> ByVal pstrISIN As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaFacial As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPuntosIndicador As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEnPesos As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioMaximoMinimo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorCaptacionGiro As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaRegistro As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaCliente As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCastigo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorAccion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCumplimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(255)")> ByVal pstrInstrucciones As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(255)")> ByVal pstrNotas As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintProductoValores As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCostosAdicionales As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuarioWindows As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDComitenteADR As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogComplementacionPrecioPromedio As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrLiquidaciones As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrTipoOrden, pstrTipoNegocio, pstrTipoOperacion, pstrClasificacion, pstrTipoLimite, pstrDuracion, pdtmFechaVigencia, pstrHoraVigencia, pintDiasVigencia, pstrCondicionesNegociacion, pstrFormaPago, pstrTipoInversion, pstrEjecucion, pstrMercado, pstrIDComitente, pstrUBICACIONTITULO, pintCuentaDeposito, pstrUsuarioOperador, pstrCanalRecepcion, pstrMedioVerificable, pdtmFechaHoraRecepcion, pstrNroExtensionToma, pstrBrokenTrader, pstrEntidad, pstrEstrategia, pstrEspecie, pstrISIN, pdtmFechaEmision, pdtmFechaVencimiento, pdblTasaFacial, pstrModalidad, pstrIndicador, pdblPuntosIndicador, plogEnPesos, pdblCantidad, pdblPrecio, pdblPrecioMaximoMinimo, pdblValorCaptacionGiro, pdblTasaRegistro, pdblTasaCliente, pdblCastigo, pdblValorAccion, pdblComision, pdblValorComision, pdtmFechaCumplimiento, pstrInstrucciones, pstrNotas, pintProductoValores, pdblCostosAdicionales, pstrUsuario, pstrUsuarioWindows, pstrMaquina, pstrInfosesion, pintErrorPersonalizado, pstrIDComitenteADR, plogComplementacionPrecioPromedio, pstrLiquidaciones)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_CargaMasivaOrdenes_ConsultarResultados")>
    Public Function uspOyDNet_CargaMasivaOrdenes_ConsultarResultados(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuarioWindows As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrUsuarioWindows, pstrMaquina, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_CargaMasivaOrdenes_Confirmar")>
    Public Function uspOyDNet_CargaMasivaOrdenes_Confirmar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuarioWindows As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrConfirmaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrConfirmacionesUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrJustificaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrJustificacionUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrAprobaciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrAprobacionesUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrUsuarioWindows, pstrMaquina, pstrConfirmaciones, pstrConfirmacionesUsuario, pstrJustificaciones, pstrJustificacionUsuario, pstrAprobaciones, pstrAprobacionesUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblRespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_CargaMasivaOrdenes_ValidarHabilitarCampos")>
    Public Function uspOyDNet_CargaMasivaOrdenes_ValidarHabilitarCampos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.CamposEditablesOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrMaquina, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.CamposEditablesOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_CargaMasivaOrdenes_ConsultarCantidadProcesados")>
    Public Function uspOyDNet_CargaMasivaOrdenes_ConsultarCantidadProcesados(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuarioWindows As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrUsuarioWindows, pstrMaquina, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.CargaMasivaCantidadProcesadas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_CalcularValorOrden")>
    Public Function uspOyDNet_CalcularValorOrden(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(30)")> ByVal pstrTipoCalculo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrReceptor As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoOrden As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoNegocio As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoProducto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(1)")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmOrden As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrClasificacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoLimite As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrDuracion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVigencia As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pstrHoraVigencia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasVigencia As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCondicionesNegociacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrFormaPago As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrTipoInversion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrEjecucion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrMercado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal pstrIDOrdenante As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrUBICACIONTITULO As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCuentaDeposito As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrUsuarioOperador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCanalRecepcion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrMedioVerificable As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaHoraRecepcion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrNroExtensionToma As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(12)")> ByVal pstrISIN As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEstandarizada As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCumplimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaFacial As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPuntosIndicador As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEnPesos As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecio As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecioMaximoMinimo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorCaptacionGiro As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorFuturoRepo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaRegistro As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaCliente As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaNominal As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCastigo As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorAccion As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorOrden As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasRepo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintProductoValores As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCostosAdicionales As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiasCumplimiento As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblIvaComision As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorFuturoCliente As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal pstrBrokenTrader As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrEntidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrEstrategia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuarioWindows As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaConstancia As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorConstancia As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitenteADR As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrReceptorToma As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrMaquina As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaSalida As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoGarantia As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoCalculo, pstrReceptor, pstrTipoOrden, pstrTipoNegocio, pstrTipoProducto, pstrTipoOperacion, pstrClase, pdtmOrden, pstrClasificacion, pstrTipoLimite, pstrDuracion, pdtmFechaVigencia, pstrHoraVigencia, pintDiasVigencia, pstrCondicionesNegociacion, pstrFormaPago, pstrTipoInversion, pstrEjecucion, pstrMercado, pstrIDComitente, pstrIDOrdenante, pstrUBICACIONTITULO, pintCuentaDeposito, pstrUsuarioOperador, pstrCanalRecepcion, pstrMedioVerificable, pdtmFechaHoraRecepcion, pstrNroExtensionToma, pstrEspecie, pstrISIN, pdtmFechaEmision, pdtmFechaVencimiento, plogEstandarizada, pdtmFechaCumplimiento, pdblTasaFacial, pstrModalidad, pstrIndicador, pdblPuntosIndicador, plogEnPesos, pdblCantidad, pdblPrecio, pdblPrecioMaximoMinimo, pdblValorCaptacionGiro, pdblValorFuturoRepo, pdblTasaRegistro, pdblTasaCliente, pdblTasaNominal, pdblCastigo, pdblComision, pdblValorComision, pdblValorAccion, pdblValorOrden, pintDiasRepo, pintProductoValores, pdblCostosAdicionales, pintDiasCumplimiento, pdblIvaComision, pdblValorFuturoCliente, pstrBrokenTrader, pstrEntidad, pstrEstrategia, pstrUsuarioWindows, pdtmFechaConstancia, pdblValorConstancia, plngIDComitenteADR, pstrReceptorToma, pstrMaquina, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pdtmFechaSalida, pstrTipoGarantia)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OrdenOYDPLUS_Calculos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_OrdenesLiqAsociadas_Consultar")>
    Public Function uspOyDNet_Ordenes_OrdenesLiqAsociadas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClaseOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNroOrden As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintVersion As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByVal pstrEstadoMakerChecker As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.LiqAsociadasOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrClaseOrden, pstrTipoOrden, pintNroOrden, pintVersion, pstrEstadoMakerChecker, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.LiqAsociadasOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_PortafolioPosicionPropiaConsultar")>
    Public Function uspOyDNet_PortafolioPosicionPropiaConsultarOperaciones(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIDReceptor As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogTodoslosClientes As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIDCliente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogDiaActual As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFecha As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogConsultarOperaciones As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrEspecieOperacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaOpuntos As System.Nullable(Of System.Double)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OperacionesPPropia)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pstrTipoProducto, plogTodoslosClientes, pstrIDCliente, plogDiaActual, pdtmFecha, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogConsultarOperaciones, pstrEspecieOperacion, pdtmFechaEmision, pdtmFechaVencimiento, pstrModalidad, pstrIndicador, pdblTasaOpuntos)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OperacionesPPropia))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_PortafolioRentabilidadConsultar")>
    Public Function uspOyDNet_PortafolioRentabilidadConsultarOperaciones(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIDReceptor As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdEmisor As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdMesa As Integer,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogIncluirFechas As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaInicial As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaFinal As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogConsultarOperaciones As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaOpuntos As System.Nullable(Of System.Double)) As ISingleResult(Of OyDPLUSOrdenesBolsa.OperacionesPPropia)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pintIdEmisor, pintIdMesa, pstrEspecie, plogIncluirFechas, pdtmFechaInicial, pdtmFechaFinal, pstrTipoProducto, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogConsultarOperaciones, pdtmFechaEmision, pdtmFechaVencimiento, pstrModalidad, pstrIndicador, pdblTasaOpuntos)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.OperacionesPPropia))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarPorcentajeGarantia")>
    Public Function uspOyDNet_ConsultarPorcentajeGarantia(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblPorcentajeGarantia As System.Nullable(Of Double)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pdblPorcentajeGarantia)
        pdblPorcentajeGarantia = CType(result.GetParameterValue(5), System.Nullable(Of Double))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarSaldoOrdenSAE")>
    Public Function uspOyDNet_ConsultarSaldoOrdenSAE(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrden, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.tblSaldoOrdenSinCalzar))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_EliminarAsociacionOrdenLiqProbables")>
    Public Function uspOyDNet_EliminarAsociacionOrdenLiqProbables(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByRef plogElimino As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, plogElimino, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        plogElimino = CType(result.GetParameterValue(1), System.Nullable(Of Boolean))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarEnrutamientoOrdenSAE")>
    Public Function uspOyDNet_ConsultarEnrutamientoOrdenSAE(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDOrden As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.EnrutamientoOrden)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDOrden, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.EnrutamientoOrden))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_InstruccionesOrdenes_Consultar")>
    Public Function uspOyDNet_Ordenes_InstruccionesOrdenes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngVersion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByVal pstrEstadoMakerChecker As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipo, pstrClase, plngID, plngVersion, pstrEstadoMakerChecker, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_InstruccionesClientes_Consultar")>
    Public Function uspOyDNet_InstruccionesClientes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIdComitente, pstrTopico, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOrdenes_ConsultarInstruccionesAcciones_OyDNet")>
    Public Function uspOrdenes_ConsultarInstruccionesAcciones_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTopico, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.InstruccionesOrdene))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Ordenes_CuentasClientes_Consultar")>
    Public Function uspOyDNet_Ordenes_CuentasClientes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIdComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OyDPLUSOrdenesBolsa.CuentasClientes)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIdComitente, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.CuentasClientes))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sptblOrdenes_ClaseEspecie_Consultar")>
    Public Function sptblOrdenes_ClaseEspecie_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNemotecnico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByRef plogEncontro As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNemotecnico, plogEncontro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        plogEncontro = CType(result.GetParameterValue(1), System.Nullable(Of Boolean))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspCombinacionesTipoLimite_Consultar")>
    Public Function uspCombinacionesTipoLimite_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="tinyint")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.CombinacionesTipoLimite)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.CombinacionesTipoLimite))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_RegistroOperacionesPorReceptor_Calcular")>
    Public Function uspOyDNet_RegistroOperacionesPorReceptor_Calcular(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrTipoNegocio As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaLiquidacion As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaCumplimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrISIN As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblTasaFacial As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPuntosIndicador As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblNominal As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPrecio As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorGiro As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorGiro2 As System.Nullable(Of System.Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrIDComitente, pdtmFechaLiquidacion, pdtmFechaCumplimiento, pstrEspecie, pstrISIN, pdtmFechaEmision, pdtmFechaVencimiento, pdblTasaFacial, pstrModalidad, pstrIndicador, pdblPuntosIndicador, pdblNominal, pdblPrecio, pdblValorGiro, pdblValorGiro2, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenesBolsa.RegistroOperacionesPorReceptor_Calculos))
    End Function
End Class

Namespace OyDPLUSOrdenesBolsa

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBeneficiariosOrdenes")>
    Partial Public Class BeneficiariosOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _TipoOrden As String

        Private _ClaseOrden As String

        Private _NroOrden As Integer

        Private _Version As Integer

        Private _Secuencia As String

        Private _NroDocumento As System.Nullable(Of Decimal)

        Private _Conector As String

        Private _IDBeneficiariosOrdenes As Integer

        Private _TipoIdentificacion As String

        Private _Deposito As String

        Private _NombreDeposito As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnClaseOrdenChanged()
        End Sub
        Partial Private Sub OnNroOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroOrdenChanged()
        End Sub
        Partial Private Sub OnVersionChanging(value As Integer)
        End Sub
        Partial Private Sub OnVersionChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnNroDocumentoChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnNroDocumentoChanged()
        End Sub
        Partial Private Sub OnConectorChanging(value As String)
        End Sub
        Partial Private Sub OnConectorChanged()
        End Sub
        Partial Private Sub OnIDBeneficiarioOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDBeneficiarioOrdenChanged()
        End Sub
        Partial Private Sub OnTipoIdentificacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdentificacionChanged()
        End Sub
        Partial Private Sub OnDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnDepositoChanged()
        End Sub
        Partial Private Sub OnNombreDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreDepositoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=False)>
        Public Property TipoOrden() As String
            Get
                Return Me._TipoOrden
            End Get
            Set
                If (String.Equals(Me._TipoOrden, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrden = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=False)>
        Public Property ClaseOrden() As String
            Get
                Return Me._ClaseOrden
            End Get
            Set
                If (String.Equals(Me._ClaseOrden, Value) = False) Then
                    Me.OnClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClaseOrden = Value
                    Me.SendPropertyChanged("ClaseOrden")
                    Me.OnClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_NroOrden", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property NroOrden() As Integer
            Get
                Return Me._NroOrden
            End Get
            Set
                If (Object.Equals(Me._NroOrden, Value) = False) Then
                    Me.OnNroOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOrden = Value
                    Me.SendPropertyChanged("NroOrden")
                    Me.OnNroOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Version() As Integer
            Get
                Return Me._Version
            End Get
            Set
                If (Object.Equals(Me._Version, Value) = False) Then
                    Me.OnVersionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Version = Value
                    Me.SendPropertyChanged("Version")
                    Me.OnVersionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Secuencia", DbType:="Varchar(50)")>
        Public Property Nombre() As String
            Get
                Return Me._Secuencia
            End Get
            Set
                If (String.Equals(Me._Secuencia, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Secuencia = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNroDocumento", Storage:="_NroDocumento", DbType:="Numeric NOT NULL")>
        Public Property NroDocumento() As System.Nullable(Of Decimal)
            Get
                Return Me._NroDocumento
            End Get
            Set
                If (Me._NroDocumento.Equals(Value) = False) Then
                    Me.OnNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumento = Value
                    Me.SendPropertyChanged("NroDocumento")
                    Me.OnNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConector", Storage:="_Conector", DbType:="Varchar(3)")>
        Public Property Conector() As String
            Get
                Return Me._Conector
            End Get
            Set
                If (String.Equals(Me._Conector, Value) = False) Then
                    Me.OnConectorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Conector = Value
                    Me.SendPropertyChanged("Conector")
                    Me.OnConectorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBeneficiarioOrden", Storage:="_IDBeneficiariosOrdenes", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDBeneficiarioOrden() As Integer
            Get
                Return Me._IDBeneficiariosOrdenes
            End Get
            Set
                If (Object.Equals(Me._IDBeneficiariosOrdenes, Value) = False) Then
                    Me.OnIDBeneficiarioOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDBeneficiariosOrdenes = Value
                    Me.SendPropertyChanged("IDBeneficiarioOrden")
                    Me.OnIDBeneficiarioOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(2)")>
        Public Property TipoIdentificacion() As String
            Get
                Return Me._TipoIdentificacion
            End Get
            Set
                If (String.Equals(Me._TipoIdentificacion, Value) = False) Then
                    Me.OnTipoIdentificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdentificacion = Value
                    Me.SendPropertyChanged("TipoIdentificacion")
                    Me.OnTipoIdentificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodDeposito", Storage:="_Deposito", DbType:="Varchar(2)", CanBeNull:=False)>
        Public Property Deposito() As String
            Get
                Return Me._Deposito
            End Get
            Set
                If (String.Equals(Me._Deposito, Value) = False) Then
                    Me.OnDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Deposito = Value
                    Me.SendPropertyChanged("Deposito")
                    Me.OnDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDeposito", Storage:="_NombreDeposito", DbType:="Varchar(50)", CanBeNull:=False)>
        Public Property NombreDeposito() As String
            Get
                Return Me._NombreDeposito
            End Get
            Set
                If (String.Equals(Me._NombreDeposito, Value) = False) Then
                    Me.OnNombreDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreDeposito = Value
                    Me.SendPropertyChanged("NombreDeposito")
                    Me.OnNombreDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresOrdenes")>
    Partial Public Class ReceptoresOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDComisionista As Integer

        Private _IDSucComisionista As Integer

        Private _TipoOrden As String

        Private _ClaseOrden As String

        Private _NroOrden As Integer

        Private _Version As Integer

        Private _IDReceptor As String

        Private _Lider As Boolean

        Private _Porcentaje As Double

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _IDReceptorOrden As Integer

        Private _InfoSesion As String

        Private _Nombre As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDComisionistaChanged()
        End Sub
        Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDSucComisionistaChanged()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnClaseOrdenChanged()
        End Sub
        Partial Private Sub OnNroOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroOrdenChanged()
        End Sub
        Partial Private Sub OnVersionChanging(value As Integer)
        End Sub
        Partial Private Sub OnVersionChanged()
        End Sub
        Partial Private Sub OnIDReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnIDReceptorChanged()
        End Sub
        Partial Private Sub OnLiderChanging(value As Boolean)
        End Sub
        Partial Private Sub OnLiderChanged()
        End Sub
        Partial Private Sub OnPorcentajeChanging(value As Double)
        End Sub
        Partial Private Sub OnPorcentajeChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnIDReceptorOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDReceptorOrdenChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=True)>
        Public Property IDComisionista() As Integer
            Get
                Return Me._IDComisionista
            End Get
            Set
                If (Object.Equals(Me._IDComisionista, Value) = False) Then
                    Me.OnIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComisionista = Value
                    Me.SendPropertyChanged("IDComisionista")
                    Me.OnIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=True)>
        Public Property IDSucComisionista() As Integer
            Get
                Return Me._IDSucComisionista
            End Get
            Set
                If (Object.Equals(Me._IDSucComisionista, Value) = False) Then
                    Me.OnIDSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucComisionista = Value
                    Me.SendPropertyChanged("IDSucComisionista")
                    Me.OnIDSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=False)>
        Public Property TipoOrden() As String
            Get
                Return Me._TipoOrden
            End Get
            Set
                If (String.Equals(Me._TipoOrden, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrden = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(1) NOT NULL", CanBeNull:=False)>
        Public Property ClaseOrden() As String
            Get
                Return Me._ClaseOrden
            End Get
            Set
                If (String.Equals(Me._ClaseOrden, Value) = False) Then
                    Me.OnClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClaseOrden = Value
                    Me.SendPropertyChanged("ClaseOrden")
                    Me.OnClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_NroOrden", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property NroOrden() As Integer
            Get
                Return Me._NroOrden
            End Get
            Set
                If (Object.Equals(Me._NroOrden, Value) = False) Then
                    Me.OnNroOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOrden = Value
                    Me.SendPropertyChanged("NroOrden")
                    Me.OnNroOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Version() As Integer
            Get
                Return Me._Version
            End Get
            Set
                If (Object.Equals(Me._Version, Value) = False) Then
                    Me.OnVersionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Version = Value
                    Me.SendPropertyChanged("Version")
                    Me.OnVersionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property IDReceptor() As String
            Get
                Return Me._IDReceptor
            End Get
            Set
                If (String.Equals(Me._IDReceptor, Value) = False) Then
                    Me.OnIDReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptor = Value
                    Me.SendPropertyChanged("IDReceptor")
                    Me.OnIDReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLider", Storage:="_Lider", DbType:="Bit NOT NULL")>
        Public Property Lider() As Boolean
            Get
                Return Me._Lider
            End Get
            Set
                If ((Me._Lider = Value) _
                            = False) Then
                    Me.OnLiderChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Lider = Value
                    Me.SendPropertyChanged("Lider")
                    Me.OnLiderChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentaje", Storage:="_Porcentaje", DbType:="Float NOT NULL")>
        Public Property Porcentaje() As Double
            Get
                Return Me._Porcentaje
            End Get
            Set
                If ((Me._Porcentaje = Value) _
                            = False) Then
                    Me.OnPorcentajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Porcentaje = Value
                    Me.SendPropertyChanged("Porcentaje")
                    Me.OnPorcentajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="Datetime NOT NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDReceptoresOrdenes", Storage:="_IDReceptorOrden", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDReceptorOrden() As Integer
            Get
                Return Me._IDReceptorOrden
            End Get
            Set
                If (Object.Equals(Me._IDReceptorOrden, Value) = False) Then
                    Me.OnIDReceptorOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptorOrden = Value
                    Me.SendPropertyChanged("IDReceptorOrden")
                    Me.OnIDReceptorOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)")>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class LiquidacionesOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Estado As String

        Private _FechaLiq As System.Nullable(Of Date)

        Private _NroLiquidacion As String

        Private _Nemotecnico As String

        Private _NroFactura As System.Nullable(Of Integer)

        Private _Cantidad As System.Nullable(Of Decimal)

        Private _Cumplimiento As System.Nullable(Of Date)

        Private _Precio As Decimal

        Private _ValorLiq As System.Nullable(Of Decimal)

        Private _TotalLiq As Decimal

        Private _Comision As Decimal

        Private _Retencion As Decimal

        Private _Intereses As Decimal

        Private _Id As Integer

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnFechaLiqChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaLiqChanged()
        End Sub
        Partial Private Sub OnNroLiquidacionChanging(value As String)
        End Sub
        Partial Private Sub OnNroLiquidacionChanged()
        End Sub
        Partial Private Sub OnNemotecnicoChanging(value As String)
        End Sub
        Partial Private Sub OnNemotecnicoChanged()
        End Sub
        Partial Private Sub OnNroFacturaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnNroFacturaChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnCumplimientoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnCumplimientoChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As Decimal)
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnValorLiqChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnValorLiqChanged()
        End Sub
        Partial Private Sub OnTotalLiqChanging(value As Decimal)
        End Sub
        Partial Private Sub OnTotalLiqChanged()
        End Sub
        Partial Private Sub OnComisionChanging(value As Decimal)
        End Sub
        Partial Private Sub OnComisionChanged()
        End Sub
        Partial Private Sub OnRetencionChanging(value As Decimal)
        End Sub
        Partial Private Sub OnRetencionChanged()
        End Sub
        Partial Private Sub OnInteresesChanging(value As Decimal)
        End Sub
        Partial Private Sub OnInteresesChanged()
        End Sub
        Partial Private Sub OnIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(20) NULL")>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_FechaLiq", DbType:="datetime NULL")>
        Public Property FechaLiq() As System.Nullable(Of Date)
            Get
                Return Me._FechaLiq
            End Get
            Set
                If (Me._FechaLiq.Equals(Value) = False) Then
                    Me.OnFechaLiqChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaLiq = Value
                    Me.SendPropertyChanged("FechaLiq")
                    Me.OnFechaLiqChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNumeroLiq", Storage:="_NroLiquidacion", DbType:="Varchar(20) NULL")>
        Public Property NroLiquidacion() As String
            Get
                Return Me._NroLiquidacion
            End Get
            Set
                If (String.Equals(Me._NroLiquidacion, Value) = False) Then
                    Me.OnNroLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroLiquidacion = Value
                    Me.SendPropertyChanged("NroLiquidacion")
                    Me.OnNroLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_Nemotecnico", DbType:="Varchar(20) NULL")>
        Public Property Nemotecnico() As String
            Get
                Return Me._Nemotecnico
            End Get
            Set
                If (String.Equals(Me._Nemotecnico, Value) = False) Then
                    Me.OnNemotecnicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nemotecnico = Value
                    Me.SendPropertyChanged("Nemotecnico")
                    Me.OnNemotecnicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdFactura", Storage:="_NroFactura", DbType:="Int NULL", CanBeNull:=True)>
        Public Property NroFactura() As System.Nullable(Of Integer)
            Get
                Return Me._NroFactura
            End Get
            Set
                If (Object.Equals(Me._NroFactura, Value) = False) Then
                    Me.OnNroFacturaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroFactura = Value
                    Me.SendPropertyChanged("NroFactura")
                    Me.OnNroFacturaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Numeric NULL")>
        Public Property Cantidad() As System.Nullable(Of Decimal)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Me._Cantidad.Equals(Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="datetime")>
        Public Property Cumplimiento() As System.Nullable(Of Date)
            Get
                Return Me._Cumplimiento
            End Get
            Set
                If (Me._Cumplimiento.Equals(Value) = False) Then
                    Me.OnCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cumplimiento = Value
                    Me.SendPropertyChanged("Cumplimiento")
                    Me.OnCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curPrecio", Storage:="_Precio", DbType:="Numeric NULL")>
        Public Property Precio() As Decimal
            Get
                Return Me._Precio
            End Get
            Set
                If ((Me._Precio = Value) _
                            = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTransaccion", Storage:="_ValorLiq", DbType:="Numeric NULL")>
        Public Property ValorLiq() As System.Nullable(Of Decimal)
            Get
                Return Me._ValorLiq
            End Get
            Set
                If (Me._ValorLiq.Equals(Value) = False) Then
                    Me.OnValorLiqChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorLiq = Value
                    Me.SendPropertyChanged("ValorLiq")
                    Me.OnValorLiqChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTotalLiq", Storage:="_TotalLiq", DbType:="Numeric NULL")>
        Public Property TotalLiq() As Decimal
            Get
                Return Me._TotalLiq
            End Get
            Set
                If ((Me._TotalLiq = Value) _
                            = False) Then
                    Me.OnTotalLiqChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TotalLiq = Value
                    Me.SendPropertyChanged("TotalLiq")
                    Me.OnTotalLiqChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curComision", Storage:="_Comision", DbType:="Numeric NULL")>
        Public Property Comision() As Decimal
            Get
                Return Me._Comision
            End Get
            Set
                If ((Me._Comision = Value) _
                            = False) Then
                    Me.OnComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Comision = Value
                    Me.SendPropertyChanged("Comision")
                    Me.OnComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curRetencion", Storage:="_Retencion", DbType:="Numeric NULL")>
        Public Property Retencion() As Decimal
            Get
                Return Me._Retencion
            End Get
            Set
                If ((Me._Retencion = Value) _
                            = False) Then
                    Me.OnRetencionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Retencion = Value
                    Me.SendPropertyChanged("Retencion")
                    Me.OnRetencionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curIntereses", Storage:="_Intereses", DbType:="Numeric NULL")>
        Public Property Intereses() As Decimal
            Get
                Return Me._Intereses
            End Get
            Set
                If ((Me._Intereses = Value) _
                            = False) Then
                    Me.OnInteresesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Intereses = Value
                    Me.SendPropertyChanged("Intereses")
                    Me.OnInteresesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_Id", DbType:="INT NOT NULL", IsPrimaryKey:=True)>
        Public Property Id() As Integer
            Get
                Return Me._Id
            End Get
            Set
                If ((Me._Id = Value) _
                            = False) Then
                    Me.OnIdChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Id = Value
                    Me.SendPropertyChanged("Id")
                    Me.OnIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class OrdenSAE
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _SAEActivo As Boolean

        Private _SAEActivoClaseOrden As Boolean

        Private _SAEUsrTienePermisos As Boolean

        Private _AccionEjecutada As Boolean

        Private _NroOrdenSAE As String

        Private _EstadoSAE As String

        Private _TipoMensaje As System.Nullable(Of System.Int32)

        Private _strMsg As String

        Private _IdOrdenSAE As Integer

        Private _DetalleEstado As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnSAEActivoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnSAEActivoChanged()
        End Sub
        Partial Private Sub OnSAEActivoClaseOrdenChanging(value As Boolean)
        End Sub
        Partial Private Sub OnSAEActivoClaseOrdenChanged()
        End Sub
        Partial Private Sub OnSAEUsrTienePermisosChanging(value As Boolean)
        End Sub
        Partial Private Sub OnSAEUsrTienePermisosChanged()
        End Sub
        Partial Private Sub OnAccionEjecutadaChanging(value As Boolean)
        End Sub
        Partial Private Sub OnAccionEjecutadaChanged()
        End Sub
        Partial Private Sub OnNroOrdenSAEChanging(value As String)
        End Sub
        Partial Private Sub OnNroOrdenSAEChanged()
        End Sub
        Partial Private Sub OnEstadoSAEChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoSAEChanged()
        End Sub
        Partial Private Sub OnTipoMensajeChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnTipoMensajeChanged()
        End Sub
        Partial Private Sub OnMsgChanging(value As String)
        End Sub
        Partial Private Sub OnMsgChanged()
        End Sub
        Partial Private Sub OnIdOrdenSAEChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdOrdenSAEChanged()
        End Sub
        Partial Private Sub OnDetalleEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleEstadoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSAEActivo", Storage:="_SAEActivo", DbType:="bit")>
        Public Property SAEActivo() As Boolean
            Get
                Return Me._SAEActivo
            End Get
            Set
                If ((Me._SAEActivo = Value) _
                            = False) Then
                    Me.OnSAEActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SAEActivo = Value
                    Me.SendPropertyChanged("SAEActivo")
                    Me.OnSAEActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSAEActivoClaseOrden", Storage:="_SAEActivoClaseOrden", DbType:="bit")>
        Public Property SAEActivoClaseOrden() As Boolean
            Get
                Return Me._SAEActivoClaseOrden
            End Get
            Set
                If ((Me._SAEActivoClaseOrden = Value) _
                            = False) Then
                    Me.OnSAEActivoClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SAEActivoClaseOrden = Value
                    Me.SendPropertyChanged("SAEActivoClaseOrden")
                    Me.OnSAEActivoClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSAEUsrTienePermisos", Storage:="_SAEUsrTienePermisos", DbType:="bit")>
        Public Property SAEUsrTienePermisos() As Boolean
            Get
                Return Me._SAEUsrTienePermisos
            End Get
            Set
                If ((Me._SAEUsrTienePermisos = Value) _
                            = False) Then
                    Me.OnSAEUsrTienePermisosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SAEUsrTienePermisos = Value
                    Me.SendPropertyChanged("SAEUsrTienePermisos")
                    Me.OnSAEUsrTienePermisosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAccionEjecutada", Storage:="_AccionEjecutada", DbType:="bit")>
        Public Property AccionEjecutada() As Boolean
            Get
                Return Me._AccionEjecutada
            End Get
            Set
                If ((Me._AccionEjecutada = Value) _
                            = False) Then
                    Me.OnAccionEjecutadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AccionEjecutada = Value
                    Me.SendPropertyChanged("AccionEjecutada")
                    Me.OnAccionEjecutadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroOrdenSAE", Storage:="_NroOrdenSAE", DbType:="VarChar(50)")>
        Public Property NroOrdenSAE() As String
            Get
                Return Me._NroOrdenSAE
            End Get
            Set
                If (String.Equals(Me._NroOrdenSAE, Value) = False) Then
                    Me.OnNroOrdenSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOrdenSAE = Value
                    Me.SendPropertyChanged("NroOrdenSAE")
                    Me.OnNroOrdenSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoSAE", Storage:="_EstadoSAE", DbType:="VarChar(50)")>
        Public Property EstadoSAE() As String
            Get
                Return Me._EstadoSAE
            End Get
            Set
                If (String.Equals(Me._EstadoSAE, Value) = False) Then
                    Me.OnEstadoSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoSAE = Value
                    Me.SendPropertyChanged("EstadoSAE")
                    Me.OnEstadoSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoMensaje", Storage:="_TipoMensaje", DbType:="int", CanBeNull:=True)>
        Public Property TipoMensaje() As System.Nullable(Of System.Int32)
            Get
                Return Me._TipoMensaje
            End Get
            Set
                If (Object.Equals(Me._TipoMensaje, Value) = False) Then
                    Me.OnTipoMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoMensaje = Value
                    Me.SendPropertyChanged("TipoMensaje")
                    Me.OnTipoMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_strMsg", DbType:="VarChar(500)")>
        Public Property Msg() As String
            Get
                Return Me._strMsg
            End Get
            Set
                If (String.Equals(Me._strMsg, Value) = False) Then
                    Me.OnMsgChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsg = Value
                    Me.SendPropertyChanged("Msg")
                    Me.OnMsgChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_IdOrdenSAE", DbType:="Int", IsPrimaryKey:=True)>
        Public Property IdOrdenSAE() As Integer
            Get
                Return Me._IdOrdenSAE
            End Get
            Set
                If ((Me._IdOrdenSAE = Value) _
                            = False) Then
                    Me.OnIdOrdenSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdOrdenSAE = Value
                    Me.SendPropertyChanged("IdOrdenSAE")
                    Me.OnIdOrdenSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleEstado", Storage:="_DetalleEstado", CanBeNull:=False)>
        Public Property DetalleEstado() As String
            Get
                Return Me._DetalleEstado
            End Get
            Set
                If (String.Equals(Me._DetalleEstado, Value) = False) Then
                    Me.OnDetalleEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DetalleEstado = Value
                    Me.SendPropertyChanged("DetalleEstado")
                    Me.OnDetalleEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblMensajes
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Titulo As String

        Private _Valor As String

        Private _Color As String

        Private _Descripcion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTituloChanging(value As String)
        End Sub
        Partial Private Sub OnTituloChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As String)
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnColorChanging(value As String)
        End Sub
        Partial Private Sub OnColorChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTitulo", Storage:="_Titulo", DbType:="Varchar(200) NULL", CanBeNull:=False)>
        Public Property Titulo() As String
            Get
                Return Me._Titulo
            End Get
            Set
                If (String.Equals(Me._Titulo, Value) = False) Then
                    Me.OnTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Titulo = Value
                    Me.SendPropertyChanged("Titulo")
                    Me.OnTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(200) NULL")>
        Public Property Valor() As String
            Get
                Return Me._Valor
            End Get
            Set
                If (String.Equals(Me._Valor, Value) = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strColor", Storage:="_Color", DbType:="Varchar(80) NULL")>
        Public Property Color() As String
            Get
                Return Me._Color
            End Get
            Set
                If (String.Equals(Me._Color, Value) = False) Then
                    Me.OnColorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Color = Value
                    Me.SendPropertyChanged("Color")
                    Me.OnColorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(100) NULL")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class OrdenModificable
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Modificable As Boolean

        Private _LanzarPorSAE As Boolean

        Private _Estado As String

        Private _EstadoLEO As String

        Private _EstadoSAE As String

        Private _TieneLiquidaciones As Boolean

        Private _Mensaje As String

        Private _FechaCierre As Date

        Private _UltimaModificacion As Date

        Private _TieneLiquidacionesProbables As Boolean

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnModificableChanging(value As Boolean)
        End Sub
        Partial Private Sub OnModificableChanged()
        End Sub
        Partial Private Sub OnLanzarPorSAEChanging(value As Boolean)
        End Sub
        Partial Private Sub OnLanzarPorSAEChanged()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnEstadoLEOChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoLEOChanged()
        End Sub
        Partial Private Sub OnEstadoSAEChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoSAEChanged()
        End Sub
        Partial Private Sub OnTieneLiquidacionesChanging(value As Boolean)
        End Sub
        Partial Private Sub OnTieneLiquidacionesChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnFechaCierreChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaCierreChanged()
        End Sub
        Partial Private Sub OnUltimaModificacionChanging(value As Date)
        End Sub
        Partial Private Sub OnUltimaModificacionChanged()
        End Sub
        Partial Private Sub OnTieneLiquidacionesProbablesChanging(value As Boolean)
        End Sub
        Partial Private Sub OnTieneLiquidacionesProbablesChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logModificable", Storage:="_Modificable", DbType:="Bit")>
        Public Property Modificable() As Boolean
            Get
                Return Me._Modificable
            End Get
            Set
                If ((Me._Modificable = Value) _
                            = False) Then
                    Me.OnModificableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modificable = Value
                    Me.SendPropertyChanged("Modificable")
                    Me.OnModificableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLanzarPorSAE", Storage:="_LanzarPorSAE", DbType:="Bit")>
        Public Property LanzarPorSAE() As Boolean
            Get
                Return Me._LanzarPorSAE
            End Get
            Set
                If ((Me._LanzarPorSAE = Value) _
                            = False) Then
                    Me.OnLanzarPorSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._LanzarPorSAE = Value
                    Me.SendPropertyChanged("LanzarPorSAE")
                    Me.OnLanzarPorSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(30)", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoLEO", Storage:="_EstadoLEO", DbType:="Varchar(30)", CanBeNull:=False)>
        Public Property EstadoLEO() As String
            Get
                Return Me._EstadoLEO
            End Get
            Set
                If (String.Equals(Me._EstadoLEO, Value) = False) Then
                    Me.OnEstadoLEOChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoLEO = Value
                    Me.SendPropertyChanged("EstadoLEO")
                    Me.OnEstadoLEOChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoSAE", Storage:="_EstadoSAE", DbType:="Varchar(30)", CanBeNull:=False)>
        Public Property EstadoSAE() As String
            Get
                Return Me._EstadoSAE
            End Get
            Set
                If (String.Equals(Me._EstadoSAE, Value) = False) Then
                    Me.OnEstadoSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoSAE = Value
                    Me.SendPropertyChanged("EstadoSAE")
                    Me.OnEstadoSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTieneLiquidaciones", Storage:="_TieneLiquidaciones", DbType:="Bit")>
        Public Property TieneLiquidaciones() As Boolean
            Get
                Return Me._TieneLiquidaciones
            End Get
            Set
                If ((Me._TieneLiquidaciones = Value) _
                            = False) Then
                    Me.OnTieneLiquidacionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TieneLiquidaciones = Value
                    Me.SendPropertyChanged("TieneLiquidaciones")
                    Me.OnTieneLiquidacionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(500)", CanBeNull:=False)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCierre", Storage:="_FechaCierre", DbType:="Datetime NOT NULL")>
        Public Property FechaCierre() As Date
            Get
                Return Me._FechaCierre
            End Get
            Set
                If ((Me._FechaCierre = Value) _
                            = False) Then
                    Me.OnFechaCierreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCierre = Value
                    Me.SendPropertyChanged("FechaCierre")
                    Me.OnFechaCierreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmUltimaModificacion", Storage:="_UltimaModificacion", DbType:="Datetime NOT NULL")>
        Public Property UltimaModificacion() As Date
            Get
                Return Me._UltimaModificacion
            End Get
            Set
                If ((Me._UltimaModificacion = Value) _
                            = False) Then
                    Me.OnUltimaModificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UltimaModificacion = Value
                    Me.SendPropertyChanged("UltimaModificacion")
                    Me.OnUltimaModificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTieneLiquidacionesProbables", Storage:="_TieneLiquidacionesProbables", DbType:="Bit")>
        Public Property TieneLiquidacionesProbables() As Boolean
            Get
                Return Me._TieneLiquidacionesProbables
            End Get
            Set
                If ((Me._TieneLiquidacionesProbables = Value) _
                            = False) Then
                    Me.OnTieneLiquidacionesProbablesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TieneLiquidacionesProbables = Value
                    Me.SendPropertyChanged("TieneLiquidacionesProbables")
                    Me.OnTieneLiquidacionesProbablesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ValidarFecha
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Fecha As Date

        Private _FechaHabilMenor As System.Nullable(Of Date)

        Private _FechaHabilMayor As System.Nullable(Of Date)

        Private _EsDiaHabil As Boolean

        Private _FechaInicial As System.Nullable(Of Date)

        Private _FechaFinal As System.Nullable(Of Date)

        Private _NroDias As System.Nullable(Of System.Int32)

        Private _TipoCalculo As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnFechaCierreChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaCierreChanged()
        End Sub
        Partial Private Sub OnFechaHabilMenorChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaHabilMenorChanged()
        End Sub
        Partial Private Sub OnFechaHabilMayorChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaHabilMayorChanged()
        End Sub
        Partial Private Sub OnEsDiaHabilChanging(value As Boolean)
        End Sub
        Partial Private Sub OnEsDiaHabilChanged()
        End Sub
        Partial Private Sub OnFechaInicialChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaInicialChanged()
        End Sub
        Partial Private Sub OnFechaFinalChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaFinalChanged()
        End Sub
        Partial Private Sub OnNroDiasChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnNroDiasChanged()
        End Sub
        Partial Private Sub OnTipoCalculoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoCalculoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCierre", Storage:="_Fecha", DbType:="datetime", IsPrimaryKey:=True)>
        Public Property FechaCierre() As Date
            Get
                Return Me._Fecha
            End Get
            Set
                If ((Me._Fecha = Value) _
                            = False) Then
                    Me.OnFechaCierreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("FechaCierre")
                    Me.OnFechaCierreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaMin", Storage:="_FechaHabilMenor", DbType:="datetime")>
        Public Property FechaHabilMenor() As System.Nullable(Of Date)
            Get
                Return Me._FechaHabilMenor
            End Get
            Set
                If (Me._FechaHabilMenor.Equals(Value) = False) Then
                    Me.OnFechaHabilMenorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaHabilMenor = Value
                    Me.SendPropertyChanged("FechaHabilMenor")
                    Me.OnFechaHabilMenorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaMax", Storage:="_FechaHabilMayor", DbType:="datetime")>
        Public Property FechaHabilMayor() As System.Nullable(Of Date)
            Get
                Return Me._FechaHabilMayor
            End Get
            Set
                If (Me._FechaHabilMayor.Equals(Value) = False) Then
                    Me.OnFechaHabilMayorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaHabilMayor = Value
                    Me.SendPropertyChanged("FechaHabilMayor")
                    Me.OnFechaHabilMayorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsHabil", Storage:="_EsDiaHabil", DbType:="bit")>
        Public Property EsDiaHabil() As Boolean
            Get
                Return Me._EsDiaHabil
            End Get
            Set
                If ((Me._EsDiaHabil = Value) _
                            = False) Then
                    Me.OnEsDiaHabilChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EsDiaHabil = Value
                    Me.SendPropertyChanged("EsDiaHabil")
                    Me.OnEsDiaHabilChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInicial", Storage:="_FechaInicial", DbType:="datetime")>
        Public Property FechaInicial() As System.Nullable(Of Date)
            Get
                Return Me._FechaInicial
            End Get
            Set
                If (Me._FechaInicial.Equals(Value) = False) Then
                    Me.OnFechaInicialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInicial = Value
                    Me.SendPropertyChanged("FechaInicial")
                    Me.OnFechaInicialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaFinal", Storage:="_FechaFinal", DbType:="datetime")>
        Public Property FechaFinal() As System.Nullable(Of Date)
            Get
                Return Me._FechaFinal
            End Get
            Set
                If (Me._FechaFinal.Equals(Value) = False) Then
                    Me.OnFechaFinalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaFinal = Value
                    Me.SendPropertyChanged("FechaFinal")
                    Me.OnFechaFinalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroDias", Storage:="_NroDias", DbType:="int", CanBeNull:=True)>
        Public Property NroDias() As System.Nullable(Of System.Int32)
            Get
                Return Me._NroDias
            End Get
            Set
                If (Object.Equals(Me._NroDias, Value) = False) Then
                    Me.OnNroDiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDias = Value
                    Me.SendPropertyChanged("NroDias")
                    Me.OnNroDiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCalculo", Storage:="_TipoCalculo", DbType:="Varchar(25)")>
        Public Property TipoCalculo() As String
            Get
                Return Me._TipoCalculo
            End Get
            Set
                If (String.Equals(Me._TipoCalculo, Value) = False) Then
                    Me.OnTipoCalculoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoCalculo = Value
                    Me.SendPropertyChanged("TipoCalculo")
                    Me.OnTipoCalculoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblRespuestaValidaciones
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Exitoso As Boolean

        Private _DetieneIngreso As Boolean

        Private _RequiereConfirmacion As Boolean

        Private _RequiereJustificacion As Boolean

        Private _RequiereAprobacion As Boolean

        Private _Regla As String

        Private _NombreRegla As String

        Private _Confirmacion As String

        Private _Mensaje As String

        Private _CausasJustificacion As String

        Private _IDOrdenIdentity As System.Nullable(Of System.Int32)

        Private _DetalleRegla As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnExitosoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnExitosoChanged()
        End Sub
        Partial Private Sub OnDetieneIngresoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnDetieneIngresoChanged()
        End Sub
        Partial Private Sub OnRequiereConfirmacionChanging(value As Boolean)
        End Sub
        Partial Private Sub OnRequiereConfirmacionChanged()
        End Sub
        Partial Private Sub OnRequiereJustificacionChanging(value As Boolean)
        End Sub
        Partial Private Sub OnRequiereJustificacionChanged()
        End Sub
        Partial Private Sub OnRequiereAprobacionChanging(value As Boolean)
        End Sub
        Partial Private Sub OnRequiereAprobacionChanged()
        End Sub
        Partial Private Sub OnReglaChanging(value As String)
        End Sub
        Partial Private Sub OnReglaChanged()
        End Sub
        Partial Private Sub OnNombreReglaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReglaChanged()
        End Sub
        Partial Private Sub OnConfirmacionChanging(value As String)
        End Sub
        Partial Private Sub OnConfirmacionChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnCausasJustificacionChanging(value As String)
        End Sub
        Partial Private Sub OnCausasJustificacionChanged()
        End Sub
        Partial Private Sub OnIDOrdenIdentityChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDOrdenIdentityChanged()
        End Sub
        Partial Private Sub OnDetalleReglaChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleReglaChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NOT NULL")>
        Public Property Exitoso() As Boolean
            Get
                Return Me._Exitoso
            End Get
            Set
                If ((Me._Exitoso = Value) _
                            = False) Then
                    Me.OnExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Exitoso = Value
                    Me.SendPropertyChanged("Exitoso")
                    Me.OnExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDetieneIngreso", Storage:="_DetieneIngreso", DbType:="Bit NOT NULL")>
        Public Property DetieneIngreso() As Boolean
            Get
                Return Me._DetieneIngreso
            End Get
            Set
                If ((Me._DetieneIngreso = Value) _
                            = False) Then
                    Me.OnDetieneIngresoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DetieneIngreso = Value
                    Me.SendPropertyChanged("DetieneIngreso")
                    Me.OnDetieneIngresoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRequiereConfirmacion", Storage:="_RequiereConfirmacion", DbType:="Bit NOT NULL")>
        Public Property RequiereConfirmacion() As Boolean
            Get
                Return Me._RequiereConfirmacion
            End Get
            Set
                If ((Me._RequiereConfirmacion = Value) _
                            = False) Then
                    Me.OnRequiereConfirmacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RequiereConfirmacion = Value
                    Me.SendPropertyChanged("RequiereConfirmacion")
                    Me.OnRequiereConfirmacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRequiereJustificacion", Storage:="_RequiereJustificacion", DbType:="Bit NOT NULL")>
        Public Property RequiereJustificacion() As Boolean
            Get
                Return Me._RequiereJustificacion
            End Get
            Set
                If ((Me._RequiereJustificacion = Value) _
                            = False) Then
                    Me.OnRequiereJustificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RequiereJustificacion = Value
                    Me.SendPropertyChanged("RequiereJustificacion")
                    Me.OnRequiereJustificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRequiereAprobacion", Storage:="_RequiereAprobacion", DbType:="Bit NOT NULL")>
        Public Property RequiereAprobacion() As Boolean
            Get
                Return Me._RequiereAprobacion
            End Get
            Set
                If ((Me._RequiereAprobacion = Value) _
                            = False) Then
                    Me.OnRequiereAprobacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RequiereAprobacion = Value
                    Me.SendPropertyChanged("RequiereAprobacion")
                    Me.OnRequiereAprobacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRegla", Storage:="_Regla", DbType:="Varchar(20) NOT NULL")>
        Public Property Regla() As String
            Get
                Return Me._Regla
            End Get
            Set
                If (String.Equals(Me._Regla, Value) = False) Then
                    Me.OnReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Regla = Value
                    Me.SendPropertyChanged("Regla")
                    Me.OnReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreRegla", Storage:="_NombreRegla", DbType:="Varchar(20) NOT NULL")>
        Public Property NombreRegla() As String
            Get
                Return Me._NombreRegla
            End Get
            Set
                If (String.Equals(Me._NombreRegla, Value) = False) Then
                    Me.OnNombreReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreRegla = Value
                    Me.SendPropertyChanged("NombreRegla")
                    Me.OnNombreReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConfirmacion", Storage:="_Confirmacion", DbType:="Varchar(200) NOT NULL")>
        Public Property Confirmacion() As String
            Get
                Return Me._Confirmacion
            End Get
            Set
                If (String.Equals(Me._Confirmacion, Value) = False) Then
                    Me.OnConfirmacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Confirmacion = Value
                    Me.SendPropertyChanged("Confirmacion")
                    Me.OnConfirmacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(1000) NOT NULL", CanBeNull:=False)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCausasJustificacion", Storage:="_CausasJustificacion", DbType:="Varchar(5000) NOT NULL")>
        Public Property CausasJustificacion() As String
            Get
                Return Me._CausasJustificacion
            End Get
            Set
                If (String.Equals(Me._CausasJustificacion, Value) = False) Then
                    Me.OnCausasJustificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CausasJustificacion = Value
                    Me.SendPropertyChanged("CausasJustificacion")
                    Me.OnCausasJustificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenIdentity", Storage:="_IDOrdenIdentity", DbType:="INT NOT NULL", CanBeNull:=True)>
        Public Property IDOrdenIdentity() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDOrdenIdentity
            End Get
            Set
                If (Object.Equals(Me._IDOrdenIdentity, Value) = False) Then
                    Me.OnIDOrdenIdentityChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenIdentity = Value
                    Me.SendPropertyChanged("IDOrdenIdentity")
                    Me.OnIDOrdenIdentityChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleRegla", Storage:="_DetalleRegla", DbType:="Varchar(max) NOT NULL")>
        Public Property DetalleRegla() As String
            Get
                Return Me._DetalleRegla
            End Get
            Set
                If (String.Equals(Me._DetalleRegla, Value) = False) Then
                    Me.OnDetalleReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DetalleRegla = Value
                    Me.SendPropertyChanged("DetalleRegla")
                    Me.OnDetalleReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class OrdenSeteador
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDOrdenes As Integer

        Private _lngID As Integer

        Private _lngVersion As Integer

        Private _strTipoNegocio As String

        Private _TipoNegocio As String

        Private _strConfiguracionMenu As String

        Private _Clase As Char

        Private _strTipo As Char

        Private _TipoOperacion As String

        Private _strMercado As String

        Private _Mercado As String

        Private _strTipoLimite As Char

        Private _TipoLimite As String

        Private _strIDEspecie As String

        Private _dtmOrden As Date

        Private _dtmVigenciaHasta As String

        Private _Plazo As System.Nullable(Of Integer)

        Private _dblCantidad As Double

        Private _dblTasaInicial As System.Nullable(Of Double)

        Private _dblTasaCompraVenta As System.Nullable(Of Double)

        Private _dblPrecioOrden As System.Nullable(Of Double)

        Private _strNombreCliente As String

        Private _strIdReceptorToma As String

        Private _strEstado As Char

        Private _Estado As String

        Private _strEstadoLEO As Char

        Private _strEstadoVisor As String

        Private _RutaVisor As String

        Private _strEstadoMakerAndChecker As String

        Private _strAccionMakerAndCheker As String

        Private _strDescMakerAndCheker As String

        Private _CalificacionEspecie As System.Nullable(Of System.Int32)

        Private _PerfilComitente As System.Nullable(Of System.Int32)

        Private _strUsuarioIngreso As String

        Private _Cruza As String

        Private _strUsuarioOperador As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDOrdenesChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDOrdenesChanged()
        End Sub
        Partial Private Sub OnlngIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDChanged()
        End Sub
        Partial Private Sub OnlngVersionChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngVersionChanged()
        End Sub
        Partial Private Sub OnstrTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoNegocioChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnstrConfiguracionMenuChanging(value As String)
        End Sub
        Partial Private Sub OnstrConfiguracionMenuChanged()
        End Sub
        Partial Private Sub OnClaseChanging(value As Char)
        End Sub
        Partial Private Sub OnClaseChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As Char)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnstrMercadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrMercadoChanged()
        End Sub
        Partial Private Sub OnMercadoChanging(value As String)
        End Sub
        Partial Private Sub OnMercadoChanged()
        End Sub
        Partial Private Sub OnstrTipoLimiteChanging(value As Char)
        End Sub
        Partial Private Sub OnstrTipoLimiteChanged()
        End Sub
        Partial Private Sub OnTipoLimiteChanging(value As String)
        End Sub
        Partial Private Sub OnTipoLimiteChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OndtmOrdenChanging(value As Date)
        End Sub
        Partial Private Sub OndtmOrdenChanged()
        End Sub
        Partial Private Sub OndtmVigenciaHastaChanging(value As String)
        End Sub
        Partial Private Sub OndtmVigenciaHastaChanged()
        End Sub
        Partial Private Sub OnPlazoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnPlazoChanged()
        End Sub
        Partial Private Sub OndblCantidadChanging(value As Double)
        End Sub
        Partial Private Sub OndblCantidadChanged()
        End Sub
        Partial Private Sub OndblTasaInicialChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaInicialChanged()
        End Sub
        Partial Private Sub OndblTasaCompraVentaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaCompraVentaChanged()
        End Sub
        Partial Private Sub OndblPrecioOrdenChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPrecioOrdenChanged()
        End Sub
        Partial Private Sub OnstrNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreClienteChanged()
        End Sub
        Partial Private Sub OnstrIdReceptorTomaChanging(value As String)
        End Sub
        Partial Private Sub OnstrIdReceptorTomaChanged()
        End Sub
        Partial Private Sub OnstrEstadoChanging(value As Char)
        End Sub
        Partial Private Sub OnstrEstadoChanged()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnstrEstadoLEOChanging(value As Char)
        End Sub
        Partial Private Sub OnstrEstadoLEOChanged()
        End Sub
        Partial Private Sub OnstrEstadoVisorChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoVisorChanged()
        End Sub
        Partial Private Sub OnRutaVisorChanging(value As String)
        End Sub
        Partial Private Sub OnRutaVisorChanged()
        End Sub
        Partial Private Sub OnstrEstadoMakerAndCheckerChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoMakerAndCheckerChanged()
        End Sub
        Partial Private Sub OnstrAccionMakerAndChekerChanging(value As String)
        End Sub
        Partial Private Sub OnstrAccionMakerAndChekerChanged()
        End Sub
        Partial Private Sub OnstrDescMakerAndChekerChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescMakerAndChekerChanged()
        End Sub
        Partial Private Sub OnCalificacionEspecieChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnCalificacionEspecieChanged()
        End Sub
        Partial Private Sub OnPerfilComitenteChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnPerfilComitenteChanged()
        End Sub
        Partial Private Sub OnstrUsuarioIngresoChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioIngresoChanged()
        End Sub
        Partial Private Sub OnCruzaChanging(value As String)
        End Sub
        Partial Private Sub OnCruzaChanged()
        End Sub
        Partial Private Sub OnstrUsuarioOperadorChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioOperadorChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDOrdenes", DbType:="Int NOT NULL", IsPrimaryKey:=True)>
        Public Property intIDOrdenes() As Integer
            Get
                Return Me._intIDOrdenes
            End Get
            Set
                If ((Me._intIDOrdenes = Value) _
                            = False) Then
                    Me.OnintIDOrdenesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDOrdenes = Value
                    Me.SendPropertyChanged("intIDOrdenes")
                    Me.OnintIDOrdenesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngID", DbType:="Int NOT NULL")>
        Public Property lngID() As Integer
            Get
                Return Me._lngID
            End Get
            Set
                If ((Me._lngID = Value) _
                            = False) Then
                    Me.OnlngIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngID = Value
                    Me.SendPropertyChanged("lngID")
                    Me.OnlngIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngVersion", DbType:="Int NOT NULL")>
        Public Property lngVersion() As Integer
            Get
                Return Me._lngVersion
            End Get
            Set
                If ((Me._lngVersion = Value) _
                            = False) Then
                    Me.OnlngVersionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngVersion = Value
                    Me.SendPropertyChanged("lngVersion")
                    Me.OnlngVersionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoNegocio", DbType:="VarChar(4)")>
        Public Property strTipoNegocio() As String
            Get
                Return Me._strTipoNegocio
            End Get
            Set
                If (String.Equals(Me._strTipoNegocio, Value) = False) Then
                    Me.OnstrTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoNegocio = Value
                    Me.SendPropertyChanged("strTipoNegocio")
                    Me.OnstrTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoNegocio", DbType:="VarChar(50)")>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strConfiguracionMenu", DbType:="VarChar(400)")>
        Public Property strConfiguracionMenu() As String
            Get
                Return Me._strConfiguracionMenu
            End Get
            Set
                If (String.Equals(Me._strConfiguracionMenu, Value) = False) Then
                    Me.OnstrConfiguracionMenuChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strConfiguracionMenu = Value
                    Me.SendPropertyChanged("strConfiguracionMenu")
                    Me.OnstrConfiguracionMenuChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clase", DbType:="Char(1) NOT NULL")>
        Public Property Clase() As Char
            Get
                Return Me._Clase
            End Get
            Set
                If ((Me._Clase = Value) _
                            = False) Then
                    Me.OnClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clase = Value
                    Me.SendPropertyChanged("Clase")
                    Me.OnClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="Char(1) NOT NULL")>
        Public Property strTipo() As Char
            Get
                Return Me._strTipo
            End Get
            Set
                If ((Me._strTipo = Value) _
                            = False) Then
                    Me.OnstrTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipo = Value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoOperacion", DbType:="VarChar(50)")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMercado", DbType:="VarChar(1)")>
        Public Property strMercado() As String
            Get
                Return Me._strMercado
            End Get
            Set
                If (String.Equals(Me._strMercado, Value) = False) Then
                    Me.OnstrMercadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMercado = Value
                    Me.SendPropertyChanged("strMercado")
                    Me.OnstrMercadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mercado", DbType:="VarChar(50)")>
        Public Property Mercado() As String
            Get
                Return Me._Mercado
            End Get
            Set
                If (String.Equals(Me._Mercado, Value) = False) Then
                    Me.OnMercadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mercado = Value
                    Me.SendPropertyChanged("Mercado")
                    Me.OnMercadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoLimite", DbType:="Char(1) NOT NULL")>
        Public Property strTipoLimite() As Char
            Get
                Return Me._strTipoLimite
            End Get
            Set
                If ((Me._strTipoLimite = Value) _
                            = False) Then
                    Me.OnstrTipoLimiteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoLimite = Value
                    Me.SendPropertyChanged("strTipoLimite")
                    Me.OnstrTipoLimiteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoLimite", DbType:="VarChar(50)")>
        Public Property TipoLimite() As String
            Get
                Return Me._TipoLimite
            End Get
            Set
                If (String.Equals(Me._TipoLimite, Value) = False) Then
                    Me.OnTipoLimiteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoLimite = Value
                    Me.SendPropertyChanged("TipoLimite")
                    Me.OnTipoLimiteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="VarChar(15) NOT NULL", CanBeNull:=False)>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmOrden", DbType:="datetime NOT NULL", CanBeNull:=False)>
        Public Property dtmOrden() As Date
            Get
                Return Me._dtmOrden
            End Get
            Set
                If (Object.Equals(Me._dtmOrden, Value) = False) Then
                    Me.OndtmOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmOrden = Value
                    Me.SendPropertyChanged("dtmOrden")
                    Me.OndtmOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVigenciaHasta", DbType:="VarChar")>
        Public Property dtmVigenciaHasta() As String
            Get
                Return Me._dtmVigenciaHasta
            End Get
            Set
                If (String.Equals(Me._dtmVigenciaHasta, Value) = False) Then
                    Me.OndtmVigenciaHastaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVigenciaHasta = Value
                    Me.SendPropertyChanged("dtmVigenciaHasta")
                    Me.OndtmVigenciaHastaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plazo", DbType:="Int")>
        Public Property Plazo() As System.Nullable(Of Integer)
            Get
                Return Me._Plazo
            End Get
            Set
                If (Me._Plazo.Equals(Value) = False) Then
                    Me.OnPlazoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Plazo = Value
                    Me.SendPropertyChanged("Plazo")
                    Me.OnPlazoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float NOT NULL")>
        Public Property dblCantidad() As Double
            Get
                Return Me._dblCantidad
            End Get
            Set
                If ((Me._dblCantidad = Value) _
                            = False) Then
                    Me.OndblCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblCantidad = Value
                    Me.SendPropertyChanged("dblCantidad")
                    Me.OndblCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaInicial", DbType:="Float")>
        Public Property dblTasaInicial() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaInicial
            End Get
            Set
                If (Me._dblTasaInicial.Equals(Value) = False) Then
                    Me.OndblTasaInicialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaInicial = Value
                    Me.SendPropertyChanged("dblTasaInicial")
                    Me.OndblTasaInicialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaCompraVenta", DbType:="Float")>
        Public Property dblTasaCompraVenta() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaCompraVenta
            End Get
            Set
                If (Me._dblTasaCompraVenta.Equals(Value) = False) Then
                    Me.OndblTasaCompraVentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaCompraVenta = Value
                    Me.SendPropertyChanged("dblTasaCompraVenta")
                    Me.OndblTasaCompraVentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioOrden", DbType:="Float")>
        Public Property dblPrecioOrden() As System.Nullable(Of Double)
            Get
                Return Me._dblPrecioOrden
            End Get
            Set
                If (Me._dblPrecioOrden.Equals(Value) = False) Then
                    Me.OndblPrecioOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioOrden = Value
                    Me.SendPropertyChanged("dblPrecioOrden")
                    Me.OndblPrecioOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreCliente", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
        Public Property strNombreCliente() As String
            Get
                Return Me._strNombreCliente
            End Get
            Set
                If (String.Equals(Me._strNombreCliente, Value) = False) Then
                    Me.OnstrNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreCliente = Value
                    Me.SendPropertyChanged("strNombreCliente")
                    Me.OnstrNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIdReceptorToma", DbType:="VarChar(4)")>
        Public Property strIdReceptorToma() As String
            Get
                Return Me._strIdReceptorToma
            End Get
            Set
                If (String.Equals(Me._strIdReceptorToma, Value) = False) Then
                    Me.OnstrIdReceptorTomaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIdReceptorToma = Value
                    Me.SendPropertyChanged("strIdReceptorToma")
                    Me.OnstrIdReceptorTomaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstado", DbType:="Char(1) NOT NULL")>
        Public Property strEstado() As Char
            Get
                Return Me._strEstado
            End Get
            Set
                If ((Me._strEstado = Value) _
                            = False) Then
                    Me.OnstrEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstado = Value
                    Me.SendPropertyChanged("strEstado")
                    Me.OnstrEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(50)")>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoLEO", DbType:="Char(1) NOT NULL")>
        Public Property strEstadoLEO() As Char
            Get
                Return Me._strEstadoLEO
            End Get
            Set
                If ((Me._strEstadoLEO = Value) _
                            = False) Then
                    Me.OnstrEstadoLEOChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstadoLEO = Value
                    Me.SendPropertyChanged("strEstadoLEO")
                    Me.OnstrEstadoLEOChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoVisor", DbType:="VarChar(2)")>
        Public Property strEstadoVisor() As String
            Get
                Return Me._strEstadoVisor
            End Get
            Set
                If (String.Equals(Me._strEstadoVisor, Value) = False) Then
                    Me.OnstrEstadoVisorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstadoVisor = Value
                    Me.SendPropertyChanged("strEstadoVisor")
                    Me.OnstrEstadoVisorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutaVisor", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
        Public Property RutaVisor() As String
            Get
                Return Me._RutaVisor
            End Get
            Set
                If (String.Equals(Me._RutaVisor, Value) = False) Then
                    Me.OnRutaVisorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RutaVisor = Value
                    Me.SendPropertyChanged("RutaVisor")
                    Me.OnRutaVisorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoMakerAndChecker", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
        Public Property strEstadoMakerAndChecker() As String
            Get
                Return Me._strEstadoMakerAndChecker
            End Get
            Set
                If (String.Equals(Me._strEstadoMakerAndChecker, Value) = False) Then
                    Me.OnstrEstadoMakerAndCheckerChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstadoMakerAndChecker = Value
                    Me.SendPropertyChanged("strEstadoMakerAndChecker")
                    Me.OnstrEstadoMakerAndCheckerChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strAccionMakerAndCheker", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
        Public Property strAccionMakerAndCheker() As String
            Get
                Return Me._strAccionMakerAndCheker
            End Get
            Set
                If (String.Equals(Me._strAccionMakerAndCheker, Value) = False) Then
                    Me.OnstrAccionMakerAndChekerChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strAccionMakerAndCheker = Value
                    Me.SendPropertyChanged("strAccionMakerAndCheker")
                    Me.OnstrAccionMakerAndChekerChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescMakerAndCheker", DbType:="VarChar(8) NOT NULL", CanBeNull:=False)>
        Public Property strDescMakerAndCheker() As String
            Get
                Return Me._strDescMakerAndCheker
            End Get
            Set
                If (String.Equals(Me._strDescMakerAndCheker, Value) = False) Then
                    Me.OnstrDescMakerAndChekerChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescMakerAndCheker = Value
                    Me.SendPropertyChanged("strDescMakerAndCheker")
                    Me.OnstrDescMakerAndChekerChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCalificacionEspecie", Storage:="_CalificacionEspecie", DbType:="Int", CanBeNull:=True, UpdateCheck:=UpdateCheck.Never)>
        Public Property CalificacionEspecie() As System.Nullable(Of System.Int32)
            Get
                Return Me._CalificacionEspecie
            End Get
            Set
                If (Object.Equals(Me._CalificacionEspecie, Value) = False) Then
                    Me.OnCalificacionEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CalificacionEspecie = Value
                    Me.SendPropertyChanged("CalificacionEspecie")
                    Me.OnCalificacionEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPerfilComitente", Storage:="_PerfilComitente", DbType:="Int", CanBeNull:=True, UpdateCheck:=UpdateCheck.Never)>
        Public Property PerfilComitente() As System.Nullable(Of System.Int32)
            Get
                Return Me._PerfilComitente
            End Get
            Set
                If (Object.Equals(Me._PerfilComitente, Value) = False) Then
                    Me.OnPerfilComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PerfilComitente = Value
                    Me.SendPropertyChanged("PerfilComitente")
                    Me.OnPerfilComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuarioIngreso", DbType:="Char(60) NULL")>
        Public Property strUsuarioIngreso() As String
            Get
                Return Me._strUsuarioIngreso
            End Get
            Set
                If (String.Equals(Me._strUsuarioIngreso, Value) = False) Then
                    Me.OnstrUsuarioIngresoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuarioIngreso = Value
                    Me.SendPropertyChanged("strUsuarioIngreso")
                    Me.OnstrUsuarioIngresoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cruza", DbType:="VarChar(1000) NULL")>
        Public Property Cruza() As String
            Get
                Return Me._Cruza
            End Get
            Set
                If (String.Equals(Me._Cruza, Value) = False) Then
                    Me.OnCruzaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cruza = Value
                    Me.SendPropertyChanged("Cruza")
                    Me.OnCruzaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuarioOperador", DbType:="VarChar(60) NULL")>
        Public Property strUsuarioOperador() As String
            Get
                Return Me._strUsuarioOperador
            End Get
            Set
                If (String.Equals(Me._strUsuarioOperador, Value) = False) Then
                    Me.OnstrUsuarioOperadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuarioOperador = Value
                    Me.SendPropertyChanged("strUsuarioOperador")
                    Me.OnstrUsuarioOperadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class OrdenOYDPLUS
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDNroOrden As Integer

        Private _Receptor As String

        Private _NombreReceptor As String

        Private _ReceptorParaCruzada As String

        Private _NombreReceptorParaCruzada As String

        Private _NroOrden As Integer

        Private _Version As Integer

        Private _FechaOrden As System.Nullable(Of Date)

        Private _FechaVigencia As System.Nullable(Of Date)

        Private _HoraVigencia As String

        Private _Clase As String

        Private _TipoOperacion As String

        Private _NombreTipoOperacion As String

        Private _EstadoOrden As String

        Private _NombreEstadoOrden As String

        Private _TipoNegocio As String

        Private _NombreTipoNegocio As String

        Private _TipoProducto As String

        Private _NombreTipoProducto As String

        Private _TipoOrden As String

        Private _NombreTipoOrden As String

        Private _Plantilla As String

        Private _Bolsa As String

        Private _NombreBolsa As String

        Private _Dias As System.Nullable(Of System.Int32)

        Private _Clasificacion As String

        Private _TipoLimite As String

        Private _Duracion As String

        Private _CondicionesNegociacion As String

        Private _FormaPago As String

        Private _TipoInversion As String

        Private _Ejecucion As String

        Private _Mercado As String

        Private _IDComitente As String

        Private _IDOrdenante As String

        Private _NombreCliente As String

        Private _CategoriaCliente As String

        Private _NroDocumento As String

        Private _NombreOrdenante As String

        Private _UBICACIONTITULO As String

        Private _CuentaDeposito As System.Nullable(Of System.Int32)

        Private _DescripcionCta As String

        Private _EstadoLEO As String

        Private _NombreEstadoLEO As String

        Private _UsuarioOperador As String

        Private _CanalRecepcion As String

        Private _MedioVerificable As String

        Private _FechaRecepcion As System.Nullable(Of System.DateTime)

        Private _NroExtensionToma As String

        Private _EstadoSAE As String

        Private _NombreEstadoSAE As String

        Private _NroOrdenSAE As System.Nullable(Of Integer)

        Private _Especie As String

        Private _ISIN As String

        Private _FechaEmision As System.Nullable(Of System.DateTime)

        Private _FechaVencimiento As System.Nullable(Of System.DateTime)

        Private _FechaCumplimiento As System.Nullable(Of System.DateTime)

        Private _TasaFacial As System.Nullable(Of Double)

        Private _Modalidad As String

        Private _NombreModalidad As String

        Private _Indicador As String

        Private _PuntosIndicador As System.Nullable(Of Double)

        Private _Estandarizada As System.Nullable(Of Boolean)

        Private _EnPesos As System.Nullable(Of Boolean)

        Private _Cantidad As System.Nullable(Of Double)

        Private _Precio As System.Nullable(Of Double)

        Private _PrecioMaximoMinimo As System.Nullable(Of Double)

        Private _ValorCaptacionGiro As System.Nullable(Of Double)

        Private _ValorFuturoRepo As System.Nullable(Of Double)

        Private _TasaRegistro As System.Nullable(Of Double)

        Private _TasaCliente As System.Nullable(Of Double)

        Private _TasaNominal As System.Nullable(Of Double)

        Private _Comision As System.Nullable(Of Double)

        Private _ValorComision As System.Nullable(Of Double)

        Private _Castigo As System.Nullable(Of Double)

        Private _ValorAccion As System.Nullable(Of Double)

        Private _ValorOrden As System.Nullable(Of Double)

        Private _DiasRepo As System.Nullable(Of Integer)

        Private _ProductoValores As String

        Private _CostosAdicionales As System.Nullable(Of Double)

        Private _Usuario As String

        Private _ReceptoresXML As String

        Private _LiqAsociadasXML As String

        Private _PagosOrdenesXML As String

        Private _InstruccionesOrdenesXML As String

        Private _ComisionesOrdenesXML As String

        Private _Instrucciones As String

        Private _Notas As String

        Private _Custodia As System.Nullable(Of System.Int32)

        Private _CustodiaSecuencia As System.Nullable(Of System.Int32)

        Private _ReferenciaBolsa As String

        Private _FechaReferenciaBolsa As System.Nullable(Of System.DateTime)

        Private _DiasCumplimiento As System.Nullable(Of System.Int32)

        Private _RuedaNegocio As String

        Private _PrecioLimpio As System.Nullable(Of Double)

        Private _PrecioSucio As System.Nullable(Of Double)

        Private _EstadoTitulo As String

        Private _IvaComision As System.Nullable(Of Double)

        Private _ValorFuturoCliente As System.Nullable(Of Double)

        Private _ReceptoresCruzadasXML As String

        Private _OrdenCruzada As System.Nullable(Of Boolean)

        Private _OrdenCruzadaCliente As System.Nullable(Of Boolean)

        Private _OrdenCruzadaReceptor As System.Nullable(Of Boolean)

        Private _IDOrdenOriginal As System.Nullable(Of System.Int32)

        Private _IDNroOrdenOriginal As System.Nullable(Of System.Int32)

        Private _Modificable As Boolean

        Private _FechaActualizacion As Date

        Private _Seleccionada As System.Nullable(Of Boolean)

        Private _NombrePlantilla As String

        Private _BrokenTrader As String

        Private _Entidad As String

        Private _Estrategia As String

        Private _UsuarioWindows As String

        Private _Notificacion As String

        Private _NotificacionDescripcion As String

        Private _Constancia As System.Nullable(Of Double)

        Private _FechaConstancia As System.Nullable(Of System.DateTime)

        Private _IDComitenteADR As String

        Private _NombreClienteADR As String

        Private _TipoIdentificacionADR As String

        Private _NroDocumentoADR As String

        Private _ReceptorToma As String

        Private _NombreReceptorToma As String

        Private _CantidadBolsa As System.Nullable(Of Double)

        Private _TipoTasaFija As String

        Private _EspecieEsAccion As System.Nullable(Of System.Boolean)

        Private _CantidadCalzada As System.Nullable(Of System.Double)

        Private _SaldoOrden As System.Nullable(Of System.Double)

        Private _FechaSalida As System.Nullable(Of System.DateTime)

        Private _TipoGarantia As String

        Private _ExistePreacuerdo As String

        Private _VendeTodo As String

        Private _ExentoRetencion As System.Nullable(Of Boolean)

        Private _PorcentajePagoEfectivo As System.Nullable(Of System.Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDNroOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDNroOrdenChanged()
        End Sub
        Partial Private Sub OnReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorChanged()
        End Sub
        Partial Private Sub OnNombreReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorChanged()
        End Sub
        Partial Private Sub OnReceptorParaCruzadaChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorParaCruzadaChanged()
        End Sub
        Partial Private Sub OnNombreReceptorParaCruzadaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorParaCruzadaChanged()
        End Sub
        Partial Private Sub OnNroOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroOrdenChanged()
        End Sub
        Partial Private Sub OnVersionChanging(value As Integer)
        End Sub
        Partial Private Sub OnVersionChanged()
        End Sub
        Partial Private Sub OnFechaOrdenChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaOrdenChanged()
        End Sub
        Partial Private Sub OnFechaVigenciaChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaVigenciaChanged()
        End Sub
        Partial Private Sub OnHoraVigenciaChanging(value As String)
        End Sub
        Partial Private Sub OnHoraVigenciaChanged()
        End Sub
        Partial Private Sub OnClaseChanging(value As String)
        End Sub
        Partial Private Sub OnClaseChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnNombreTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOperacionChanged()
        End Sub
        Partial Private Sub OnEstadoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoOrdenChanged()
        End Sub
        Partial Private Sub OnNombreEstadoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEstadoOrdenChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnNombreTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoNegocioChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnNombreTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoProductoChanged()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnNombreTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOrdenChanged()
        End Sub
        Partial Private Sub OnPlantillaChanging(value As String)
        End Sub
        Partial Private Sub OnPlantillaChanged()
        End Sub
        Partial Private Sub OnBolsaChanging(value As String)
        End Sub
        Partial Private Sub OnBolsaChanged()
        End Sub
        Partial Private Sub OnNombreBolsaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreBolsaChanged()
        End Sub
        Partial Private Sub OnDiasChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnDiasChanged()
        End Sub
        Partial Private Sub OnClasificacionChanging(value As String)
        End Sub
        Partial Private Sub OnClasificacionChanged()
        End Sub
        Partial Private Sub OnTipoLimiteChanging(value As String)
        End Sub
        Partial Private Sub OnTipoLimiteChanged()
        End Sub
        Partial Private Sub OnDuracionChanging(value As String)
        End Sub
        Partial Private Sub OnDuracionChanged()
        End Sub
        Partial Private Sub OnCondicionesNegociacionChanging(value As String)
        End Sub
        Partial Private Sub OnCondicionesNegociacionChanged()
        End Sub
        Partial Private Sub OnFormaPagoChanging(value As String)
        End Sub
        Partial Private Sub OnFormaPagoChanged()
        End Sub
        Partial Private Sub OnTipoInversionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoInversionChanged()
        End Sub
        Partial Private Sub OnEjecucionChanging(value As String)
        End Sub
        Partial Private Sub OnEjecucionChanged()
        End Sub
        Partial Private Sub OnMercadoChanging(value As String)
        End Sub
        Partial Private Sub OnMercadoChanged()
        End Sub
        Partial Private Sub OnIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteChanged()
        End Sub
        Partial Private Sub OnIDOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnIDOrdenanteChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnCategoriaClienteChanging(value As String)
        End Sub
        Partial Private Sub OnCategoriaClienteChanged()
        End Sub
        Partial Private Sub OnNroDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoChanged()
        End Sub
        Partial Private Sub OnNombreOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreOrdenanteChanged()
        End Sub
        Partial Private Sub OnUBICACIONTITULOChanging(value As String)
        End Sub
        Partial Private Sub OnUBICACIONTITULOChanged()
        End Sub
        Partial Private Sub OnCuentaDepositoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnCuentaDepositoChanged()
        End Sub
        Partial Private Sub OnDescripcionCtaChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionCtaChanged()
        End Sub
        Partial Private Sub OnEstadoLEOChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoLEOChanged()
        End Sub
        Partial Private Sub OnNombreEstadoLEOChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEstadoLEOChanged()
        End Sub
        Partial Private Sub OnUsuarioOperadorChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioOperadorChanged()
        End Sub
        Partial Private Sub OnCanalRecepcionChanging(value As String)
        End Sub
        Partial Private Sub OnCanalRecepcionChanged()
        End Sub
        Partial Private Sub OnMedioVerificableChanging(value As String)
        End Sub
        Partial Private Sub OnMedioVerificableChanged()
        End Sub
        Partial Private Sub OnFechaRecepcionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaRecepcionChanged()
        End Sub
        Partial Private Sub OnNroExtensionTomaChanging(value As String)
        End Sub
        Partial Private Sub OnNroExtensionTomaChanged()
        End Sub
        Partial Private Sub OnEstadoSAEChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoSAEChanged()
        End Sub
        Partial Private Sub OnNombreEstadoSAEChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEstadoSAEChanged()
        End Sub
        Partial Private Sub OnNroOrdenSAEChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnNroOrdenSAEChanged()
        End Sub
        Partial Private Sub OnEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnEspecieChanged()
        End Sub
        Partial Private Sub OnISINChanging(value As String)
        End Sub
        Partial Private Sub OnISINChanged()
        End Sub
        Partial Private Sub OnFechaEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaEmisionChanged()
        End Sub
        Partial Private Sub OnFechaVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaVencimientoChanged()
        End Sub
        Partial Private Sub OnFechaCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnTasaFacialChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaFacialChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnNombreModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnNombreModalidadChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnEstandarizadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEstandarizadaChanged()
        End Sub
        Partial Private Sub OnEnPesosChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEnPesosChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnPrecioMaximoMinimoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioMaximoMinimoChanged()
        End Sub
        Partial Private Sub OnValorCaptacionGiroChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorCaptacionGiroChanged()
        End Sub
        Partial Private Sub OnValorFuturoRepoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorFuturoRepoChanged()
        End Sub
        Partial Private Sub OnTasaRegistroChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaRegistroChanged()
        End Sub
        Partial Private Sub OnTasaClienteChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaClienteChanged()
        End Sub
        Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaNominalChanged()
        End Sub
        Partial Private Sub OnComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnComisionChanged()
        End Sub
        Partial Private Sub OnValorComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorComisionChanged()
        End Sub
        Partial Private Sub OnCastigoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCastigoChanged()
        End Sub
        Partial Private Sub OnValorAccionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorAccionChanged()
        End Sub
        Partial Private Sub OnValorOrdenChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorOrdenChanged()
        End Sub
        Partial Private Sub OnDiasRepoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnDiasRepoChanged()
        End Sub
        Partial Private Sub OnProductoValoresChanging(value As String)
        End Sub
        Partial Private Sub OnProductoValoresChanged()
        End Sub
        Partial Private Sub OnCostosAdicionalesChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCostosAdicionalesChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnReceptoresXMLChanging(value As String)
        End Sub
        Partial Private Sub OnReceptoresXMLChanged()
        End Sub
        Partial Private Sub OnLiqAsociadasXMLChanging(value As String)
        End Sub
        Partial Private Sub OnLiqAsociadasXMLChanged()
        End Sub
        Partial Private Sub OnPagosOrdenesXMLChanging(value As String)
        End Sub
        Partial Private Sub OnPagosOrdenesXMLChanged()
        End Sub
        Partial Private Sub OnInstruccionesOrdenesXMLChanging(value As String)
        End Sub
        Partial Private Sub OnInstruccionesOrdenesXMLChanged()
        End Sub
        Partial Private Sub OnComisionesOrdenesXMLChanging(value As String)
        End Sub
        Partial Private Sub OnComisionesOrdenesXMLChanged()
        End Sub
        Partial Private Sub OnInstruccionesChanging(value As String)
        End Sub
        Partial Private Sub OnInstruccionesChanged()
        End Sub
        Partial Private Sub OnNotasChanging(value As String)
        End Sub
        Partial Private Sub OnNotasChanged()
        End Sub
        Partial Private Sub OnCustodiaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnCustodiaChanged()
        End Sub
        Partial Private Sub OnCustodiaSecuenciaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnCustodiaSecuenciaChanged()
        End Sub
        Partial Private Sub OnReferenciaBolsaChanging(value As String)
        End Sub
        Partial Private Sub OnReferenciaBolsaChanged()
        End Sub
        Partial Private Sub OnFechaReferenciaBolsaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaReferenciaBolsaChanged()
        End Sub
        Partial Private Sub OnDiasCumplimientoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnDiasCumplimientoChanged()
        End Sub
        Partial Private Sub OnRuedaNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnRuedaNegocioChanged()
        End Sub
        Partial Private Sub OnPrecioLimpioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioLimpioChanged()
        End Sub
        Partial Private Sub OnPrecioSucioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioSucioChanged()
        End Sub
        Partial Private Sub OnEstadoTituloChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoTituloChanged()
        End Sub
        Partial Private Sub OnIvaComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnIvaComisionChanged()
        End Sub
        Partial Private Sub OnValorFuturoClienteChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorFuturoClienteChanged()
        End Sub
        Partial Private Sub OnReceptoresCruzadasXMLChanging(value As String)
        End Sub
        Partial Private Sub OnReceptoresCruzadasXMLChanged()
        End Sub
        Partial Private Sub OnOrdenCruzadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnOrdenCruzadaChanged()
        End Sub
        Partial Private Sub OnOrdenCruzadaClienteChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnOrdenCruzadaClienteChanged()
        End Sub
        Partial Private Sub OnOrdenCruzadaReceptorChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnOrdenCruzadaReceptorChanged()
        End Sub
        Partial Private Sub OnIDOrdenOriginalChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDOrdenOriginalChanged()
        End Sub
        Partial Private Sub OnIDNroOrdenOriginalChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNroOrdenOriginalChanged()
        End Sub
        Partial Private Sub OnModificableChanging(value As Boolean)
        End Sub
        Partial Private Sub OnModificableChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnSeleccionadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSeleccionadaChanged()
        End Sub
        Partial Private Sub OnNombrePlantillaChanging(value As String)
        End Sub
        Partial Private Sub OnNombrePlantillaChanged()
        End Sub
        Partial Private Sub OnBrokenTraderChanging(value As String)
        End Sub
        Partial Private Sub OnBrokenTraderChanged()
        End Sub
        Partial Private Sub OnEntidadChanging(value As String)
        End Sub
        Partial Private Sub OnEntidadChanged()
        End Sub
        Partial Private Sub OnEstrategiaChanging(value As String)
        End Sub
        Partial Private Sub OnEstrategiaChanged()
        End Sub
        Partial Private Sub OnUsuarioWindowsChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioWindowsChanged()
        End Sub
        Partial Private Sub OnNotificacionChanging(value As String)
        End Sub
        Partial Private Sub OnNotificacionChanged()
        End Sub
        Partial Private Sub OnNotificacionDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnNotificacionDescripcionChanged()
        End Sub
        Partial Private Sub OnConstanciaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnConstanciaChanged()
        End Sub
        Partial Private Sub OnFechaConstanciaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaConstanciaChanged()
        End Sub
        Partial Private Sub OnIDComitenteADRChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteADRChanged()
        End Sub
        Partial Private Sub OnNombreClienteADRChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteADRChanged()
        End Sub
        Partial Private Sub OnTipoIdentificacionADRChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdentificacionADRChanged()
        End Sub
        Partial Private Sub OnNroDocumentoADRChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoADRChanged()
        End Sub
        Partial Private Sub OnReceptorTomaChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorTomaChanged()
        End Sub
        Partial Private Sub OnNombreReceptorTomaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorTomaChanged()
        End Sub
        Partial Private Sub OnCantidadBolsaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadBolsaChanged()
        End Sub
        Partial Private Sub OnTipoTasaFijaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTasaFijaChanged()
        End Sub
        Partial Private Sub OnEspecieEsAccionChanging(value As System.Nullable(Of System.Boolean))
        End Sub
        Partial Private Sub OnEspecieEsAccionChanged()
        End Sub
        Partial Private Sub OnCantidadCalzadaChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCantidadCalzadaChanged()
        End Sub
        Partial Private Sub OnSaldoOrdenChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnSaldoOrdenChanged()
        End Sub
        Partial Private Sub OnFechaSalidaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaSalidaChanged()
        End Sub
        Partial Private Sub OnTipoGarantiaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoGarantiaChanged()
        End Sub
        Partial Private Sub OnExistePreacuerdoChanging(value As String)
        End Sub
        Partial Private Sub OnExistePreacuerdoChanged()
        End Sub
        Partial Private Sub OnVendeTodoChanging(value As String)
        End Sub
        Partial Private Sub OnVendeTodoChanged()
        End Sub
        Partial Private Sub OnExentoRetencionChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnExentoRetencionChanged()
        End Sub
        Partial Private Sub OnPorcentajePagoEfectivoChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPorcentajePagoEfectivoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNroOrden", Storage:="_IDNroOrden", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDNroOrden() As Integer
            Get
                Return Me._IDNroOrden
            End Get
            Set
                If (Object.Equals(Me._IDNroOrden, Value) = False) Then
                    Me.OnIDNroOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNroOrden = Value
                    Me.SendPropertyChanged("IDNroOrden")
                    Me.OnIDNroOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptor", Storage:="_Receptor", DbType:="Varchar(4) NULL")>
        Public Property Receptor() As String
            Get
                Return Me._Receptor
            End Get
            Set
                If (String.Equals(Me._Receptor, Value) = False) Then
                    Me.OnReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Receptor = Value
                    Me.SendPropertyChanged("Receptor")
                    Me.OnReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptor", Storage:="_NombreReceptor", DbType:="Varchar(80) NULL")>
        Public Property NombreReceptor() As String
            Get
                Return Me._NombreReceptor
            End Get
            Set
                If (String.Equals(Me._NombreReceptor, Value) = False) Then
                    Me.OnNombreReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptor = Value
                    Me.SendPropertyChanged("NombreReceptor")
                    Me.OnNombreReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptorParaCruzada", Storage:="_ReceptorParaCruzada", DbType:="Varchar(4) NULL", IsPrimaryKey:=True)>
        Public Property ReceptorParaCruzada() As String
            Get
                Return Me._ReceptorParaCruzada
            End Get
            Set
                If (String.Equals(Me._ReceptorParaCruzada, Value) = False) Then
                    Me.OnReceptorParaCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReceptorParaCruzada = Value
                    Me.SendPropertyChanged("ReceptorParaCruzada")
                    Me.OnReceptorParaCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptorParaCruzada", Storage:="_NombreReceptorParaCruzada", DbType:="Varchar(4) NULL")>
        Public Property NombreReceptorParaCruzada() As String
            Get
                Return Me._NombreReceptorParaCruzada
            End Get
            Set
                If (String.Equals(Me._NombreReceptorParaCruzada, Value) = False) Then
                    Me.OnNombreReceptorParaCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorParaCruzada = Value
                    Me.SendPropertyChanged("NombreReceptorParaCruzada")
                    Me.OnNombreReceptorParaCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroOrden", Storage:="_NroOrden", DbType:="Int NOT NULL", CanBeNull:=True)>
        Public Property NroOrden() As Integer
            Get
                Return Me._NroOrden
            End Get
            Set
                If (Object.Equals(Me._NroOrden, Value) = False) Then
                    Me.OnNroOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOrden = Value
                    Me.SendPropertyChanged("NroOrden")
                    Me.OnNroOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=True)>
        Public Property Version() As Integer
            Get
                Return Me._Version
            End Get
            Set
                If (Object.Equals(Me._Version, Value) = False) Then
                    Me.OnVersionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Version = Value
                    Me.SendPropertyChanged("Version")
                    Me.OnVersionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaOrden", Storage:="_FechaOrden", DbType:="DateTime NOT NULL")>
        Public Property FechaOrden() As System.Nullable(Of Date)
            Get
                Return Me._FechaOrden
            End Get
            Set
                If (Me._FechaOrden.Equals(Value) = False) Then
                    Me.OnFechaOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaOrden = Value
                    Me.SendPropertyChanged("FechaOrden")
                    Me.OnFechaOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaVigencia", Storage:="_FechaVigencia", DbType:="DateTime NOT NULL")>
        Public Property FechaVigencia() As System.Nullable(Of Date)
            Get
                Return Me._FechaVigencia
            End Get
            Set
                If (Me._FechaVigencia.Equals(Value) = False) Then
                    Me.OnFechaVigenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaVigencia = Value
                    Me.SendPropertyChanged("FechaVigencia")
                    Me.OnFechaVigenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraVigencia", Storage:="_HoraVigencia", DbType:="Varchar(8) NOT NULL")>
        Public Property HoraVigencia() As String
            Get
                Return Me._HoraVigencia
            End Get
            Set
                If (String.Equals(Me._HoraVigencia, Value) = False) Then
                    Me.OnHoraVigenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HoraVigencia = Value
                    Me.SendPropertyChanged("HoraVigencia")
                    Me.OnHoraVigenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="Varchar(1) NOT NULL")>
        Public Property Clase() As String
            Get
                Return Me._Clase
            End Get
            Set
                If (String.Equals(Me._Clase, Value) = False) Then
                    Me.OnClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clase = Value
                    Me.SendPropertyChanged("Clase")
                    Me.OnClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(10) NOT NULL")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOperacion", Storage:="_NombreTipoOperacion", DbType:="Varchar(10) NOT NULL")>
        Public Property NombreTipoOperacion() As String
            Get
                Return Me._NombreTipoOperacion
            End Get
            Set
                If (String.Equals(Me._NombreTipoOperacion, Value) = False) Then
                    Me.OnNombreTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOperacion = Value
                    Me.SendPropertyChanged("NombreTipoOperacion")
                    Me.OnNombreTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoOrden", Storage:="_EstadoOrden", DbType:="Varchar(10) NOT NULL")>
        Public Property EstadoOrden() As String
            Get
                Return Me._EstadoOrden
            End Get
            Set
                If (String.Equals(Me._EstadoOrden, Value) = False) Then
                    Me.OnEstadoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoOrden = Value
                    Me.SendPropertyChanged("EstadoOrden")
                    Me.OnEstadoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEstadoOrden", Storage:="_NombreEstadoOrden", DbType:="Varchar(60) NULL")>
        Public Property NombreEstadoOrden() As String
            Get
                Return Me._NombreEstadoOrden
            End Get
            Set
                If (String.Equals(Me._NombreEstadoOrden, Value) = False) Then
                    Me.OnNombreEstadoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEstadoOrden = Value
                    Me.SendPropertyChanged("NombreEstadoOrden")
                    Me.OnNombreEstadoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(80) NULL")>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoNegocio", Storage:="_NombreTipoNegocio", DbType:="Varchar(80) NULL")>
        Public Property NombreTipoNegocio() As String
            Get
                Return Me._NombreTipoNegocio
            End Get
            Set
                If (String.Equals(Me._NombreTipoNegocio, Value) = False) Then
                    Me.OnNombreTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoNegocio = Value
                    Me.SendPropertyChanged("NombreTipoNegocio")
                    Me.OnNombreTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(80) NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoProducto", Storage:="_NombreTipoProducto", DbType:="Varchar(80) NULL")>
        Public Property NombreTipoProducto() As String
            Get
                Return Me._NombreTipoProducto
            End Get
            Set
                If (String.Equals(Me._NombreTipoProducto, Value) = False) Then
                    Me.OnNombreTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoProducto = Value
                    Me.SendPropertyChanged("NombreTipoProducto")
                    Me.OnNombreTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(80) NULL")>
        Public Property TipoOrden() As String
            Get
                Return Me._TipoOrden
            End Get
            Set
                If (String.Equals(Me._TipoOrden, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrden = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOrden", Storage:="_NombreTipoOrden", DbType:="Varchar(80) NULL")>
        Public Property NombreTipoOrden() As String
            Get
                Return Me._NombreTipoOrden
            End Get
            Set
                If (String.Equals(Me._NombreTipoOrden, Value) = False) Then
                    Me.OnNombreTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOrden = Value
                    Me.SendPropertyChanged("NombreTipoOrden")
                    Me.OnNombreTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPlantilla", Storage:="_Plantilla", DbType:="Varchar(80) NULL")>
        Public Property Plantilla() As String
            Get
                Return Me._Plantilla
            End Get
            Set
                If (String.Equals(Me._Plantilla, Value) = False) Then
                    Me.OnPlantillaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Plantilla = Value
                    Me.SendPropertyChanged("Plantilla")
                    Me.OnPlantillaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strBolsa", Storage:="_Bolsa", DbType:="Varchar(80) NOT NULL")>
        Public Property Bolsa() As String
            Get
                Return Me._Bolsa
            End Get
            Set
                If (String.Equals(Me._Bolsa, Value) = False) Then
                    Me.OnBolsaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Bolsa = Value
                    Me.SendPropertyChanged("Bolsa")
                    Me.OnBolsaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreBolsa", Storage:="_NombreBolsa", DbType:="Varchar(80) NOT NULL")>
        Public Property NombreBolsa() As String
            Get
                Return Me._NombreBolsa
            End Get
            Set
                If (String.Equals(Me._NombreBolsa, Value) = False) Then
                    Me.OnNombreBolsaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreBolsa = Value
                    Me.SendPropertyChanged("NombreBolsa")
                    Me.OnNombreBolsaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDias", Storage:="_Dias", DbType:="Int NULL", CanBeNull:=True)>
        Public Property Dias() As System.Nullable(Of System.Int32)
            Get
                Return Me._Dias
            End Get
            Set
                If (Object.Equals(Me._Dias, Value) = False) Then
                    Me.OnDiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Dias = Value
                    Me.SendPropertyChanged("Dias")
                    Me.OnDiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacion", Storage:="_Clasificacion", DbType:="Varchar(80) NOT NULL")>
        Public Property Clasificacion() As String
            Get
                Return Me._Clasificacion
            End Get
            Set
                If (String.Equals(Me._Clasificacion, Value) = False) Then
                    Me.OnClasificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clasificacion = Value
                    Me.SendPropertyChanged("Clasificacion")
                    Me.OnClasificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoLimite", Storage:="_TipoLimite", DbType:="Varchar(80) NOT NULL")>
        Public Property TipoLimite() As String
            Get
                Return Me._TipoLimite
            End Get
            Set
                If (String.Equals(Me._TipoLimite, Value) = False) Then
                    Me.OnTipoLimiteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoLimite = Value
                    Me.SendPropertyChanged("TipoLimite")
                    Me.OnTipoLimiteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDuracion", Storage:="_Duracion", DbType:="Varchar(80) NOT NULL")>
        Public Property Duracion() As String
            Get
                Return Me._Duracion
            End Get
            Set
                If (String.Equals(Me._Duracion, Value) = False) Then
                    Me.OnDuracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Duracion = Value
                    Me.SendPropertyChanged("Duracion")
                    Me.OnDuracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCondicionesNegociacion", Storage:="_CondicionesNegociacion", DbType:="Varchar(80) NOT NULL")>
        Public Property CondicionesNegociacion() As String
            Get
                Return Me._CondicionesNegociacion
            End Get
            Set
                If (String.Equals(Me._CondicionesNegociacion, Value) = False) Then
                    Me.OnCondicionesNegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CondicionesNegociacion = Value
                    Me.SendPropertyChanged("CondicionesNegociacion")
                    Me.OnCondicionesNegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFormaPago", Storage:="_FormaPago", DbType:="Varchar(80) NOT NULL")>
        Public Property FormaPago() As String
            Get
                Return Me._FormaPago
            End Get
            Set
                If (String.Equals(Me._FormaPago, Value) = False) Then
                    Me.OnFormaPagoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FormaPago = Value
                    Me.SendPropertyChanged("FormaPago")
                    Me.OnFormaPagoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoInversion", Storage:="_TipoInversion", DbType:="Varchar(80) NOT NULL")>
        Public Property TipoInversion() As String
            Get
                Return Me._TipoInversion
            End Get
            Set
                If (String.Equals(Me._TipoInversion, Value) = False) Then
                    Me.OnTipoInversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoInversion = Value
                    Me.SendPropertyChanged("TipoInversion")
                    Me.OnTipoInversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEjecucion", Storage:="_Ejecucion", DbType:="Varchar(80) NOT NULL")>
        Public Property Ejecucion() As String
            Get
                Return Me._Ejecucion
            End Get
            Set
                If (String.Equals(Me._Ejecucion, Value) = False) Then
                    Me.OnEjecucionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Ejecucion = Value
                    Me.SendPropertyChanged("Ejecucion")
                    Me.OnEjecucionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_Mercado", DbType:="Varchar(80) NOT NULL")>
        Public Property Mercado() As String
            Get
                Return Me._Mercado
            End Get
            Set
                If (String.Equals(Me._Mercado, Value) = False) Then
                    Me.OnMercadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mercado = Value
                    Me.SendPropertyChanged("Mercado")
                    Me.OnMercadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL")>
        Public Property IDComitente() As String
            Get
                Return Me._IDComitente
            End Get
            Set
                If (String.Equals(Me._IDComitente, Value) = False) Then
                    Me.OnIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitente = Value
                    Me.SendPropertyChanged("IDComitente")
                    Me.OnIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenante", Storage:="_IDOrdenante", DbType:="Char(17) NOT NULL")>
        Public Property IDOrdenante() As String
            Get
                Return Me._IDOrdenante
            End Get
            Set
                If (String.Equals(Me._IDOrdenante, Value) = False) Then
                    Me.OnIDOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenante = Value
                    Me.SendPropertyChanged("IDOrdenante")
                    Me.OnIDOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCategoriaCliente", Storage:="_CategoriaCliente", DbType:="Varchar(100) NOT NULL")>
        Public Property CategoriaCliente() As String
            Get
                Return Me._CategoriaCliente
            End Get
            Set
                If (String.Equals(Me._CategoriaCliente, Value) = False) Then
                    Me.OnCategoriaClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CategoriaCliente = Value
                    Me.SendPropertyChanged("CategoriaCliente")
                    Me.OnCategoriaClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(30) NOT NULL")>
        Public Property NroDocumento() As String
            Get
                Return Me._NroDocumento
            End Get
            Set
                If (String.Equals(Me._NroDocumento, Value) = False) Then
                    Me.OnNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumento = Value
                    Me.SendPropertyChanged("NroDocumento")
                    Me.OnNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreOrdenante", Storage:="_NombreOrdenante", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreOrdenante() As String
            Get
                Return Me._NombreOrdenante
            End Get
            Set
                If (String.Equals(Me._NombreOrdenante, Value) = False) Then
                    Me.OnNombreOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreOrdenante = Value
                    Me.SendPropertyChanged("NombreOrdenante")
                    Me.OnNombreOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(20)")>
        Public Property UBICACIONTITULO() As String
            Get
                Return Me._UBICACIONTITULO
            End Get
            Set
                If (String.Equals(Me._UBICACIONTITULO, Value) = False) Then
                    Me.OnUBICACIONTITULOChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UBICACIONTITULO = Value
                    Me.SendPropertyChanged("UBICACIONTITULO")
                    Me.OnUBICACIONTITULOChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCuentaDeposito", Storage:="_CuentaDeposito", DbType:="Int", CanBeNull:=True)>
        Public Property CuentaDeposito() As System.Nullable(Of System.Int32)
            Get
                Return Me._CuentaDeposito
            End Get
            Set
                If (Object.Equals(Me._CuentaDeposito, Value) = False) Then
                    Me.OnCuentaDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaDeposito = Value
                    Me.SendPropertyChanged("CuentaDeposito")
                    Me.OnCuentaDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionCta", Storage:="_DescripcionCta", DbType:="Varchar(40) NOT NULL")>
        Public Property DescripcionCta() As String
            Get
                Return Me._DescripcionCta
            End Get
            Set
                If (String.Equals(Me._DescripcionCta, Value) = False) Then
                    Me.OnDescripcionCtaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionCta = Value
                    Me.SendPropertyChanged("DescripcionCta")
                    Me.OnDescripcionCtaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoLEO", Storage:="_EstadoLEO", DbType:="Varchar(1) NOT NULL")>
        Public Property EstadoLEO() As String
            Get
                Return Me._EstadoLEO
            End Get
            Set
                If (String.Equals(Me._EstadoLEO, Value) = False) Then
                    Me.OnEstadoLEOChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoLEO = Value
                    Me.SendPropertyChanged("EstadoLEO")
                    Me.OnEstadoLEOChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEstadoLEO", Storage:="_NombreEstadoLEO", DbType:="Varchar(60) NULL")>
        Public Property NombreEstadoLEO() As String
            Get
                Return Me._NombreEstadoLEO
            End Get
            Set
                If (String.Equals(Me._NombreEstadoLEO, Value) = False) Then
                    Me.OnNombreEstadoLEOChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEstadoLEO = Value
                    Me.SendPropertyChanged("NombreEstadoLEO")
                    Me.OnNombreEstadoLEOChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioOperador", Storage:="_UsuarioOperador", DbType:="Varchar(60) NULL")>
        Public Property UsuarioOperador() As String
            Get
                Return Me._UsuarioOperador
            End Get
            Set
                If (String.Equals(Me._UsuarioOperador, Value) = False) Then
                    Me.OnUsuarioOperadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UsuarioOperador = Value
                    Me.SendPropertyChanged("UsuarioOperador")
                    Me.OnUsuarioOperadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCanalRecepcion", Storage:="_CanalRecepcion", DbType:="Varchar(1) NULL")>
        Public Property CanalRecepcion() As String
            Get
                Return Me._CanalRecepcion
            End Get
            Set
                If (String.Equals(Me._CanalRecepcion, Value) = False) Then
                    Me.OnCanalRecepcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CanalRecepcion = Value
                    Me.SendPropertyChanged("CanalRecepcion")
                    Me.OnCanalRecepcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMedioVerificable", Storage:="_MedioVerificable", DbType:="Varchar(1) NULL")>
        Public Property MedioVerificable() As String
            Get
                Return Me._MedioVerificable
            End Get
            Set
                If (String.Equals(Me._MedioVerificable, Value) = False) Then
                    Me.OnMedioVerificableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MedioVerificable = Value
                    Me.SendPropertyChanged("MedioVerificable")
                    Me.OnMedioVerificableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaHoraRecepcion", Storage:="_FechaRecepcion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property FechaRecepcion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaRecepcion
            End Get
            Set
                If (Object.Equals(Me._FechaRecepcion, Value) = False) Then
                    Me.OnFechaRecepcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaRecepcion = Value
                    Me.SendPropertyChanged("FechaRecepcion")
                    Me.OnFechaRecepcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroExtensionToma", Storage:="_NroExtensionToma", DbType:="Varchar(10) NULL")>
        Public Property NroExtensionToma() As String
            Get
                Return Me._NroExtensionToma
            End Get
            Set
                If (String.Equals(Me._NroExtensionToma, Value) = False) Then
                    Me.OnNroExtensionTomaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroExtensionToma = Value
                    Me.SendPropertyChanged("NroExtensionToma")
                    Me.OnNroExtensionTomaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoSAE", Storage:="_EstadoSAE", DbType:="Varchar(80) NULL")>
        Public Property EstadoSAE() As String
            Get
                Return Me._EstadoSAE
            End Get
            Set
                If (String.Equals(Me._EstadoSAE, Value) = False) Then
                    Me.OnEstadoSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoSAE = Value
                    Me.SendPropertyChanged("EstadoSAE")
                    Me.OnEstadoSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEstadoSAE", Storage:="_NombreEstadoSAE", DbType:="Varchar(60) NULL")>
        Public Property NombreEstadoSAE() As String
            Get
                Return Me._NombreEstadoSAE
            End Get
            Set
                If (String.Equals(Me._NombreEstadoSAE, Value) = False) Then
                    Me.OnNombreEstadoSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEstadoSAE = Value
                    Me.SendPropertyChanged("NombreEstadoSAE")
                    Me.OnNombreEstadoSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroOrdenSAE", Storage:="_NroOrdenSAE", DbType:="Int NULL")>
        Public Property NroOrdenSAE() As System.Nullable(Of Integer)
            Get
                Return Me._NroOrdenSAE
            End Get
            Set
                If (Me._NroOrdenSAE.Equals(Value) = False) Then
                    Me.OnNroOrdenSAEChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOrdenSAE = Value
                    Me.SendPropertyChanged("NroOrdenSAE")
                    Me.OnNroOrdenSAEChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(25) NOT NULL")>
        Public Property Especie() As String
            Get
                Return Me._Especie
            End Get
            Set
                If (String.Equals(Me._Especie, Value) = False) Then
                    Me.OnEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Especie = Value
                    Me.SendPropertyChanged("Especie")
                    Me.OnEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strISIN", Storage:="_ISIN", DbType:="Varchar(25) NULL")>
        Public Property ISIN() As String
            Get
                Return Me._ISIN
            End Get
            Set
                If (String.Equals(Me._ISIN, Value) = False) Then
                    Me.OnISINChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ISIN = Value
                    Me.SendPropertyChanged("ISIN")
                    Me.OnISINChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaEmision", Storage:="_FechaEmision", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaEmision
            End Get
            Set
                If (Object.Equals(Me._FechaEmision, Value) = False) Then
                    Me.OnFechaEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaEmision = Value
                    Me.SendPropertyChanged("FechaEmision")
                    Me.OnFechaEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaVencimiento", Storage:="_FechaVencimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaVencimiento
            End Get
            Set
                If (Object.Equals(Me._FechaVencimiento, Value) = False) Then
                    Me.OnFechaVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaVencimiento = Value
                    Me.SendPropertyChanged("FechaVencimiento")
                    Me.OnFechaVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCumplimiento", Storage:="_FechaCumplimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaCumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaCumplimiento
            End Get
            Set
                If (Object.Equals(Me._FechaCumplimiento, Value) = False) Then
                    Me.OnFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCumplimiento = Value
                    Me.SendPropertyChanged("FechaCumplimiento")
                    Me.OnFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaFacial", Storage:="_TasaFacial", DbType:="Float NULL")>
        Public Property TasaFacial() As System.Nullable(Of Double)
            Get
                Return Me._TasaFacial
            End Get
            Set
                If (Me._TasaFacial.Equals(Value) = False) Then
                    Me.OnTasaFacialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaFacial = Value
                    Me.SendPropertyChanged("TasaFacial")
                    Me.OnTasaFacialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(80) NULL")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreModalidad", Storage:="_NombreModalidad", DbType:="Varchar(80) NULL")>
        Public Property NombreModalidad() As String
            Get
                Return Me._NombreModalidad
            End Get
            Set
                If (String.Equals(Me._NombreModalidad, Value) = False) Then
                    Me.OnNombreModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreModalidad = Value
                    Me.SendPropertyChanged("NombreModalidad")
                    Me.OnNombreModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="Varchar(20) NULL")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float NULL")>
        Public Property PuntosIndicador() As System.Nullable(Of Double)
            Get
                Return Me._PuntosIndicador
            End Get
            Set
                If (Me._PuntosIndicador.Equals(Value) = False) Then
                    Me.OnPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PuntosIndicador = Value
                    Me.SendPropertyChanged("PuntosIndicador")
                    Me.OnPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEstandarizada", Storage:="_Estandarizada", DbType:="Bit NULL")>
        Public Property Estandarizada() As System.Nullable(Of Boolean)
            Get
                Return Me._Estandarizada
            End Get
            Set
                If (Me._Estandarizada.Equals(Value) = False) Then
                    Me.OnEstandarizadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estandarizada = Value
                    Me.SendPropertyChanged("Estandarizada")
                    Me.OnEstandarizadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEnPesos", Storage:="_EnPesos", DbType:="Bit NOT NULL")>
        Public Property EnPesos() As System.Nullable(Of Boolean)
            Get
                Return Me._EnPesos
            End Get
            Set
                If (Me._EnPesos.Equals(Value) = False) Then
                    Me.OnEnPesosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EnPesos = Value
                    Me.SendPropertyChanged("EnPesos")
                    Me.OnEnPesosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NOT NULL")>
        Public Property Cantidad() As System.Nullable(Of Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Me._Cantidad.Equals(Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecio", Storage:="_Precio", DbType:="Float NOT NULL")>
        Public Property Precio() As System.Nullable(Of Double)
            Get
                Return Me._Precio
            End Get
            Set
                If (Me._Precio.Equals(Value) = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioMaximoMinimo", Storage:="_PrecioMaximoMinimo", DbType:="Float NOT NULL")>
        Public Property PrecioMaximoMinimo() As System.Nullable(Of Double)
            Get
                Return Me._PrecioMaximoMinimo
            End Get
            Set
                If (Me._PrecioMaximoMinimo.Equals(Value) = False) Then
                    Me.OnPrecioMaximoMinimoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioMaximoMinimo = Value
                    Me.SendPropertyChanged("PrecioMaximoMinimo")
                    Me.OnPrecioMaximoMinimoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorCaptacionGiro", Storage:="_ValorCaptacionGiro", DbType:="Float NOT NULL")>
        Public Property ValorCaptacionGiro() As System.Nullable(Of Double)
            Get
                Return Me._ValorCaptacionGiro
            End Get
            Set
                If (Me._ValorCaptacionGiro.Equals(Value) = False) Then
                    Me.OnValorCaptacionGiroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorCaptacionGiro = Value
                    Me.SendPropertyChanged("ValorCaptacionGiro")
                    Me.OnValorCaptacionGiroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorFuturoRepo", Storage:="_ValorFuturoRepo", DbType:="Float NOT NULL")>
        Public Property ValorFuturoRepo() As System.Nullable(Of Double)
            Get
                Return Me._ValorFuturoRepo
            End Get
            Set
                If (Me._ValorFuturoRepo.Equals(Value) = False) Then
                    Me.OnValorFuturoRepoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorFuturoRepo = Value
                    Me.SendPropertyChanged("ValorFuturoRepo")
                    Me.OnValorFuturoRepoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaRegistro", Storage:="_TasaRegistro", DbType:="Float NOT NULL")>
        Public Property TasaRegistro() As System.Nullable(Of Double)
            Get
                Return Me._TasaRegistro
            End Get
            Set
                If (Me._TasaRegistro.Equals(Value) = False) Then
                    Me.OnTasaRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaRegistro = Value
                    Me.SendPropertyChanged("TasaRegistro")
                    Me.OnTasaRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaCliente", Storage:="_TasaCliente", DbType:="Float NOT NULL")>
        Public Property TasaCliente() As System.Nullable(Of Double)
            Get
                Return Me._TasaCliente
            End Get
            Set
                If (Me._TasaCliente.Equals(Value) = False) Then
                    Me.OnTasaClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaCliente = Value
                    Me.SendPropertyChanged("TasaCliente")
                    Me.OnTasaClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float")>
        Public Property TasaNominal() As System.Nullable(Of Double)
            Get
                Return Me._TasaNominal
            End Get
            Set
                If (Me._TasaNominal.Equals(Value) = False) Then
                    Me.OnTasaNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaNominal = Value
                    Me.SendPropertyChanged("TasaNominal")
                    Me.OnTasaNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComision", Storage:="_Comision", DbType:="Float")>
        Public Property Comision() As System.Nullable(Of Double)
            Get
                Return Me._Comision
            End Get
            Set
                If (Me._Comision.Equals(Value) = False) Then
                    Me.OnComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Comision = Value
                    Me.SendPropertyChanged("Comision")
                    Me.OnComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorComision", Storage:="_ValorComision", DbType:="Float")>
        Public Property ValorComision() As System.Nullable(Of Double)
            Get
                Return Me._ValorComision
            End Get
            Set
                If (Me._ValorComision.Equals(Value) = False) Then
                    Me.OnValorComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorComision = Value
                    Me.SendPropertyChanged("ValorComision")
                    Me.OnValorComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCastigo", Storage:="_Castigo", DbType:="Float")>
        Public Property Castigo() As System.Nullable(Of Double)
            Get
                Return Me._Castigo
            End Get
            Set
                If (Me._Castigo.Equals(Value) = False) Then
                    Me.OnCastigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Castigo = Value
                    Me.SendPropertyChanged("Castigo")
                    Me.OnCastigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorAccion", Storage:="_ValorAccion", DbType:="Float NOT NULL")>
        Public Property ValorAccion() As System.Nullable(Of Double)
            Get
                Return Me._ValorAccion
            End Get
            Set
                If (Me._ValorAccion.Equals(Value) = False) Then
                    Me.OnValorAccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorAccion = Value
                    Me.SendPropertyChanged("ValorAccion")
                    Me.OnValorAccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorOrden", Storage:="_ValorOrden", DbType:="Float NOT NULL")>
        Public Property ValorOrden() As System.Nullable(Of Double)
            Get
                Return Me._ValorOrden
            End Get
            Set
                If (Me._ValorOrden.Equals(Value) = False) Then
                    Me.OnValorOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorOrden = Value
                    Me.SendPropertyChanged("ValorOrden")
                    Me.OnValorOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDiasRepo", Storage:="_DiasRepo", DbType:="Int NOT NULL")>
        Public Property DiasRepo() As System.Nullable(Of Integer)
            Get
                Return Me._DiasRepo
            End Get
            Set
                If (Me._DiasRepo.Equals(Value) = False) Then
                    Me.OnDiasRepoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DiasRepo = Value
                    Me.SendPropertyChanged("DiasRepo")
                    Me.OnDiasRepoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strProductoValores", Storage:="_ProductoValores", DbType:="Varchar(11) NULL")>
        Public Property ProductoValores() As String
            Get
                Return Me._ProductoValores
            End Get
            Set
                If (String.Equals(Me._ProductoValores, Value) = False) Then
                    Me.OnProductoValoresChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ProductoValores = Value
                    Me.SendPropertyChanged("ProductoValores")
                    Me.OnProductoValoresChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCostosAdicionales", Storage:="_CostosAdicionales", DbType:="Float NULL")>
        Public Property CostosAdicionales() As System.Nullable(Of Double)
            Get
                Return Me._CostosAdicionales
            End Get
            Set
                If (Me._CostosAdicionales.Equals(Value) = False) Then
                    Me.OnCostosAdicionalesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CostosAdicionales = Value
                    Me.SendPropertyChanged("CostosAdicionales")
                    Me.OnCostosAdicionalesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(80) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptoresXML", Storage:="_ReceptoresXML", DbType:="Varchar(8000)")>
        Public Property ReceptoresXML() As String
            Get
                Return Me._ReceptoresXML
            End Get
            Set
                If (String.Equals(Me._ReceptoresXML, Value) = False) Then
                    Me.OnReceptoresXMLChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReceptoresXML = Value
                    Me.SendPropertyChanged("ReceptoresXML")
                    Me.OnReceptoresXMLChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLiqAsociadasXML", Storage:="_LiqAsociadasXML", DbType:="Varchar(8000)")>
        Public Property LiqAsociadasXML() As String
            Get
                Return Me._LiqAsociadasXML
            End Get
            Set
                If (String.Equals(Me._LiqAsociadasXML, Value) = False) Then
                    Me.OnLiqAsociadasXMLChanging(Value)
                    Me.SendPropertyChanging()
                    Me._LiqAsociadasXML = Value
                    Me.SendPropertyChanged("LiqAsociadasXML")
                    Me.OnLiqAsociadasXMLChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPagosOrdenesXML", Storage:="_PagosOrdenesXML", DbType:="Varchar(1000)")>
        Public Property PagosOrdenesXML() As String
            Get
                Return Me._PagosOrdenesXML
            End Get
            Set
                If (String.Equals(Me._PagosOrdenesXML, Value) = False) Then
                    Me.OnPagosOrdenesXMLChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PagosOrdenesXML = Value
                    Me.SendPropertyChanged("PagosOrdenesXML")
                    Me.OnPagosOrdenesXMLChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInstruccionesOrdenesXML", Storage:="_InstruccionesOrdenesXML", DbType:="Varchar(8000)")>
        Public Property InstruccionesOrdenesXML() As String
            Get
                Return Me._InstruccionesOrdenesXML
            End Get
            Set
                If (String.Equals(Me._InstruccionesOrdenesXML, Value) = False) Then
                    Me.OnInstruccionesOrdenesXMLChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InstruccionesOrdenesXML = Value
                    Me.SendPropertyChanged("InstruccionesOrdenesXML")
                    Me.OnInstruccionesOrdenesXMLChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComisionesOrdenesXML", Storage:="_ComisionesOrdenesXML", DbType:="Varchar(8000)")>
        Public Property ComisionesOrdenesXML() As String
            Get
                Return Me._ComisionesOrdenesXML
            End Get
            Set
                If (String.Equals(Me._ComisionesOrdenesXML, Value) = False) Then
                    Me.OnComisionesOrdenesXMLChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComisionesOrdenesXML = Value
                    Me.SendPropertyChanged("ComisionesOrdenesXML")
                    Me.OnComisionesOrdenesXMLChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInstrucciones", Storage:="_Instrucciones", DbType:="Varchar(255)")>
        Public Property Instrucciones() As String
            Get
                Return Me._Instrucciones
            End Get
            Set
                If (String.Equals(Me._Instrucciones, Value) = False) Then
                    Me.OnInstruccionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Instrucciones = Value
                    Me.SendPropertyChanged("Instrucciones")
                    Me.OnInstruccionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotas", Storage:="_Notas", DbType:="Varchar(255)")>
        Public Property Notas() As String
            Get
                Return Me._Notas
            End Get
            Set
                If (String.Equals(Me._Notas, Value) = False) Then
                    Me.OnNotasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Notas = Value
                    Me.SendPropertyChanged("Notas")
                    Me.OnNotasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCustodia", Storage:="_Custodia", DbType:="Int NULL", CanBeNull:=True)>
        Public Property Custodia() As System.Nullable(Of System.Int32)
            Get
                Return Me._Custodia
            End Get
            Set
                If (Object.Equals(Me._Custodia, Value) = False) Then
                    Me.OnCustodiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Custodia = Value
                    Me.SendPropertyChanged("Custodia")
                    Me.OnCustodiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCustodiaSecuencia", Storage:="_CustodiaSecuencia", DbType:="Int NULL", CanBeNull:=True)>
        Public Property CustodiaSecuencia() As System.Nullable(Of System.Int32)
            Get
                Return Me._CustodiaSecuencia
            End Get
            Set
                If (Object.Equals(Me._CustodiaSecuencia, Value) = False) Then
                    Me.OnCustodiaSecuenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CustodiaSecuencia = Value
                    Me.SendPropertyChanged("CustodiaSecuencia")
                    Me.OnCustodiaSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReferenciaBolsa", Storage:="_ReferenciaBolsa", DbType:="Varchar(50)")>
        Public Property ReferenciaBolsa() As String
            Get
                Return Me._ReferenciaBolsa
            End Get
            Set
                If (String.Equals(Me._ReferenciaBolsa, Value) = False) Then
                    Me.OnReferenciaBolsaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReferenciaBolsa = Value
                    Me.SendPropertyChanged("ReferenciaBolsa")
                    Me.OnReferenciaBolsaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaReferenciaBolsa", Storage:="_FechaReferenciaBolsa", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaReferenciaBolsa() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaReferenciaBolsa
            End Get
            Set
                If (Object.Equals(Me._FechaReferenciaBolsa, Value) = False) Then
                    Me.OnFechaReferenciaBolsaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaReferenciaBolsa = Value
                    Me.SendPropertyChanged("FechaReferenciaBolsa")
                    Me.OnFechaReferenciaBolsaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDiasCumplimiento", Storage:="_DiasCumplimiento", DbType:="Int NULL", CanBeNull:=True)>
        Public Property DiasCumplimiento() As System.Nullable(Of System.Int32)
            Get
                Return Me._DiasCumplimiento
            End Get
            Set
                If (Object.Equals(Me._DiasCumplimiento, Value) = False) Then
                    Me.OnDiasCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DiasCumplimiento = Value
                    Me.SendPropertyChanged("DiasCumplimiento")
                    Me.OnDiasCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRuedaNegocio", Storage:="_RuedaNegocio", DbType:="Varchar(50)")>
        Public Property RuedaNegocio() As String
            Get
                Return Me._RuedaNegocio
            End Get
            Set
                If (String.Equals(Me._RuedaNegocio, Value) = False) Then
                    Me.OnRuedaNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RuedaNegocio = Value
                    Me.SendPropertyChanged("RuedaNegocio")
                    Me.OnRuedaNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioLimpio", Storage:="_PrecioLimpio", DbType:="Float NULL")>
        Public Property PrecioLimpio() As System.Nullable(Of Double)
            Get
                Return Me._PrecioLimpio
            End Get
            Set
                If (Me._PrecioLimpio.Equals(Value) = False) Then
                    Me.OnPrecioLimpioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioLimpio = Value
                    Me.SendPropertyChanged("PrecioLimpio")
                    Me.OnPrecioLimpioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioSucio", Storage:="_PrecioSucio", DbType:="Float NULL")>
        Public Property PrecioSucio() As System.Nullable(Of Double)
            Get
                Return Me._PrecioSucio
            End Get
            Set
                If (Me._PrecioSucio.Equals(Value) = False) Then
                    Me.OnPrecioSucioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioSucio = Value
                    Me.SendPropertyChanged("PrecioSucio")
                    Me.OnPrecioSucioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoTitulo", Storage:="_EstadoTitulo", DbType:="Varchar(50)")>
        Public Property EstadoTitulo() As String
            Get
                Return Me._EstadoTitulo
            End Get
            Set
                If (String.Equals(Me._EstadoTitulo, Value) = False) Then
                    Me.OnEstadoTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoTitulo = Value
                    Me.SendPropertyChanged("EstadoTitulo")
                    Me.OnEstadoTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblIvaComision", Storage:="_IvaComision", DbType:="Float")>
        Public Property IvaComision() As System.Nullable(Of Double)
            Get
                Return Me._IvaComision
            End Get
            Set
                If (Me._IvaComision.Equals(Value) = False) Then
                    Me.OnIvaComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IvaComision = Value
                    Me.SendPropertyChanged("IvaComision")
                    Me.OnIvaComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorFuturoCliente", Storage:="_ValorFuturoCliente", DbType:="Float")>
        Public Property ValorFuturoCliente() As System.Nullable(Of Double)
            Get
                Return Me._ValorFuturoCliente
            End Get
            Set
                If (Me._ValorFuturoCliente.Equals(Value) = False) Then
                    Me.OnValorFuturoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorFuturoCliente = Value
                    Me.SendPropertyChanged("ValorFuturoCliente")
                    Me.OnValorFuturoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptoresCruzadasXML", Storage:="_ReceptoresCruzadasXML", DbType:="Varchar(8000) NULL")>
        Public Property ReceptoresCruzadasXML() As String
            Get
                Return Me._ReceptoresCruzadasXML
            End Get
            Set
                If (String.Equals(Me._ReceptoresCruzadasXML, Value) = False) Then
                    Me.OnReceptoresCruzadasXMLChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReceptoresCruzadasXML = Value
                    Me.SendPropertyChanged("ReceptoresCruzadasXML")
                    Me.OnReceptoresCruzadasXMLChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdenCruzada", Storage:="_OrdenCruzada", DbType:="Bit NULL")>
        Public Property OrdenCruzada() As System.Nullable(Of Boolean)
            Get
                Return Me._OrdenCruzada
            End Get
            Set
                If (Me._OrdenCruzada.Equals(Value) = False) Then
                    Me.OnOrdenCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._OrdenCruzada = Value
                    Me.SendPropertyChanged("OrdenCruzada")
                    Me.OnOrdenCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdenCruzadaCliente", Storage:="_OrdenCruzadaCliente", DbType:="Bit NULL")>
        Public Property OrdenCruzadaCliente() As System.Nullable(Of Boolean)
            Get
                Return Me._OrdenCruzadaCliente
            End Get
            Set
                If (Me._OrdenCruzadaCliente.Equals(Value) = False) Then
                    Me.OnOrdenCruzadaClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._OrdenCruzadaCliente = Value
                    Me.SendPropertyChanged("OrdenCruzadaCliente")
                    Me.OnOrdenCruzadaClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOrdenCruzadaReceptor", Storage:="_OrdenCruzadaReceptor", DbType:="Bit NULL")>
        Public Property OrdenCruzadaReceptor() As System.Nullable(Of Boolean)
            Get
                Return Me._OrdenCruzadaReceptor
            End Get
            Set
                If (Me._OrdenCruzadaReceptor.Equals(Value) = False) Then
                    Me.OnOrdenCruzadaReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._OrdenCruzadaReceptor = Value
                    Me.SendPropertyChanged("OrdenCruzadaReceptor")
                    Me.OnOrdenCruzadaReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenOriginal", Storage:="_IDOrdenOriginal", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDOrdenOriginal() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDOrdenOriginal
            End Get
            Set
                If (Object.Equals(Me._IDOrdenOriginal, Value) = False) Then
                    Me.OnIDOrdenOriginalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenOriginal = Value
                    Me.SendPropertyChanged("IDOrdenOriginal")
                    Me.OnIDOrdenOriginalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNroOrdenOriginal", Storage:="_IDNroOrdenOriginal", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDNroOrdenOriginal() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNroOrdenOriginal
            End Get
            Set
                If (Object.Equals(Me._IDNroOrdenOriginal, Value) = False) Then
                    Me.OnIDNroOrdenOriginalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNroOrdenOriginal = Value
                    Me.SendPropertyChanged("IDNroOrdenOriginal")
                    Me.OnIDNroOrdenOriginalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logModificable", Storage:="_Modificable", DbType:="Bit NOT NULL")>
        Public Property Modificable() As Boolean
            Get
                Return Me._Modificable
            End Get
            Set
                If ((Me._Modificable = Value) _
                            = False) Then
                    Me.OnModificableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modificable = Value
                    Me.SendPropertyChanged("Modificable")
                    Me.OnModificableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="Datetime NOT NULL")>
        Public Property FechaActualizacion() As Date
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If ((Me._FechaActualizacion = Value) _
                            = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionada", Storage:="_Seleccionada", DbType:="Bit NULL")>
        Public Property Seleccionada() As System.Nullable(Of Boolean)
            Get
                Return Me._Seleccionada
            End Get
            Set
                If (Me._Seleccionada.Equals(Value) = False) Then
                    Me.OnSeleccionadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccionada = Value
                    Me.SendPropertyChanged("Seleccionada")
                    Me.OnSeleccionadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombrePlantilla", Storage:="_NombrePlantilla", DbType:="Varchar(100) NULL")>
        Public Property NombrePlantilla() As String
            Get
                Return Me._NombrePlantilla
            End Get
            Set
                If (String.Equals(Me._NombrePlantilla, Value) = False) Then
                    Me.OnNombrePlantillaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombrePlantilla = Value
                    Me.SendPropertyChanged("NombrePlantilla")
                    Me.OnNombrePlantillaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strBrokenTrader", Storage:="_BrokenTrader", DbType:="Varchar(5) NULL")>
        Public Property BrokenTrader() As String
            Get
                Return Me._BrokenTrader
            End Get
            Set
                If (String.Equals(Me._BrokenTrader, Value) = False) Then
                    Me.OnBrokenTraderChanging(Value)
                    Me.SendPropertyChanging()
                    Me._BrokenTrader = Value
                    Me.SendPropertyChanged("BrokenTrader")
                    Me.OnBrokenTraderChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEntidad", Storage:="_Entidad", DbType:="Varchar(4) NULL")>
        Public Property Entidad() As String
            Get
                Return Me._Entidad
            End Get
            Set
                If (String.Equals(Me._Entidad, Value) = False) Then
                    Me.OnEntidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Entidad = Value
                    Me.SendPropertyChanged("Entidad")
                    Me.OnEntidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstrategia", Storage:="_Estrategia", DbType:="Varchar(4) NULL")>
        Public Property Estrategia() As String
            Get
                Return Me._Estrategia
            End Get
            Set
                If (String.Equals(Me._Estrategia, Value) = False) Then
                    Me.OnEstrategiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estrategia = Value
                    Me.SendPropertyChanged("Estrategia")
                    Me.OnEstrategiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioWindows", Storage:="_UsuarioWindows", DbType:="Varchar(80) NULL")>
        Public Property UsuarioWindows() As String
            Get
                Return Me._UsuarioWindows
            End Get
            Set
                If (String.Equals(Me._UsuarioWindows, Value) = False) Then
                    Me.OnUsuarioWindowsChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UsuarioWindows = Value
                    Me.SendPropertyChanged("UsuarioWindows")
                    Me.OnUsuarioWindowsChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotificacion", Storage:="_Notificacion", DbType:="Varchar(500) NULL")>
        Public Property Notificacion() As String
            Get
                Return Me._Notificacion
            End Get
            Set
                If (String.Equals(Me._Notificacion, Value) = False) Then
                    Me.OnNotificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Notificacion = Value
                    Me.SendPropertyChanged("Notificacion")
                    Me.OnNotificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotificacionDescripcion", Storage:="_NotificacionDescripcion", DbType:="Varchar(MAX) NULL")>
        Public Property NotificacionDescripcion() As String
            Get
                Return Me._NotificacionDescripcion
            End Get
            Set
                If (String.Equals(Me._NotificacionDescripcion, Value) = False) Then
                    Me.OnNotificacionDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NotificacionDescripcion = Value
                    Me.SendPropertyChanged("NotificacionDescripcion")
                    Me.OnNotificacionDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblConstancia", Storage:="_Constancia", DbType:="Float")>
        Public Property Constancia() As System.Nullable(Of Double)
            Get
                Return Me._Constancia
            End Get
            Set
                If (Me._Constancia.Equals(Value) = False) Then
                    Me.OnConstanciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Constancia = Value
                    Me.SendPropertyChanged("Constancia")
                    Me.OnConstanciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmConstancia", Storage:="_FechaConstancia", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaConstancia() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaConstancia
            End Get
            Set
                If (Object.Equals(Me._FechaConstancia, Value) = False) Then
                    Me.OnFechaConstanciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaConstancia = Value
                    Me.SendPropertyChanged("FechaConstancia")
                    Me.OnFechaConstanciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitenteADR", Storage:="_IDComitenteADR", DbType:="Char(17) NOT NULL")>
        Public Property IDComitenteADR() As String
            Get
                Return Me._IDComitenteADR
            End Get
            Set
                If (String.Equals(Me._IDComitenteADR, Value) = False) Then
                    Me.OnIDComitenteADRChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitenteADR = Value
                    Me.SendPropertyChanged("IDComitenteADR")
                    Me.OnIDComitenteADRChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClienteADR", Storage:="_NombreClienteADR", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreClienteADR() As String
            Get
                Return Me._NombreClienteADR
            End Get
            Set
                If (String.Equals(Me._NombreClienteADR, Value) = False) Then
                    Me.OnNombreClienteADRChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreClienteADR = Value
                    Me.SendPropertyChanged("NombreClienteADR")
                    Me.OnNombreClienteADRChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacionADR", Storage:="_TipoIdentificacionADR", DbType:="Varchar(30) NOT NULL")>
        Public Property TipoIdentificacionADR() As String
            Get
                Return Me._TipoIdentificacionADR
            End Get
            Set
                If (String.Equals(Me._TipoIdentificacionADR, Value) = False) Then
                    Me.OnTipoIdentificacionADRChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdentificacionADR = Value
                    Me.SendPropertyChanged("TipoIdentificacionADR")
                    Me.OnTipoIdentificacionADRChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoADR", Storage:="_NroDocumentoADR", DbType:="Varchar(30) NOT NULL")>
        Public Property NroDocumentoADR() As String
            Get
                Return Me._NroDocumentoADR
            End Get
            Set
                If (String.Equals(Me._NroDocumentoADR, Value) = False) Then
                    Me.OnNroDocumentoADRChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumentoADR = Value
                    Me.SendPropertyChanged("NroDocumentoADR")
                    Me.OnNroDocumentoADRChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptorToma", Storage:="_ReceptorToma", DbType:="Varchar(4) NULL")>
        Public Property ReceptorToma() As String
            Get
                Return Me._ReceptorToma
            End Get
            Set
                If (String.Equals(Me._ReceptorToma, Value) = False) Then
                    Me.OnReceptorTomaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReceptorToma = Value
                    Me.SendPropertyChanged("ReceptorToma")
                    Me.OnReceptorTomaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptorToma", Storage:="_NombreReceptorToma", DbType:="Varchar(80) NULL")>
        Public Property NombreReceptorToma() As String
            Get
                Return Me._NombreReceptorToma
            End Get
            Set
                If (String.Equals(Me._NombreReceptorToma, Value) = False) Then
                    Me.OnNombreReceptorTomaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorToma = Value
                    Me.SendPropertyChanged("NombreReceptorToma")
                    Me.OnNombreReceptorTomaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadBolsa", Storage:="_CantidadBolsa", DbType:="Float NOT NULL")>
        Public Property CantidadBolsa() As System.Nullable(Of Double)
            Get
                Return Me._CantidadBolsa
            End Get
            Set
                If (Me._CantidadBolsa.Equals(Value) = False) Then
                    Me.OnCantidadBolsaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadBolsa = Value
                    Me.SendPropertyChanged("CantidadBolsa")
                    Me.OnCantidadBolsaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTasaFija", Storage:="_TipoTasaFija", DbType:="Varchar(20) NULL")>
        Public Property TipoTasaFija() As String
            Get
                Return Me._TipoTasaFija
            End Get
            Set
                If (String.Equals(Me._TipoTasaFija, Value) = False) Then
                    Me.OnTipoTasaFijaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTasaFija = Value
                    Me.SendPropertyChanged("TipoTasaFija")
                    Me.OnTipoTasaFijaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEspecieEsAccion", Storage:="_EspecieEsAccion", DbType:="Bit NULL", CanBeNull:=True)>
        Public Property EspecieEsAccion() As System.Nullable(Of System.Boolean)
            Get
                Return Me._EspecieEsAccion
            End Get
            Set
                If (Object.Equals(Me._EspecieEsAccion, Value) = False) Then
                    Me.OnEspecieEsAccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EspecieEsAccion = Value
                    Me.SendPropertyChanged("EspecieEsAccion")
                    Me.OnEspecieEsAccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadCalzada", Storage:="_CantidadCalzada", DbType:="Float NULL", CanBeNull:=True)>
        Public Property CantidadCalzada() As System.Nullable(Of System.Double)
            Get
                Return Me._CantidadCalzada
            End Get
            Set
                If (Object.Equals(Me._CantidadCalzada, Value) = False) Then
                    Me.OnCantidadCalzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadCalzada = Value
                    Me.SendPropertyChanged("CantidadCalzada")
                    Me.OnCantidadCalzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSaldoOrden", Storage:="_SaldoOrden", DbType:="Float NULL", CanBeNull:=True)>
        Public Property SaldoOrden() As System.Nullable(Of System.Double)
            Get
                Return Me._SaldoOrden
            End Get
            Set
                If (Object.Equals(Me._SaldoOrden, Value) = False) Then
                    Me.OnSaldoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SaldoOrden = Value
                    Me.SendPropertyChanged("SaldoOrden")
                    Me.OnSaldoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaSalida", Storage:="_FechaSalida", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property FechaSalida() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaSalida
            End Get
            Set
                If (Object.Equals(Me._FechaSalida, Value) = False) Then
                    Me.OnFechaSalidaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaSalida = Value
                    Me.SendPropertyChanged("FechaSalida")
                    Me.OnFechaSalidaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoGarantia", Storage:="_TipoGarantia", DbType:="Varchar(4) NULL")>
        Public Property TipoGarantia() As String
            Get
                Return Me._TipoGarantia
            End Get
            Set
                If (String.Equals(Me._TipoGarantia, Value) = False) Then
                    Me.OnTipoGarantiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoGarantia = Value
                    Me.SendPropertyChanged("TipoGarantia")
                    Me.OnTipoGarantiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strExistePreacuerdo", Storage:="_ExistePreacuerdo", DbType:="Varchar(1)")>
        Public Property ExistePreacuerdo() As String
            Get
                Return Me._ExistePreacuerdo
            End Get
            Set
                If (String.Equals(Me._ExistePreacuerdo, Value) = False) Then
                    Me.OnExistePreacuerdoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ExistePreacuerdo = Value
                    Me.SendPropertyChanged("ExistePreacuerdo")
                    Me.OnExistePreacuerdoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strVendeTodo", Storage:="_VendeTodo", DbType:="Varchar(1)")>
        Public Property VendeTodo() As String
            Get
                Return Me._VendeTodo
            End Get
            Set
                If (String.Equals(Me._VendeTodo, Value) = False) Then
                    Me.OnVendeTodoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._VendeTodo = Value
                    Me.SendPropertyChanged("VendeTodo")
                    Me.OnVendeTodoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExentoRetencion", Storage:="_ExentoRetencion", DbType:="Bit NULL")>
        Public Property ExentoRetencion() As System.Nullable(Of Boolean)
            Get
                Return Me._ExentoRetencion
            End Get
            Set
                If (Me._ExentoRetencion.Equals(Value) = False) Then
                    Me.OnExentoRetencionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ExentoRetencion = Value
                    Me.SendPropertyChanged("ExentoRetencion")
                    Me.OnExentoRetencionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajePagoEfectivo", Storage:="_PorcentajePagoEfectivo", DbType:="Float NULL", CanBeNull:=True)>
        Public Property PorcentajePagoEfectivo() As System.Nullable(Of System.Double)
            Get
                Return Me._PorcentajePagoEfectivo
            End Get
            Set
                If (Object.Equals(Me._PorcentajePagoEfectivo, Value) = False) Then
                    Me.OnPorcentajePagoEfectivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajePagoEfectivo = Value
                    Me.SendPropertyChanged("PorcentajePagoEfectivo")
                    Me.OnPorcentajePagoEfectivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class MejorPrecioEspecieOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Especie As String

        Private _Precio As System.Nullable(Of Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnEspecieChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(25) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property Especie() As String
            Get
                Return Me._Especie
            End Get
            Set
                If (String.Equals(Me._Especie, Value) = False) Then
                    Me.OnEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Especie = Value
                    Me.SendPropertyChanged("Especie")
                    Me.OnEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecio", Storage:="_Precio", DbType:="Float NULL")>
        Public Property Precio() As System.Nullable(Of Double)
            Get
                Return Me._Precio
            End Get
            Set
                If (Me._Precio.Equals(Value) = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class Liquidacion
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _lngIdOrden As Integer

        Private _intNroFolio As System.Nullable(Of Integer)

        Private _numCantidad As System.Nullable(Of Decimal)

        Private _dtmFechaCumplimiento As System.Nullable(Of Date)

        Private _numMonto As System.Nullable(Of Decimal)

        Private _numPrecio As System.Nullable(Of Decimal)

        Private _intDiasDeCumplimiento As System.Nullable(Of Integer)

        Private _numTasa As System.Nullable(Of Decimal)

        Private _strNemotecnico As String

        Private _dtmFechaEmision As System.Nullable(Of Date)

        Private _strCodigoISIN As String

        Private _strTrader As String

        Private _strRuedaNegocio As String

        Private _strModalidad As String

        Private _dtmFechaVencimiento As System.Nullable(Of Date)

        Private _strMercado As String

        Private _strTipoMercado As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnlngIdOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIdOrdenChanged()
        End Sub
        Partial Private Sub OnintNroFolioChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintNroFolioChanged()
        End Sub
        Partial Private Sub OnnumCantidadChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnnumCantidadChanged()
        End Sub
        Partial Private Sub OndtmFechaCumplimientoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnnumMontoChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnnumMontoChanged()
        End Sub
        Partial Private Sub OnnumPrecioChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnnumPrecioChanged()
        End Sub
        Partial Private Sub OnintDiasDeCumplimientoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintDiasDeCumplimientoChanged()
        End Sub
        Partial Private Sub OnnumTasaChanging(value As System.Nullable(Of Decimal))
        End Sub
        Partial Private Sub OnnumTasaChanged()
        End Sub
        Partial Private Sub OnstrNemotecnicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrNemotecnicoChanged()
        End Sub
        Partial Private Sub OndtmFechaEmisionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmFechaEmisionChanged()
        End Sub
        Partial Private Sub OnstrCodigoISINChanging(value As String)
        End Sub
        Partial Private Sub OnstrCodigoISINChanged()
        End Sub
        Partial Private Sub OnstrTraderChanging(value As String)
        End Sub
        Partial Private Sub OnstrTraderChanged()
        End Sub
        Partial Private Sub OnstrRuedaNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnstrRuedaNegocioChanged()
        End Sub
        Partial Private Sub OnstrModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrModalidadChanged()
        End Sub
        Partial Private Sub OndtmFechaVencimientoChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmFechaVencimientoChanged()
        End Sub
        Partial Private Sub OnstrMercadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrMercadoChanged()
        End Sub
        Partial Private Sub OnstrTipoMercadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoMercadoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdOrden", DbType:="Int")>
        Public Property lngIdOrden() As Integer
            Get
                Return Me._lngIdOrden
            End Get
            Set
                If ((Me._lngIdOrden = Value) _
                            = False) Then
                    Me.OnlngIdOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdOrden = Value
                    Me.SendPropertyChanged("lngIdOrden")
                    Me.OnlngIdOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intNroFolio", DbType:="Int", IsPrimaryKey:=True)>
        Public Property intNroFolio() As System.Nullable(Of Integer)
            Get
                Return Me._intNroFolio
            End Get
            Set
                If (Me._intNroFolio.Equals(Value) = False) Then
                    Me.OnintNroFolioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intNroFolio = Value
                    Me.SendPropertyChanged("intNroFolio")
                    Me.OnintNroFolioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_numCantidad", DbType:="Decimal(18,0)")>
        Public Property numCantidad() As System.Nullable(Of Decimal)
            Get
                Return Me._numCantidad
            End Get
            Set
                If (Me._numCantidad.Equals(Value) = False) Then
                    Me.OnnumCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._numCantidad = Value
                    Me.SendPropertyChanged("numCantidad")
                    Me.OnnumCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaCumplimiento", DbType:="DateTime")>
        Public Property dtmFechaCumplimiento() As System.Nullable(Of Date)
            Get
                Return Me._dtmFechaCumplimiento
            End Get
            Set
                If (Me._dtmFechaCumplimiento.Equals(Value) = False) Then
                    Me.OndtmFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaCumplimiento = Value
                    Me.SendPropertyChanged("dtmFechaCumplimiento")
                    Me.OndtmFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_numMonto", DbType:="Decimal(18,0)")>
        Public Property numMonto() As System.Nullable(Of Decimal)
            Get
                Return Me._numMonto
            End Get
            Set
                If (Me._numMonto.Equals(Value) = False) Then
                    Me.OnnumMontoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._numMonto = Value
                    Me.SendPropertyChanged("numMonto")
                    Me.OnnumMontoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_numPrecio", DbType:="Decimal(18,0)")>
        Public Property numPrecio() As System.Nullable(Of Decimal)
            Get
                Return Me._numPrecio
            End Get
            Set
                If (Me._numPrecio.Equals(Value) = False) Then
                    Me.OnnumPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._numPrecio = Value
                    Me.SendPropertyChanged("numPrecio")
                    Me.OnnumPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intDiasDeCumplimiento", DbType:="Int")>
        Public Property intDiasDeCumplimiento() As System.Nullable(Of Integer)
            Get
                Return Me._intDiasDeCumplimiento
            End Get
            Set
                If (Me._intDiasDeCumplimiento.Equals(Value) = False) Then
                    Me.OnintDiasDeCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intDiasDeCumplimiento = Value
                    Me.SendPropertyChanged("intDiasDeCumplimiento")
                    Me.OnintDiasDeCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_numTasa", DbType:="Decimal(18,0)")>
        Public Property numTasa() As System.Nullable(Of Decimal)
            Get
                Return Me._numTasa
            End Get
            Set
                If (Me._numTasa.Equals(Value) = False) Then
                    Me.OnnumTasaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._numTasa = Value
                    Me.SendPropertyChanged("numTasa")
                    Me.OnnumTasaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNemotecnico", DbType:="VarChar(20)")>
        Public Property strNemotecnico() As String
            Get
                Return Me._strNemotecnico
            End Get
            Set
                If (String.Equals(Me._strNemotecnico, Value) = False) Then
                    Me.OnstrNemotecnicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNemotecnico = Value
                    Me.SendPropertyChanged("strNemotecnico")
                    Me.OnstrNemotecnicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaEmision", DbType:="DateTime")>
        Public Property dtmFechaEmision() As System.Nullable(Of Date)
            Get
                Return Me._dtmFechaEmision
            End Get
            Set
                If (Me._dtmFechaEmision.Equals(Value) = False) Then
                    Me.OndtmFechaEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaEmision = Value
                    Me.SendPropertyChanged("dtmFechaEmision")
                    Me.OndtmFechaEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodigoISIN", DbType:="VarChar(20)")>
        Public Property strCodigoISIN() As String
            Get
                Return Me._strCodigoISIN
            End Get
            Set
                If (String.Equals(Me._strCodigoISIN, Value) = False) Then
                    Me.OnstrCodigoISINChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCodigoISIN = Value
                    Me.SendPropertyChanged("strCodigoISIN")
                    Me.OnstrCodigoISINChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTrader", DbType:="VarChar(20)")>
        Public Property strTrader() As String
            Get
                Return Me._strTrader
            End Get
            Set
                If (String.Equals(Me._strTrader, Value) = False) Then
                    Me.OnstrTraderChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTrader = Value
                    Me.SendPropertyChanged("strTrader")
                    Me.OnstrTraderChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strRuedaNegocio", DbType:="VarChar(20)")>
        Public Property strRuedaNegocio() As String
            Get
                Return Me._strRuedaNegocio
            End Get
            Set
                If (String.Equals(Me._strRuedaNegocio, Value) = False) Then
                    Me.OnstrRuedaNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strRuedaNegocio = Value
                    Me.SendPropertyChanged("strRuedaNegocio")
                    Me.OnstrRuedaNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModalidad", DbType:="VarChar(20)")>
        Public Property strModalidad() As String
            Get
                Return Me._strModalidad
            End Get
            Set
                If (String.Equals(Me._strModalidad, Value) = False) Then
                    Me.OnstrModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModalidad = Value
                    Me.SendPropertyChanged("strModalidad")
                    Me.OnstrModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaVencimiento", DbType:="DateTime")>
        Public Property dtmFechaVencimiento() As System.Nullable(Of Date)
            Get
                Return Me._dtmFechaVencimiento
            End Get
            Set
                If (Me._dtmFechaVencimiento.Equals(Value) = False) Then
                    Me.OndtmFechaVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaVencimiento = Value
                    Me.SendPropertyChanged("dtmFechaVencimiento")
                    Me.OndtmFechaVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMercado", DbType:="VarChar(20)")>
        Public Property strMercado() As String
            Get
                Return Me._strMercado
            End Get
            Set
                If (String.Equals(Me._strMercado, Value) = False) Then
                    Me.OnstrMercadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMercado = Value
                    Me.SendPropertyChanged("strMercado")
                    Me.OnstrMercadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoMercado", DbType:="VarChar(50)")>
        Public Property strTipoMercado() As String
            Get
                Return Me._strTipoMercado
            End Get
            Set
                If (String.Equals(Me._strTipoMercado, Value) = False) Then
                    Me.OnstrTipoMercadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoMercado = Value
                    Me.SendPropertyChanged("strTipoMercado")
                    Me.OnstrTipoMercadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class EstadoFlujoOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _logExitoso As Boolean

        Private _intIDDocumento As Integer

        Private _strEstadoDocumento As String

        Private _strUsuarioBloqueo As String

        Private _strMensajeValidacion As String

        Private _strCamposModificados As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnlogExitosoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnlogExitosoChanged()
        End Sub
        Partial Private Sub OnintIDDocumentoChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDDocumentoChanged()
        End Sub
        Partial Private Sub OnstrEstadoDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoDocumentoChanged()
        End Sub
        Partial Private Sub OnstrUsuarioBloqueoChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioBloqueoChanged()
        End Sub
        Partial Private Sub OnstrMensajeValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMensajeValidacionChanged()
        End Sub
        Partial Private Sub OnstrCamposModificadosChanging(value As String)
        End Sub
        Partial Private Sub OnstrCamposModificadosChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExitoso", DbType:="BIT")>
        Public Property logExitoso() As Boolean
            Get
                Return Me._logExitoso
            End Get
            Set
                If ((Me._logExitoso = Value) _
                            = False) Then
                    Me.OnlogExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logExitoso = Value
                    Me.SendPropertyChanged("logExitoso")
                    Me.OnlogExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDDocumento", DbType:="INT")>
        Public Property intIDDocumento() As Integer
            Get
                Return Me._intIDDocumento
            End Get
            Set
                If ((Me._intIDDocumento = Value) _
                            = False) Then
                    Me.OnintIDDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDDocumento = Value
                    Me.SendPropertyChanged("intIDDocumento")
                    Me.OnintIDDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoDocumento", DbType:="VarChar(3)", CanBeNull:=False)>
        Public Property strEstadoDocumento() As String
            Get
                Return Me._strEstadoDocumento
            End Get
            Set
                If (String.Equals(Me._strEstadoDocumento, Value) = False) Then
                    Me.OnstrEstadoDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstadoDocumento = Value
                    Me.SendPropertyChanged("strEstadoDocumento")
                    Me.OnstrEstadoDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuarioBloqueo", DbType:="VarChar(60)", CanBeNull:=False)>
        Public Property strUsuarioBloqueo() As String
            Get
                Return Me._strUsuarioBloqueo
            End Get
            Set
                If (String.Equals(Me._strUsuarioBloqueo, Value) = False) Then
                    Me.OnstrUsuarioBloqueoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuarioBloqueo = Value
                    Me.SendPropertyChanged("strUsuarioBloqueo")
                    Me.OnstrUsuarioBloqueoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMensajeValidacion", DbType:="VarChar(max)", CanBeNull:=False)>
        Public Property strMensajeValidacion() As String
            Get
                Return Me._strMensajeValidacion
            End Get
            Set
                If (String.Equals(Me._strMensajeValidacion, Value) = False) Then
                    Me.OnstrMensajeValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMensajeValidacion = Value
                    Me.SendPropertyChanged("strMensajeValidacion")
                    Me.OnstrMensajeValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCamposModificados", DbType:="VarChar(400)", CanBeNull:=False)>
        Public Property strCamposModificados() As String
            Get
                Return Me._strCamposModificados
            End Get
            Set
                If (String.Equals(Me._strCamposModificados, Value) = False) Then
                    Me.OnstrCamposModificadosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCamposModificados = Value
                    Me.SendPropertyChanged("strCamposModificados")
                    Me.OnstrCamposModificadosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReceptoresOrdenesPorCruzar")>
    Partial Public Class tblReceptoresOrdenesPorCruzar
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDOrdenOriginal As Integer

        Private _IDReceptor As String

        Private _NombreReceptor As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDOrdenOriginalChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDOrdenOriginalChanged()
        End Sub
        Partial Private Sub OnIDReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnIDReceptorChanged()
        End Sub
        Partial Private Sub OnNombreReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenOriginal", Storage:="_IDOrdenOriginal", DbType:="Int NOT NULL")>
        Public Property IDOrdenOriginal() As Integer
            Get
                Return Me._IDOrdenOriginal
            End Get
            Set
                If ((Me._IDOrdenOriginal = Value) _
                            = False) Then
                    Me.OnIDOrdenOriginalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenOriginal = Value
                    Me.SendPropertyChanged("IDOrdenOriginal")
                    Me.OnIDOrdenOriginalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property IDReceptor() As String
            Get
                Return Me._IDReceptor
            End Get
            Set
                If (String.Equals(Me._IDReceptor, Value) = False) Then
                    Me.OnIDReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptor = Value
                    Me.SendPropertyChanged("IDReceptor")
                    Me.OnIDReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptor", Storage:="_NombreReceptor", DbType:="Varchar(100) NULL")>
        Public Property NombreReceptor() As String
            Get
                Return Me._NombreReceptor
            End Get
            Set
                If (String.Equals(Me._NombreReceptor, Value) = False) Then
                    Me.OnNombreReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptor = Value
                    Me.SendPropertyChanged("NombreReceptor")
                    Me.OnNombreReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblOrdenesCruzadas")>
    Partial Public Class tblOrdenesCruzadas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDOrdenOriginal As Integer

        Private _IDNroOrdenOriginal As System.Nullable(Of System.Int32)

        Private _IDOrdenCruzada As Integer

        Private _IDNroOrdenCruzada As System.Nullable(Of System.Int32)

        Private _IDNroOrden As System.Nullable(Of System.Int32)

        Private _ClienteCruzada As String

        Private _NombreClienteCruzada As String

        Private _IDReceptorCruzada As String

        Private _NombreReceptorCruzada As String

        Private _ValorOrdenCruzada As Double

        Private _CruceActivo As System.Nullable(Of Boolean)

        Private _Usuario As String

        Private _Mensaje As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDOrdenOriginalChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDOrdenOriginalChanged()
        End Sub
        Partial Private Sub OnIDNroOrdenOriginalChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNroOrdenOriginalChanged()
        End Sub
        Partial Private Sub OnIDOrdenCruzadaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDOrdenCruzadaChanged()
        End Sub
        Partial Private Sub OnIDNroOrdenCruzadaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNroOrdenCruzadaChanged()
        End Sub
        Partial Private Sub OnIDNroOrdenChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNroOrdenChanged()
        End Sub
        Partial Private Sub OnClienteCruzadaChanging(value As String)
        End Sub
        Partial Private Sub OnClienteCruzadaChanged()
        End Sub
        Partial Private Sub OnNombreClienteCruzadaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteCruzadaChanged()
        End Sub
        Partial Private Sub OnIDReceptorCruzadaChanging(value As String)
        End Sub
        Partial Private Sub OnIDReceptorCruzadaChanged()
        End Sub
        Partial Private Sub OnNombreReceptorCruzadaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorCruzadaChanged()
        End Sub
        Partial Private Sub OnValorOrdenCruzadaChanging(value As Double)
        End Sub
        Partial Private Sub OnValorOrdenCruzadaChanged()
        End Sub
        Partial Private Sub OnCruceActivoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnCruceActivoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenOriginal", Storage:="_IDOrdenOriginal", DbType:="Int NOT NULL")>
        Public Property IDOrdenOriginal() As Integer
            Get
                Return Me._IDOrdenOriginal
            End Get
            Set
                If ((Me._IDOrdenOriginal = Value) _
                            = False) Then
                    Me.OnIDOrdenOriginalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenOriginal = Value
                    Me.SendPropertyChanged("IDOrdenOriginal")
                    Me.OnIDOrdenOriginalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNroOrdenOriginal", Storage:="_IDNroOrdenOriginal", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDNroOrdenOriginal() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNroOrdenOriginal
            End Get
            Set
                If (Object.Equals(Me._IDNroOrdenOriginal, Value) = False) Then
                    Me.OnIDNroOrdenOriginalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNroOrdenOriginal = Value
                    Me.SendPropertyChanged("IDNroOrdenOriginal")
                    Me.OnIDNroOrdenOriginalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenCruzada", Storage:="_IDOrdenCruzada", DbType:="Int NOT NULL")>
        Public Property IDOrdenCruzada() As Integer
            Get
                Return Me._IDOrdenCruzada
            End Get
            Set
                If ((Me._IDOrdenCruzada = Value) _
                            = False) Then
                    Me.OnIDOrdenCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenCruzada = Value
                    Me.SendPropertyChanged("IDOrdenCruzada")
                    Me.OnIDOrdenCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNroOrdenCruzada", Storage:="_IDNroOrdenCruzada", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDNroOrdenCruzada() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNroOrdenCruzada
            End Get
            Set
                If (Object.Equals(Me._IDNroOrdenCruzada, Value) = False) Then
                    Me.OnIDNroOrdenCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNroOrdenCruzada = Value
                    Me.SendPropertyChanged("IDNroOrdenCruzada")
                    Me.OnIDNroOrdenCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNroOrden", Storage:="_IDNroOrden", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDNroOrden() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNroOrden
            End Get
            Set
                If (Object.Equals(Me._IDNroOrden, Value) = False) Then
                    Me.OnIDNroOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNroOrden = Value
                    Me.SendPropertyChanged("IDNroOrden")
                    Me.OnIDNroOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCliente", Storage:="_ClienteCruzada", DbType:="Varchar(17) NULL")>
        Public Property ClienteCruzada() As String
            Get
                Return Me._ClienteCruzada
            End Get
            Set
                If (String.Equals(Me._ClienteCruzada, Value) = False) Then
                    Me.OnClienteCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClienteCruzada = Value
                    Me.SendPropertyChanged("ClienteCruzada")
                    Me.OnClienteCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreClienteCruzada", DbType:="Varchar(100) NULL")>
        Public Property NombreClienteCruzada() As String
            Get
                Return Me._NombreClienteCruzada
            End Get
            Set
                If (String.Equals(Me._NombreClienteCruzada, Value) = False) Then
                    Me.OnNombreClienteCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreClienteCruzada = Value
                    Me.SendPropertyChanged("NombreClienteCruzada")
                    Me.OnNombreClienteCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptorCruzada", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property IDReceptorCruzada() As String
            Get
                Return Me._IDReceptorCruzada
            End Get
            Set
                If (String.Equals(Me._IDReceptorCruzada, Value) = False) Then
                    Me.OnIDReceptorCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptorCruzada = Value
                    Me.SendPropertyChanged("IDReceptorCruzada")
                    Me.OnIDReceptorCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptor", Storage:="_NombreReceptorCruzada", DbType:="Varchar(100) NULL")>
        Public Property NombreReceptorCruzada() As String
            Get
                Return Me._NombreReceptorCruzada
            End Get
            Set
                If (String.Equals(Me._NombreReceptorCruzada, Value) = False) Then
                    Me.OnNombreReceptorCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorCruzada = Value
                    Me.SendPropertyChanged("NombreReceptorCruzada")
                    Me.OnNombreReceptorCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorOrden", Storage:="_ValorOrdenCruzada", DbType:="Float NOT NULL")>
        Public Property ValorOrdenCruzada() As Double
            Get
                Return Me._ValorOrdenCruzada
            End Get
            Set
                If ((Me._ValorOrdenCruzada = Value) _
                            = False) Then
                    Me.OnValorOrdenCruzadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorOrdenCruzada = Value
                    Me.SendPropertyChanged("ValorOrdenCruzada")
                    Me.OnValorOrdenCruzadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCruceActivo", Storage:="_CruceActivo", DbType:="Bit NULL")>
        Public Property CruceActivo() As System.Nullable(Of Boolean)
            Get
                Return Me._CruceActivo
            End Get
            Set
                If (Me._CruceActivo.Equals(Value) = False) Then
                    Me.OnCruceActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CruceActivo = Value
                    Me.SendPropertyChanged("CruceActivo")
                    Me.OnCruceActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(max)  NULL")>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class DatosPortafolioPPropia
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Id As Integer

        Private _Clasificacion As String

        Private _Cumplimiento As System.Nullable(Of System.DateTime)

        Private _Nemo As String

        Private _Cantidad As System.Nullable(Of System.Double)

        Private _Promedio As System.Nullable(Of System.Double)

        Private _PrecioSPos As System.Nullable(Of System.Double)

        Private _Emisor As String

        Private _Emision As System.Nullable(Of System.DateTime)

        Private _Vencimiento As System.Nullable(Of System.DateTime)

        Private _Modalidad As String

        Private _Indicador As String

        Private _TasaNominal As System.Nullable(Of System.Double)

        Private _Receptor As String

        Private _NominalVenta As System.Nullable(Of System.Double)

        Private _NominalCompra As System.Nullable(Of System.Double)

        Private _VentaPresente As System.Nullable(Of System.Double)

        Private _CompraPresente As System.Nullable(Of System.Double)

        Private _Utilidad As System.Nullable(Of System.Double)

        Private _TotalVentas As System.Nullable(Of System.Double)

        Private _TotalCompras As System.Nullable(Of System.Double)

        Private _TotalUtilidad As System.Nullable(Of System.Double)

        Private _strValorIndicador As String

        Private _strValorModalidad As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdChanged()
        End Sub
        Partial Private Sub OnClasificacionChanging(value As String)
        End Sub
        Partial Private Sub OnClasificacionChanged()
        End Sub
        Partial Private Sub OnCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnCumplimientoChanged()
        End Sub
        Partial Private Sub OnNemoChanging(value As String)
        End Sub
        Partial Private Sub OnNemoChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnPromedioChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPromedioChanged()
        End Sub
        Partial Private Sub OnPrecioSPosChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPrecioSPosChanged()
        End Sub
        Partial Private Sub OnEmisorChanging(value As String)
        End Sub
        Partial Private Sub OnEmisorChanged()
        End Sub
        Partial Private Sub OnEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnEmisionChanged()
        End Sub
        Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnVencimientoChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaNominalChanged()
        End Sub
        Partial Private Sub OnReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorChanged()
        End Sub
        Partial Private Sub OnNominalVentaChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnNominalVentaChanged()
        End Sub
        Partial Private Sub OnNominalCompraChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnNominalCompraChanged()
        End Sub
        Partial Private Sub OnVentaPresenteChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnVentaPresenteChanged()
        End Sub
        Partial Private Sub OnCompraPresenteChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCompraPresenteChanged()
        End Sub
        Partial Private Sub OnUtilidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnUtilidadChanged()
        End Sub
        Partial Private Sub OnTotalVentasChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTotalVentasChanged()
        End Sub
        Partial Private Sub OnTotalComprasChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTotalComprasChanged()
        End Sub
        Partial Private Sub OnTotalUtilidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTotalUtilidadChanged()
        End Sub
        Partial Private Sub OnstrValorIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnstrValorIndicadorChanged()
        End Sub
        Partial Private Sub OnstrValorModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrValorModalidadChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property Id() As Integer
            Get
                Return Me._Id
            End Get
            Set
                If (Object.Equals(Me._Id, Value) = False) Then
                    Me.OnIdChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Id = Value
                    Me.SendPropertyChanged("Id")
                    Me.OnIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacion", Storage:="_Clasificacion", DbType:="Varchar(50)")>
        Public Property Clasificacion() As String
            Get
                Return Me._Clasificacion
            End Get
            Set
                If (String.Equals(Me._Clasificacion, Value) = False) Then
                    Me.OnClasificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clasificacion = Value
                    Me.SendPropertyChanged("Clasificacion")
                    Me.OnClasificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_Cumplimiento", DbType:="Date", CanBeNull:=True)>
        Public Property Cumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Cumplimiento
            End Get
            Set
                If (Object.Equals(Me._Cumplimiento, Value) = False) Then
                    Me.OnCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cumplimiento = Value
                    Me.SendPropertyChanged("Cumplimiento")
                    Me.OnCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNemo", Storage:="_Nemo", DbType:="Varchar(15)")>
        Public Property Nemo() As String
            Get
                Return Me._Nemo
            End Get
            Set
                If (String.Equals(Me._Nemo, Value) = False) Then
                    Me.OnNemoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nemo = Value
                    Me.SendPropertyChanged("Nemo")
                    Me.OnNemoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float", CanBeNull:=True)>
        Public Property Cantidad() As System.Nullable(Of System.Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Object.Equals(Me._Cantidad, Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPromedio", Storage:="_Promedio", DbType:="Float", CanBeNull:=True)>
        Public Property Promedio() As System.Nullable(Of System.Double)
            Get
                Return Me._Promedio
            End Get
            Set
                If (Object.Equals(Me._Promedio, Value) = False) Then
                    Me.OnPromedioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Promedio = Value
                    Me.SendPropertyChanged("Promedio")
                    Me.OnPromedioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioSPos", Storage:="_PrecioSPos", DbType:="Float", CanBeNull:=True)>
        Public Property PrecioSPos() As System.Nullable(Of System.Double)
            Get
                Return Me._PrecioSPos
            End Get
            Set
                If (Object.Equals(Me._PrecioSPos, Value) = False) Then
                    Me.OnPrecioSPosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioSPos = Value
                    Me.SendPropertyChanged("PrecioSPos")
                    Me.OnPrecioSPosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEmisor", Storage:="_Emisor", DbType:="Varchar(50)")>
        Public Property Emisor() As String
            Get
                Return Me._Emisor
            End Get
            Set
                If (String.Equals(Me._Emisor, Value) = False) Then
                    Me.OnEmisorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Emisor = Value
                    Me.SendPropertyChanged("Emisor")
                    Me.OnEmisorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="Date", CanBeNull:=True)>
        Public Property Emision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Emision
            End Get
            Set
                If (Object.Equals(Me._Emision, Value) = False) Then
                    Me.OnEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Emision = Value
                    Me.SendPropertyChanged("Emision")
                    Me.OnEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="Date", CanBeNull:=True)>
        Public Property Vencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Vencimiento
            End Get
            Set
                If (Object.Equals(Me._Vencimiento, Value) = False) Then
                    Me.OnVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Vencimiento = Value
                    Me.SendPropertyChanged("Vencimiento")
                    Me.OnVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="VARCHAR(100)")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="VARCHAR(100)")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float", CanBeNull:=True)>
        Public Property TasaNominal() As System.Nullable(Of System.Double)
            Get
                Return Me._TasaNominal
            End Get
            Set
                If (Object.Equals(Me._TasaNominal, Value) = False) Then
                    Me.OnTasaNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaNominal = Value
                    Me.SendPropertyChanged("TasaNominal")
                    Me.OnTasaNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptor", Storage:="_Receptor", DbType:="Varchar(50)")>
        Public Property Receptor() As String
            Get
                Return Me._Receptor
            End Get
            Set
                If (String.Equals(Me._Receptor, Value) = False) Then
                    Me.OnReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Receptor = Value
                    Me.SendPropertyChanged("Receptor")
                    Me.OnReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblNominalVenta", Storage:="_NominalVenta", DbType:="Float", CanBeNull:=True)>
        Public Property NominalVenta() As System.Nullable(Of System.Double)
            Get
                Return Me._NominalVenta
            End Get
            Set
                If (Object.Equals(Me._NominalVenta, Value) = False) Then
                    Me.OnNominalVentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NominalVenta = Value
                    Me.SendPropertyChanged("NominalVenta")
                    Me.OnNominalVentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblNominalCompra", Storage:="_NominalCompra", DbType:="Float", CanBeNull:=True)>
        Public Property NominalCompra() As System.Nullable(Of System.Double)
            Get
                Return Me._NominalCompra
            End Get
            Set
                If (Object.Equals(Me._NominalCompra, Value) = False) Then
                    Me.OnNominalCompraChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NominalCompra = Value
                    Me.SendPropertyChanged("NominalCompra")
                    Me.OnNominalCompraChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblVentaPresente", Storage:="_VentaPresente", DbType:="Float", CanBeNull:=True)>
        Public Property VentaPresente() As System.Nullable(Of System.Double)
            Get
                Return Me._VentaPresente
            End Get
            Set
                If (Object.Equals(Me._VentaPresente, Value) = False) Then
                    Me.OnVentaPresenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._VentaPresente = Value
                    Me.SendPropertyChanged("VentaPresente")
                    Me.OnVentaPresenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCompraPresente", Storage:="_CompraPresente", DbType:="Float", CanBeNull:=True)>
        Public Property CompraPresente() As System.Nullable(Of System.Double)
            Get
                Return Me._CompraPresente
            End Get
            Set
                If (Object.Equals(Me._CompraPresente, Value) = False) Then
                    Me.OnCompraPresenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CompraPresente = Value
                    Me.SendPropertyChanged("CompraPresente")
                    Me.OnCompraPresenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblUtilidad", Storage:="_Utilidad", DbType:="Float", CanBeNull:=True)>
        Public Property Utilidad() As System.Nullable(Of System.Double)
            Get
                Return Me._Utilidad
            End Get
            Set
                If (Object.Equals(Me._Utilidad, Value) = False) Then
                    Me.OnUtilidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Utilidad = Value
                    Me.SendPropertyChanged("Utilidad")
                    Me.OnUtilidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTotalVentas", Storage:="_TotalVentas", DbType:="Float", CanBeNull:=True)>
        Public Property TotalVentas() As System.Nullable(Of System.Double)
            Get
                Return Me._TotalVentas
            End Get
            Set
                If (Object.Equals(Me._TotalVentas, Value) = False) Then
                    Me.OnTotalVentasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TotalVentas = Value
                    Me.SendPropertyChanged("TotalVentas")
                    Me.OnTotalVentasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTotalCompras", Storage:="_TotalCompras", DbType:="Float", CanBeNull:=True)>
        Public Property TotalCompras() As System.Nullable(Of System.Double)
            Get
                Return Me._TotalCompras
            End Get
            Set
                If (Object.Equals(Me._TotalCompras, Value) = False) Then
                    Me.OnTotalComprasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TotalCompras = Value
                    Me.SendPropertyChanged("TotalCompras")
                    Me.OnTotalComprasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTotalUtilidad", Storage:="_TotalUtilidad", DbType:="Float", CanBeNull:=True)>
        Public Property TotalUtilidad() As System.Nullable(Of System.Double)
            Get
                Return Me._TotalUtilidad
            End Get
            Set
                If (Object.Equals(Me._TotalUtilidad, Value) = False) Then
                    Me.OnTotalUtilidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TotalUtilidad = Value
                    Me.SendPropertyChanged("TotalUtilidad")
                    Me.OnTotalUtilidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strValorIndicador", DbType:="varchar(50)")>
        Public Property strValorIndicador() As String
            Get
                Return Me._strValorIndicador
            End Get
            Set
                If (String.Equals(Me._strValorIndicador, Value) = False) Then
                    Me.OnstrValorIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strValorIndicador = Value
                    Me.SendPropertyChanged("strValorIndicador")
                    Me.OnstrValorIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strValorModalidad", DbType:="varchar(50)")>
        Public Property strValorModalidad() As String
            Get
                Return Me._strValorModalidad
            End Get
            Set
                If (String.Equals(Me._strValorModalidad, Value) = False) Then
                    Me.OnstrValorModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strValorModalidad = Value
                    Me.SendPropertyChanged("strValorModalidad")
                    Me.OnstrValorModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class RegistroOperacionesPorReceptor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IdOperacion As Integer

        Private _ReceptorA As String

        Private _TipoProducto As String

        Private _Clase As String

        Private _TipoOperacion As String

        Private _ReceptorB As String

        Private _IdCliente As String

        Private _IdEspecie As String

        Private _Isin As String

        Private _Emision As System.Nullable(Of System.DateTime)

        Private _Vencimiento As System.Nullable(Of System.DateTime)

        Private _IdOrdenante As String

        Private _CuentaDeposito As System.Nullable(Of System.Int32)

        Private _UbicacionTitulo As String

        Private _TasaFacial As System.Nullable(Of System.Double)

        Private _Modalidad As String

        Private _Indicador As String

        Private _PuntosIndicador As System.Nullable(Of System.Double)

        Private _Cantidad As System.Nullable(Of System.Double)

        Private _ValorNominal As System.Nullable(Of System.Double)

        Private _ValorGiro As System.Nullable(Of System.Double)

        Private _ValorGiro2 As System.Nullable(Of System.Double)

        Private _ValorGiroContraparte As System.Nullable(Of System.Double)

        Private _ComisionVenta As System.Nullable(Of System.Double)

        Private _ComisionCompra As System.Nullable(Of System.Double)

        Private _Tasa As System.Nullable(Of System.Double)

        Private _AcumCupon As System.Nullable(Of System.Double)

        Private _PrecioSucio As System.Nullable(Of System.Double)

        Private _Observaciones As String

        Private _Activo As Boolean

        Private _TrasladoEnDinero As System.Nullable(Of Boolean)

        Private _NombreEspecie As String

        Private _NombreCliente As String

        Private _NombreOrdenante As String

        Private _NombreReceptorA As String

        Private _NombreReceptorB As String

        Private _NomTipProducto As String

        Private _NombreClase As String

        Private _NomTipOperacion As String

        Private _CategoriaCliente As String

        Private _NroDocumento As String

        Private _DescripcionCta As String

        Private _FechaLiquidacion As System.Nullable(Of System.DateTime)

        Private _FechaCumplimiento As System.Nullable(Of System.DateTime)

        Private _FechaIngreso As System.Nullable(Of System.DateTime)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _FechaRegreso As System.Nullable(Of System.DateTime)

        Private _Plazo As System.Nullable(Of System.Int32)

        Private _OperacionRegreso As System.Nullable(Of Boolean)

        Private _TipoTasaFija As String

        Private _EspecieEsAccion As System.Nullable(Of System.Boolean)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdOperacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdOperacionChanged()
        End Sub
        Partial Private Sub OnReceptorAChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorAChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnClaseChanging(value As String)
        End Sub
        Partial Private Sub OnClaseChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnReceptorBChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorBChanged()
        End Sub
        Partial Private Sub OnIdClienteChanging(value As String)
        End Sub
        Partial Private Sub OnIdClienteChanged()
        End Sub
        Partial Private Sub OnIdEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnIdEspecieChanged()
        End Sub
        Partial Private Sub OnIsinChanging(value As String)
        End Sub
        Partial Private Sub OnIsinChanged()
        End Sub
        Partial Private Sub OnEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnEmisionChanged()
        End Sub
        Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnVencimientoChanged()
        End Sub
        Partial Private Sub OnIdOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnIdOrdenanteChanged()
        End Sub
        Partial Private Sub OnCuentaDepositoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnCuentaDepositoChanged()
        End Sub
        Partial Private Sub OnUbicacionTituloChanging(value As String)
        End Sub
        Partial Private Sub OnUbicacionTituloChanged()
        End Sub
        Partial Private Sub OnTasaFacialChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaFacialChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnValorNominalChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnValorNominalChanged()
        End Sub
        Partial Private Sub OnValorGiroChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnValorGiroChanged()
        End Sub
        Partial Private Sub OnValorGiro2Changing(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnValorGiro2Changed()
        End Sub
        Partial Private Sub OnValorGiroContraparteChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnValorGiroContraparteChanged()
        End Sub
        Partial Private Sub OnComisionVentaChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnComisionVentaChanged()
        End Sub
        Partial Private Sub OnComisionCompraChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnComisionCompraChanged()
        End Sub
        Partial Private Sub OnTasaChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaChanged()
        End Sub
        Partial Private Sub OnAcumCuponChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnAcumCuponChanged()
        End Sub
        Partial Private Sub OnPrecioSucioChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPrecioSucioChanged()
        End Sub
        Partial Private Sub OnObservacionesChanging(value As String)
        End Sub
        Partial Private Sub OnObservacionesChanged()
        End Sub
        Partial Private Sub OnActivoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnActivoChanged()
        End Sub
        Partial Private Sub OnTrasladoEnDineroChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnTrasladoEnDineroChanged()
        End Sub
        Partial Private Sub OnNombreEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEspecieChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnNombreOrdenanteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreOrdenanteChanged()
        End Sub
        Partial Private Sub OnNombreReceptorAChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorAChanged()
        End Sub
        Partial Private Sub OnNombreReceptorBChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorBChanged()
        End Sub
        Partial Private Sub OnNomTipProductoChanging(value As String)
        End Sub
        Partial Private Sub OnNomTipProductoChanged()
        End Sub
        Partial Private Sub OnNombreClaseChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClaseChanged()
        End Sub
        Partial Private Sub OnNomTipOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnNomTipOperacionChanged()
        End Sub
        Partial Private Sub OnCategoriaClienteChanging(value As String)
        End Sub
        Partial Private Sub OnCategoriaClienteChanged()
        End Sub
        Partial Private Sub OnNroDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoChanged()
        End Sub
        Partial Private Sub OnDescripcionCtaChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionCtaChanged()
        End Sub
        Partial Private Sub OnFechaLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaLiquidacionChanged()
        End Sub
        Partial Private Sub OnFechaCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnFechaIngresoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaIngresoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnFechaRegresoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaRegresoChanged()
        End Sub
        Partial Private Sub OnPlazoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnPlazoChanged()
        End Sub
        Partial Private Sub OnOperacionRegresoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnOperacionRegresoChanged()
        End Sub
        Partial Private Sub OnTipoTasaFijaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTasaFijaChanged()
        End Sub
        Partial Private Sub OnEspecieEsAccionChanging(value As System.Nullable(Of System.Boolean))
        End Sub
        Partial Private Sub OnEspecieEsAccionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdOperacion", Storage:="_IdOperacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IdOperacion() As Integer
            Get
                Return Me._IdOperacion
            End Get
            Set
                If ((Me._IdOperacion = Value) _
                            = False) Then
                    Me.OnIdOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdOperacion = Value
                    Me.SendPropertyChanged("IdOperacion")
                    Me.OnIdOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptorA", Storage:="_ReceptorA", DbType:="VarChar(4)")>
        Public Property ReceptorA() As String
            Get
                Return Me._ReceptorA
            End Get
            Set
                If (String.Equals(Me._ReceptorA, Value) = False) Then
                    Me.OnReceptorAChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReceptorA = Value
                    Me.SendPropertyChanged("ReceptorA")
                    Me.OnReceptorAChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="VarChar(4)")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="VarChar(3)")>
        Public Property Clase() As String
            Get
                Return Me._Clase
            End Get
            Set
                If (String.Equals(Me._Clase, Value) = False) Then
                    Me.OnClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clase = Value
                    Me.SendPropertyChanged("Clase")
                    Me.OnClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="VarChar(2)")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReceptorB", Storage:="_ReceptorB", DbType:="VarChar(4)")>
        Public Property ReceptorB() As String
            Get
                Return Me._ReceptorB
            End Get
            Set
                If (String.Equals(Me._ReceptorB, Value) = False) Then
                    Me.OnReceptorBChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReceptorB = Value
                    Me.SendPropertyChanged("ReceptorB")
                    Me.OnReceptorBChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdCliente", Storage:="_IdCliente", DbType:="Char(17)")>
        Public Property IdCliente() As String
            Get
                Return Me._IdCliente
            End Get
            Set
                If (String.Equals(Me._IdCliente, Value) = False) Then
                    Me.OnIdClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdCliente = Value
                    Me.SendPropertyChanged("IdCliente")
                    Me.OnIdClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_IdEspecie", DbType:="VarChar(15)")>
        Public Property IdEspecie() As String
            Get
                Return Me._IdEspecie
            End Get
            Set
                If (String.Equals(Me._IdEspecie, Value) = False) Then
                    Me.OnIdEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdEspecie = Value
                    Me.SendPropertyChanged("IdEspecie")
                    Me.OnIdEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIsin", Storage:="_Isin", DbType:="VarChar(12)")>
        Public Property Isin() As String
            Get
                Return Me._Isin
            End Get
            Set
                If (String.Equals(Me._Isin, Value) = False) Then
                    Me.OnIsinChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Isin = Value
                    Me.SendPropertyChanged("Isin")
                    Me.OnIsinChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="DateTime", CanBeNull:=True)>
        Public Property Emision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Emision
            End Get
            Set
                If (Object.Equals(Me._Emision, Value) = False) Then
                    Me.OnEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Emision = Value
                    Me.SendPropertyChanged("Emision")
                    Me.OnEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="DateTime", CanBeNull:=True)>
        Public Property Vencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Vencimiento
            End Get
            Set
                If (Object.Equals(Me._Vencimiento, Value) = False) Then
                    Me.OnVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Vencimiento = Value
                    Me.SendPropertyChanged("Vencimiento")
                    Me.OnVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdOrdenante", Storage:="_IdOrdenante", DbType:="Char(17)")>
        Public Property IdOrdenante() As String
            Get
                Return Me._IdOrdenante
            End Get
            Set
                If (String.Equals(Me._IdOrdenante, Value) = False) Then
                    Me.OnIdOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdOrdenante = Value
                    Me.SendPropertyChanged("IdOrdenante")
                    Me.OnIdOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCuentaDeposito", Storage:="_CuentaDeposito", DbType:="Int", CanBeNull:=True)>
        Public Property CuentaDeposito() As System.Nullable(Of System.Int32)
            Get
                Return Me._CuentaDeposito
            End Get
            Set
                If (Object.Equals(Me._CuentaDeposito, Value) = False) Then
                    Me.OnCuentaDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaDeposito = Value
                    Me.SendPropertyChanged("CuentaDeposito")
                    Me.OnCuentaDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUbicacionTitulo", Storage:="_UbicacionTitulo", DbType:="VarChar(1)")>
        Public Property UbicacionTitulo() As String
            Get
                Return Me._UbicacionTitulo
            End Get
            Set
                If (String.Equals(Me._UbicacionTitulo, Value) = False) Then
                    Me.OnUbicacionTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UbicacionTitulo = Value
                    Me.SendPropertyChanged("UbicacionTitulo")
                    Me.OnUbicacionTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaFacial", Storage:="_TasaFacial", DbType:="Float", CanBeNull:=True)>
        Public Property TasaFacial() As System.Nullable(Of System.Double)
            Get
                Return Me._TasaFacial
            End Get
            Set
                If (Object.Equals(Me._TasaFacial, Value) = False) Then
                    Me.OnTasaFacialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaFacial = Value
                    Me.SendPropertyChanged("TasaFacial")
                    Me.OnTasaFacialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="VarChar(2)")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="VarChar(15)")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float", CanBeNull:=True)>
        Public Property PuntosIndicador() As System.Nullable(Of System.Double)
            Get
                Return Me._PuntosIndicador
            End Get
            Set
                If (Object.Equals(Me._PuntosIndicador, Value) = False) Then
                    Me.OnPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PuntosIndicador = Value
                    Me.SendPropertyChanged("PuntosIndicador")
                    Me.OnPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float", CanBeNull:=True)>
        Public Property Cantidad() As System.Nullable(Of System.Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Object.Equals(Me._Cantidad, Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorNominal", Storage:="_ValorNominal", DbType:="Float", CanBeNull:=True)>
        Public Property ValorNominal() As System.Nullable(Of System.Double)
            Get
                Return Me._ValorNominal
            End Get
            Set
                If (Object.Equals(Me._ValorNominal, Value) = False) Then
                    Me.OnValorNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorNominal = Value
                    Me.SendPropertyChanged("ValorNominal")
                    Me.OnValorNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorGiro", Storage:="_ValorGiro", DbType:="Float", CanBeNull:=True)>
        Public Property ValorGiro() As System.Nullable(Of System.Double)
            Get
                Return Me._ValorGiro
            End Get
            Set
                If (Object.Equals(Me._ValorGiro, Value) = False) Then
                    Me.OnValorGiroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorGiro = Value
                    Me.SendPropertyChanged("ValorGiro")
                    Me.OnValorGiroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorGiro2", Storage:="_ValorGiro2", DbType:="Float", CanBeNull:=True)>
        Public Property ValorGiro2() As System.Nullable(Of System.Double)
            Get
                Return Me._ValorGiro2
            End Get
            Set
                If (Object.Equals(Me._ValorGiro2, Value) = False) Then
                    Me.OnValorGiro2Changing(Value)
                    Me.SendPropertyChanging()
                    Me._ValorGiro2 = Value
                    Me.SendPropertyChanged("ValorGiro2")
                    Me.OnValorGiro2Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorGiroContraparte", Storage:="_ValorGiroContraparte", DbType:="Float", CanBeNull:=True)>
        Public Property ValorGiroContraparte() As System.Nullable(Of System.Double)
            Get
                Return Me._ValorGiroContraparte
            End Get
            Set
                If (Object.Equals(Me._ValorGiroContraparte, Value) = False) Then
                    Me.OnValorGiroContraparteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorGiroContraparte = Value
                    Me.SendPropertyChanged("ValorGiroContraparte")
                    Me.OnValorGiroContraparteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionVenta", Storage:="_ComisionVenta", DbType:="Float", CanBeNull:=True)>
        Public Property ComisionVenta() As System.Nullable(Of System.Double)
            Get
                Return Me._ComisionVenta
            End Get
            Set
                If (Object.Equals(Me._ComisionVenta, Value) = False) Then
                    Me.OnComisionVentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComisionVenta = Value
                    Me.SendPropertyChanged("ComisionVenta")
                    Me.OnComisionVentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionCompra", Storage:="_ComisionCompra", DbType:="Float", CanBeNull:=True)>
        Public Property ComisionCompra() As System.Nullable(Of System.Double)
            Get
                Return Me._ComisionCompra
            End Get
            Set
                If (Object.Equals(Me._ComisionCompra, Value) = False) Then
                    Me.OnComisionCompraChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComisionCompra = Value
                    Me.SendPropertyChanged("ComisionCompra")
                    Me.OnComisionCompraChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasa", Storage:="_Tasa", DbType:="Float", CanBeNull:=True)>
        Public Property Tasa() As System.Nullable(Of System.Double)
            Get
                Return Me._Tasa
            End Get
            Set
                If (Object.Equals(Me._Tasa, Value) = False) Then
                    Me.OnTasaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Tasa = Value
                    Me.SendPropertyChanged("Tasa")
                    Me.OnTasaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblAcumCupon", Storage:="_AcumCupon", DbType:="Float", CanBeNull:=True)>
        Public Property AcumCupon() As System.Nullable(Of System.Double)
            Get
                Return Me._AcumCupon
            End Get
            Set
                If (Object.Equals(Me._AcumCupon, Value) = False) Then
                    Me.OnAcumCuponChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AcumCupon = Value
                    Me.SendPropertyChanged("AcumCupon")
                    Me.OnAcumCuponChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioSucio", Storage:="_PrecioSucio", DbType:="Float", CanBeNull:=True)>
        Public Property PrecioSucio() As System.Nullable(Of System.Double)
            Get
                Return Me._PrecioSucio
            End Get
            Set
                If (Object.Equals(Me._PrecioSucio, Value) = False) Then
                    Me.OnPrecioSucioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioSucio = Value
                    Me.SendPropertyChanged("PrecioSucio")
                    Me.OnPrecioSucioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strObservaciones", Storage:="_Observaciones", DbType:="VarChar(500)")>
        Public Property Observaciones() As String
            Get
                Return Me._Observaciones
            End Get
            Set
                If (String.Equals(Me._Observaciones, Value) = False) Then
                    Me.OnObservacionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Observaciones = Value
                    Me.SendPropertyChanged("Observaciones")
                    Me.OnObservacionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>
        Public Property Activo() As Boolean
            Get
                Return Me._Activo
            End Get
            Set
                If ((Me._Activo = Value) _
                            = False) Then
                    Me.OnActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Activo = Value
                    Me.SendPropertyChanged("Activo")
                    Me.OnActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTrasladoEnDinero", Storage:="_TrasladoEnDinero", DbType:="Bit")>
        Public Property TrasladoEnDinero() As System.Nullable(Of Boolean)
            Get
                Return Me._TrasladoEnDinero
            End Get
            Set
                If (Me._TrasladoEnDinero.Equals(Value) = False) Then
                    Me.OnTrasladoEnDineroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TrasladoEnDinero = Value
                    Me.SendPropertyChanged("TrasladoEnDinero")
                    Me.OnTrasladoEnDineroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEspecie", Storage:="_NombreEspecie", DbType:="VarChar(200)")>
        Public Property NombreEspecie() As String
            Get
                Return Me._NombreEspecie
            End Get
            Set
                If (String.Equals(Me._NombreEspecie, Value) = False) Then
                    Me.OnNombreEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEspecie = Value
                    Me.SendPropertyChanged("NombreEspecie")
                    Me.OnNombreEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="VarChar(200)")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreOrdenante", Storage:="_NombreOrdenante", DbType:="VarChar(200)")>
        Public Property NombreOrdenante() As String
            Get
                Return Me._NombreOrdenante
            End Get
            Set
                If (String.Equals(Me._NombreOrdenante, Value) = False) Then
                    Me.OnNombreOrdenanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreOrdenante = Value
                    Me.SendPropertyChanged("NombreOrdenante")
                    Me.OnNombreOrdenanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptorA", Storage:="_NombreReceptorA", DbType:="VarChar(200)")>
        Public Property NombreReceptorA() As String
            Get
                Return Me._NombreReceptorA
            End Get
            Set
                If (String.Equals(Me._NombreReceptorA, Value) = False) Then
                    Me.OnNombreReceptorAChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorA = Value
                    Me.SendPropertyChanged("NombreReceptorA")
                    Me.OnNombreReceptorAChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptorB", Storage:="_NombreReceptorB", DbType:="VarChar(200)")>
        Public Property NombreReceptorB() As String
            Get
                Return Me._NombreReceptorB
            End Get
            Set
                If (String.Equals(Me._NombreReceptorB, Value) = False) Then
                    Me.OnNombreReceptorBChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorB = Value
                    Me.SendPropertyChanged("NombreReceptorB")
                    Me.OnNombreReceptorBChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNomTipProducto", Storage:="_NomTipProducto", DbType:="VarChar(200)")>
        Public Property NomTipProducto() As String
            Get
                Return Me._NomTipProducto
            End Get
            Set
                If (String.Equals(Me._NomTipProducto, Value) = False) Then
                    Me.OnNomTipProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NomTipProducto = Value
                    Me.SendPropertyChanged("NomTipProducto")
                    Me.OnNomTipProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClase", Storage:="_NombreClase", DbType:="VarChar(200)")>
        Public Property NombreClase() As String
            Get
                Return Me._NombreClase
            End Get
            Set
                If (String.Equals(Me._NombreClase, Value) = False) Then
                    Me.OnNombreClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreClase = Value
                    Me.SendPropertyChanged("NombreClase")
                    Me.OnNombreClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNomTipOperacion", Storage:="_NomTipOperacion", DbType:="VarChar(200)")>
        Public Property NomTipOperacion() As String
            Get
                Return Me._NomTipOperacion
            End Get
            Set
                If (String.Equals(Me._NomTipOperacion, Value) = False) Then
                    Me.OnNomTipOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NomTipOperacion = Value
                    Me.SendPropertyChanged("NomTipOperacion")
                    Me.OnNomTipOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCategoriaCliente", Storage:="_CategoriaCliente", DbType:="Varchar(100) NOT NULL")>
        Public Property CategoriaCliente() As String
            Get
                Return Me._CategoriaCliente
            End Get
            Set
                If (String.Equals(Me._CategoriaCliente, Value) = False) Then
                    Me.OnCategoriaClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CategoriaCliente = Value
                    Me.SendPropertyChanged("CategoriaCliente")
                    Me.OnCategoriaClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(30) NOT NULL")>
        Public Property NroDocumento() As String
            Get
                Return Me._NroDocumento
            End Get
            Set
                If (String.Equals(Me._NroDocumento, Value) = False) Then
                    Me.OnNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumento = Value
                    Me.SendPropertyChanged("NroDocumento")
                    Me.OnNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionCta", Storage:="_DescripcionCta", DbType:="Varchar(40) NOT NULL")>
        Public Property DescripcionCta() As String
            Get
                Return Me._DescripcionCta
            End Get
            Set
                If (String.Equals(Me._DescripcionCta, Value) = False) Then
                    Me.OnDescripcionCtaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionCta = Value
                    Me.SendPropertyChanged("DescripcionCta")
                    Me.OnDescripcionCtaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_FechaLiquidacion", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaLiquidacion
            End Get
            Set
                If (Object.Equals(Me._FechaLiquidacion, Value) = False) Then
                    Me.OnFechaLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaLiquidacion = Value
                    Me.SendPropertyChanged("FechaLiquidacion")
                    Me.OnFechaLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento", Storage:="_FechaCumplimiento", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaCumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaCumplimiento
            End Get
            Set
                If (Object.Equals(Me._FechaCumplimiento, Value) = False) Then
                    Me.OnFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCumplimiento = Value
                    Me.SendPropertyChanged("FechaCumplimiento")
                    Me.OnFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmIngreso", Storage:="_FechaIngreso", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaIngreso() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaIngreso
            End Get
            Set
                If (Object.Equals(Me._FechaIngreso, Value) = False) Then
                    Me.OnFechaIngresoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaIngreso = Value
                    Me.SendPropertyChanged("FechaIngreso")
                    Me.OnFechaIngresoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="VarChar(80) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaRegreso", Storage:="_FechaRegreso", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaRegreso() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaRegreso
            End Get
            Set
                If (Object.Equals(Me._FechaRegreso, Value) = False) Then
                    Me.OnFechaRegresoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaRegreso = Value
                    Me.SendPropertyChanged("FechaRegreso")
                    Me.OnFechaRegresoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPlazo", Storage:="_Plazo", DbType:="Int", CanBeNull:=True)>
        Public Property Plazo() As System.Nullable(Of System.Int32)
            Get
                Return Me._Plazo
            End Get
            Set
                If (Object.Equals(Me._Plazo, Value) = False) Then
                    Me.OnPlazoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Plazo = Value
                    Me.SendPropertyChanged("Plazo")
                    Me.OnPlazoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logOperacionRegreso", Storage:="_OperacionRegreso", DbType:="Bit NULL")>
        Public Property OperacionRegreso() As System.Nullable(Of Boolean)
            Get
                Return Me._OperacionRegreso
            End Get
            Set
                If (Me._OperacionRegreso.Equals(Value) = False) Then
                    Me.OnOperacionRegresoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._OperacionRegreso = Value
                    Me.SendPropertyChanged("OperacionRegreso")
                    Me.OnOperacionRegresoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTasaFija", Storage:="_TipoTasaFija", DbType:="Varchar(20) NULL")>
        Public Property TipoTasaFija() As String
            Get
                Return Me._TipoTasaFija
            End Get
            Set
                If (String.Equals(Me._TipoTasaFija, Value) = False) Then
                    Me.OnTipoTasaFijaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTasaFija = Value
                    Me.SendPropertyChanged("TipoTasaFija")
                    Me.OnTipoTasaFijaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEspecieEsAccion", Storage:="_EspecieEsAccion", DbType:="Bit NULL", CanBeNull:=True)>
        Public Property EspecieEsAccion() As System.Nullable(Of System.Boolean)
            Get
                Return Me._EspecieEsAccion
            End Get
            Set
                If (Object.Equals(Me._EspecieEsAccion, Value) = False) Then
                    Me.OnEspecieEsAccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EspecieEsAccion = Value
                    Me.SendPropertyChanged("EspecieEsAccion")
                    Me.OnEspecieEsAccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class CamposEditablesOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _NombreCampo As String

        Private _PermiteEditar As Boolean

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnNombreCampoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCampoChanged()
        End Sub
        Partial Private Sub OnPermiteEditarChanging(value As Boolean)
        End Sub
        Partial Private Sub OnPermiteEditarChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCampo", Storage:="_NombreCampo", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property NombreCampo() As String
            Get
                Return Me._NombreCampo
            End Get
            Set
                If (String.Equals(Me._NombreCampo, Value) = False) Then
                    Me.OnNombreCampoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCampo = Value
                    Me.SendPropertyChanged("NombreCampo")
                    Me.OnNombreCampoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermiteEditar", Storage:="_PermiteEditar", DbType:="Bit NOT NULL")>
        Public Property PermiteEditar() As Boolean
            Get
                Return Me._PermiteEditar
            End Get
            Set
                If ((Me._PermiteEditar = Value) _
                            = False) Then
                    Me.OnPermiteEditarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PermiteEditar = Value
                    Me.SendPropertyChanged("PermiteEditar")
                    Me.OnPermiteEditarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class CargaMasivaCantidadProcesadas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _ProcesoActivo As Boolean

        Private _CantidadTotalProcesar As Integer

        Private _CantidadProcesados As Integer

        Private _CantidadFaltantes As Integer

        Private _CantidadConfirmacion As Integer

        Private _CantidadJustificaciones As Integer

        Private _CantidadAprobaciones As Integer

        Private _TipoNegocio As String

        Private _TipoOperacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnProcesoActivoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnProcesoActivoChanged()
        End Sub
        Partial Private Sub OnCantidadTotalProcesarChanging(value As Integer)
        End Sub
        Partial Private Sub OnCantidadTotalProcesarChanged()
        End Sub
        Partial Private Sub OnCantidadProcesadosChanging(value As Integer)
        End Sub
        Partial Private Sub OnCantidadProcesadosChanged()
        End Sub
        Partial Private Sub OnCantidadFaltantesChanging(value As Integer)
        End Sub
        Partial Private Sub OnCantidadFaltantesChanged()
        End Sub
        Partial Private Sub OnCantidadConfirmacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnCantidadConfirmacionChanged()
        End Sub
        Partial Private Sub OnCantidadJustificacionesChanging(value As Integer)
        End Sub
        Partial Private Sub OnCantidadJustificacionesChanged()
        End Sub
        Partial Private Sub OnCantidadAprobacionesChanging(value As Integer)
        End Sub
        Partial Private Sub OnCantidadAprobacionesChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logProcesoActivo", Storage:="_ProcesoActivo", DbType:="Bit NOT NULL")>
        Public Property ProcesoActivo() As Boolean
            Get
                Return Me._ProcesoActivo
            End Get
            Set
                If ((Me._ProcesoActivo = Value) _
                            = False) Then
                    Me.OnProcesoActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ProcesoActivo = Value
                    Me.SendPropertyChanged("ProcesoActivo")
                    Me.OnProcesoActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadTotalProcesar", Storage:="_CantidadTotalProcesar", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property CantidadTotalProcesar() As Integer
            Get
                Return Me._CantidadTotalProcesar
            End Get
            Set
                If (Object.Equals(Me._CantidadTotalProcesar, Value) = False) Then
                    Me.OnCantidadTotalProcesarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadTotalProcesar = Value
                    Me.SendPropertyChanged("CantidadTotalProcesar")
                    Me.OnCantidadTotalProcesarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadProcesados", Storage:="_CantidadProcesados", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property CantidadProcesados() As Integer
            Get
                Return Me._CantidadProcesados
            End Get
            Set
                If (Object.Equals(Me._CantidadProcesados, Value) = False) Then
                    Me.OnCantidadProcesadosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadProcesados = Value
                    Me.SendPropertyChanged("CantidadProcesados")
                    Me.OnCantidadProcesadosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadFaltantes", Storage:="_CantidadFaltantes", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property CantidadFaltantes() As Integer
            Get
                Return Me._CantidadFaltantes
            End Get
            Set
                If (Object.Equals(Me._CantidadFaltantes, Value) = False) Then
                    Me.OnCantidadFaltantesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadFaltantes = Value
                    Me.SendPropertyChanged("CantidadFaltantes")
                    Me.OnCantidadFaltantesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadConfirmacion", Storage:="_CantidadConfirmacion", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property CantidadConfirmacion() As Integer
            Get
                Return Me._CantidadConfirmacion
            End Get
            Set
                If (Object.Equals(Me._CantidadConfirmacion, Value) = False) Then
                    Me.OnCantidadConfirmacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadConfirmacion = Value
                    Me.SendPropertyChanged("CantidadConfirmacion")
                    Me.OnCantidadConfirmacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadJustificaciones", Storage:="_CantidadJustificaciones", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property CantidadJustificaciones() As Integer
            Get
                Return Me._CantidadJustificaciones
            End Get
            Set
                If (Object.Equals(Me._CantidadJustificaciones, Value) = False) Then
                    Me.OnCantidadJustificacionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadJustificaciones = Value
                    Me.SendPropertyChanged("CantidadJustificaciones")
                    Me.OnCantidadJustificacionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadAprobaciones", Storage:="_CantidadAprobaciones", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property CantidadAprobaciones() As Integer
            Get
                Return Me._CantidadAprobaciones
            End Get
            Set
                If (Object.Equals(Me._CantidadAprobaciones, Value) = False) Then
                    Me.OnCantidadAprobacionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadAprobaciones = Value
                    Me.SendPropertyChanged("CantidadAprobaciones")
                    Me.OnCantidadAprobacionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(4) NULL")>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(4) NULL")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class OrdenOYDPLUS_Calculos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Exitoso As System.Nullable(Of Boolean)

        Private _CodigoMensaje As String

        Private _TieneMensajeValidacion As System.Nullable(Of Boolean)

        Private _Mensaje As String

        Private _EnPesos As System.Nullable(Of Boolean)

        Private _Cantidad As System.Nullable(Of Double)

        Private _Precio As System.Nullable(Of Double)

        Private _PrecioMaximoMinimo As System.Nullable(Of Double)

        Private _ValorCaptacionGiro As System.Nullable(Of Double)

        Private _ValorFuturoRepo As System.Nullable(Of Double)

        Private _ValorFuturoCliente As System.Nullable(Of Double)

        Private _TasaRegistro As System.Nullable(Of Double)

        Private _TasaCliente As System.Nullable(Of Double)

        Private _TasaNominal As System.Nullable(Of Double)

        Private _Comision As System.Nullable(Of Double)

        Private _IvaComision As System.Nullable(Of Double)

        Private _ValorComision As System.Nullable(Of Double)

        Private _Castigo As System.Nullable(Of Double)

        Private _ValorAccion As System.Nullable(Of Double)

        Private _ValorOrden As System.Nullable(Of Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnExitosoChanged()
        End Sub
        Partial Private Sub OnCodigoMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoMensajeChanged()
        End Sub
        Partial Private Sub OnTieneMensajeValidacionChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnTieneMensajeValidacionChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnEnPesosChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEnPesosChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnPrecioMaximoMinimoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioMaximoMinimoChanged()
        End Sub
        Partial Private Sub OnValorCaptacionGiroChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorCaptacionGiroChanged()
        End Sub
        Partial Private Sub OnValorFuturoRepoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorFuturoRepoChanged()
        End Sub
        Partial Private Sub OnValorFuturoClienteChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorFuturoClienteChanged()
        End Sub
        Partial Private Sub OnTasaRegistroChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaRegistroChanged()
        End Sub
        Partial Private Sub OnTasaClienteChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaClienteChanged()
        End Sub
        Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaNominalChanged()
        End Sub
        Partial Private Sub OnComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnComisionChanged()
        End Sub
        Partial Private Sub OnIvaComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnIvaComisionChanged()
        End Sub
        Partial Private Sub OnValorComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorComisionChanged()
        End Sub
        Partial Private Sub OnCastigoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCastigoChanged()
        End Sub
        Partial Private Sub OnValorAccionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorAccionChanged()
        End Sub
        Partial Private Sub OnValorOrdenChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorOrdenChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NULL")>
        Public Property Exitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._Exitoso
            End Get
            Set
                If (Me._Exitoso.Equals(Value) = False) Then
                    Me.OnExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Exitoso = Value
                    Me.SendPropertyChanged("Exitoso")
                    Me.OnExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoMensaje", Storage:="_CodigoMensaje", DbType:="Varchar(100) NULL")>
        Public Property CodigoMensaje() As String
            Get
                Return Me._CodigoMensaje
            End Get
            Set
                If (String.Equals(Me._CodigoMensaje, Value) = False) Then
                    Me.OnCodigoMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoMensaje = Value
                    Me.SendPropertyChanged("CodigoMensaje")
                    Me.OnCodigoMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTieneMensajeValidacion", Storage:="_TieneMensajeValidacion", DbType:="Bit NULL")>
        Public Property TieneMensajeValidacion() As System.Nullable(Of Boolean)
            Get
                Return Me._TieneMensajeValidacion
            End Get
            Set
                If (Me._TieneMensajeValidacion.Equals(Value) = False) Then
                    Me.OnTieneMensajeValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TieneMensajeValidacion = Value
                    Me.SendPropertyChanged("TieneMensajeValidacion")
                    Me.OnTieneMensajeValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(MAX) NULL")>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEnPesos", Storage:="_EnPesos", DbType:="Bit NULL")>
        Public Property EnPesos() As System.Nullable(Of Boolean)
            Get
                Return Me._EnPesos
            End Get
            Set
                If (Me._EnPesos.Equals(Value) = False) Then
                    Me.OnEnPesosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EnPesos = Value
                    Me.SendPropertyChanged("EnPesos")
                    Me.OnEnPesosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NULL")>
        Public Property Cantidad() As System.Nullable(Of Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Me._Cantidad.Equals(Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecio", Storage:="_Precio", DbType:="Float NULL")>
        Public Property Precio() As System.Nullable(Of Double)
            Get
                Return Me._Precio
            End Get
            Set
                If (Me._Precio.Equals(Value) = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioMaximoMinimo", Storage:="_PrecioMaximoMinimo", DbType:="Float NULL")>
        Public Property PrecioMaximoMinimo() As System.Nullable(Of Double)
            Get
                Return Me._PrecioMaximoMinimo
            End Get
            Set
                If (Me._PrecioMaximoMinimo.Equals(Value) = False) Then
                    Me.OnPrecioMaximoMinimoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioMaximoMinimo = Value
                    Me.SendPropertyChanged("PrecioMaximoMinimo")
                    Me.OnPrecioMaximoMinimoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorCaptacionGiro", Storage:="_ValorCaptacionGiro", DbType:="Float NULL")>
        Public Property ValorCaptacionGiro() As System.Nullable(Of Double)
            Get
                Return Me._ValorCaptacionGiro
            End Get
            Set
                If (Me._ValorCaptacionGiro.Equals(Value) = False) Then
                    Me.OnValorCaptacionGiroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorCaptacionGiro = Value
                    Me.SendPropertyChanged("ValorCaptacionGiro")
                    Me.OnValorCaptacionGiroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorFuturoRepo", Storage:="_ValorFuturoRepo", DbType:="Float NULL")>
        Public Property ValorFuturoRepo() As System.Nullable(Of Double)
            Get
                Return Me._ValorFuturoRepo
            End Get
            Set
                If (Me._ValorFuturoRepo.Equals(Value) = False) Then
                    Me.OnValorFuturoRepoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorFuturoRepo = Value
                    Me.SendPropertyChanged("ValorFuturoRepo")
                    Me.OnValorFuturoRepoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorFuturoCliente", Storage:="_ValorFuturoCliente", DbType:="Float")>
        Public Property ValorFuturoCliente() As System.Nullable(Of Double)
            Get
                Return Me._ValorFuturoCliente
            End Get
            Set
                If (Me._ValorFuturoCliente.Equals(Value) = False) Then
                    Me.OnValorFuturoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorFuturoCliente = Value
                    Me.SendPropertyChanged("ValorFuturoCliente")
                    Me.OnValorFuturoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaRegistro", Storage:="_TasaRegistro", DbType:="Float NULL")>
        Public Property TasaRegistro() As System.Nullable(Of Double)
            Get
                Return Me._TasaRegistro
            End Get
            Set
                If (Me._TasaRegistro.Equals(Value) = False) Then
                    Me.OnTasaRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaRegistro = Value
                    Me.SendPropertyChanged("TasaRegistro")
                    Me.OnTasaRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaCliente", Storage:="_TasaCliente", DbType:="Float NULL")>
        Public Property TasaCliente() As System.Nullable(Of Double)
            Get
                Return Me._TasaCliente
            End Get
            Set
                If (Me._TasaCliente.Equals(Value) = False) Then
                    Me.OnTasaClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaCliente = Value
                    Me.SendPropertyChanged("TasaCliente")
                    Me.OnTasaClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float")>
        Public Property TasaNominal() As System.Nullable(Of Double)
            Get
                Return Me._TasaNominal
            End Get
            Set
                If (Me._TasaNominal.Equals(Value) = False) Then
                    Me.OnTasaNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaNominal = Value
                    Me.SendPropertyChanged("TasaNominal")
                    Me.OnTasaNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComision", Storage:="_Comision", DbType:="Float")>
        Public Property Comision() As System.Nullable(Of Double)
            Get
                Return Me._Comision
            End Get
            Set
                If (Me._Comision.Equals(Value) = False) Then
                    Me.OnComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Comision = Value
                    Me.SendPropertyChanged("Comision")
                    Me.OnComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblIvaComision", Storage:="_IvaComision", DbType:="Float")>
        Public Property IvaComision() As System.Nullable(Of Double)
            Get
                Return Me._IvaComision
            End Get
            Set
                If (Me._IvaComision.Equals(Value) = False) Then
                    Me.OnIvaComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IvaComision = Value
                    Me.SendPropertyChanged("IvaComision")
                    Me.OnIvaComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorComision", Storage:="_ValorComision", DbType:="Float")>
        Public Property ValorComision() As System.Nullable(Of Double)
            Get
                Return Me._ValorComision
            End Get
            Set
                If (Me._ValorComision.Equals(Value) = False) Then
                    Me.OnValorComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorComision = Value
                    Me.SendPropertyChanged("ValorComision")
                    Me.OnValorComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCastigo", Storage:="_Castigo", DbType:="Float")>
        Public Property Castigo() As System.Nullable(Of Double)
            Get
                Return Me._Castigo
            End Get
            Set
                If (Me._Castigo.Equals(Value) = False) Then
                    Me.OnCastigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Castigo = Value
                    Me.SendPropertyChanged("Castigo")
                    Me.OnCastigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorAccion", Storage:="_ValorAccion", DbType:="Float NULL")>
        Public Property ValorAccion() As System.Nullable(Of Double)
            Get
                Return Me._ValorAccion
            End Get
            Set
                If (Me._ValorAccion.Equals(Value) = False) Then
                    Me.OnValorAccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorAccion = Value
                    Me.SendPropertyChanged("ValorAccion")
                    Me.OnValorAccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorOrden", Storage:="_ValorOrden", DbType:="Float NULL")>
        Public Property ValorOrden() As System.Nullable(Of Double)
            Get
                Return Me._ValorOrden
            End Get
            Set
                If (Me._ValorOrden.Equals(Value) = False) Then
                    Me.OnValorOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorOrden = Value
                    Me.SendPropertyChanged("ValorOrden")
                    Me.OnValorOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblOrdenes_LiqAsociadasComplementar")>
    Partial Public Class LiqAsociadasOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDComisionista As Integer

        Private _IDSucComisionista As Integer

        Private _Tipo As String

        Private _ClaseOrden As String

        Private _NroOrden As Integer

        Private _Version As Integer

        Private _NroLiquidacion As Integer

        Private _Parcial As Integer

        Private _FechaLiquidacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _Actualizacion As System.Nullable(Of Date)

        Private _IDLiquidacionAsociada As Integer

        Private _InfoSesion As String

        Private _Monto As System.Nullable(Of Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDComisionistaChanged()
        End Sub
        Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDSucComisionistaChanged()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnClaseOrdenChanged()
        End Sub
        Partial Private Sub OnNroOrdenChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroOrdenChanged()
        End Sub
        Partial Private Sub OnVersionChanging(value As Integer)
        End Sub
        Partial Private Sub OnVersionChanged()
        End Sub
        Partial Private Sub OnNroLiquidacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroLiquidacionChanged()
        End Sub
        Partial Private Sub OnParcialChanging(value As Integer)
        End Sub
        Partial Private Sub OnParcialChanged()
        End Sub
        Partial Private Sub OnFechaLiquidacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaLiquidacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnIDLiquidacionAsociadaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDLiquidacionAsociadaChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnMontoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnMontoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDComisionista() As Integer
            Get
                Return Me._IDComisionista
            End Get
            Set
                If (Object.Equals(Me._IDComisionista, Value) = False) Then
                    Me.OnIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComisionista = Value
                    Me.SendPropertyChanged("IDComisionista")
                    Me.OnIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDSucComisionista() As Integer
            Get
                Return Me._IDSucComisionista
            End Get
            Set
                If (Object.Equals(Me._IDSucComisionista, Value) = False) Then
                    Me.OnIDSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucComisionista = Value
                    Me.SendPropertyChanged("IDSucComisionista")
                    Me.OnIDSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Char(10) NOT NULL", CanBeNull:=False)>
        Public Property TipoOrden() As String
            Get
                Return Me._Tipo
            End Get
            Set
                If (String.Equals(Me._Tipo, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Tipo = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Char(10) NOT NULL", CanBeNull:=False)>
        Public Property ClaseOrden() As String
            Get
                Return Me._ClaseOrden
            End Get
            Set
                If (String.Equals(Me._ClaseOrden, Value) = False) Then
                    Me.OnClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClaseOrden = Value
                    Me.SendPropertyChanged("ClaseOrden")
                    Me.OnClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrden", Storage:="_NroOrden", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property NroOrden() As Integer
            Get
                Return Me._NroOrden
            End Get
            Set
                If (Object.Equals(Me._NroOrden, Value) = False) Then
                    Me.OnNroOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOrden = Value
                    Me.SendPropertyChanged("NroOrden")
                    Me.OnNroOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Version() As Integer
            Get
                Return Me._Version
            End Get
            Set
                If (Object.Equals(Me._Version, Value) = False) Then
                    Me.OnVersionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Version = Value
                    Me.SendPropertyChanged("Version")
                    Me.OnVersionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidacion", Storage:="_NroLiquidacion", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property NroLiquidacion() As Integer
            Get
                Return Me._NroLiquidacion
            End Get
            Set
                If (Object.Equals(Me._NroLiquidacion, Value) = False) Then
                    Me.OnNroLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroLiquidacion = Value
                    Me.SendPropertyChanged("NroLiquidacion")
                    Me.OnNroLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", DbType:="Int", CanBeNull:=True)>
        Public Property Parcial() As Integer
            Get
                Return Me._Parcial
            End Get
            Set
                If (Object.Equals(Me._Parcial, Value) = False) Then
                    Me.OnParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Parcial = Value
                    Me.SendPropertyChanged("Parcial")
                    Me.OnParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_FechaLiquidacion", DbType:="Datetime")>
        Public Property FechaLiquidacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaLiquidacion
            End Get
            Set
                If (Me._FechaLiquidacion.Equals(Value) = False) Then
                    Me.OnFechaLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaLiquidacion = Value
                    Me.SendPropertyChanged("FechaLiquidacion")
                    Me.OnFechaLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime")>
        Public Property Actualizacion() As System.Nullable(Of Date)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Me._Actualizacion.Equals(Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidacionAsociada", Storage:="_IDLiquidacionAsociada", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDLiquidacionAsociada() As Integer
            Get
                Return Me._IDLiquidacionAsociada
            End Get
            Set
                If (Object.Equals(Me._IDLiquidacionAsociada, Value) = False) Then
                    Me.OnIDLiquidacionAsociadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDLiquidacionAsociada = Value
                    Me.SendPropertyChanged("IDLiquidacionAsociada")
                    Me.OnIDLiquidacionAsociadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numMonto", Storage:="_Monto", DbType:="float")>
        Public Property Monto() As System.Nullable(Of Double)
            Get
                Return Me._Monto
            End Get
            Set
                If (Me._Monto.Equals(Value) = False) Then
                    Me.OnMontoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Monto = Value
                    Me.SendPropertyChanged("Monto")
                    Me.OnMontoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class OperacionesPPropia
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoOperacion As String

        Private _Nemo As String

        Private _ValorNominal As System.Nullable(Of System.Double)

        Private _ValorGiro As System.Nullable(Of System.Double)

        Private _TraderComprador As String

        Private _TraderVendedor As String

        Private _NroOperacion As System.Nullable(Of System.Int32)

        Private _FormaOperacion As String

        Private _FechaRegistro As System.Nullable(Of System.DateTime)

        Private _FechaCumplimiento As System.Nullable(Of System.DateTime)

        Private _Emision As System.Nullable(Of System.DateTime)

        Private _Vencimiento As System.Nullable(Of System.DateTime)

        Private _TasaFacial As System.Nullable(Of System.Double)

        Private _Modalidad As String

        Private _Indicador As String

        Private _PuntosIndicador As System.Nullable(Of System.Double)

        Private _strValorIndicador As String

        Private _strValorModalidad As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnNemoChanging(value As String)
        End Sub
        Partial Private Sub OnNemoChanged()
        End Sub
        Partial Private Sub OnValorNominalChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnValorNominalChanged()
        End Sub
        Partial Private Sub OnValorGiroChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnValorGiroChanged()
        End Sub
        Partial Private Sub OnTraderCompradorChanging(value As String)
        End Sub
        Partial Private Sub OnTraderCompradorChanged()
        End Sub
        Partial Private Sub OnTraderVendedorChanging(value As String)
        End Sub
        Partial Private Sub OnTraderVendedorChanged()
        End Sub
        Partial Private Sub OnNroOperacionChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnNroOperacionChanged()
        End Sub
        Partial Private Sub OnFormaOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnFormaOperacionChanged()
        End Sub
        Partial Private Sub OnFechaRegistroChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaRegistroChanged()
        End Sub
        Partial Private Sub OnFechaCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnEmisionChanged()
        End Sub
        Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnVencimientoChanged()
        End Sub
        Partial Private Sub OnTasaFacialChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaFacialChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnstrValorIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnstrValorIndicadorChanged()
        End Sub
        Partial Private Sub OnstrValorModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrValorModalidadChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoOperacion", DbType:="Varchar(100)")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nemo", DbType:="Varchar(100)")>
        Public Property Nemo() As String
            Get
                Return Me._Nemo
            End Get
            Set
                If (String.Equals(Me._Nemo, Value) = False) Then
                    Me.OnNemoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nemo = Value
                    Me.SendPropertyChanged("Nemo")
                    Me.OnNemoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorNominal", DbType:="Float", CanBeNull:=True)>
        Public Property ValorNominal() As System.Nullable(Of System.Double)
            Get
                Return Me._ValorNominal
            End Get
            Set
                If (Object.Equals(Me._ValorNominal, Value) = False) Then
                    Me.OnValorNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorNominal = Value
                    Me.SendPropertyChanged("ValorNominal")
                    Me.OnValorNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorGiro", DbType:="Float", CanBeNull:=True)>
        Public Property ValorGiro() As System.Nullable(Of System.Double)
            Get
                Return Me._ValorGiro
            End Get
            Set
                If (Object.Equals(Me._ValorGiro, Value) = False) Then
                    Me.OnValorGiroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorGiro = Value
                    Me.SendPropertyChanged("ValorGiro")
                    Me.OnValorGiroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TraderComprador", DbType:="Varchar(100)")>
        Public Property TraderComprador() As String
            Get
                Return Me._TraderComprador
            End Get
            Set
                If (String.Equals(Me._TraderComprador, Value) = False) Then
                    Me.OnTraderCompradorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TraderComprador = Value
                    Me.SendPropertyChanged("TraderComprador")
                    Me.OnTraderCompradorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TraderVendedor", DbType:="Varchar(100)")>
        Public Property TraderVendedor() As String
            Get
                Return Me._TraderVendedor
            End Get
            Set
                If (String.Equals(Me._TraderVendedor, Value) = False) Then
                    Me.OnTraderVendedorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TraderVendedor = Value
                    Me.SendPropertyChanged("TraderVendedor")
                    Me.OnTraderVendedorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NroOperacion", DbType:="Int NULL", CanBeNull:=True)>
        Public Property NroOperacion() As System.Nullable(Of System.Int32)
            Get
                Return Me._NroOperacion
            End Get
            Set
                If (Object.Equals(Me._NroOperacion, Value) = False) Then
                    Me.OnNroOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOperacion = Value
                    Me.SendPropertyChanged("NroOperacion")
                    Me.OnNroOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormaOperacion", DbType:="Varchar(100)")>
        Public Property FormaOperacion() As String
            Get
                Return Me._FormaOperacion
            End Get
            Set
                If (String.Equals(Me._FormaOperacion, Value) = False) Then
                    Me.OnFormaOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FormaOperacion = Value
                    Me.SendPropertyChanged("FormaOperacion")
                    Me.OnFormaOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRegistro", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaRegistro() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaRegistro
            End Get
            Set
                If (Object.Equals(Me._FechaRegistro, Value) = False) Then
                    Me.OnFechaRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaRegistro = Value
                    Me.SendPropertyChanged("FechaRegistro")
                    Me.OnFechaRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCumplimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaCumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaCumplimiento
            End Get
            Set
                If (Object.Equals(Me._FechaCumplimiento, Value) = False) Then
                    Me.OnFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCumplimiento = Value
                    Me.SendPropertyChanged("FechaCumplimiento")
                    Me.OnFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Emision", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Emision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Emision
            End Get
            Set
                If (Object.Equals(Me._Emision, Value) = False) Then
                    Me.OnEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Emision = Value
                    Me.SendPropertyChanged("Emision")
                    Me.OnEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vencimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Vencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Vencimiento
            End Get
            Set
                If (Object.Equals(Me._Vencimiento, Value) = False) Then
                    Me.OnVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Vencimiento = Value
                    Me.SendPropertyChanged("Vencimiento")
                    Me.OnVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TasaFacial", DbType:="Float", CanBeNull:=True)>
        Public Property TasaFacial() As System.Nullable(Of System.Double)
            Get
                Return Me._TasaFacial
            End Get
            Set
                If (Object.Equals(Me._TasaFacial, Value) = False) Then
                    Me.OnTasaFacialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaFacial = Value
                    Me.SendPropertyChanged("TasaFacial")
                    Me.OnTasaFacialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modalidad", DbType:="Varchar(100)")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Indicador", DbType:="Varchar(100)")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuntosIndicador", DbType:="Float", CanBeNull:=True)>
        Public Property PuntosIndicador() As System.Nullable(Of System.Double)
            Get
                Return Me._PuntosIndicador
            End Get
            Set
                If (Object.Equals(Me._PuntosIndicador, Value) = False) Then
                    Me.OnPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PuntosIndicador = Value
                    Me.SendPropertyChanged("PuntosIndicador")
                    Me.OnPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strValorIndicador", DbType:="varchar(50)")>
        Public Property strValorIndicador() As String
            Get
                Return Me._strValorIndicador
            End Get
            Set
                If (String.Equals(Me._strValorIndicador, Value) = False) Then
                    Me.OnstrValorIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strValorIndicador = Value
                    Me.SendPropertyChanged("strValorIndicador")
                    Me.OnstrValorIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strValorModalidad", DbType:="varchar(50)")>
        Public Property strValorModalidad() As String
            Get
                Return Me._strValorModalidad
            End Get
            Set
                If (String.Equals(Me._strValorModalidad, Value) = False) Then
                    Me.OnstrValorModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strValorModalidad = Value
                    Me.SendPropertyChanged("strValorModalidad")
                    Me.OnstrValorModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblSaldoOrdenSinCalzar
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _SaldoOrden As System.Nullable(Of System.Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnSaldoOrdenChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnSaldoOrdenChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSaldoOrden", Storage:="_SaldoOrden", DbType:="Float", CanBeNull:=True)>
        Public Property SaldoOrden() As System.Nullable(Of System.Double)
            Get
                Return Me._SaldoOrden
            End Get
            Set
                If (Object.Equals(Me._SaldoOrden, Value) = False) Then
                    Me.OnSaldoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SaldoOrden = Value
                    Me.SendPropertyChanged("SaldoOrden")
                    Me.OnSaldoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class EnrutamientoOrden
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intID As Integer

        Private _Fecha As System.Nullable(Of System.DateTime)

        Private _strNumeroOperacion As String

        Private _intNumeroOperacion As System.Nullable(Of System.Int32)

        Private _Cantidad As System.Nullable(Of System.Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
        Partial Private Sub OnstrNumeroOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrNumeroOperacionChanged()
        End Sub
        Partial Private Sub OnintNumeroOperacionChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnintNumeroOperacionChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intID() As Integer
            Get
                Return Me._intID
            End Get
            Set
                If (Object.Equals(Me._intID, Value) = False) Then
                    Me.OnintIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intID = Value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="Datetime", CanBeNull:=True)>
        Public Property Fecha() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNumeroOperacion", DbType:="Varchar(30)")>
        Public Property strNumeroOperacion() As String
            Get
                Return Me._strNumeroOperacion
            End Get
            Set
                If (String.Equals(Me._strNumeroOperacion, Value) = False) Then
                    Me.OnstrNumeroOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNumeroOperacion = Value
                    Me.SendPropertyChanged("strNumeroOperacion")
                    Me.OnstrNumeroOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intNumeroOperacion", DbType:="Int", CanBeNull:=True)>
        Public Property intNumeroOperacion() As System.Nullable(Of System.Int32)
            Get
                Return Me._intNumeroOperacion
            End Get
            Set
                If (Object.Equals(Me._intNumeroOperacion, Value) = False) Then
                    Me.OnintNumeroOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intNumeroOperacion = Value
                    Me.SendPropertyChanged("intNumeroOperacion")
                    Me.OnintNumeroOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float", CanBeNull:=True)>
        Public Property Cantidad() As System.Nullable(Of System.Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Object.Equals(Me._Cantidad, Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblInstruccionesOrdenes")>
    Partial Public Class InstruccionesOrdene
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDComisionista As Integer

        Private _IdSucComisionista As Integer

        Private _Tipo As String

        Private _Clase As String

        Private _ID As Integer

        Private _Version As Integer

        Private _IdBolsa As Integer

        Private _Retorno As String

        Private _Instruccion As String

        Private _Cuenta As String

        Private _Valor As System.Nullable(Of Double)

        Private _Seleccionado As Boolean

        Private _Cumplido As Integer

        Private _Aprobado As Boolean

        Private _Actualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _IDInstruccionesOrdenes As Integer

        Private _Descripcion As String

        Private _InfoSesion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDComisionistaChanged()
        End Sub
        Partial Private Sub OnIdSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdSucComisionistaChanged()
        End Sub
        Partial Private Sub OnTipoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoChanged()
        End Sub
        Partial Private Sub OnClaseChanging(value As String)
        End Sub
        Partial Private Sub OnClaseChanged()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnVersionChanging(value As Integer)
        End Sub
        Partial Private Sub OnVersionChanged()
        End Sub
        Partial Private Sub OnIdBolsaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdBolsaChanged()
        End Sub
        Partial Private Sub OnRetornoChanging(value As String)
        End Sub
        Partial Private Sub OnRetornoChanged()
        End Sub
        Partial Private Sub OnInstruccionChanging(value As String)
        End Sub
        Partial Private Sub OnInstruccionChanged()
        End Sub
        Partial Private Sub OnCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnSeleccionadoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnSeleccionadoChanged()
        End Sub
        Partial Private Sub OnCumplidoChanging(value As Integer)
        End Sub
        Partial Private Sub OnCumplidoChanged()
        End Sub
        Partial Private Sub OnAprobadoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnAprobadoChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnIDInstruccionesOrdenesChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDInstruccionesOrdenesChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int", CanBeNull:=True)>
        Public Property IDComisionista() As Integer
            Get
                Return Me._IDComisionista
            End Get
            Set
                If (Object.Equals(Me._IDComisionista, Value) = False) Then
                    Me.OnIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComisionista = Value
                    Me.SendPropertyChanged("IDComisionista")
                    Me.OnIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdSucComisionista", Storage:="_IdSucComisionista", DbType:="Int", CanBeNull:=True)>
        Public Property IdSucComisionista() As Integer
            Get
                Return Me._IdSucComisionista
            End Get
            Set
                If (Object.Equals(Me._IdSucComisionista, Value) = False) Then
                    Me.OnIdSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdSucComisionista = Value
                    Me.SendPropertyChanged("IdSucComisionista")
                    Me.OnIdSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Char(1)", CanBeNull:=False)>
        Public Property Tipo() As String
            Get
                Return Me._Tipo
            End Get
            Set
                If (String.Equals(Me._Tipo, Value) = False) Then
                    Me.OnTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Tipo = Value
                    Me.SendPropertyChanged("Tipo")
                    Me.OnTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="Char(1)")>
        Public Property Clase() As String
            Get
                Return Me._Clase
            End Get
            Set
                If (String.Equals(Me._Clase, Value) = False) Then
                    Me.OnClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clase = Value
                    Me.SendPropertyChanged("Clase")
                    Me.OnClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int", CanBeNull:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngVersion", Storage:="_Version", DbType:="Int", CanBeNull:=True)>
        Public Property Version() As Integer
            Get
                Return Me._Version
            End Get
            Set
                If (Object.Equals(Me._Version, Value) = False) Then
                    Me.OnVersionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Version = Value
                    Me.SendPropertyChanged("Version")
                    Me.OnVersionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdBolsa", Storage:="_IdBolsa", DbType:="Int", CanBeNull:=True)>
        Public Property IdBolsa() As Integer
            Get
                Return Me._IdBolsa
            End Get
            Set
                If (Object.Equals(Me._IdBolsa, Value) = False) Then
                    Me.OnIdBolsaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdBolsa = Value
                    Me.SendPropertyChanged("IdBolsa")
                    Me.OnIdBolsaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetorno", Storage:="_Retorno", DbType:="Varchar(2)", CanBeNull:=False)>
        Public Property Retorno() As String
            Get
                Return Me._Retorno
            End Get
            Set
                If (String.Equals(Me._Retorno, Value) = False) Then
                    Me.OnRetornoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Retorno = Value
                    Me.SendPropertyChanged("Retorno")
                    Me.OnRetornoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInstruccion", Storage:="_Instruccion", DbType:="Varchar(255)")>
        Public Property Instruccion() As String
            Get
                Return Me._Instruccion
            End Get
            Set
                If (String.Equals(Me._Instruccion, Value) = False) Then
                    Me.OnInstruccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Instruccion = Value
                    Me.SendPropertyChanged("Instruccion")
                    Me.OnInstruccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuenta", Storage:="_Cuenta", DbType:="Varchar(255)")>
        Public Property Cuenta() As String
            Get
                Return Me._Cuenta
            End Get
            Set
                If (String.Equals(Me._Cuenta, Value) = False) Then
                    Me.OnCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cuenta = Value
                    Me.SendPropertyChanged("Cuenta")
                    Me.OnCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValor", Storage:="_Valor", DbType:="Float")>
        Public Property Valor() As System.Nullable(Of Double)
            Get
                Return Me._Valor
            End Get
            Set
                If (Me._Valor.Equals(Value) = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionado", Storage:="_Seleccionado", DbType:="Bit")>
        Public Property Seleccionado() As Boolean
            Get
                Return Me._Seleccionado
            End Get
            Set
                If ((Me._Seleccionado = Value) _
                            = False) Then
                    Me.OnSeleccionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccionado = Value
                    Me.SendPropertyChanged("Seleccionado")
                    Me.OnSeleccionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCumplido", Storage:="_Cumplido", DbType:="Int", CanBeNull:=False)>
        Public Property Cumplido() As Integer
            Get
                Return Me._Cumplido
            End Get
            Set
                If (Object.Equals(Me._Cumplido, Value) = False) Then
                    Me.OnCumplidoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cumplido = Value
                    Me.SendPropertyChanged("Cumplido")
                    Me.OnCumplidoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAprobado", Storage:="_Aprobado", DbType:="Bit")>
        Public Property Aprobado() As Boolean
            Get
                Return Me._Aprobado
            End Get
            Set
                If ((Me._Aprobado = Value) _
                            = False) Then
                    Me.OnAprobadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Aprobado = Value
                    Me.SendPropertyChanged("Aprobado")
                    Me.OnAprobadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime")>
        Public Property Actualizacion() As System.Nullable(Of Date)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Me._Actualizacion.Equals(Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Char(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDInstruccionesOrdenes", Storage:="_IDInstruccionesOrdenes", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDInstruccionesOrdenes() As Integer
            Get
                Return Me._IDInstruccionesOrdenes
            End Get
            Set
                If (Object.Equals(Me._IDInstruccionesOrdenes, Value) = False) Then
                    Me.OnIDInstruccionesOrdenesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDInstruccionesOrdenes = Value
                    Me.SendPropertyChanged("IDInstruccionesOrdenes")
                    Me.OnIDInstruccionesOrdenesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class CuentasClientes
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Cuenta As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuenta", Storage:="_Cuenta", DbType:="Varchar(255)", CanBeNull:=False)>
        Public Property Cuenta() As String
            Get
                Return Me._Cuenta
            End Get
            Set
                If (String.Equals(Me._Cuenta, Value) = False) Then
                    Me.OnCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cuenta = Value
                    Me.SendPropertyChanged("Cuenta")
                    Me.OnCuentaChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCombinacionesTipoLimite")>
    Partial Public Class CombinacionesTipoLimite
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDCombinacion As Integer

        Private _TipoLimite As String

        Private _Ejecucion As String

        Private _Duracion As String

        Private _dtmActualizacion As Date

        Private _Usuario As String

        Private _InfoSesion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDCombinacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDCombinacionChanged()
        End Sub
        Partial Private Sub OnTipoLimiteChanging(value As String)
        End Sub
        Partial Private Sub OnTipoLimiteChanged()
        End Sub
        Partial Private Sub OnEjecucionChanging(value As String)
        End Sub
        Partial Private Sub OnEjecucionChanged()
        End Sub
        Partial Private Sub OnDuracionChanging(value As String)
        End Sub
        Partial Private Sub OnDuracionChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_IDCombinacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDCombinacion() As Integer
            Get
                Return Me._IDCombinacion
            End Get
            Set
                If ((Me._IDCombinacion = Value) _
                            = False) Then
                    Me.OnIDCombinacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDCombinacion = Value
                    Me.SendPropertyChanged("IDCombinacion")
                    Me.OnIDCombinacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoLimite", Storage:="_TipoLimite", DbType:="VarChar(250)")>
        Public Property TipoLimite() As String
            Get
                Return Me._TipoLimite
            End Get
            Set
                If (String.Equals(Me._TipoLimite, Value) = False) Then
                    Me.OnTipoLimiteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoLimite = Value
                    Me.SendPropertyChanged("TipoLimite")
                    Me.OnTipoLimiteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEjecucion", Storage:="_Ejecucion", DbType:="Varchar(20) NOT NULL")>
        Public Property Ejecucion() As String
            Get
                Return Me._Ejecucion
            End Get
            Set
                If (String.Equals(Me._Ejecucion, Value) = False) Then
                    Me.OnEjecucionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Ejecucion = Value
                    Me.SendPropertyChanged("Ejecucion")
                    Me.OnEjecucionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDuracion", Storage:="_Duracion", DbType:="Varchar(20) NOT NULL")>
        Public Property Duracion() As String
            Get
                Return Me._Duracion
            End Get
            Set
                If (String.Equals(Me._Duracion, Value) = False) Then
                    Me.OnDuracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Duracion = Value
                    Me.SendPropertyChanged("Duracion")
                    Me.OnDuracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime", CanBeNull:=True)>
        Public Property dtmActualizacion() As Date
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If (Object.Equals(Me._dtmActualizacion, Value) = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="VarChar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute()>
    Partial Public Class RegistroOperacionesPorReceptor_Calculos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Exitoso As System.Nullable(Of Boolean)

        Private _CodigoMensaje As String

        Private _Mensaje As String

        Private _ValorNominal As System.Nullable(Of Double)

        Private _Precio As System.Nullable(Of Double)

        Private _ValorGiro As System.Nullable(Of Double)

        Private _ValorGiro2 As System.Nullable(Of Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnExitosoChanged()
        End Sub
        Partial Private Sub OnCodigoMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoMensajeChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnValorNominalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorNominalChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnValorGiroChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorGiroChanged()
        End Sub
        Partial Private Sub OnValorGiro2Changing(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorGiro2Changed()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NULL")>
        Public Property Exitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._Exitoso
            End Get
            Set
                If (Me._Exitoso.Equals(Value) = False) Then
                    Me.OnExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Exitoso = Value
                    Me.SendPropertyChanged("Exitoso")
                    Me.OnExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoMensaje", Storage:="_CodigoMensaje", DbType:="Varchar(100) NULL")>
        Public Property CodigoMensaje() As String
            Get
                Return Me._CodigoMensaje
            End Get
            Set
                If (String.Equals(Me._CodigoMensaje, Value) = False) Then
                    Me.OnCodigoMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoMensaje = Value
                    Me.SendPropertyChanged("CodigoMensaje")
                    Me.OnCodigoMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(MAX) NULL")>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorNominal", Storage:="_ValorNominal", DbType:="Float NULL")>
        Public Property ValorNominal() As System.Nullable(Of Double)
            Get
                Return Me._ValorNominal
            End Get
            Set
                If (Me._ValorNominal.Equals(Value) = False) Then
                    Me.OnValorNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorNominal = Value
                    Me.SendPropertyChanged("ValorNominal")
                    Me.OnValorNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecio", Storage:="_Precio", DbType:="Float NULL")>
        Public Property Precio() As System.Nullable(Of Double)
            Get
                Return Me._Precio
            End Get
            Set
                If (Me._Precio.Equals(Value) = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorGiro", Storage:="_ValorGiro", DbType:="Float NULL")>
        Public Property ValorGiro() As System.Nullable(Of Double)
            Get
                Return Me._ValorGiro
            End Get
            Set
                If (Me._ValorGiro.Equals(Value) = False) Then
                    Me.OnValorGiroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorGiro = Value
                    Me.SendPropertyChanged("ValorGiro")
                    Me.OnValorGiroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorGiro2", Storage:="_ValorGiro2", DbType:="Float NULL")>
        Public Property ValorGiro2() As System.Nullable(Of Double)
            Get
                Return Me._ValorGiro2
            End Get
            Set
                If (Me._ValorGiro2.Equals(Value) = False) Then
                    Me.OnValorGiro2Changing(Value)
                    Me.SendPropertyChanging()
                    Me._ValorGiro2 = Value
                    Me.SendPropertyChanged("ValorGiro2")
                    Me.OnValorGiro2Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

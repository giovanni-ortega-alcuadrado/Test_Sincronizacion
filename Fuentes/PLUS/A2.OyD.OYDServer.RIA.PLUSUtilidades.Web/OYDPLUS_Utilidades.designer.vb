'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="OYDPLUSYD_Gen_Net")>
Partial Public Class OYDPLUSUtilidadesDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertItemComboOYDPLUS(instance As OYDPLUSUtilidades.ItemComboOYDPLUS)
    End Sub
    Partial Private Sub UpdateItemComboOYDPLUS(instance As OYDPLUSUtilidades.ItemComboOYDPLUS)
    End Sub
    Partial Private Sub DeleteItemComboOYDPLUS(instance As OYDPLUSUtilidades.ItemComboOYDPLUS)
    End Sub
    Partial Private Sub InserttblSaldosCliente(instance As OYDPLUSUtilidades.tblSaldosCliente)
    End Sub
    Partial Private Sub UpdatetblSaldosCliente(instance As OYDPLUSUtilidades.tblSaldosCliente)
    End Sub
    Partial Private Sub DeletetblSaldosCliente(instance As OYDPLUSUtilidades.tblSaldosCliente)
    End Sub
    Partial Private Sub InserttblPortafolioCliente(instance As OYDPLUSUtilidades.tblPortafolioCliente)
    End Sub
    Partial Private Sub UpdatetblPortafolioCliente(instance As OYDPLUSUtilidades.tblPortafolioCliente)
    End Sub
    Partial Private Sub DeletetblPortafolioCliente(instance As OYDPLUSUtilidades.tblPortafolioCliente)
    End Sub
    Partial Private Sub InserttblOrdenesSAEAcciones(instance As OYDPLUSUtilidades.tblOrdenesSAEAcciones)
    End Sub
    Partial Private Sub UpdatetblOrdenesSAEAcciones(instance As OYDPLUSUtilidades.tblOrdenesSAEAcciones)
    End Sub
    Partial Private Sub DeletetblOrdenesSAEAcciones(instance As OYDPLUSUtilidades.tblOrdenesSAEAcciones)
    End Sub
    Partial Private Sub InserttblOperacionesCumplir(instance As OYDPLUSUtilidades.tblOperacionesCumplir)
    End Sub
    Partial Private Sub UpdatetblOperacionesCumplir(instance As OYDPLUSUtilidades.tblOperacionesCumplir)
    End Sub
    Partial Private Sub DeletetblOperacionesCumplir(instance As OYDPLUSUtilidades.tblOperacionesCumplir)
    End Sub
    Partial Private Sub InserttblRN_ContadorReglasAutorizacion(instance As OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion)
    End Sub
    Partial Private Sub UpdatetblRN_ContadorReglasAutorizacion(instance As OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion)
    End Sub
    Partial Private Sub DeletetblRN_ContadorReglasAutorizacion(instance As OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion)
    End Sub
    Partial Private Sub InserttblSaldosBancos(instance As OYDPLUSUtilidades.tblSaldosBancos)
    End Sub
    Partial Private Sub UpdatetblSaldosBancos(instance As OYDPLUSUtilidades.tblSaldosBancos)
    End Sub
    Partial Private Sub DeletetblSaldosBancos(instance As OYDPLUSUtilidades.tblSaldosBancos)
    End Sub
    Partial Private Sub InserttblLiquidacionesCliente(instance As OYDPLUSUtilidades.tblLiquidacionesCliente)
    End Sub
    Partial Private Sub UpdatetblLiquidacionesCliente(instance As OYDPLUSUtilidades.tblLiquidacionesCliente)
    End Sub
    Partial Private Sub DeletetblLiquidacionesCliente(instance As OYDPLUSUtilidades.tblLiquidacionesCliente)
    End Sub
    Partial Private Sub InserttblOrdenesSAERentaFija(instance As OYDPLUSUtilidades.tblOrdenesSAERentaFija)
    End Sub
    Partial Private Sub UpdatetblOrdenesSAERentaFija(instance As OYDPLUSUtilidades.tblOrdenesSAERentaFija)
    End Sub
    Partial Private Sub DeletetblOrdenesSAERentaFija(instance As OYDPLUSUtilidades.tblOrdenesSAERentaFija)
    End Sub
    Partial Private Sub InserttblControlProgramacion(instance As OYDPLUSUtilidades.tblControlProgramacion)
    End Sub
    Partial Private Sub UpdatetblControlProgramacion(instance As OYDPLUSUtilidades.tblControlProgramacion)
    End Sub
    Partial Private Sub DeletetblControlProgramacion(instance As OYDPLUSUtilidades.tblControlProgramacion)
    End Sub
    Partial Private Sub InserttblControlProgramacionFechas(instance As OYDPLUSUtilidades.tblControlProgramacionFechas)
    End Sub
    Partial Private Sub UpdatetblControlProgramacionFechas(instance As OYDPLUSUtilidades.tblControlProgramacionFechas)
    End Sub
    Partial Private Sub DeletetblControlProgramacionFechas(instance As OYDPLUSUtilidades.tblControlProgramacionFechas)
    End Sub
    Partial Private Sub InserttblControlProgramacionLog(instance As OYDPLUSUtilidades.tblControlProgramacionLog)
    End Sub
    Partial Private Sub UpdatetblControlProgramacionLog(instance As OYDPLUSUtilidades.tblControlProgramacionLog)
    End Sub
    Partial Private Sub DeletetblControlProgramacionLog(instance As OYDPLUSUtilidades.tblControlProgramacionLog)
    End Sub
    Partial Private Sub InserttblControlProgramacionGeneracionFechas(instance As OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas)
    End Sub
    Partial Private Sub UpdatetblControlProgramacionGeneracionFechas(instance As OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas)
    End Sub
    Partial Private Sub DeletetblControlProgramacionGeneracionFechas(instance As OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas)
    End Sub
    Partial Private Sub InsertValidacionEliminarRegistro(instance As OYDPLUSUtilidades.ValidacionEliminarRegistro)
    End Sub
    Partial Private Sub UpdateValidacionEliminarRegistro(instance As OYDPLUSUtilidades.ValidacionEliminarRegistro)
    End Sub
    Partial Private Sub DeleteValidacionEliminarRegistro(instance As OYDPLUSUtilidades.ValidacionEliminarRegistro)
    End Sub
    Partial Private Sub InserttblMensajes(instance As OYDPLUSUtilidades.tblMensajes)
    End Sub
    Partial Private Sub UpdatetblMensajes(instance As OYDPLUSUtilidades.tblMensajes)
    End Sub
    Partial Private Sub DeletetblMensajes(instance As OYDPLUSUtilidades.tblMensajes)
    End Sub
    Partial Private Sub InserttblConfiguracionesAdicionalesReceptor(instance As OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor)
    End Sub
    Partial Private Sub UpdatetblConfiguracionesAdicionalesReceptor(instance As OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor)
    End Sub
    Partial Private Sub DeletetblConfiguracionesAdicionalesReceptor(instance As OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor)
    End Sub
    Partial Private Sub InserttblParametrosReceptor(instance As OYDPLUSUtilidades.tblParametrosReceptor)
    End Sub
    Partial Private Sub UpdatetblParametrosReceptor(instance As OYDPLUSUtilidades.tblParametrosReceptor)
    End Sub
    Partial Private Sub DeletetblParametrosReceptor(instance As OYDPLUSUtilidades.tblParametrosReceptor)
    End Sub
    Partial Private Sub InserttblReceptoresUsuario(instance As OYDPLUSUtilidades.tblReceptoresUsuario)
    End Sub
    Partial Private Sub UpdatetblReceptoresUsuario(instance As OYDPLUSUtilidades.tblReceptoresUsuario)
    End Sub
    Partial Private Sub DeletetblReceptoresUsuario(instance As OYDPLUSUtilidades.tblReceptoresUsuario)
    End Sub
    Partial Private Sub InsertCombosReceptor(instance As OYDPLUSUtilidades.CombosReceptor)
    End Sub
    Partial Private Sub UpdateCombosReceptor(instance As OYDPLUSUtilidades.CombosReceptor)
    End Sub
    Partial Private Sub DeleteCombosReceptor(instance As OYDPLUSUtilidades.CombosReceptor)
    End Sub
    Partial Private Sub InserttblEspeciesXTipoNegocio(instance As OYDPLUSUtilidades.tblEspeciesXTipoNegocio)
    End Sub
    Partial Private Sub UpdatetblEspeciesXTipoNegocio(instance As OYDPLUSUtilidades.tblEspeciesXTipoNegocio)
    End Sub
    Partial Private Sub DeletetblEspeciesXTipoNegocio(instance As OYDPLUSUtilidades.tblEspeciesXTipoNegocio)
    End Sub
    Partial Private Sub InserttblTipoNegocioReceptor(instance As OYDPLUSUtilidades.tblTipoNegocioReceptor)
    End Sub
    Partial Private Sub UpdatetblTipoNegocioReceptor(instance As OYDPLUSUtilidades.tblTipoNegocioReceptor)
    End Sub
    Partial Private Sub DeletetblTipoNegocioReceptor(instance As OYDPLUSUtilidades.tblTipoNegocioReceptor)
    End Sub
    Partial Private Sub InsertItemCombosSistemaExterno(instance As OYDPLUSUtilidades.ItemCombosSistemaExterno)
    End Sub
    Partial Private Sub UpdateItemCombosSistemaExterno(instance As OYDPLUSUtilidades.ItemCombosSistemaExterno)
    End Sub
    Partial Private Sub DeleteItemCombosSistemaExterno(instance As OYDPLUSUtilidades.ItemCombosSistemaExterno)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property ItemCombosOYDPLUS() As System.Data.Linq.Table(Of OYDPLUSUtilidades.ItemComboOYDPLUS)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.ItemComboOYDPLUS)
        End Get
    End Property

    Public ReadOnly Property tblSaldosCliente() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblSaldosCliente)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblSaldosCliente)
        End Get
    End Property

    Public ReadOnly Property tblPortafolioCliente() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblPortafolioCliente)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblPortafolioCliente)
        End Get
    End Property

    Public ReadOnly Property tblOrdenesSAEAcciones() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblOrdenesSAEAcciones)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblOrdenesSAEAcciones)
        End Get
    End Property

    Public ReadOnly Property tblOperacionesCumplir() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblOperacionesCumplir)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblOperacionesCumplir)
        End Get
    End Property

    Public ReadOnly Property tblRN_ContadorReglasAutorizacion() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion)
        End Get
    End Property

    Public ReadOnly Property tblSaldosBancos() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblSaldosBancos)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblSaldosBancos)
        End Get
    End Property

    Public ReadOnly Property tblLiquidacionesCliente() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblLiquidacionesCliente)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblLiquidacionesCliente)
        End Get
    End Property

    Public ReadOnly Property tblOrdenesSAERentaFija() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblOrdenesSAERentaFija)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblOrdenesSAERentaFija)
        End Get
    End Property

    Public ReadOnly Property tblControlProgramacion() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblControlProgramacion)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblControlProgramacion)
        End Get
    End Property

    Public ReadOnly Property tblControlProgramacionFechas() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblControlProgramacionFechas)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblControlProgramacionFechas)
        End Get
    End Property

    Public ReadOnly Property tblControlProgramacionLog() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblControlProgramacionLog)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblControlProgramacionLog)
        End Get
    End Property

    Public ReadOnly Property tblControlProgramacionGeneracionFechas() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas)
        End Get
    End Property

    Public ReadOnly Property ValidacionEliminarRegistro() As System.Data.Linq.Table(Of OYDPLUSUtilidades.ValidacionEliminarRegistro)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.ValidacionEliminarRegistro)
        End Get
    End Property

    Public ReadOnly Property tblMensajes() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblMensajes)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblMensajes)
        End Get
    End Property

    Public ReadOnly Property tblConfiguracionesAdicionalesReceptor() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor)
        End Get
    End Property

    Public ReadOnly Property tblParametrosReceptor() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblParametrosReceptor)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblParametrosReceptor)
        End Get
    End Property

    Public ReadOnly Property tblReceptoresUsuario() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblReceptoresUsuario)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblReceptoresUsuario)
        End Get
    End Property

    Public ReadOnly Property CombosReceptor() As System.Data.Linq.Table(Of OYDPLUSUtilidades.CombosReceptor)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.CombosReceptor)
        End Get
    End Property

    Public ReadOnly Property tblEspeciesXTipoNegocio() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblEspeciesXTipoNegocio)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblEspeciesXTipoNegocio)
        End Get
    End Property

    Public ReadOnly Property tblTipoNegocioReceptor() As System.Data.Linq.Table(Of OYDPLUSUtilidades.tblTipoNegocioReceptor)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.tblTipoNegocioReceptor)
        End Get
    End Property

    Public ReadOnly Property ItemCombosSistemaExterno() As System.Data.Linq.Table(Of OYDPLUSUtilidades.ItemCombosSistemaExterno)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.ItemCombosSistemaExterno)
        End Get
    End Property

    Public ReadOnly Property MensajesProcesados() As System.Data.Linq.Table(Of OYDPLUSUtilidades.MensajesProcesados)
        Get
            Return Me.GetTable(Of OYDPLUSUtilidades.MensajesProcesados)
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspA2utils_CargarCombos")>
    Public Function uspA2utils_CargarCombos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrListaNombreCombos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of OYDPLUSUtilidades.ItemComboOYDPLUS)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrListaNombreCombos, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.ItemComboOYDPLUS))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ConsultarSaldosCliente")>
    Public Function uspOyDNet_ConsultarSaldosCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrCarteraColectivaFondos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(20)")> ByVal pintNroEncargoFondos As String) As ISingleResult(Of OYDPLUSUtilidades.tblSaldosCliente)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoProducto, pstrCarteraColectivaFondos, pintNroEncargoFondos)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblSaldosCliente))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_ConsultarPortafolioCliente")>
    Public Function uspOyDNet_ConsultarPortafolioCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(25)")> ByVal pstrEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblPortafolioCliente)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrIDComitente, pstrEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblPortafolioCliente))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarOrdenesBolsaReceptor")>
    Public Function uspOyDNet_ConsultarOrdenesBolsaReceptorAcciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1)")> ByVal pstrOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(MAX)")> ByVal pstrLiquidacionesHabilitar As String) As ISingleResult(Of OYDPLUSUtilidades.tblOrdenesSAEAcciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoReceptor, pstrClase, pstrOperacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio, pstrLiquidacionesHabilitar)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblOrdenesSAEAcciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarOrdenesBolsaReceptorAccionesPrecioPromedio")>
    Public Function uspOyDNet_ConsultarOrdenesBolsaReceptorAccionesPrecioPromedio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1)")> ByVal pstrOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1)")> ByVal pstrEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblOrdenesSAEAcciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrOperacion, pstrEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblOrdenesSAEAcciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarOrdenesBolsaReceptor")>
    Public Function uspOyDNet_ConsultarOrdenesBolsaReceptorRentaFija(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1)")> ByVal pstrOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(MAX)")> ByVal pstrLiquidacionesHabilitar As String) As ISingleResult(Of OYDPLUSUtilidades.tblOrdenesSAERentaFija)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoReceptor, pstrClase, pstrOperacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoNegocio, pstrLiquidacionesHabilitar)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblOrdenesSAERentaFija))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ConsultarOperacionesXCumplir")>
    Public Function uspOyDNet_ConsultarOperacionesXCumplir(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrTipoOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(25)")> ByVal pstrEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblOperacionesCumplir)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrTipoOperacion, pstrIDComitente, pstrEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblOperacionesCumplir))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ConsultarEstadosDocumento")>
    Public Function uspOyDNet_ConsultarEstadosDocumento(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNumeroUnico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintNumeroDocumento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(30)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintNumeroUnico, pintNumeroDocumento, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblRN_ContadorReglasAutorizacion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_ObtenerFechas")>
    Public Function uspOyDNet_ControlProgramacion_ObtenerFechas(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoRecurrencia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogDiariaCadaDia As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiariaDias As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintSemanalNroSemanas As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7)")> ByVal pstrSemanalDiasSemana As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogMensualElDia As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintMensualCadaDias As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintMensualCadaMes As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrMensualDias As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrMensualTipoDia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogAnualElDia As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrAnualMeses As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintAnualDia As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrAnualDias As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrAnualTipoDia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaInicio As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrModoFinalizacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintRepeticiones As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaFinalizacion As System.Nullable(Of System.DateTime)) As ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoRecurrencia, plogDiariaCadaDia, pintDiariaDias, pintSemanalNroSemanas, pstrSemanalDiasSemana, plogMensualElDia, pintMensualCadaDias, pintMensualCadaMes, pstrMensualDias, pstrMensualTipoDia, plogAnualElDia, pstrAnualMeses, pintAnualDia, pstrAnualDias, pstrAnualTipoDia, pdtmFechaInicio, pstrModoFinalizacion, pintRepeticiones, pdtmFechaFinalizacion)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacionGeneracionFechas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_Actualizar")>
    Public Function uspOyDNet_ControlProgramacion_Actualizar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrModulo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDNroDocumento As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoRecurrencia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogDiariaCadaDia As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintDiariaDias As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintSemanalNroSemanas As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7)")> ByVal pstrSemanalDiasSemana As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogMensualElDia As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintMensualCadaDias As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintMensualCadaMes As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrMensualDias As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrMensualTipoDia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogAnualElDia As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrAnualMeses As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintAnualDia As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrAnualDias As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrAnualTipoDia As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaInicio As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrModoFinalizacion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintRepeticiones As System.Nullable(Of System.Int32),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaFinalizacion As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrModulo, pintIDNroDocumento, pstrTipoRecurrencia, plogDiariaCadaDia, pintDiariaDias, pintSemanalNroSemanas, pstrSemanalDiasSemana, plogMensualElDia, pintMensualCadaDias, pintMensualCadaMes, pstrMensualDias, pstrMensualTipoDia, plogAnualElDia, pstrAnualMeses, pintAnualDia, pstrAnualDias, pstrAnualTipoDia, pdtmFechaInicio, pstrModoFinalizacion, pintRepeticiones, pdtmFechaFinalizacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_Consultar")>
    Public Function uspOyDNet_ControlProgramacion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDNroDocumento As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrModulo, pintIDNroDocumento, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_ConsultarFechas")>
    Public Function uspOyDNet_ControlProgramacion_ConsultarFechas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDControlProgramacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacionFechas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDControlProgramacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacionFechas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_ConsultarLog")>
    Public Function uspOyDNet_ControlProgramacion_ConsultarLog(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDFechaControlProgramacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacionLog)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDFechaControlProgramacion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblControlProgramacionLog))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_Inactivar")>
    Public Function uspOyDNet_ControlProgramacion_Inactivar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDNroDocumento As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrModulo, pintIDNroDocumento, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ControlProgramacion_InactivarFechas")>
    Public Function uspOyDNet_ControlProgramacion_InactivarFechas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(500)")> ByVal pstrIDFechasInactivar As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDFechasInactivar, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_rptSaldosBancos_PLUS")>
    Public Function uspOyDNet_rptSaldosBancos_PLUS(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintBancoIni As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintBancoFin As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFecha As Date, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintEstado As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrLogUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrOpcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrProceso As String) As ISingleResult(Of OYDPLUSUtilidades.tblSaldosBancos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintBancoIni, pintBancoFin, pdtmFecha, pintEstado, pstrLogUsuario, pstrMaquina, pstrOpcion, pstrProceso)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblSaldosBancos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSOrdenes.uspOyDNet_ConsultarLiquidacionesCliente")>
    Public Function uspOyDNet_ConsultarLiquidacionesCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrTipoOperacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaInicial As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaFinal As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblLiquidacionesCliente)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDComitente, pstrTipoOperacion, pdtmFechaInicial, pdtmFechaFinal, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblLiquidacionesCliente))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ValidarEliminarRegistro")>
    Public Function uspOyDNet_Maestros_ValidarEliminarRegistro(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrTablas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrCampos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrValores As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.ValidacionEliminarRegistro)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTablas, pstrCampos, pstrValores, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.ValidacionEliminarRegistro))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ValidarDuplicidadRegistro")>
    Public Function uspOyDNet_Maestros_ValidarDuplicidadRegistro(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrCampos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrValores As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.ValidacionEliminarRegistro)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNombreTabla, pstrCampos, pstrValores, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.ValidacionEliminarRegistro))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarMensajeDinamico")>
    Public Function uspOyDNet_CargarMensajeDinamico(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrOpcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(17)")> ByVal pstrIDCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(25)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblMensajes)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrOpcion, pstrIDReceptor, pstrIDCliente, pstrIDEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblMensajes))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarConfiguracionReceptor")>
    Public Function uspOyDNet_CargarConfiguracionReceptor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblConfiguracionesAdicionalesReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarParametrosReceptor")>
    Public Function uspOyDNet_CargarParametrosReceptor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblParametrosReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblParametrosReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarReceptoresUsuario")>
    Public Function uspOyDNet_CargarReceptoresUsuario(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogCargarReceptorActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuarioConsulta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblReceptoresUsuario)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plogCargarReceptorActivo, pstrUsuarioConsulta, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblReceptoresUsuario))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarCombosReceptor")>
    Public Function uspOyDNet_CargarCombosReceptor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.CombosReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.CombosReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarEspeciesTipoNegocio")>
    Public Function uspOyDNet_CargarEspeciesTipoNegocio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(60)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblEspeciesXTipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblEspeciesXTipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarTipoNegocioReceptor")>
    Public Function uspOyDNet_CargarTipoNegocioReceptor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(50)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OYDPLUSUtilidades.tblTipoNegocioReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDReceptor, pstrModulo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.tblTipoNegocioReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspSSBEnviarMensaje")>
    Public Function uspSSBEnviarMensaje(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrMensaje As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="UniqueIdentifier")> ByRef pguidConversacion As System.Nullable(Of System.Guid)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrMensaje, pguidConversacion)
        pguidConversacion = CType(result.GetParameterValue(1), System.Nullable(Of System.Guid))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_RetornarListaInformacionDeXML")>
    Public Function RetornarInformacionCombosSistemaExterno(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrMensaje As String) As ISingleResult(Of OYDPLUSUtilidades.ItemCombosSistemaExterno)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipo, pstrMensaje)
        Return CType(result.ReturnValue, ISingleResult(Of OYDPLUSUtilidades.ItemCombosSistemaExterno))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ObtenerFechaServidor")>
    Public Function uspOyDNet_ObtenerFechaServidor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByRef pdtmFechaHoraActual As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaHoraActual, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pdtmFechaHoraActual = CType(result.GetParameterValue(0), System.Nullable(Of Date))
        Return CType(result.ReturnValue, Integer)
    End Function
End Class

Namespace OYDPLUSUtilidades

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ItemComboOYDPLUS
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Categoria As String

        Private _ID As String

        Private _Descripcion As String

        Private _intID As System.Nullable(Of System.Int32)

        Private _Retorno As String

        Private _IDDependencia1 As System.Nullable(Of System.Int32)

        Private _IDDependencia2 As System.Nullable(Of System.Int32)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnCategoriaChanging(value As String)
        End Sub
        Partial Private Sub OnCategoriaChanged()
        End Sub
        Partial Private Sub OnIDChanging(value As String)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnintIDChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OnRetornoChanging(value As String)
        End Sub
        Partial Private Sub OnRetornoChanged()
        End Sub
        Partial Private Sub OnIDDependencia1Changing(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDDependencia1Changed()
        End Sub
        Partial Private Sub OnIDDependencia2Changing(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDDependencia2Changed()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property Categoria() As String
            Get
                Return Me._Categoria
            End Get
            Set
                If (String.Equals(Me._Categoria, Value) = False) Then
                    Me.OnCategoriaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Categoria = Value
                    Me.SendPropertyChanged("Categoria")
                    Me.OnCategoriaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property ID() As String
            Get
                Return Me._ID
            End Get
            Set
                If (String.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", CanBeNull:=True)>
        Public Property intID() As System.Nullable(Of System.Int32)
            Get
                Return Me._intID
            End Get
            Set
                If (Object.Equals(Me._intID, Value) = False) Then
                    Me.OnintIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intID = Value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Retorno")>
        Public Property Retorno() As String
            Get
                Return Me._Retorno
            End Get
            Set
                If (String.Equals(Me._Retorno, Value) = False) Then
                    Me.OnRetornoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Retorno = Value
                    Me.SendPropertyChanged("Retorno")
                    Me.OnRetornoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDependencia1", CanBeNull:=True)>
        Public Property IDDependencia1() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDDependencia1
            End Get
            Set
                If (Object.Equals(Me._IDDependencia1, Value) = False) Then
                    Me.OnIDDependencia1Changing(Value)
                    Me.SendPropertyChanging()
                    Me._IDDependencia1 = Value
                    Me.SendPropertyChanged("IDDependencia1")
                    Me.OnIDDependencia1Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDependencia2", CanBeNull:=True)>
        Public Property IDDependencia2() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDDependencia2
            End Get
            Set
                If (Object.Equals(Me._IDDependencia2, Value) = False) Then
                    Me.OnIDDependencia2Changing(Value)
                    Me.SendPropertyChanging()
                    Me._IDDependencia2 = Value
                    Me.SendPropertyChanged("IDDependencia2")
                    Me.OnIDDependencia2Changed()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblSaldosCliente
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoOYD As String

        Private _Descripcion As String

        Private _Valor As Double

        Private _Usado As Boolean

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoOYDChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As Double)
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnUsadoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnUsadoChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_CodigoOYD", DbType:="Varchar(17) NOT NULL", CanBeNull:=False)>
        Public Property CodigoOYD() As String
            Get
                Return Me._CodigoOYD
            End Get
            Set
                If (String.Equals(Me._CodigoOYD, Value) = False) Then
                    Me.OnCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoOYD = Value
                    Me.SendPropertyChanged("CodigoOYD")
                    Me.OnCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValor", Storage:="_Valor", DbType:="Float NOT NULL")>
        Public Property Valor() As Double
            Get
                Return Me._Valor
            End Get
            Set
                If ((Me._Valor = Value) _
                            = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logUsado", Storage:="_Usado", DbType:="Bit NOT NULL")>
        Public Property Usado() As Boolean
            Get
                Return Me._Usado
            End Get
            Set
                If ((Me._Usado = Value) _
                            = False) Then
                    Me.OnUsadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usado = Value
                    Me.SendPropertyChanged("Usado")
                    Me.OnUsadoChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblPortafolioCliente
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoOYD As String

        Private _Especie As String

        Private _Cantidad As System.Nullable(Of System.Double)

        Private _Custodia As String

        Private _CustodiaSecuencia As String

        Private _CentralDeposito As String

        Private _NombreCentralDeposito As String

        Private _CuentaDeposito As String

        Private _TipoOperacion As String

        Private _NombreTipoOperacion As String

        Private _PrecioCompra As System.Nullable(Of System.Double)

        Private _IDLiquidacion As System.Nullable(Of System.Int32)

        Private _Parcial As System.Nullable(Of System.Int32)

        Private _FechaLiquidacion As System.Nullable(Of System.DateTime)

        Private _TipoLiquidacion As String

        Private _ClaseLiquidacion As String

        Private _FechaEmision As System.Nullable(Of System.DateTime)

        Private _FechaVencimiento As System.Nullable(Of System.DateTime)

        Private _Modalidad As String

        Private _TasaFacial As System.Nullable(Of System.Double)

        Private _Indicador As String

        Private _PuntosIndicador As System.Nullable(Of System.Double)

        Private _Seleccionada As System.Nullable(Of Boolean)

        Private _TipoTasa As String

        Private _DescripcionIndicador As String

        Private _DescripcionModalidad As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoOYDChanged()
        End Sub
        Partial Private Sub OnEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnEspecieChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnCustodiaChanging(value As String)
        End Sub
        Partial Private Sub OnCustodiaChanged()
        End Sub
        Partial Private Sub OnCustodiaSecuenciaChanging(value As String)
        End Sub
        Partial Private Sub OnCustodiaSecuenciaChanged()
        End Sub
        Partial Private Sub OnCentralDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnCentralDepositoChanged()
        End Sub
        Partial Private Sub OnNombreCentralDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCentralDepositoChanged()
        End Sub
        Partial Private Sub OnCuentaDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaDepositoChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnNombreTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOperacionChanged()
        End Sub
        Partial Private Sub OnPrecioCompraChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPrecioCompraChanged()
        End Sub
        Partial Private Sub OnIDLiquidacionChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDLiquidacionChanged()
        End Sub
        Partial Private Sub OnParcialChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnParcialChanged()
        End Sub
        Partial Private Sub OnFechaLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaLiquidacionChanged()
        End Sub
        Partial Private Sub OnTipoLiquidacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoLiquidacionChanged()
        End Sub
        Partial Private Sub OnClaseLiquidacionChanging(value As String)
        End Sub
        Partial Private Sub OnClaseLiquidacionChanged()
        End Sub
        Partial Private Sub OnFechaEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaEmisionChanged()
        End Sub
        Partial Private Sub OnFechaVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaVencimientoChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnTasaFacialChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaFacialChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnSeleccionadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSeleccionadaChanged()
        End Sub
        Partial Private Sub OnTipoTasaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTasaChanged()
        End Sub
        Partial Private Sub OnDescripcionIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionIndicadorChanged()
        End Sub
        Partial Private Sub OnDescripcionModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionModalidadChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_CodigoOYD", DbType:="Varchar(17) NULL")>
        Public Property CodigoOYD() As String
            Get
                Return Me._CodigoOYD
            End Get
            Set
                If (String.Equals(Me._CodigoOYD, Value) = False) Then
                    Me.OnCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoOYD = Value
                    Me.SendPropertyChanged("CodigoOYD")
                    Me.OnCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(60) NULL")>
        Public Property Especie() As String
            Get
                Return Me._Especie
            End Get
            Set
                If (String.Equals(Me._Especie, Value) = False) Then
                    Me.OnEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Especie = Value
                    Me.SendPropertyChanged("Especie")
                    Me.OnEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NULL", CanBeNull:=True)>
        Public Property Cantidad() As System.Nullable(Of System.Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Object.Equals(Me._Cantidad, Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCustodia", Storage:="_Custodia", DbType:="Varchar(20) NULL")>
        Public Property Custodia() As String
            Get
                Return Me._Custodia
            End Get
            Set
                If (String.Equals(Me._Custodia, Value) = False) Then
                    Me.OnCustodiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Custodia = Value
                    Me.SendPropertyChanged("Custodia")
                    Me.OnCustodiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCustodiaSecuencia", Storage:="_CustodiaSecuencia", DbType:="Varchar(20) NULL")>
        Public Property CustodiaSecuencia() As String
            Get
                Return Me._CustodiaSecuencia
            End Get
            Set
                If (String.Equals(Me._CustodiaSecuencia, Value) = False) Then
                    Me.OnCustodiaSecuenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CustodiaSecuencia = Value
                    Me.SendPropertyChanged("CustodiaSecuencia")
                    Me.OnCustodiaSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCentralDeposito", Storage:="_CentralDeposito", DbType:="Varchar(4) NULL")>
        Public Property CentralDeposito() As String
            Get
                Return Me._CentralDeposito
            End Get
            Set
                If (String.Equals(Me._CentralDeposito, Value) = False) Then
                    Me.OnCentralDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CentralDeposito = Value
                    Me.SendPropertyChanged("CentralDeposito")
                    Me.OnCentralDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCentralDeposito", Storage:="_NombreCentralDeposito", DbType:="Varchar(100) NULL")>
        Public Property NombreCentralDeposito() As String
            Get
                Return Me._NombreCentralDeposito
            End Get
            Set
                If (String.Equals(Me._NombreCentralDeposito, Value) = False) Then
                    Me.OnNombreCentralDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCentralDeposito = Value
                    Me.SendPropertyChanged("NombreCentralDeposito")
                    Me.OnNombreCentralDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaDeposito", Storage:="_CuentaDeposito", DbType:="Varchar(25) NULL")>
        Public Property CuentaDeposito() As String
            Get
                Return Me._CuentaDeposito
            End Get
            Set
                If (String.Equals(Me._CuentaDeposito, Value) = False) Then
                    Me.OnCuentaDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaDeposito = Value
                    Me.SendPropertyChanged("CuentaDeposito")
                    Me.OnCuentaDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(4) NULL")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOperacion", Storage:="_NombreTipoOperacion", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoOperacion() As String
            Get
                Return Me._NombreTipoOperacion
            End Get
            Set
                If (String.Equals(Me._NombreTipoOperacion, Value) = False) Then
                    Me.OnNombreTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOperacion = Value
                    Me.SendPropertyChanged("NombreTipoOperacion")
                    Me.OnNombreTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioCompra", Storage:="_PrecioCompra", DbType:="Float NULL", CanBeNull:=True)>
        Public Property PrecioCompra() As System.Nullable(Of System.Double)
            Get
                Return Me._PrecioCompra
            End Get
            Set
                If (Object.Equals(Me._PrecioCompra, Value) = False) Then
                    Me.OnPrecioCompraChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioCompra = Value
                    Me.SendPropertyChanged("PrecioCompra")
                    Me.OnPrecioCompraChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidacion", Storage:="_IDLiquidacion", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDLiquidacion() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDLiquidacion
            End Get
            Set
                If (Object.Equals(Me._IDLiquidacion, Value) = False) Then
                    Me.OnIDLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDLiquidacion = Value
                    Me.SendPropertyChanged("IDLiquidacion")
                    Me.OnIDLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intParcial", Storage:="_Parcial", DbType:="Int NULL", CanBeNull:=True)>
        Public Property Parcial() As System.Nullable(Of System.Int32)
            Get
                Return Me._Parcial
            End Get
            Set
                If (Object.Equals(Me._Parcial, Value) = False) Then
                    Me.OnParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Parcial = Value
                    Me.SendPropertyChanged("Parcial")
                    Me.OnParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaLiquidacion", Storage:="_FechaLiquidacion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaLiquidacion
            End Get
            Set
                If (Object.Equals(Me._FechaLiquidacion, Value) = False) Then
                    Me.OnFechaLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaLiquidacion = Value
                    Me.SendPropertyChanged("FechaLiquidacion")
                    Me.OnFechaLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoLiquidacion", Storage:="_TipoLiquidacion", DbType:="Varchar(10) NULL")>
        Public Property TipoLiquidacion() As String
            Get
                Return Me._TipoLiquidacion
            End Get
            Set
                If (String.Equals(Me._TipoLiquidacion, Value) = False) Then
                    Me.OnTipoLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoLiquidacion = Value
                    Me.SendPropertyChanged("TipoLiquidacion")
                    Me.OnTipoLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseLiquidacion", Storage:="_ClaseLiquidacion", DbType:="Varchar(10) NULL")>
        Public Property ClaseLiquidacion() As String
            Get
                Return Me._ClaseLiquidacion
            End Get
            Set
                If (String.Equals(Me._ClaseLiquidacion, Value) = False) Then
                    Me.OnClaseLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClaseLiquidacion = Value
                    Me.SendPropertyChanged("ClaseLiquidacion")
                    Me.OnClaseLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaEmision", Storage:="_FechaEmision", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaEmision
            End Get
            Set
                If (Object.Equals(Me._FechaEmision, Value) = False) Then
                    Me.OnFechaEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaEmision = Value
                    Me.SendPropertyChanged("FechaEmision")
                    Me.OnFechaEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaVencimiento", Storage:="_FechaVencimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaVencimiento
            End Get
            Set
                If (Object.Equals(Me._FechaVencimiento, Value) = False) Then
                    Me.OnFechaVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaVencimiento = Value
                    Me.SendPropertyChanged("FechaVencimiento")
                    Me.OnFechaVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(80) NULL")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaFacial", Storage:="_TasaFacial", DbType:="Float NULL", CanBeNull:=True)>
        Public Property TasaFacial() As System.Nullable(Of System.Double)
            Get
                Return Me._TasaFacial
            End Get
            Set
                If (Object.Equals(Me._TasaFacial, Value) = False) Then
                    Me.OnTasaFacialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaFacial = Value
                    Me.SendPropertyChanged("TasaFacial")
                    Me.OnTasaFacialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="Varchar(20) NULL")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float NULL", CanBeNull:=True)>
        Public Property PuntosIndicador() As System.Nullable(Of System.Double)
            Get
                Return Me._PuntosIndicador
            End Get
            Set
                If (Object.Equals(Me._PuntosIndicador, Value) = False) Then
                    Me.OnPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PuntosIndicador = Value
                    Me.SendPropertyChanged("PuntosIndicador")
                    Me.OnPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionada", Storage:="_Seleccionada", DbType:="Bit NULL")>
        Public Property Seleccionada() As System.Nullable(Of Boolean)
            Get
                Return Me._Seleccionada
            End Get
            Set
                If (Me._Seleccionada.Equals(Value) = False) Then
                    Me.OnSeleccionadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccionada = Value
                    Me.SendPropertyChanged("Seleccionada")
                    Me.OnSeleccionadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTasa", Storage:="_TipoTasa", DbType:="Varchar(20) NULL")>
        Public Property TipoTasa() As String
            Get
                Return Me._TipoTasa
            End Get
            Set
                If (String.Equals(Me._TipoTasa, Value) = False) Then
                    Me.OnTipoTasaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTasa = Value
                    Me.SendPropertyChanged("TipoTasa")
                    Me.OnTipoTasaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionIndicador", Storage:="_DescripcionIndicador", DbType:="Varchar(200) NULL")>
        Public Property DescripcionIndicador() As String
            Get
                Return Me._DescripcionIndicador
            End Get
            Set
                If (String.Equals(Me._DescripcionIndicador, Value) = False) Then
                    Me.OnDescripcionIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionIndicador = Value
                    Me.SendPropertyChanged("DescripcionIndicador")
                    Me.OnDescripcionIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionModalidad", Storage:="_DescripcionModalidad", DbType:="Varchar(200) NULL")>
        Public Property DescripcionModalidad() As String
            Get
                Return Me._DescripcionModalidad
            End Get
            Set
                If (String.Equals(Me._DescripcionModalidad, Value) = False) Then
                    Me.OnDescripcionModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionModalidad = Value
                    Me.SendPropertyChanged("DescripcionModalidad")
                    Me.OnDescripcionModalidadChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblOrdenesSAEAcciones
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _FechaReferencia As System.Nullable(Of System.DateTime)

        Private _NroLiquidacion As System.Nullable(Of System.Int32)

        Private _Especie As String

        Private _Precio As System.Nullable(Of Double)

        Private _Cantidad As System.Nullable(Of Double)

        Private _Ejecucion As String

        Private _NombreEjecucion As String

        Private _FechaHoraExpiracion As System.Nullable(Of System.DateTime)

        Private _CantidadVisible As System.Nullable(Of System.Int32)

        Private _Duracion As String

        Private _NombreDuracion As String

        Private _TipoProducto As String

        Private _NombreTipoProducto As String

        Private _IDOrdenOYD As System.Nullable(Of System.Int32)

        Private _DiasRepo As String

        Private _Estado As String

        Private _Seleccionada As System.Nullable(Of Boolean)

        Private _Mensajes As String

        Private _dtmFechaCumplimientoRepo As System.Nullable(Of DateTime)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnFechaReferenciaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaReferenciaChanged()
        End Sub
        Partial Private Sub OnNroLiquidacionChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnNroLiquidacionChanged()
        End Sub
        Partial Private Sub OnEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnEspecieChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnEjecucionChanging(value As String)
        End Sub
        Partial Private Sub OnEjecucionChanged()
        End Sub
        Partial Private Sub OnNombreEjecucionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEjecucionChanged()
        End Sub
        Partial Private Sub OnFechaHoraExpiracionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaHoraExpiracionChanged()
        End Sub
        Partial Private Sub OnCantidadVisibleChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnCantidadVisibleChanged()
        End Sub
        Partial Private Sub OnDuracionChanging(value As String)
        End Sub
        Partial Private Sub OnDuracionChanged()
        End Sub
        Partial Private Sub OnNombreDuracionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreDuracionChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnNombreTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoProductoChanged()
        End Sub
        Partial Private Sub OnIDOrdenOYDChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDOrdenOYDChanged()
        End Sub
        Partial Private Sub OnDiasRepoChanging(value As String)
        End Sub
        Partial Private Sub OnDiasRepoChanged()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnSeleccionadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSeleccionadaChanged()
        End Sub
        Partial Private Sub OnMensajesChanging(value As String)
        End Sub
        Partial Private Sub OnMensajesChanged()
        End Sub
        Partial Private Sub OndtmFechaCumplimientoRepoChanging(value As System.Nullable(Of DateTime))
        End Sub
        Partial Private Sub OndtmFechaCumplimientoRepoChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(17) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaReferencia", Storage:="_FechaReferencia", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaReferencia() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaReferencia
            End Get
            Set
                If (Object.Equals(Me._FechaReferencia, Value) = False) Then
                    Me.OnFechaReferenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaReferencia = Value
                    Me.SendPropertyChanged("FechaReferencia")
                    Me.OnFechaReferenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLiquidacion", Storage:="_NroLiquidacion", DbType:="Int NULL", CanBeNull:=True)>
        Public Property NroLiquidacion() As System.Nullable(Of System.Int32)
            Get
                Return Me._NroLiquidacion
            End Get
            Set
                If (Object.Equals(Me._NroLiquidacion, Value) = False) Then
                    Me.OnNroLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroLiquidacion = Value
                    Me.SendPropertyChanged("NroLiquidacion")
                    Me.OnNroLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(60) NULL")>
        Public Property Especie() As String
            Get
                Return Me._Especie
            End Get
            Set
                If (String.Equals(Me._Especie, Value) = False) Then
                    Me.OnEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Especie = Value
                    Me.SendPropertyChanged("Especie")
                    Me.OnEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecio", Storage:="_Precio", DbType:="Float NULL")>
        Public Property Precio() As System.Nullable(Of Double)
            Get
                Return Me._Precio
            End Get
            Set
                If (Me._Precio.Equals(Value) = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NULL")>
        Public Property Cantidad() As System.Nullable(Of Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Me._Cantidad.Equals(Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEjecucion", Storage:="_Ejecucion", DbType:="Varchar(60) NULL")>
        Public Property Ejecucion() As String
            Get
                Return Me._Ejecucion
            End Get
            Set
                If (String.Equals(Me._Ejecucion, Value) = False) Then
                    Me.OnEjecucionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Ejecucion = Value
                    Me.SendPropertyChanged("Ejecucion")
                    Me.OnEjecucionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEjecucion", Storage:="_NombreEjecucion", DbType:="Varchar(100) NULL")>
        Public Property NombreEjecucion() As String
            Get
                Return Me._NombreEjecucion
            End Get
            Set
                If (String.Equals(Me._NombreEjecucion, Value) = False) Then
                    Me.OnNombreEjecucionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEjecucion = Value
                    Me.SendPropertyChanged("NombreEjecucion")
                    Me.OnNombreEjecucionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaHoraExpiracion", Storage:="_FechaHoraExpiracion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaHoraExpiracion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaHoraExpiracion
            End Get
            Set
                If (Object.Equals(Me._FechaHoraExpiracion, Value) = False) Then
                    Me.OnFechaHoraExpiracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaHoraExpiracion = Value
                    Me.SendPropertyChanged("FechaHoraExpiracion")
                    Me.OnFechaHoraExpiracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCantidadVisible", Storage:="_CantidadVisible", DbType:="Int NULL", CanBeNull:=True)>
        Public Property CantidadVisible() As System.Nullable(Of System.Int32)
            Get
                Return Me._CantidadVisible
            End Get
            Set
                If (Object.Equals(Me._CantidadVisible, Value) = False) Then
                    Me.OnCantidadVisibleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadVisible = Value
                    Me.SendPropertyChanged("CantidadVisible")
                    Me.OnCantidadVisibleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDuracion", Storage:="_Duracion", DbType:="Varchar(60) NULL")>
        Public Property Duracion() As String
            Get
                Return Me._Duracion
            End Get
            Set
                If (String.Equals(Me._Duracion, Value) = False) Then
                    Me.OnDuracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Duracion = Value
                    Me.SendPropertyChanged("Duracion")
                    Me.OnDuracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreDuracion", Storage:="_NombreDuracion", DbType:="Varchar(100) NULL")>
        Public Property NombreDuracion() As String
            Get
                Return Me._NombreDuracion
            End Get
            Set
                If (String.Equals(Me._NombreDuracion, Value) = False) Then
                    Me.OnNombreDuracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreDuracion = Value
                    Me.SendPropertyChanged("NombreDuracion")
                    Me.OnNombreDuracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(60) NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoProducto", Storage:="_NombreTipoProducto", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoProducto() As String
            Get
                Return Me._NombreTipoProducto
            End Get
            Set
                If (String.Equals(Me._NombreTipoProducto, Value) = False) Then
                    Me.OnNombreTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoProducto = Value
                    Me.SendPropertyChanged("NombreTipoProducto")
                    Me.OnNombreTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDOrdenOYD", Storage:="_IDOrdenOYD", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDOrdenOYD() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDOrdenOYD
            End Get
            Set
                If (Object.Equals(Me._IDOrdenOYD, Value) = False) Then
                    Me.OnIDOrdenOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDOrdenOYD = Value
                    Me.SendPropertyChanged("IDOrdenOYD")
                    Me.OnIDOrdenOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDiasRepo", Storage:="_DiasRepo", DbType:="Varchar(60) NULL")>
        Public Property DiasRepo() As String
            Get
                Return Me._DiasRepo
            End Get
            Set
                If (String.Equals(Me._DiasRepo, Value) = False) Then
                    Me.OnDiasRepoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DiasRepo = Value
                    Me.SendPropertyChanged("DiasRepo")
                    Me.OnDiasRepoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="Varchar(60) NULL")>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionada", Storage:="_Seleccionada", DbType:="Bit NULL")>
        Public Property Seleccionada() As System.Nullable(Of Boolean)
            Get
                Return Me._Seleccionada
            End Get
            Set
                If (Me._Seleccionada.Equals(Value) = False) Then
                    Me.OnSeleccionadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccionada = Value
                    Me.SendPropertyChanged("Seleccionada")
                    Me.OnSeleccionadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensajes", Storage:="_Mensajes", DbType:="varchar(200)")>
        Public Property Mensajes() As String
            Get
                Return Me._Mensajes
            End Get
            Set
                If (String.Equals(Me._Mensajes, Value) = False) Then
                    Me.OnMensajesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensajes = Value
                    Me.SendPropertyChanged("Mensajes")
                    Me.OnMensajesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaCumplimientoRepo", DbType:="Datetime", CanBeNull:=True)>
        Public Property dtmFechaCumplimientoRepo() As System.Nullable(Of DateTime)
            Get
                Return Me._dtmFechaCumplimientoRepo
            End Get
            Set
                If (Object.Equals(Me._dtmFechaCumplimientoRepo, Value) = False) Then
                    Me.OndtmFechaCumplimientoRepoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaCumplimientoRepo = Value
                    Me.SendPropertyChanged("dtmFechaCumplimientoRepo")
                    Me.OndtmFechaCumplimientoRepoChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblOperacionesCumplir
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoOYD As String

        Private _Especie As String

        Private _Parcial As System.Nullable(Of System.Int32)

        Private _NroOperacion As String

        Private _rTipoSim As String

        Private _TipoOperacion As String

        Private _NombreTipoOperacion As String

        Private _Cantidad As System.Nullable(Of System.Double)

        Private _FechaLiquidacion As System.Nullable(Of System.DateTime)

        Private _FechaCumplimiento As System.Nullable(Of System.DateTime)

        Private _TotalLiquidacion As System.Nullable(Of System.Double)

        Private _PrecioLiquidacion As System.Nullable(Of System.Double)

        Private _TasaEfectiva As System.Nullable(Of System.Double)

        Private _CuentaDeposito As String

        Private _FechaEmision As System.Nullable(Of System.DateTime)

        Private _FechaVencimiento As System.Nullable(Of System.DateTime)

        Private _Modalidad As String

        Private _TasaFacial As System.Nullable(Of System.Double)

        Private _Indicador As String

        Private _DescripcionIndicador As String

        Private _PuntosIndicador As System.Nullable(Of System.Double)

        Private _TipoTasaFija As String

        Private _Seleccionada As System.Nullable(Of Boolean)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoOYDChanged()
        End Sub
        Partial Private Sub OnEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnEspecieChanged()
        End Sub
        Partial Private Sub OnParcialChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnParcialChanged()
        End Sub
        Partial Private Sub OnNroOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnNroOperacionChanged()
        End Sub
        Partial Private Sub OnrTipoSimChanging(value As String)
        End Sub
        Partial Private Sub OnrTipoSimChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnNombreTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOperacionChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnFechaLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaLiquidacionChanged()
        End Sub
        Partial Private Sub OnFechaCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnTotalLiquidacionChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTotalLiquidacionChanged()
        End Sub
        Partial Private Sub OnPrecioLiquidacionChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPrecioLiquidacionChanged()
        End Sub
        Partial Private Sub OnTasaEfectivaChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaEfectivaChanged()
        End Sub
        Partial Private Sub OnCuentaDepositoChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaDepositoChanged()
        End Sub
        Partial Private Sub OnFechaEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaEmisionChanged()
        End Sub
        Partial Private Sub OnFechaVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaVencimientoChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnTasaFacialChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnTasaFacialChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnDescripcionIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionIndicadorChanged()
        End Sub
        Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnTipoTasaFijaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTasaFijaChanged()
        End Sub
        Partial Private Sub OnSeleccionadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSeleccionadaChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_CodigoOYD", DbType:="Varchar(17) NULL")>
        Public Property CodigoOYD() As String
            Get
                Return Me._CodigoOYD
            End Get
            Set
                If (String.Equals(Me._CodigoOYD, Value) = False) Then
                    Me.OnCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoOYD = Value
                    Me.SendPropertyChanged("CodigoOYD")
                    Me.OnCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(60) NULL")>
        Public Property Especie() As String
            Get
                Return Me._Especie
            End Get
            Set
                If (String.Equals(Me._Especie, Value) = False) Then
                    Me.OnEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Especie = Value
                    Me.SendPropertyChanged("Especie")
                    Me.OnEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intParcial", Storage:="_Parcial", DbType:="Int NULL", CanBeNull:=True)>
        Public Property Parcial() As System.Nullable(Of System.Int32)
            Get
                Return Me._Parcial
            End Get
            Set
                If (Object.Equals(Me._Parcial, Value) = False) Then
                    Me.OnParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Parcial = Value
                    Me.SendPropertyChanged("Parcial")
                    Me.OnParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroOperacion", Storage:="_NroOperacion", DbType:="Varchar(20) NULL")>
        Public Property NroOperacion() As String
            Get
                Return Me._NroOperacion
            End Get
            Set
                If (String.Equals(Me._NroOperacion, Value) = False) Then
                    Me.OnNroOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroOperacion = Value
                    Me.SendPropertyChanged("NroOperacion")
                    Me.OnNroOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoSim", Storage:="_rTipoSim", DbType:="Varchar(4) NULL")>
        Public Property rTipoSim() As String
            Get
                Return Me._rTipoSim
            End Get
            Set
                If (String.Equals(Me._rTipoSim, Value) = False) Then
                    Me.OnrTipoSimChanging(Value)
                    Me.SendPropertyChanging()
                    Me._rTipoSim = Value
                    Me.SendPropertyChanged("rTipoSim")
                    Me.OnrTipoSimChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(4) NULL")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOperacion", Storage:="_NombreTipoOperacion", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoOperacion() As String
            Get
                Return Me._NombreTipoOperacion
            End Get
            Set
                If (String.Equals(Me._NombreTipoOperacion, Value) = False) Then
                    Me.OnNombreTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOperacion = Value
                    Me.SendPropertyChanged("NombreTipoOperacion")
                    Me.OnNombreTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NULL", CanBeNull:=True)>
        Public Property Cantidad() As System.Nullable(Of System.Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Object.Equals(Me._Cantidad, Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaLiquidacion", Storage:="_FechaLiquidacion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaLiquidacion
            End Get
            Set
                If (Object.Equals(Me._FechaLiquidacion, Value) = False) Then
                    Me.OnFechaLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaLiquidacion = Value
                    Me.SendPropertyChanged("FechaLiquidacion")
                    Me.OnFechaLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCumplimiento", Storage:="_FechaCumplimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaCumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaCumplimiento
            End Get
            Set
                If (Object.Equals(Me._FechaCumplimiento, Value) = False) Then
                    Me.OnFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCumplimiento = Value
                    Me.SendPropertyChanged("FechaCumplimiento")
                    Me.OnFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTotalLiquidacion", Storage:="_TotalLiquidacion", DbType:="Float NULL", CanBeNull:=True)>
        Public Property TotalLiquidacion() As System.Nullable(Of System.Double)
            Get
                Return Me._TotalLiquidacion
            End Get
            Set
                If (Object.Equals(Me._TotalLiquidacion, Value) = False) Then
                    Me.OnTotalLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TotalLiquidacion = Value
                    Me.SendPropertyChanged("TotalLiquidacion")
                    Me.OnTotalLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioLiquidacion", Storage:="_PrecioLiquidacion", DbType:="Float NULL", CanBeNull:=True)>
        Public Property PrecioLiquidacion() As System.Nullable(Of System.Double)
            Get
                Return Me._PrecioLiquidacion
            End Get
            Set
                If (Object.Equals(Me._PrecioLiquidacion, Value) = False) Then
                    Me.OnPrecioLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioLiquidacion = Value
                    Me.SendPropertyChanged("PrecioLiquidacion")
                    Me.OnPrecioLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaEfectiva", Storage:="_TasaEfectiva", DbType:="Float NULL", CanBeNull:=True)>
        Public Property TasaEfectiva() As System.Nullable(Of System.Double)
            Get
                Return Me._TasaEfectiva
            End Get
            Set
                If (Object.Equals(Me._TasaEfectiva, Value) = False) Then
                    Me.OnTasaEfectivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaEfectiva = Value
                    Me.SendPropertyChanged("TasaEfectiva")
                    Me.OnTasaEfectivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaDeposito", Storage:="_CuentaDeposito", DbType:="Varchar(25) NULL")>
        Public Property CuentaDeposito() As String
            Get
                Return Me._CuentaDeposito
            End Get
            Set
                If (String.Equals(Me._CuentaDeposito, Value) = False) Then
                    Me.OnCuentaDepositoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaDeposito = Value
                    Me.SendPropertyChanged("CuentaDeposito")
                    Me.OnCuentaDepositoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaEmision", Storage:="_FechaEmision", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaEmision
            End Get
            Set
                If (Object.Equals(Me._FechaEmision, Value) = False) Then
                    Me.OnFechaEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaEmision = Value
                    Me.SendPropertyChanged("FechaEmision")
                    Me.OnFechaEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaVencimiento", Storage:="_FechaVencimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaVencimiento
            End Get
            Set
                If (Object.Equals(Me._FechaVencimiento, Value) = False) Then
                    Me.OnFechaVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaVencimiento = Value
                    Me.SendPropertyChanged("FechaVencimiento")
                    Me.OnFechaVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(80) NULL")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaFacial", Storage:="_TasaFacial", DbType:="Float NULL", CanBeNull:=True)>
        Public Property TasaFacial() As System.Nullable(Of System.Double)
            Get
                Return Me._TasaFacial
            End Get
            Set
                If (Object.Equals(Me._TasaFacial, Value) = False) Then
                    Me.OnTasaFacialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaFacial = Value
                    Me.SendPropertyChanged("TasaFacial")
                    Me.OnTasaFacialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="Varchar(20) NULL")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionIndicador", Storage:="_DescripcionIndicador", DbType:="Varchar(200) NULL")>
        Public Property DescripcionIndicador() As String
            Get
                Return Me._DescripcionIndicador
            End Get
            Set
                If (String.Equals(Me._DescripcionIndicador, Value) = False) Then
                    Me.OnDescripcionIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionIndicador = Value
                    Me.SendPropertyChanged("DescripcionIndicador")
                    Me.OnDescripcionIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float NULL", CanBeNull:=True)>
        Public Property PuntosIndicador() As System.Nullable(Of System.Double)
            Get
                Return Me._PuntosIndicador
            End Get
            Set
                If (Object.Equals(Me._PuntosIndicador, Value) = False) Then
                    Me.OnPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PuntosIndicador = Value
                    Me.SendPropertyChanged("PuntosIndicador")
                    Me.OnPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTasaFija", Storage:="_TipoTasaFija", DbType:="Varchar(4) NULL")>
        Public Property TipoTasaFija() As String
            Get
                Return Me._TipoTasaFija
            End Get
            Set
                If (String.Equals(Me._TipoTasaFija, Value) = False) Then
                    Me.OnTipoTasaFijaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTasaFija = Value
                    Me.SendPropertyChanged("TipoTasaFija")
                    Me.OnTipoTasaFijaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionada", Storage:="_Seleccionada", DbType:="Bit NULL")>
        Public Property Seleccionada() As System.Nullable(Of Boolean)
            Get
                Return Me._Seleccionada
            End Get
            Set
                If (Me._Seleccionada.Equals(Value) = False) Then
                    Me.OnSeleccionadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccionada = Value
                    Me.SendPropertyChanged("Seleccionada")
                    Me.OnSeleccionadaChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblRN_ContadorReglasAutorizacion
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Modulo As String

        Private _IDNumeroUnico As System.Nullable(Of System.Int32)

        Private _IDDocumento As System.Nullable(Of System.Int32)

        Private _ReglaIncumplida As String

        Private _NombreNivelAprobacion As String

        Private _NombreEstado As String

        Private _EstadoRegla As String

        Private _CodigoNivelAprobacion As String

        Private _CodigoRegla As String

        Private _ComentarioAprobador As String

        Private _UsuarioAprobador As String

        Private _OcurrioErrorSistema As System.Nullable(Of Boolean)

        Private _ErrorSistema As String

        Private _DescripcionErrorSistema As String

        Private _Usuario As String

        Private _FechaRegistro As System.Nullable(Of Date)

        Private _Actualizacion As System.Nullable(Of Date)

        Private _DescripcionReglaIncumplida As String

        Private _JustificacionUsuarioRegla As String

        Private _InformacionAdicional As String

        Private _MostrarInformacionAdicional As System.Nullable(Of Boolean)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnModuloChanging(value As String)
        End Sub
        Partial Private Sub OnModuloChanged()
        End Sub
        Partial Private Sub OnIDNumeroUnicoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNumeroUnicoChanged()
        End Sub
        Partial Private Sub OnIDDocumentoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDDocumentoChanged()
        End Sub
        Partial Private Sub OnReglaIncumplidaChanging(value As String)
        End Sub
        Partial Private Sub OnReglaIncumplidaChanged()
        End Sub
        Partial Private Sub OnNombreNivelAprobacionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreNivelAprobacionChanged()
        End Sub
        Partial Private Sub OnNombreEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEstadoChanged()
        End Sub
        Partial Private Sub OnEstadoReglaChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoReglaChanged()
        End Sub
        Partial Private Sub OnCodigoNivelAprobacionChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoNivelAprobacionChanged()
        End Sub
        Partial Private Sub OnCodigoReglaChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReglaChanged()
        End Sub
        Partial Private Sub OnComentarioAprobadorChanging(value As String)
        End Sub
        Partial Private Sub OnComentarioAprobadorChanged()
        End Sub
        Partial Private Sub OnUsuarioAprobadorChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioAprobadorChanged()
        End Sub
        Partial Private Sub OnOcurrioErrorSistemaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnOcurrioErrorSistemaChanged()
        End Sub
        Partial Private Sub OnErrorSistemaChanging(value As String)
        End Sub
        Partial Private Sub OnErrorSistemaChanged()
        End Sub
        Partial Private Sub OnDescripcionErrorSistemaChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionErrorSistemaChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnFechaRegistroChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaRegistroChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnDescripcionReglaIncumplidaChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionReglaIncumplidaChanged()
        End Sub
        Partial Private Sub OnJustificacionUsuarioReglaChanging(value As String)
        End Sub
        Partial Private Sub OnJustificacionUsuarioReglaChanged()
        End Sub
        Partial Private Sub OnInformacionAdicionalChanging(value As String)
        End Sub
        Partial Private Sub OnInformacionAdicionalChanged()
        End Sub
        Partial Private Sub OnMostrarInformacionAdicionalChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnMostrarInformacionAdicionalChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="Varchar(20) NULL")>
        Public Property Modulo() As String
            Get
                Return Me._Modulo
            End Get
            Set
                If (String.Equals(Me._Modulo, Value) = False) Then
                    Me.OnModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modulo = Value
                    Me.SendPropertyChanged("Modulo")
                    Me.OnModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNumeroUnico", Storage:="_IDNumeroUnico", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDNumeroUnico() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNumeroUnico
            End Get
            Set
                If (Object.Equals(Me._IDNumeroUnico, Value) = False) Then
                    Me.OnIDNumeroUnicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNumeroUnico = Value
                    Me.SendPropertyChanged("IDNumeroUnico")
                    Me.OnIDNumeroUnicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDocumento", Storage:="_IDDocumento", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDDocumento() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDDocumento
            End Get
            Set
                If (Object.Equals(Me._IDDocumento, Value) = False) Then
                    Me.OnIDDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDDocumento = Value
                    Me.SendPropertyChanged("IDDocumento")
                    Me.OnIDDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strReglaIncumplida", Storage:="_ReglaIncumplida", DbType:="Varchar(500) NULL")>
        Public Property ReglaIncumplida() As String
            Get
                Return Me._ReglaIncumplida
            End Get
            Set
                If (String.Equals(Me._ReglaIncumplida, Value) = False) Then
                    Me.OnReglaIncumplidaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ReglaIncumplida = Value
                    Me.SendPropertyChanged("ReglaIncumplida")
                    Me.OnReglaIncumplidaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreNivelAprobacion", Storage:="_NombreNivelAprobacion", DbType:="Varchar(200) NULL")>
        Public Property NombreNivelAprobacion() As String
            Get
                Return Me._NombreNivelAprobacion
            End Get
            Set
                If (String.Equals(Me._NombreNivelAprobacion, Value) = False) Then
                    Me.OnNombreNivelAprobacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreNivelAprobacion = Value
                    Me.SendPropertyChanged("NombreNivelAprobacion")
                    Me.OnNombreNivelAprobacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEstado", Storage:="_NombreEstado", DbType:="Varchar(100) NULL")>
        Public Property NombreEstado() As String
            Get
                Return Me._NombreEstado
            End Get
            Set
                If (String.Equals(Me._NombreEstado, Value) = False) Then
                    Me.OnNombreEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEstado = Value
                    Me.SendPropertyChanged("NombreEstado")
                    Me.OnNombreEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoRegla", Storage:="_EstadoRegla", DbType:="Varchar(20) NULL")>
        Public Property EstadoRegla() As String
            Get
                Return Me._EstadoRegla
            End Get
            Set
                If (String.Equals(Me._EstadoRegla, Value) = False) Then
                    Me.OnEstadoReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoRegla = Value
                    Me.SendPropertyChanged("EstadoRegla")
                    Me.OnEstadoReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoNivelAprobacion", Storage:="_CodigoNivelAprobacion", DbType:="Varchar(20) NULL")>
        Public Property CodigoNivelAprobacion() As String
            Get
                Return Me._CodigoNivelAprobacion
            End Get
            Set
                If (String.Equals(Me._CodigoNivelAprobacion, Value) = False) Then
                    Me.OnCodigoNivelAprobacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoNivelAprobacion = Value
                    Me.SendPropertyChanged("CodigoNivelAprobacion")
                    Me.OnCodigoNivelAprobacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoRegla", Storage:="_CodigoRegla", DbType:="Varchar(20) NULL")>
        Public Property CodigoRegla() As String
            Get
                Return Me._CodigoRegla
            End Get
            Set
                If (String.Equals(Me._CodigoRegla, Value) = False) Then
                    Me.OnCodigoReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoRegla = Value
                    Me.SendPropertyChanged("CodigoRegla")
                    Me.OnCodigoReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComentarioAprobador", Storage:="_ComentarioAprobador", DbType:="Varchar(max) NULL")>
        Public Property ComentarioAprobador() As String
            Get
                Return Me._ComentarioAprobador
            End Get
            Set
                If (String.Equals(Me._ComentarioAprobador, Value) = False) Then
                    Me.OnComentarioAprobadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComentarioAprobador = Value
                    Me.SendPropertyChanged("ComentarioAprobador")
                    Me.OnComentarioAprobadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuarioAprobador", Storage:="_UsuarioAprobador", DbType:="Varchar(100) NULL")>
        Public Property UsuarioAprobador() As String
            Get
                Return Me._UsuarioAprobador
            End Get
            Set
                If (String.Equals(Me._UsuarioAprobador, Value) = False) Then
                    Me.OnUsuarioAprobadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UsuarioAprobador = Value
                    Me.SendPropertyChanged("UsuarioAprobador")
                    Me.OnUsuarioAprobadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logErrorSistema", Storage:="_OcurrioErrorSistema", DbType:="Bit NULL")>
        Public Property OcurrioErrorSistema() As System.Nullable(Of Boolean)
            Get
                Return Me._OcurrioErrorSistema
            End Get
            Set
                If (Me._OcurrioErrorSistema.Equals(Value) = False) Then
                    Me.OnOcurrioErrorSistemaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._OcurrioErrorSistema = Value
                    Me.SendPropertyChanged("OcurrioErrorSistema")
                    Me.OnOcurrioErrorSistemaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strErrorSistema", Storage:="_ErrorSistema", DbType:="Varchar(2) NULL")>
        Public Property ErrorSistema() As String
            Get
                Return Me._ErrorSistema
            End Get
            Set
                If (String.Equals(Me._ErrorSistema, Value) = False) Then
                    Me.OnErrorSistemaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ErrorSistema = Value
                    Me.SendPropertyChanged("ErrorSistema")
                    Me.OnErrorSistemaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionErrorSistema", Storage:="_DescripcionErrorSistema", DbType:="Varchar(max) NULL")>
        Public Property DescripcionErrorSistema() As String
            Get
                Return Me._DescripcionErrorSistema
            End Get
            Set
                If (String.Equals(Me._DescripcionErrorSistema, Value) = False) Then
                    Me.OnDescripcionErrorSistemaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionErrorSistema = Value
                    Me.SendPropertyChanged("DescripcionErrorSistema")
                    Me.OnDescripcionErrorSistemaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaRegistro", Storage:="_FechaRegistro", DbType:="DateTime NULL")>
        Public Property FechaRegistro() As System.Nullable(Of Date)
            Get
                Return Me._FechaRegistro
            End Get
            Set
                If (Me._FechaRegistro.Equals(Value) = False) Then
                    Me.OnFechaRegistroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaRegistro = Value
                    Me.SendPropertyChanged("FechaRegistro")
                    Me.OnFechaRegistroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime NULL")>
        Public Property Actualizacion() As System.Nullable(Of Date)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Me._Actualizacion.Equals(Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionReglaIncumplida", Storage:="_DescripcionReglaIncumplida", DbType:="Varchar(max) NULL")>
        Public Property DescripcionReglaIncumplida() As String
            Get
                Return Me._DescripcionReglaIncumplida
            End Get
            Set
                If (String.Equals(Me._DescripcionReglaIncumplida, Value) = False) Then
                    Me.OnDescripcionReglaIncumplidaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionReglaIncumplida = Value
                    Me.SendPropertyChanged("DescripcionReglaIncumplida")
                    Me.OnDescripcionReglaIncumplidaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strJustificacionUsuarioRegla", Storage:="_JustificacionUsuarioRegla", DbType:="Varchar(max) NULL")>
        Public Property JustificacionUsuarioRegla() As String
            Get
                Return Me._JustificacionUsuarioRegla
            End Get
            Set
                If (String.Equals(Me._JustificacionUsuarioRegla, Value) = False) Then
                    Me.OnJustificacionUsuarioReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._JustificacionUsuarioRegla = Value
                    Me.SendPropertyChanged("JustificacionUsuarioRegla")
                    Me.OnJustificacionUsuarioReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInformacionAdicional", Storage:="_InformacionAdicional", DbType:="Varchar(max) NULL")>
        Public Property InformacionAdicional() As String
            Get
                Return Me._InformacionAdicional
            End Get
            Set
                If (String.Equals(Me._InformacionAdicional, Value) = False) Then
                    Me.OnInformacionAdicionalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InformacionAdicional = Value
                    Me.SendPropertyChanged("InformacionAdicional")
                    Me.OnInformacionAdicionalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMostrarInformacionAdicional", Storage:="_MostrarInformacionAdicional", DbType:="Bit NULL")>
        Public Property MostrarInformacionAdicional() As System.Nullable(Of Boolean)
            Get
                Return Me._MostrarInformacionAdicional
            End Get
            Set
                If (Me._MostrarInformacionAdicional.Equals(Value) = False) Then
                    Me.OnMostrarInformacionAdicionalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MostrarInformacionAdicional = Value
                    Me.SendPropertyChanged("MostrarInformacionAdicional")
                    Me.OnMostrarInformacionAdicionalChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblSaldosBancos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intID As Integer

        Private _lngIdBanco As Integer

        Private _strNombre As String

        Private _strNombreSucursal As String

        Private _strNroCuenta As String

        Private _curValor As Double

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OnlngIdBancoChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIdBancoChanged()
        End Sub
        Partial Private Sub OnstrNombreChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreChanged()
        End Sub
        Partial Private Sub OnstrNombreSucursalChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreSucursalChanged()
        End Sub
        Partial Private Sub OnstrNroCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnstrNroCuentaChanged()
        End Sub
        Partial Private Sub OncurValorChanging(value As Double)
        End Sub
        Partial Private Sub OncurValorChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intID() As Integer
            Get
                Return Me._intID
            End Get
            Set
                If ((Me._intID = Value) _
                            = False) Then
                    Me.OnintIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intID = Value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdBanco", DbType:="Int NOT NULL")>
        Public Property lngIdBanco() As Integer
            Get
                Return Me._lngIdBanco
            End Get
            Set
                If ((Me._lngIdBanco = Value) _
                            = False) Then
                    Me.OnlngIdBancoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdBanco = Value
                    Me.SendPropertyChanged("lngIdBanco")
                    Me.OnlngIdBancoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property strNombre() As String
            Get
                Return Me._strNombre
            End Get
            Set
                If (String.Equals(Me._strNombre, Value) = False) Then
                    Me.OnstrNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombre = Value
                    Me.SendPropertyChanged("strNombre")
                    Me.OnstrNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreSucursal", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property strNombreSucursal() As String
            Get
                Return Me._strNombreSucursal
            End Get
            Set
                If (String.Equals(Me._strNombreSucursal, Value) = False) Then
                    Me.OnstrNombreSucursalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombreSucursal = Value
                    Me.SendPropertyChanged("strNombreSucursal")
                    Me.OnstrNombreSucursalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroCuenta", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property strNroCuenta() As String
            Get
                Return Me._strNroCuenta
            End Get
            Set
                If (String.Equals(Me._strNroCuenta, Value) = False) Then
                    Me.OnstrNroCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNroCuenta = Value
                    Me.SendPropertyChanged("strNroCuenta")
                    Me.OnstrNroCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curValor", DbType:="money NOT NULL")>
        Public Property curValor() As Double
            Get
                Return Me._curValor
            End Get
            Set
                If ((Me._curValor = Value) _
                            = False) Then
                    Me.OncurValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curValor = Value
                    Me.SendPropertyChanged("curValor")
                    Me.OncurValorChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblLiquidacionesCliente
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _NroLiquidacion As Integer

        Private _Parcial As Integer

        Private _FechaLiquidacion As Date

        Private _FechaCumplimiento As Date

        Private _ClaseOrden As String

        Private _NombreClaseOrden As String

        Private _TotalLiquidacion As Double

        Private _Seleccione As System.Nullable(Of Boolean)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnNroLiquidacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnNroLiquidacionChanged()
        End Sub
        Partial Private Sub OnParcialChanging(value As Integer)
        End Sub
        Partial Private Sub OnParcialChanged()
        End Sub
        Partial Private Sub OnFechaLiquidacionChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaLiquidacionChanged()
        End Sub
        Partial Private Sub OnFechaCumplimientoChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnClaseOrdenChanged()
        End Sub
        Partial Private Sub OnNombreClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClaseOrdenChanged()
        End Sub
        Partial Private Sub OnTotalLiquidacionChanging(value As Double)
        End Sub
        Partial Private Sub OnTotalLiquidacionChanged()
        End Sub
        Partial Private Sub OnSeleccioneChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSeleccioneChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLiquidacion", Storage:="_NroLiquidacion", DbType:="Int NOT NULL", IsPrimaryKey:=True)>
        Public Property NroLiquidacion() As Integer
            Get
                Return Me._NroLiquidacion
            End Get
            Set
                If ((Me._NroLiquidacion = Value) _
                            = False) Then
                    Me.OnNroLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroLiquidacion = Value
                    Me.SendPropertyChanged("NroLiquidacion")
                    Me.OnNroLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intParcial", Storage:="_Parcial", DbType:="Int NOT NULL", IsPrimaryKey:=True)>
        Public Property Parcial() As Integer
            Get
                Return Me._Parcial
            End Get
            Set
                If ((Me._Parcial = Value) _
                            = False) Then
                    Me.OnParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Parcial = Value
                    Me.SendPropertyChanged("Parcial")
                    Me.OnParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaLiquidacion", Storage:="_FechaLiquidacion", DbType:="DateTime NOT NULL")>
        Public Property FechaLiquidacion() As Date
            Get
                Return Me._FechaLiquidacion
            End Get
            Set
                If ((Me._FechaLiquidacion = Value) _
                            = False) Then
                    Me.OnFechaLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaLiquidacion = Value
                    Me.SendPropertyChanged("FechaLiquidacion")
                    Me.OnFechaLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCumplimiento", Storage:="_FechaCumplimiento", DbType:="DateTime NOT NULL")>
        Public Property FechaCumplimiento() As Date
            Get
                Return Me._FechaCumplimiento
            End Get
            Set
                If ((Me._FechaCumplimiento = Value) _
                            = False) Then
                    Me.OnFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCumplimiento = Value
                    Me.SendPropertyChanged("FechaCumplimiento")
                    Me.OnFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", DbType:="Varchar(2) NOT NULL", CanBeNull:=False)>
        Public Property ClaseOrden() As String
            Get
                Return Me._ClaseOrden
            End Get
            Set
                If (String.Equals(Me._ClaseOrden, Value) = False) Then
                    Me.OnClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ClaseOrden = Value
                    Me.SendPropertyChanged("ClaseOrden")
                    Me.OnClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClaseOrden", Storage:="_NombreClaseOrden", DbType:="Varchar(30) NULL")>
        Public Property NombreClaseOrden() As String
            Get
                Return Me._NombreClaseOrden
            End Get
            Set
                If (String.Equals(Me._NombreClaseOrden, Value) = False) Then
                    Me.OnNombreClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreClaseOrden = Value
                    Me.SendPropertyChanged("NombreClaseOrden")
                    Me.OnNombreClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTotalLiquidacion", Storage:="_TotalLiquidacion", DbType:="Float NOT NULL")>
        Public Property TotalLiquidacion() As Double
            Get
                Return Me._TotalLiquidacion
            End Get
            Set
                If ((Me._TotalLiquidacion = Value) _
                            = False) Then
                    Me.OnTotalLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TotalLiquidacion = Value
                    Me.SendPropertyChanged("TotalLiquidacion")
                    Me.OnTotalLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccione", Storage:="_Seleccione", DbType:="Bit NULL")>
        Public Property Seleccione() As System.Nullable(Of Boolean)
            Get
                Return Me._Seleccione
            End Get
            Set
                If (Me._Seleccione.Equals(Value) = False) Then
                    Me.OnSeleccioneChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccione = Value
                    Me.SendPropertyChanged("Seleccione")
                    Me.OnSeleccioneChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblOrdenesSAERentaFija
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _FechaReferencia As System.Nullable(Of System.DateTime)

        Private _NroLiquidacion As System.Nullable(Of System.Int32)

        Private _Cantidad As System.Nullable(Of Double)

        Private _FechaCumplimiento As System.Nullable(Of System.DateTime)

        Private _Precio As System.Nullable(Of Double)

        Private _DiasCumplimiento As System.Nullable(Of System.Int32)

        Private _TasaNominal As System.Nullable(Of Double)

        Private _Especie As String

        Private _FechaEmision As System.Nullable(Of System.DateTime)

        Private _ISIN As String

        Private _Trader As String

        Private _UBICACIONTITULO As String

        Private _RuedaNegocio As String

        Private _PrecioLimpio As System.Nullable(Of Double)

        Private _PrecioSucio As System.Nullable(Of Double)

        Private _CondicionesNegociacion As String

        Private _NombreCondicionesNegociacion As String

        Private _Indicador As String

        Private _NombreIndicador As String

        Private _PuntosIndicador As System.Nullable(Of Double)

        Private _Modalidad As String

        Private _NombreModalidad As String

        Private _FechaVencimiento As System.Nullable(Of System.DateTime)

        Private _TasaInicial As System.Nullable(Of Double)

        Private _TipoSimultanea As String

        Private _TasaRepoSimultanea As System.Nullable(Of Double)

        Private _EstadoTitulo As String

        Private _Mercado As String

        Private _Clasificacion As String

        Private _Seleccionada As System.Nullable(Of Boolean)

        Private _Mensajes As String

        Private _dtmFechaCumplimientoRepo As System.Nullable(Of DateTime)

        Private _CantidadRepoSimultanea As System.Nullable(Of Double)

        Private _CantidadCaptacion As System.Nullable(Of Double)

        Private _CantidadFutura As System.Nullable(Of Double)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnFechaReferenciaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaReferenciaChanged()
        End Sub
        Partial Private Sub OnNroLiquidacionChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnNroLiquidacionChanged()
        End Sub
        Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadChanged()
        End Sub
        Partial Private Sub OnFechaCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaCumplimientoChanged()
        End Sub
        Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioChanged()
        End Sub
        Partial Private Sub OnDiasCumplimientoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnDiasCumplimientoChanged()
        End Sub
        Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaNominalChanged()
        End Sub
        Partial Private Sub OnEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnEspecieChanged()
        End Sub
        Partial Private Sub OnFechaEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaEmisionChanged()
        End Sub
        Partial Private Sub OnISINChanging(value As String)
        End Sub
        Partial Private Sub OnISINChanged()
        End Sub
        Partial Private Sub OnTraderChanging(value As String)
        End Sub
        Partial Private Sub OnTraderChanged()
        End Sub
        Partial Private Sub OnUBICACIONTITULOChanging(value As String)
        End Sub
        Partial Private Sub OnUBICACIONTITULOChanged()
        End Sub
        Partial Private Sub OnRuedaNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnRuedaNegocioChanged()
        End Sub
        Partial Private Sub OnPrecioLimpioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioLimpioChanged()
        End Sub
        Partial Private Sub OnPrecioSucioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPrecioSucioChanged()
        End Sub
        Partial Private Sub OnCondicionesNegociacionChanging(value As String)
        End Sub
        Partial Private Sub OnCondicionesNegociacionChanged()
        End Sub
        Partial Private Sub OnNombreCondicionesNegociacionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCondicionesNegociacionChanged()
        End Sub
        Partial Private Sub OnIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnIndicadorChanged()
        End Sub
        Partial Private Sub OnNombreIndicadorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreIndicadorChanged()
        End Sub
        Partial Private Sub OnPuntosIndicadorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnModalidadChanged()
        End Sub
        Partial Private Sub OnNombreModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnNombreModalidadChanged()
        End Sub
        Partial Private Sub OnFechaVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaVencimientoChanged()
        End Sub
        Partial Private Sub OnTasaInicialChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaInicialChanged()
        End Sub
        Partial Private Sub OnTipoSimultaneaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoSimultaneaChanged()
        End Sub
        Partial Private Sub OnTasaRepoSimultaneaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnTasaRepoSimultaneaChanged()
        End Sub
        Partial Private Sub OnEstadoTituloChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoTituloChanged()
        End Sub
        Partial Private Sub OnMercadoChanging(value As String)
        End Sub
        Partial Private Sub OnMercadoChanged()
        End Sub
        Partial Private Sub OnClasificacionChanging(value As String)
        End Sub
        Partial Private Sub OnClasificacionChanged()
        End Sub
        Partial Private Sub OnSeleccionadaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnSeleccionadaChanged()
        End Sub
        Partial Private Sub OnMensajesChanging(value As String)
        End Sub
        Partial Private Sub OnMensajesChanged()
        End Sub
        Partial Private Sub OndtmFechaCumplimientoRepoChanging(value As System.Nullable(Of DateTime))
        End Sub
        Partial Private Sub OndtmFechaCumplimientoRepoChanged()
        End Sub
        Partial Private Sub OnCantidadRepoSimultaneaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadRepoSimultaneaChanged()
        End Sub
        Partial Private Sub OnCantidadCaptacionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadCaptacionChanged()
        End Sub
        Partial Private Sub OnCantidadFuturaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnCantidadFuturaChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(17) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaReferencia", Storage:="_FechaReferencia", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaReferencia() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaReferencia
            End Get
            Set
                If (Object.Equals(Me._FechaReferencia, Value) = False) Then
                    Me.OnFechaReferenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaReferencia = Value
                    Me.SendPropertyChanged("FechaReferencia")
                    Me.OnFechaReferenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroLiquidacion", Storage:="_NroLiquidacion", DbType:="Int NULL", CanBeNull:=True)>
        Public Property NroLiquidacion() As System.Nullable(Of System.Int32)
            Get
                Return Me._NroLiquidacion
            End Get
            Set
                If (Object.Equals(Me._NroLiquidacion, Value) = False) Then
                    Me.OnNroLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroLiquidacion = Value
                    Me.SendPropertyChanged("NroLiquidacion")
                    Me.OnNroLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad", DbType:="Float NULL")>
        Public Property Cantidad() As System.Nullable(Of Double)
            Get
                Return Me._Cantidad
            End Get
            Set
                If (Me._Cantidad.Equals(Value) = False) Then
                    Me.OnCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Cantidad = Value
                    Me.SendPropertyChanged("Cantidad")
                    Me.OnCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaCumplimiento", Storage:="_FechaCumplimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaCumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaCumplimiento
            End Get
            Set
                If (Object.Equals(Me._FechaCumplimiento, Value) = False) Then
                    Me.OnFechaCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaCumplimiento = Value
                    Me.SendPropertyChanged("FechaCumplimiento")
                    Me.OnFechaCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecio", Storage:="_Precio", DbType:="Float NULL")>
        Public Property Precio() As System.Nullable(Of Double)
            Get
                Return Me._Precio
            End Get
            Set
                If (Me._Precio.Equals(Value) = False) Then
                    Me.OnPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Precio = Value
                    Me.SendPropertyChanged("Precio")
                    Me.OnPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDiasCumplimiento", Storage:="_DiasCumplimiento", DbType:="Int NULL", CanBeNull:=True)>
        Public Property DiasCumplimiento() As System.Nullable(Of System.Int32)
            Get
                Return Me._DiasCumplimiento
            End Get
            Set
                If (Object.Equals(Me._DiasCumplimiento, Value) = False) Then
                    Me.OnDiasCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DiasCumplimiento = Value
                    Me.SendPropertyChanged("DiasCumplimiento")
                    Me.OnDiasCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float NULL")>
        Public Property TasaNominal() As System.Nullable(Of Double)
            Get
                Return Me._TasaNominal
            End Get
            Set
                If (Me._TasaNominal.Equals(Value) = False) Then
                    Me.OnTasaNominalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaNominal = Value
                    Me.SendPropertyChanged("TasaNominal")
                    Me.OnTasaNominalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEspecie", Storage:="_Especie", DbType:="Varchar(60) NULL")>
        Public Property Especie() As String
            Get
                Return Me._Especie
            End Get
            Set
                If (String.Equals(Me._Especie, Value) = False) Then
                    Me.OnEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Especie = Value
                    Me.SendPropertyChanged("Especie")
                    Me.OnEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaEmision", Storage:="_FechaEmision", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaEmision
            End Get
            Set
                If (Object.Equals(Me._FechaEmision, Value) = False) Then
                    Me.OnFechaEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaEmision = Value
                    Me.SendPropertyChanged("FechaEmision")
                    Me.OnFechaEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strISIN", Storage:="_ISIN", DbType:="Varchar(60) NULL")>
        Public Property ISIN() As String
            Get
                Return Me._ISIN
            End Get
            Set
                If (String.Equals(Me._ISIN, Value) = False) Then
                    Me.OnISINChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ISIN = Value
                    Me.SendPropertyChanged("ISIN")
                    Me.OnISINChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTrader", Storage:="_Trader", DbType:="Varchar(60) NULL")>
        Public Property Trader() As String
            Get
                Return Me._Trader
            End Get
            Set
                If (String.Equals(Me._Trader, Value) = False) Then
                    Me.OnTraderChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Trader = Value
                    Me.SendPropertyChanged("Trader")
                    Me.OnTraderChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUBICACIONTITULO", Storage:="_UBICACIONTITULO", DbType:="Varchar(60) NULL")>
        Public Property UBICACIONTITULO() As String
            Get
                Return Me._UBICACIONTITULO
            End Get
            Set
                If (String.Equals(Me._UBICACIONTITULO, Value) = False) Then
                    Me.OnUBICACIONTITULOChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UBICACIONTITULO = Value
                    Me.SendPropertyChanged("UBICACIONTITULO")
                    Me.OnUBICACIONTITULOChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRuedaNegocio", Storage:="_RuedaNegocio", DbType:="Varchar(60) NULL")>
        Public Property RuedaNegocio() As String
            Get
                Return Me._RuedaNegocio
            End Get
            Set
                If (String.Equals(Me._RuedaNegocio, Value) = False) Then
                    Me.OnRuedaNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RuedaNegocio = Value
                    Me.SendPropertyChanged("RuedaNegocio")
                    Me.OnRuedaNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioLimpio", Storage:="_PrecioLimpio", DbType:="Float NULL")>
        Public Property PrecioLimpio() As System.Nullable(Of Double)
            Get
                Return Me._PrecioLimpio
            End Get
            Set
                If (Me._PrecioLimpio.Equals(Value) = False) Then
                    Me.OnPrecioLimpioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioLimpio = Value
                    Me.SendPropertyChanged("PrecioLimpio")
                    Me.OnPrecioLimpioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPrecioSucio", Storage:="_PrecioSucio", DbType:="Float NULL")>
        Public Property PrecioSucio() As System.Nullable(Of Double)
            Get
                Return Me._PrecioSucio
            End Get
            Set
                If (Me._PrecioSucio.Equals(Value) = False) Then
                    Me.OnPrecioSucioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PrecioSucio = Value
                    Me.SendPropertyChanged("PrecioSucio")
                    Me.OnPrecioSucioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCondicionesNegociacion", Storage:="_CondicionesNegociacion", DbType:="Varchar(60) NULL")>
        Public Property CondicionesNegociacion() As String
            Get
                Return Me._CondicionesNegociacion
            End Get
            Set
                If (String.Equals(Me._CondicionesNegociacion, Value) = False) Then
                    Me.OnCondicionesNegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CondicionesNegociacion = Value
                    Me.SendPropertyChanged("CondicionesNegociacion")
                    Me.OnCondicionesNegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCondicionesNegociacion", Storage:="_NombreCondicionesNegociacion", DbType:="Varchar(100) NULL")>
        Public Property NombreCondicionesNegociacion() As String
            Get
                Return Me._NombreCondicionesNegociacion
            End Get
            Set
                If (String.Equals(Me._NombreCondicionesNegociacion, Value) = False) Then
                    Me.OnNombreCondicionesNegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCondicionesNegociacion = Value
                    Me.SendPropertyChanged("NombreCondicionesNegociacion")
                    Me.OnNombreCondicionesNegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="Varchar(60) NULL")>
        Public Property Indicador() As String
            Get
                Return Me._Indicador
            End Get
            Set
                If (String.Equals(Me._Indicador, Value) = False) Then
                    Me.OnIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Indicador = Value
                    Me.SendPropertyChanged("Indicador")
                    Me.OnIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreIndicador", Storage:="_NombreIndicador", DbType:="Varchar(100) NULL")>
        Public Property NombreIndicador() As String
            Get
                Return Me._NombreIndicador
            End Get
            Set
                If (String.Equals(Me._NombreIndicador, Value) = False) Then
                    Me.OnNombreIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreIndicador = Value
                    Me.SendPropertyChanged("NombreIndicador")
                    Me.OnNombreIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPuntosIndicador", Storage:="_PuntosIndicador", DbType:="Float NULL")>
        Public Property PuntosIndicador() As System.Nullable(Of Double)
            Get
                Return Me._PuntosIndicador
            End Get
            Set
                If (Me._PuntosIndicador.Equals(Value) = False) Then
                    Me.OnPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PuntosIndicador = Value
                    Me.SendPropertyChanged("PuntosIndicador")
                    Me.OnPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(60) NULL")>
        Public Property Modalidad() As String
            Get
                Return Me._Modalidad
            End Get
            Set
                If (String.Equals(Me._Modalidad, Value) = False) Then
                    Me.OnModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modalidad = Value
                    Me.SendPropertyChanged("Modalidad")
                    Me.OnModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreModalidad", Storage:="_NombreModalidad", DbType:="Varchar(100) NULL")>
        Public Property NombreModalidad() As String
            Get
                Return Me._NombreModalidad
            End Get
            Set
                If (String.Equals(Me._NombreModalidad, Value) = False) Then
                    Me.OnNombreModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreModalidad = Value
                    Me.SendPropertyChanged("NombreModalidad")
                    Me.OnNombreModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaVencimiento", Storage:="_FechaVencimiento", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaVencimiento
            End Get
            Set
                If (Object.Equals(Me._FechaVencimiento, Value) = False) Then
                    Me.OnFechaVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaVencimiento = Value
                    Me.SendPropertyChanged("FechaVencimiento")
                    Me.OnFechaVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaInicial", Storage:="_TasaInicial", DbType:="Float NULL")>
        Public Property TasaInicial() As System.Nullable(Of Double)
            Get
                Return Me._TasaInicial
            End Get
            Set
                If (Me._TasaInicial.Equals(Value) = False) Then
                    Me.OnTasaInicialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaInicial = Value
                    Me.SendPropertyChanged("TasaInicial")
                    Me.OnTasaInicialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoSimultanea", Storage:="_TipoSimultanea", DbType:="Varchar(60) NULL")>
        Public Property TipoSimultanea() As String
            Get
                Return Me._TipoSimultanea
            End Get
            Set
                If (String.Equals(Me._TipoSimultanea, Value) = False) Then
                    Me.OnTipoSimultaneaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoSimultanea = Value
                    Me.SendPropertyChanged("TipoSimultanea")
                    Me.OnTipoSimultaneaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaRepoSimultanea", Storage:="_TasaRepoSimultanea", DbType:="Float NULL")>
        Public Property TasaRepoSimultanea() As System.Nullable(Of Double)
            Get
                Return Me._TasaRepoSimultanea
            End Get
            Set
                If (Me._TasaRepoSimultanea.Equals(Value) = False) Then
                    Me.OnTasaRepoSimultaneaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TasaRepoSimultanea = Value
                    Me.SendPropertyChanged("TasaRepoSimultanea")
                    Me.OnTasaRepoSimultaneaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoTitulo", Storage:="_EstadoTitulo", DbType:="Varchar(60) NULL")>
        Public Property EstadoTitulo() As String
            Get
                Return Me._EstadoTitulo
            End Get
            Set
                If (String.Equals(Me._EstadoTitulo, Value) = False) Then
                    Me.OnEstadoTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstadoTitulo = Value
                    Me.SendPropertyChanged("EstadoTitulo")
                    Me.OnEstadoTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_Mercado", DbType:="Varchar(60) NULL")>
        Public Property Mercado() As String
            Get
                Return Me._Mercado
            End Get
            Set
                If (String.Equals(Me._Mercado, Value) = False) Then
                    Me.OnMercadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mercado = Value
                    Me.SendPropertyChanged("Mercado")
                    Me.OnMercadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacion", Storage:="_Clasificacion", DbType:="Varchar(60) NULL")>
        Public Property Clasificacion() As String
            Get
                Return Me._Clasificacion
            End Get
            Set
                If (String.Equals(Me._Clasificacion, Value) = False) Then
                    Me.OnClasificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Clasificacion = Value
                    Me.SendPropertyChanged("Clasificacion")
                    Me.OnClasificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionada", Storage:="_Seleccionada", DbType:="Bit NULL")>
        Public Property Seleccionada() As System.Nullable(Of Boolean)
            Get
                Return Me._Seleccionada
            End Get
            Set
                If (Me._Seleccionada.Equals(Value) = False) Then
                    Me.OnSeleccionadaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Seleccionada = Value
                    Me.SendPropertyChanged("Seleccionada")
                    Me.OnSeleccionadaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensajes", Storage:="_Mensajes", DbType:="varchar(200)")>
        Public Property Mensajes() As String
            Get
                Return Me._Mensajes
            End Get
            Set
                If (String.Equals(Me._Mensajes, Value) = False) Then
                    Me.OnMensajesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensajes = Value
                    Me.SendPropertyChanged("Mensajes")
                    Me.OnMensajesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaCumplimientoRepo", DbType:="Datetime", CanBeNull:=True)>
        Public Property dtmFechaCumplimientoRepo() As System.Nullable(Of DateTime)
            Get
                Return Me._dtmFechaCumplimientoRepo
            End Get
            Set
                If (Object.Equals(Me._dtmFechaCumplimientoRepo, Value) = False) Then
                    Me.OndtmFechaCumplimientoRepoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaCumplimientoRepo = Value
                    Me.SendPropertyChanged("dtmFechaCumplimientoRepo")
                    Me.OndtmFechaCumplimientoRepoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadRepoSimultanea", Storage:="_CantidadRepoSimultanea", DbType:="Float NULL")>
        Public Property CantidadRepoSimultanea() As System.Nullable(Of Double)
            Get
                Return Me._CantidadRepoSimultanea
            End Get
            Set
                If (Me._CantidadRepoSimultanea.Equals(Value) = False) Then
                    Me.OnCantidadRepoSimultaneaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadRepoSimultanea = Value
                    Me.SendPropertyChanged("CantidadRepoSimultanea")
                    Me.OnCantidadRepoSimultaneaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadCaptacion", Storage:="_CantidadCaptacion", DbType:="Float NULL")>
        Public Property CantidadCaptacion() As System.Nullable(Of Double)
            Get
                Return Me._CantidadCaptacion
            End Get
            Set
                If (Me._CantidadCaptacion.Equals(Value) = False) Then
                    Me.OnCantidadCaptacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadCaptacion = Value
                    Me.SendPropertyChanged("CantidadCaptacion")
                    Me.OnCantidadCaptacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadFutura", Storage:="_CantidadFutura", DbType:="Float NULL")>
        Public Property CantidadFutura() As System.Nullable(Of Double)
            Get
                Return Me._CantidadFutura
            End Get
            Set
                If (Me._CantidadFutura.Equals(Value) = False) Then
                    Me.OnCantidadFuturaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CantidadFutura = Value
                    Me.SendPropertyChanged("CantidadFutura")
                    Me.OnCantidadFuturaChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblControlProgramacion")>
    Partial Public Class tblControlProgramacion
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Modulo As String

        Private _IDNroDocumento As Integer

        Private _ProgramacionActiva As System.Nullable(Of Boolean)

        Private _UltimaFechaEjecucion As System.Nullable(Of System.DateTime)

        Private _TipoRecurrencia As String

        Private _DiariaCadaDia As System.Nullable(Of Boolean)

        Private _DiariaDias As System.Nullable(Of System.Int32)

        Private _SemanalNroSemanas As System.Nullable(Of System.Int32)

        Private _SemanalDiasSemana As String

        Private _MensualElDia As System.Nullable(Of Boolean)

        Private _MensualCadaDias As System.Nullable(Of System.Int32)

        Private _MensualCadaMes As System.Nullable(Of System.Int32)

        Private _MensualDias As String

        Private _MensualTipoDia As String

        Private _AnualElDia As System.Nullable(Of Boolean)

        Private _AnualMeses As String

        Private _AnualDia As System.Nullable(Of System.Int32)

        Private _AnualDias As String

        Private _AnualTipoDia As String

        Private _FechaInicio As System.Nullable(Of System.DateTime)

        Private _ModoFinalizacion As String

        Private _Repeticiones As System.Nullable(Of System.Int32)

        Private _FechaFinalizacion As System.Nullable(Of System.DateTime)

        Private _Actualzacion As System.Nullable(Of System.DateTime)

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnModuloChanging(value As String)
        End Sub
        Partial Private Sub OnModuloChanged()
        End Sub
        Partial Private Sub OnIDNroDocumentoChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDNroDocumentoChanged()
        End Sub
        Partial Private Sub OnProgramacionActivaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnProgramacionActivaChanged()
        End Sub
        Partial Private Sub OnUltimaFechaEjecucionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnUltimaFechaEjecucionChanged()
        End Sub
        Partial Private Sub OnTipoRecurrenciaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoRecurrenciaChanged()
        End Sub
        Partial Private Sub OnDiariaCadaDiaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnDiariaCadaDiaChanged()
        End Sub
        Partial Private Sub OnDiariaDiasChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnDiariaDiasChanged()
        End Sub
        Partial Private Sub OnSemanalNroSemanasChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnSemanalNroSemanasChanged()
        End Sub
        Partial Private Sub OnSemanalDiasSemanaChanging(value As String)
        End Sub
        Partial Private Sub OnSemanalDiasSemanaChanged()
        End Sub
        Partial Private Sub OnMensualElDiaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnMensualElDiaChanged()
        End Sub
        Partial Private Sub OnMensualCadaDiasChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnMensualCadaDiasChanged()
        End Sub
        Partial Private Sub OnMensualCadaMesChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnMensualCadaMesChanged()
        End Sub
        Partial Private Sub OnMensualDiasChanging(value As String)
        End Sub
        Partial Private Sub OnMensualDiasChanged()
        End Sub
        Partial Private Sub OnMensualTipoDiaChanging(value As String)
        End Sub
        Partial Private Sub OnMensualTipoDiaChanged()
        End Sub
        Partial Private Sub OnAnualElDiaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnAnualElDiaChanged()
        End Sub
        Partial Private Sub OnAnualMesesChanging(value As String)
        End Sub
        Partial Private Sub OnAnualMesesChanged()
        End Sub
        Partial Private Sub OnAnualDiaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnAnualDiaChanged()
        End Sub
        Partial Private Sub OnAnualDiasChanging(value As String)
        End Sub
        Partial Private Sub OnAnualDiasChanged()
        End Sub
        Partial Private Sub OnAnualTipoDiaChanging(value As String)
        End Sub
        Partial Private Sub OnAnualTipoDiaChanged()
        End Sub
        Partial Private Sub OnFechaInicioChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaInicioChanged()
        End Sub
        Partial Private Sub OnModoFinalizacionChanging(value As String)
        End Sub
        Partial Private Sub OnModoFinalizacionChanged()
        End Sub
        Partial Private Sub OnRepeticionesChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnRepeticionesChanged()
        End Sub
        Partial Private Sub OnFechaFinalizacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaFinalizacionChanged()
        End Sub
        Partial Private Sub OnActualzacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnActualzacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property Modulo() As String
            Get
                Return Me._Modulo
            End Get
            Set
                If (String.Equals(Me._Modulo, Value) = False) Then
                    Me.OnModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modulo = Value
                    Me.SendPropertyChanged("Modulo")
                    Me.OnModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNroDocumento", Storage:="_IDNroDocumento", DbType:="Int NOT NULL")>
        Public Property IDNroDocumento() As Integer
            Get
                Return Me._IDNroDocumento
            End Get
            Set
                If ((Me._IDNroDocumento = Value) _
                            = False) Then
                    Me.OnIDNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNroDocumento = Value
                    Me.SendPropertyChanged("IDNroDocumento")
                    Me.OnIDNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logProgramacionActiva", Storage:="_ProgramacionActiva", DbType:="Bit NULL")>
        Public Property ProgramacionActiva() As System.Nullable(Of Boolean)
            Get
                Return Me._ProgramacionActiva
            End Get
            Set
                If (Me._ProgramacionActiva.Equals(Value) = False) Then
                    Me.OnProgramacionActivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ProgramacionActiva = Value
                    Me.SendPropertyChanged("ProgramacionActiva")
                    Me.OnProgramacionActivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmUltimaFechaEjecucion", Storage:="_UltimaFechaEjecucion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property UltimaFechaEjecucion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._UltimaFechaEjecucion
            End Get
            Set
                If (Object.Equals(Me._UltimaFechaEjecucion, Value) = False) Then
                    Me.OnUltimaFechaEjecucionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._UltimaFechaEjecucion = Value
                    Me.SendPropertyChanged("UltimaFechaEjecucion")
                    Me.OnUltimaFechaEjecucionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoRecurrencia", Storage:="_TipoRecurrencia", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property TipoRecurrencia() As String
            Get
                Return Me._TipoRecurrencia
            End Get
            Set
                If (String.Equals(Me._TipoRecurrencia, Value) = False) Then
                    Me.OnTipoRecurrenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoRecurrencia = Value
                    Me.SendPropertyChanged("TipoRecurrencia")
                    Me.OnTipoRecurrenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDiariaCadaDia", Storage:="_DiariaCadaDia", DbType:="Bit NULL")>
        Public Property DiariaCadaDia() As System.Nullable(Of Boolean)
            Get
                Return Me._DiariaCadaDia
            End Get
            Set
                If (Me._DiariaCadaDia.Equals(Value) = False) Then
                    Me.OnDiariaCadaDiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DiariaCadaDia = Value
                    Me.SendPropertyChanged("DiariaCadaDia")
                    Me.OnDiariaCadaDiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDiariaDias", Storage:="_DiariaDias", DbType:="Int NULL", CanBeNull:=True)>
        Public Property DiariaDias() As System.Nullable(Of System.Int32)
            Get
                Return Me._DiariaDias
            End Get
            Set
                If (Object.Equals(Me._DiariaDias, Value) = False) Then
                    Me.OnDiariaDiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DiariaDias = Value
                    Me.SendPropertyChanged("DiariaDias")
                    Me.OnDiariaDiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intSemanalNroSemanas", Storage:="_SemanalNroSemanas", DbType:="Int NULL", CanBeNull:=True)>
        Public Property SemanalNroSemanas() As System.Nullable(Of System.Int32)
            Get
                Return Me._SemanalNroSemanas
            End Get
            Set
                If (Object.Equals(Me._SemanalNroSemanas, Value) = False) Then
                    Me.OnSemanalNroSemanasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SemanalNroSemanas = Value
                    Me.SendPropertyChanged("SemanalNroSemanas")
                    Me.OnSemanalNroSemanasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSemanalDiasSemana", Storage:="_SemanalDiasSemana", DbType:="varchar(7) NULL", CanBeNull:=False)>
        Public Property SemanalDiasSemana() As String
            Get
                Return Me._SemanalDiasSemana
            End Get
            Set
                If (String.Equals(Me._SemanalDiasSemana, Value) = False) Then
                    Me.OnSemanalDiasSemanaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._SemanalDiasSemana = Value
                    Me.SendPropertyChanged("SemanalDiasSemana")
                    Me.OnSemanalDiasSemanaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMensualElDia", Storage:="_MensualElDia", DbType:="Bit NULL")>
        Public Property MensualElDia() As System.Nullable(Of Boolean)
            Get
                Return Me._MensualElDia
            End Get
            Set
                If (Me._MensualElDia.Equals(Value) = False) Then
                    Me.OnMensualElDiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MensualElDia = Value
                    Me.SendPropertyChanged("MensualElDia")
                    Me.OnMensualElDiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intMensualCadaDias", Storage:="_MensualCadaDias", DbType:="Int NULL", CanBeNull:=True)>
        Public Property MensualCadaDias() As System.Nullable(Of System.Int32)
            Get
                Return Me._MensualCadaDias
            End Get
            Set
                If (Object.Equals(Me._MensualCadaDias, Value) = False) Then
                    Me.OnMensualCadaDiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MensualCadaDias = Value
                    Me.SendPropertyChanged("MensualCadaDias")
                    Me.OnMensualCadaDiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intMensualCadaMes", Storage:="_MensualCadaMes", DbType:="Int NULL", CanBeNull:=True)>
        Public Property MensualCadaMes() As System.Nullable(Of System.Int32)
            Get
                Return Me._MensualCadaMes
            End Get
            Set
                If (Object.Equals(Me._MensualCadaMes, Value) = False) Then
                    Me.OnMensualCadaMesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MensualCadaMes = Value
                    Me.SendPropertyChanged("MensualCadaMes")
                    Me.OnMensualCadaMesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensualDias", Storage:="_MensualDias", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property MensualDias() As String
            Get
                Return Me._MensualDias
            End Get
            Set
                If (String.Equals(Me._MensualDias, Value) = False) Then
                    Me.OnMensualDiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MensualDias = Value
                    Me.SendPropertyChanged("MensualDias")
                    Me.OnMensualDiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensualTipoDia", Storage:="_MensualTipoDia", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property MensualTipoDia() As String
            Get
                Return Me._MensualTipoDia
            End Get
            Set
                If (String.Equals(Me._MensualTipoDia, Value) = False) Then
                    Me.OnMensualTipoDiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MensualTipoDia = Value
                    Me.SendPropertyChanged("MensualTipoDia")
                    Me.OnMensualTipoDiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAnualElDia", Storage:="_AnualElDia", DbType:="Bit NULL")>
        Public Property AnualElDia() As System.Nullable(Of Boolean)
            Get
                Return Me._AnualElDia
            End Get
            Set
                If (Me._AnualElDia.Equals(Value) = False) Then
                    Me.OnAnualElDiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AnualElDia = Value
                    Me.SendPropertyChanged("AnualElDia")
                    Me.OnAnualElDiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAnualMeses", Storage:="_AnualMeses", DbType:="varchar(15) NULL", CanBeNull:=False)>
        Public Property AnualMeses() As String
            Get
                Return Me._AnualMeses
            End Get
            Set
                If (String.Equals(Me._AnualMeses, Value) = False) Then
                    Me.OnAnualMesesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AnualMeses = Value
                    Me.SendPropertyChanged("AnualMeses")
                    Me.OnAnualMesesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intAnualDia", Storage:="_AnualDia", DbType:="Int NULL", CanBeNull:=True)>
        Public Property AnualDia() As System.Nullable(Of System.Int32)
            Get
                Return Me._AnualDia
            End Get
            Set
                If (Object.Equals(Me._AnualDia, Value) = False) Then
                    Me.OnAnualDiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AnualDia = Value
                    Me.SendPropertyChanged("AnualDia")
                    Me.OnAnualDiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAnualDias", Storage:="_AnualDias", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property AnualDias() As String
            Get
                Return Me._AnualDias
            End Get
            Set
                If (String.Equals(Me._AnualDias, Value) = False) Then
                    Me.OnAnualDiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AnualDias = Value
                    Me.SendPropertyChanged("AnualDias")
                    Me.OnAnualDiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAnualTipoDia", Storage:="_AnualTipoDia", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property AnualTipoDia() As String
            Get
                Return Me._AnualTipoDia
            End Get
            Set
                If (String.Equals(Me._AnualTipoDia, Value) = False) Then
                    Me.OnAnualTipoDiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AnualTipoDia = Value
                    Me.SendPropertyChanged("AnualTipoDia")
                    Me.OnAnualTipoDiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInicio", Storage:="_FechaInicio", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaInicio() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaInicio
            End Get
            Set
                If (Object.Equals(Me._FechaInicio, Value) = False) Then
                    Me.OnFechaInicioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInicio = Value
                    Me.SendPropertyChanged("FechaInicio")
                    Me.OnFechaInicioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModoFinalizacion", Storage:="_ModoFinalizacion", DbType:="varchar(4) NULL", CanBeNull:=False)>
        Public Property ModoFinalizacion() As String
            Get
                Return Me._ModoFinalizacion
            End Get
            Set
                If (String.Equals(Me._ModoFinalizacion, Value) = False) Then
                    Me.OnModoFinalizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ModoFinalizacion = Value
                    Me.SendPropertyChanged("ModoFinalizacion")
                    Me.OnModoFinalizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intRepeticiones", Storage:="_Repeticiones", DbType:="Int NULL", CanBeNull:=True)>
        Public Property Repeticiones() As System.Nullable(Of System.Int32)
            Get
                Return Me._Repeticiones
            End Get
            Set
                If (Object.Equals(Me._Repeticiones, Value) = False) Then
                    Me.OnRepeticionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Repeticiones = Value
                    Me.SendPropertyChanged("Repeticiones")
                    Me.OnRepeticionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaFinalizacion", Storage:="_FechaFinalizacion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property FechaFinalizacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._FechaFinalizacion
            End Get
            Set
                If (Object.Equals(Me._FechaFinalizacion, Value) = False) Then
                    Me.OnFechaFinalizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaFinalizacion = Value
                    Me.SendPropertyChanged("FechaFinalizacion")
                    Me.OnFechaFinalizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualzacion", Storage:="_Actualzacion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Actualzacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Actualzacion
            End Get
            Set
                If (Object.Equals(Me._Actualzacion, Value) = False) Then
                    Me.OnActualzacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualzacion = Value
                    Me.SendPropertyChanged("Actualzacion")
                    Me.OnActualzacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(60) NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblControlProgramacionFechas")>
    Partial Public Class tblControlProgramacionFechas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDControlProgramacion As Integer

        Private _Fecha As System.Nullable(Of System.DateTime)

        Private _ProcesoEjecutado As System.Nullable(Of Boolean)

        Private _ProgramacionActiva As System.Nullable(Of Boolean)

        Private _Actualzacion As System.Nullable(Of System.DateTime)

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDControlProgramacionChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDControlProgramacionChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
        Partial Private Sub OnProcesoEjecutadoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnProcesoEjecutadoChanged()
        End Sub
        Partial Private Sub OnProgramacionActivaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnProgramacionActivaChanged()
        End Sub
        Partial Private Sub OnActualzacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnActualzacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDControlProgramacion", Storage:="_IDControlProgramacion", DbType:="Int NOT NULL")>
        Public Property IDControlProgramacion() As Integer
            Get
                Return Me._IDControlProgramacion
            End Get
            Set
                If ((Me._IDControlProgramacion = Value) _
                            = False) Then
                    Me.OnIDControlProgramacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDControlProgramacion = Value
                    Me.SendPropertyChanged("IDControlProgramacion")
                    Me.OnIDControlProgramacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Fecha() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logProcesoEjecutado", Storage:="_ProcesoEjecutado", DbType:="Bit NULL")>
        Public Property ProcesoEjecutado() As System.Nullable(Of Boolean)
            Get
                Return Me._ProcesoEjecutado
            End Get
            Set
                If (Me._ProcesoEjecutado.Equals(Value) = False) Then
                    Me.OnProcesoEjecutadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ProcesoEjecutado = Value
                    Me.SendPropertyChanged("ProcesoEjecutado")
                    Me.OnProcesoEjecutadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logProgramacionActiva", Storage:="_ProgramacionActiva", DbType:="Bit NULL")>
        Public Property ProgramacionActiva() As System.Nullable(Of Boolean)
            Get
                Return Me._ProgramacionActiva
            End Get
            Set
                If (Me._ProgramacionActiva.Equals(Value) = False) Then
                    Me.OnProgramacionActivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ProgramacionActiva = Value
                    Me.SendPropertyChanged("ProgramacionActiva")
                    Me.OnProgramacionActivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualzacion", Storage:="_Actualzacion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Actualzacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Actualzacion
            End Get
            Set
                If (Object.Equals(Me._Actualzacion, Value) = False) Then
                    Me.OnActualzacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualzacion = Value
                    Me.SendPropertyChanged("Actualzacion")
                    Me.OnActualzacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(60) NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblControlProgramacionLog")>
    Partial Public Class tblControlProgramacionLog
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDControlProgramacionFechas As Integer

        Private _Mensaje As String

        Private _Exitoso As System.Nullable(Of Boolean)

        Private _Actualzacion As System.Nullable(Of System.DateTime)

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDControlProgramacionFechasChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDControlProgramacionFechasChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnExitosoChanged()
        End Sub
        Partial Private Sub OnActualzacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnActualzacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDControlProgramacionFechas", Storage:="_IDControlProgramacionFechas", DbType:="Int NOT NULL")>
        Public Property IDControlProgramacionFechas() As Integer
            Get
                Return Me._IDControlProgramacionFechas
            End Get
            Set
                If ((Me._IDControlProgramacionFechas = Value) _
                            = False) Then
                    Me.OnIDControlProgramacionFechasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDControlProgramacionFechas = Value
                    Me.SendPropertyChanged("IDControlProgramacionFechas")
                    Me.OnIDControlProgramacionFechasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="varchar(500) NULL", CanBeNull:=False)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NULL")>
        Public Property Exitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._Exitoso
            End Get
            Set
                If (Me._Exitoso.Equals(Value) = False) Then
                    Me.OnExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Exitoso = Value
                    Me.SendPropertyChanged("Exitoso")
                    Me.OnExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualzacion", Storage:="_Actualzacion", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Actualzacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Actualzacion
            End Get
            Set
                If (Object.Equals(Me._Actualzacion, Value) = False) Then
                    Me.OnActualzacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualzacion = Value
                    Me.SendPropertyChanged("Actualzacion")
                    Me.OnActualzacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(60) NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblControlProgramacionGeneracionFechas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Fecha As System.Nullable(Of System.DateTime)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="DateTime NULL", CanBeNull:=True)>
        Public Property Fecha() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblValidacionEliminarRegistro")>
    Partial Public Class ValidacionEliminarRegistro
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _PermitirRealizarAccion As Boolean

        Private _Mensaje As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnPermitirRealizarAccionChanging(value As Boolean)
        End Sub
        Partial Private Sub OnPermitirRealizarAccionChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermitirRealizarAccion", Storage:="_PermitirRealizarAccion", DbType:="BIT NOT NULL")>
        Public Property PermitirRealizarAccion() As Boolean
            Get
                Return Me._PermitirRealizarAccion
            End Get
            Set
                If ((Me._PermitirRealizarAccion = Value) _
                            = False) Then
                    Me.OnPermitirRealizarAccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PermitirRealizarAccion = Value
                    Me.SendPropertyChanged("PermitirRealizarAccion")
                    Me.OnPermitirRealizarAccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(500) NULL")>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblMensajes
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Titulo As String

        Private _Valor As String

        Private _Color As String

        Private _Descripcion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTituloChanging(value As String)
        End Sub
        Partial Private Sub OnTituloChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As String)
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnColorChanging(value As String)
        End Sub
        Partial Private Sub OnColorChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTitulo", Storage:="_Titulo", DbType:="Varchar(200) NULL", CanBeNull:=False)>
        Public Property Titulo() As String
            Get
                Return Me._Titulo
            End Get
            Set
                If (String.Equals(Me._Titulo, Value) = False) Then
                    Me.OnTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Titulo = Value
                    Me.SendPropertyChanged("Titulo")
                    Me.OnTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(200) NULL")>
        Public Property Valor() As String
            Get
                Return Me._Valor
            End Get
            Set
                If (String.Equals(Me._Valor, Value) = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strColor", Storage:="_Color", DbType:="Varchar(80) NULL")>
        Public Property Color() As String
            Get
                Return Me._Color
            End Get
            Set
                If (String.Equals(Me._Color, Value) = False) Then
                    Me.OnColorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Color = Value
                    Me.SendPropertyChanged("Color")
                    Me.OnColorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(100) NULL")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblConfiguracionesAdicionalesReceptor")>
    Partial Public Class tblConfiguracionesAdicionalesReceptor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _TipoOrden As String

        Private _ExtensionDefecto As String

        Private _TipoOrdenDefecto As String

        Private _Actualizacion As System.Nullable(Of Date)

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnExtensionDefectoChanging(value As String)
        End Sub
        Partial Private Sub OnExtensionDefectoChanged()
        End Sub
        Partial Private Sub OnTipoOrdenDefectoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenDefectoChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(1) NULL")>
        Public Property TipoOrden() As String
            Get
                Return Me._TipoOrden
            End Get
            Set
                If (String.Equals(Me._TipoOrden, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrden = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strExtensionDefecto", Storage:="_ExtensionDefecto", DbType:="Varchar(20) NULL")>
        Public Property ExtensionDefecto() As String
            Get
                Return Me._ExtensionDefecto
            End Get
            Set
                If (String.Equals(Me._ExtensionDefecto, Value) = False) Then
                    Me.OnExtensionDefectoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ExtensionDefecto = Value
                    Me.SendPropertyChanged("ExtensionDefecto")
                    Me.OnExtensionDefectoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrdenDefecto", Storage:="_TipoOrdenDefecto", DbType:="Varchar(1) NULL")>
        Public Property TipoOrdenDefecto() As String
            Get
                Return Me._TipoOrdenDefecto
            End Get
            Set
                If (String.Equals(Me._TipoOrdenDefecto, Value) = False) Then
                    Me.OnTipoOrdenDefectoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrdenDefecto = Value
                    Me.SendPropertyChanged("TipoOrdenDefecto")
                    Me.OnTipoOrdenDefectoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime NULL")>
        Public Property Actualizacion() As System.Nullable(Of Date)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Me._Actualizacion.Equals(Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblParametrosReceptor")>
    Partial Public Class tblParametrosReceptor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _Topico As String

        Private _Valor As String

        Private _Descripcion As String

        Private _Prioridad As Integer

        Private _Actualizacion As System.Nullable(Of Date)

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnTopicoChanging(value As String)
        End Sub
        Partial Private Sub OnTopicoChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As String)
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTopico", Storage:="_Topico", DbType:="Varchar(20) NOT NULL", CanBeNull:=False)>
        Public Property Topico() As String
            Get
                Return Me._Topico
            End Get
            Set
                If (String.Equals(Me._Topico, Value) = False) Then
                    Me.OnTopicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Topico = Value
                    Me.SendPropertyChanged("Topico")
                    Me.OnTopicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Valor() As String
            Get
                Return Me._Valor
            End Get
            Set
                If (String.Equals(Me._Valor, Value) = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(250) NOT NULL", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL")>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If ((Me._Prioridad = Value) _
                            = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime NULL")>
        Public Property Actualizacion() As System.Nullable(Of Date)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Me._Actualizacion.Equals(Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblReceptoresUsuario
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _Nombre As String

        Private _Prioridad As Integer

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL")>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If ((Me._Prioridad = Value) _
                            = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class CombosReceptor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Categoria As String

        Private _Retorno As String

        Private _Descripcion As String

        Private _Prioridad As System.Nullable(Of System.Int32)

        Private _IntId As Integer

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCategoriaChanging(value As String)
        End Sub
        Partial Private Sub OnCategoriaChanged()
        End Sub
        Partial Private Sub OnRetornoChanging(value As String)
        End Sub
        Partial Private Sub OnRetornoChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnIntIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnIntIdChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property Categoria() As String
            Get
                Return Me._Categoria
            End Get
            Set
                If (String.Equals(Me._Categoria, Value) = False) Then
                    Me.OnCategoriaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Categoria = Value
                    Me.SendPropertyChanged("Categoria")
                    Me.OnCategoriaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Retorno", CanBeNull:=False)>
        Public Property Retorno() As String
            Get
                Return Me._Retorno
            End Get
            Set
                If (String.Equals(Me._Retorno, Value) = False) Then
                    Me.OnRetornoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Retorno = Value
                    Me.SendPropertyChanged("Retorno")
                    Me.OnRetornoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prioridad", CanBeNull:=True)>
        Public Property Prioridad() As System.Nullable(Of System.Int32)
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntId")>
        Public Property IntId() As Integer
            Get
                Return Me._IntId
            End Get
            Set
                If ((Me._IntId = Value) _
                            = False) Then
                    Me.OnIntIdChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IntId = Value
                    Me.SendPropertyChanged("IntId")
                    Me.OnIntIdChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblEspeciesXTipoNegocio")>
    Partial Public Class tblEspeciesXTipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoNegocio As String

        Private _IDEspecie As String

        Private _ManejaISIN As Boolean

        Private _MaxCantidad As Double

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnIDEspecieChanged()
        End Sub
        Partial Private Sub OnManejaISINChanging(value As Boolean)
        End Sub
        Partial Private Sub OnManejaISINChanged()
        End Sub
        Partial Private Sub OnMaxCantidadChanging(value As Double)
        End Sub
        Partial Private Sub OnMaxCantidadChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15) NOT NULL", CanBeNull:=False)>
        Public Property IDEspecie() As String
            Get
                Return Me._IDEspecie
            End Get
            Set
                If (String.Equals(Me._IDEspecie, Value) = False) Then
                    Me.OnIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDEspecie = Value
                    Me.SendPropertyChanged("IDEspecie")
                    Me.OnIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logManejaISIN", Storage:="_ManejaISIN", DbType:="Bit NOT NULL")>
        Public Property ManejaISIN() As Boolean
            Get
                Return Me._ManejaISIN
            End Get
            Set
                If ((Me._ManejaISIN = Value) _
                            = False) Then
                    Me.OnManejaISINChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ManejaISIN = Value
                    Me.SendPropertyChanged("ManejaISIN")
                    Me.OnManejaISINChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblMaxCantidad", Storage:="_MaxCantidad", DbType:="Float NOT NULL")>
        Public Property MaxCantidad() As Double
            Get
                Return Me._MaxCantidad
            End Get
            Set
                If ((Me._MaxCantidad = Value) _
                            = False) Then
                    Me.OnMaxCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MaxCantidad = Value
                    Me.SendPropertyChanged("MaxCantidad")
                    Me.OnMaxCantidadChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoNegocioReceptor")>
    Partial Public Class tblTipoNegocioReceptor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _CodigoTipoNegocio As String

        Private _NombreTipoNegocio As String

        Private _ValorMaxnegociacion As Double

        Private _Prioridad As Integer

        Private _PorcentajeComision As Double

        Private _ValorComision As Double

        Private _Actualizacion As System.Nullable(Of Date)

        Private _Usuario As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnCodigoTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoNegocioChanged()
        End Sub
        Partial Private Sub OnNombreTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoNegocioChanged()
        End Sub
        Partial Private Sub OnValorMaxnegociacionChanging(value As Double)
        End Sub
        Partial Private Sub OnValorMaxnegociacionChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnPorcentajeComisionChanging(value As Double)
        End Sub
        Partial Private Sub OnPorcentajeComisionChanged()
        End Sub
        Partial Private Sub OnValorComisionChanging(value As Double)
        End Sub
        Partial Private Sub OnValorComisionChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoNegocio", Storage:="_CodigoTipoNegocio", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoTipoNegocio() As String
            Get
                Return Me._CodigoTipoNegocio
            End Get
            Set
                If (String.Equals(Me._CodigoTipoNegocio, Value) = False) Then
                    Me.OnCodigoTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoNegocio = Value
                    Me.SendPropertyChanged("CodigoTipoNegocio")
                    Me.OnCodigoTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoNegocio", Storage:="_NombreTipoNegocio", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property NombreTipoNegocio() As String
            Get
                Return Me._NombreTipoNegocio
            End Get
            Set
                If (String.Equals(Me._NombreTipoNegocio, Value) = False) Then
                    Me.OnNombreTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoNegocio = Value
                    Me.SendPropertyChanged("NombreTipoNegocio")
                    Me.OnNombreTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorMaxnegociacion", Storage:="_ValorMaxnegociacion", DbType:="Float NOT NULL")>
        Public Property ValorMaxnegociacion() As Double
            Get
                Return Me._ValorMaxnegociacion
            End Get
            Set
                If ((Me._ValorMaxnegociacion = Value) _
                            = False) Then
                    Me.OnValorMaxnegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorMaxnegociacion = Value
                    Me.SendPropertyChanged("ValorMaxnegociacion")
                    Me.OnValorMaxnegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL")>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If ((Me._Prioridad = Value) _
                            = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeComision", Storage:="_PorcentajeComision", DbType:="Float NULL")>
        Public Property PorcentajeComision() As Double
            Get
                Return Me._PorcentajeComision
            End Get
            Set
                If ((Me._PorcentajeComision = Value) _
                            = False) Then
                    Me.OnPorcentajeComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajeComision = Value
                    Me.SendPropertyChanged("PorcentajeComision")
                    Me.OnPorcentajeComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorComision", Storage:="_ValorComision", DbType:="Float NULL")>
        Public Property ValorComision() As Double
            Get
                Return Me._ValorComision
            End Get
            Set
                If ((Me._ValorComision = Value) _
                            = False) Then
                    Me.OnValorComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorComision = Value
                    Me.SendPropertyChanged("ValorComision")
                    Me.OnValorComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="DateTime NULL")>
        Public Property Actualizacion() As System.Nullable(Of Date)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Me._Actualizacion.Equals(Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ItemCombosSistemaExterno
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Categoria As String

        Private _Retorno As String

        Private _Descripcion As String

        Private _Prioridad As System.Nullable(Of System.Int32)

        Private _IDDependencia1 As System.Nullable(Of System.Int32)

        Private _IDDependencia2 As System.Nullable(Of System.Int32)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCategoriaChanging(value As String)
        End Sub
        Partial Private Sub OnCategoriaChanged()
        End Sub
        Partial Private Sub OnRetornoChanging(value As String)
        End Sub
        Partial Private Sub OnRetornoChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnIDDependencia1Changing(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDDependencia1Changed()
        End Sub
        Partial Private Sub OnIDDependencia2Changing(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDDependencia2Changed()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", IsPrimaryKey:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property Categoria() As String
            Get
                Return Me._Categoria
            End Get
            Set
                If (String.Equals(Me._Categoria, Value) = False) Then
                    Me.OnCategoriaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Categoria = Value
                    Me.SendPropertyChanged("Categoria")
                    Me.OnCategoriaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Retorno", IsPrimaryKey:=True)>
        Public Property Retorno() As String
            Get
                Return Me._Retorno
            End Get
            Set
                If (String.Equals(Me._Retorno, Value) = False) Then
                    Me.OnRetornoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Retorno = Value
                    Me.SendPropertyChanged("Retorno")
                    Me.OnRetornoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prioridad", CanBeNull:=True)>
        Public Property Prioridad() As System.Nullable(Of System.Int32)
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDependencia1", CanBeNull:=True)>
        Public Property IDDependencia1() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDDependencia1
            End Get
            Set
                If (Object.Equals(Me._IDDependencia1, Value) = False) Then
                    Me.OnIDDependencia1Changing(Value)
                    Me.SendPropertyChanging()
                    Me._IDDependencia1 = Value
                    Me.SendPropertyChanged("IDDependencia1")
                    Me.OnIDDependencia1Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDependencia2", CanBeNull:=True)>
        Public Property IDDependencia2() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDDependencia2
            End Get
            Set
                If (Object.Equals(Me._IDDependencia2, Value) = False) Then
                    Me.OnIDDependencia2Changing(Value)
                    Me.SendPropertyChanging()
                    Me._IDDependencia2 = Value
                    Me.SendPropertyChanged("IDDependencia2")
                    Me.OnIDDependencia2Changed()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblSSBMensajesProcesados")>
    Partial Public Class MensajesProcesados

        Private _ID As Integer

        Private _IdConversacion As System.Guid

        Private _NombreServicio As String

        Private _FechaActualizacion As Date

        Private _SistemaOrigen As String

        Private _SistemaDestino As String

        Private _Accion As String

        Private _Procedimiento As String

        Private _Mensaje As System.Xml.Linq.XElement

        Private _Estado As Byte

        Public Sub New()
            MyBase.New
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me._ID = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="guidConversation", Storage:="_IdConversacion", DbType:="UniqueIdentifier NOT NULL")>
        Public Property IDConversacion() As System.Guid
            Get
                Return Me._IdConversacion
            End Get
            Set
                If ((Me._IdConversacion = Value) _
                            = False) Then
                    Me._IdConversacion = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreServicio", Storage:="_NombreServicio", DbType:="VarChar(256) NOT NULL", CanBeNull:=False)>
        Public Property NombreServicio() As String
            Get
                Return Me._NombreServicio
            End Get
            Set
                If (String.Equals(Me._NombreServicio, Value) = False) Then
                    Me._NombreServicio = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NOT NULL")>
        Public Property FechaActualizacion() As Date
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If ((Me._FechaActualizacion = Value) _
                            = False) Then
                    Me._FechaActualizacion = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSistemaOrigen", Storage:="_SistemaOrigen", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
        Public Property SistemaOrigen() As String
            Get
                Return Me._SistemaOrigen
            End Get
            Set
                If (String.Equals(Me._SistemaOrigen, Value) = False) Then
                    Me._SistemaOrigen = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSistemaDestino", Storage:="_SistemaDestino", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
        Public Property SistemaDestino() As String
            Get
                Return Me._SistemaDestino
            End Get
            Set
                If (String.Equals(Me._SistemaDestino, Value) = False) Then
                    Me._SistemaDestino = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAccion", Storage:="_Accion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
        Public Property Accion() As String
            Get
                Return Me._Accion
            End Get
            Set
                If (String.Equals(Me._Accion, Value) = False) Then
                    Me._Accion = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strProcedimiento", Storage:="_Procedimiento", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
        Public Property Procedimiento() As String
            Get
                Return Me._Procedimiento
            End Get
            Set
                If (String.Equals(Me._Procedimiento, Value) = False) Then
                    Me._Procedimiento = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="MessageBody", Storage:="_Mensaje", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>
        Public Property Mensaje() As System.Xml.Linq.XElement
            Get
                Return Me._Mensaje
            End Get
            Set
                If (Object.Equals(Me._Mensaje, Value) = False) Then
                    Me._Mensaje = Value
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intEstado", Storage:="_Estado", DbType:="TinyInt NOT NULL")>
        Public Property Estado() As Byte
            Get
                Return Me._Estado
            End Get
            Set
                If ((Me._Estado = Value) _
                            = False) Then
                    Me._Estado = Value
                End If
            End Set
        End Property
    End Class
End Namespace

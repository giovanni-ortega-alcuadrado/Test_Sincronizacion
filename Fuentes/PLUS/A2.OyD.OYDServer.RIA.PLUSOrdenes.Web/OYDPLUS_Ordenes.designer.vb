'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYDPlus")>
Partial Public Class OyDPLUSOrdenesDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertModulosUsuario(instance As OyDPLUSOrdenes.ModulosUsuario)
    End Sub
    Partial Private Sub UpdateModulosUsuario(instance As OyDPLUSOrdenes.ModulosUsuario)
    End Sub
    Partial Private Sub DeleteModulosUsuario(instance As OyDPLUSOrdenes.ModulosUsuario)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property ModulosUsuario() As System.Data.Linq.Table(Of OyDPLUSOrdenes.ModulosUsuario)
        Get
            Return Me.GetTable(Of OyDPLUSOrdenes.ModulosUsuario)
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_CargarModulosUsuario")>
    Public Function uspOyDNet_CargarModulosUsuario(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(60)")> ByVal pstrAplicacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(20)")> ByVal pstrVersion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(60)")> ByVal pstrUsuarioUtilidades As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(60)")> ByVal pstrClave As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(60)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VARCHAR(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TINYINT")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSOrdenes.ModulosUsuario)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAplicacion, pstrVersion, pstrUsuarioUtilidades, pstrClave, pstrUsuario, pstrMaquina, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSOrdenes.ModulosUsuario))
    End Function
End Class

Namespace OyDPLUSOrdenes

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ModulosUsuario
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Modulo As String

        Private _Prioridad As Integer

        Private _AccionPermitida As String

        Private _DescripcionAccion As String

        Private _TituloModulo As String

        Private _TituloVistaModulo As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnModuloChanging(value As String)
        End Sub
        Partial Private Sub OnModuloChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnAccionPermitidaChanging(value As String)
        End Sub
        Partial Private Sub OnAccionPermitidaChanged()
        End Sub
        Partial Private Sub OnDescripcionAccionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionAccionChanged()
        End Sub
        Partial Private Sub OnTituloModuloChanging(value As String)
        End Sub
        Partial Private Sub OnTituloModuloChanged()
        End Sub
        Partial Private Sub OnTituloVistaModuloChanging(value As String)
        End Sub
        Partial Private Sub OnTituloVistaModuloChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="Varchar(60)", CanBeNull:=False)>
        Public Property Modulo() As String
            Get
                Return Me._Modulo
            End Get
            Set
                If (String.Equals(Me._Modulo, Value) = False) Then
                    Me.OnModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modulo = Value
                    Me.SendPropertyChanged("Modulo")
                    Me.OnModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int")>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If ((Me._Prioridad = Value) _
                            = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAccionPermitida", Storage:="_AccionPermitida", DbType:="Varchar(60)", CanBeNull:=False)>
        Public Property AccionPermitida() As String
            Get
                Return Me._AccionPermitida
            End Get
            Set
                If (String.Equals(Me._AccionPermitida, Value) = False) Then
                    Me.OnAccionPermitidaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AccionPermitida = Value
                    Me.SendPropertyChanged("AccionPermitida")
                    Me.OnAccionPermitidaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionAccion", Storage:="_DescripcionAccion", DbType:="Varchar(60)", CanBeNull:=False)>
        Public Property DescripcionAccion() As String
            Get
                Return Me._DescripcionAccion
            End Get
            Set
                If (String.Equals(Me._DescripcionAccion, Value) = False) Then
                    Me.OnDescripcionAccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionAccion = Value
                    Me.SendPropertyChanged("DescripcionAccion")
                    Me.OnDescripcionAccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTituloModulo", Storage:="_TituloModulo", DbType:="Varchar(60)", CanBeNull:=False)>
        Public Property TituloModulo() As String
            Get
                Return Me._TituloModulo
            End Get
            Set
                If (String.Equals(Me._TituloModulo, Value) = False) Then
                    Me.OnTituloModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TituloModulo = Value
                    Me.SendPropertyChanged("TituloModulo")
                    Me.OnTituloModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTituloVistaModulo", Storage:="_TituloVistaModulo", DbType:="Varchar(100)", CanBeNull:=False)>
        Public Property TituloVistaModulo() As String
            Get
                Return Me._TituloVistaModulo
            End Get
            Set
                If (String.Equals(Me._TituloVistaModulo, Value) = False) Then
                    Me.OnTituloVistaModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TituloVistaModulo = Value
                    Me.SendPropertyChanged("TituloVistaModulo")
                    Me.OnTituloVistaModuloChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

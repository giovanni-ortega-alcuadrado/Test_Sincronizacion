'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="OYDPLUSYDPlus")>
Partial Public Class OyDPLUSMaestrosDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertTipoNegocio(instance As OyDPLUSMaestros.TipoNegocio)
    End Sub
    Partial Private Sub UpdateTipoNegocio(instance As OyDPLUSMaestros.TipoNegocio)
    End Sub
    Partial Private Sub DeleteTipoNegocio(instance As OyDPLUSMaestros.TipoNegocio)
    End Sub
    Partial Private Sub InsertRN_NivelesAtribucion(instance As OyDPLUSMaestros.RN_NivelesAtribucion)
    End Sub
    Partial Private Sub UpdateRN_NivelesAtribucion(instance As OyDPLUSMaestros.RN_NivelesAtribucion)
    End Sub
    Partial Private Sub DeleteRN_NivelesAtribucion(instance As OyDPLUSMaestros.RN_NivelesAtribucion)
    End Sub
    Partial Private Sub InsertTipoProducto(instance As OyDPLUSMaestros.TipoProducto)
    End Sub
    Partial Private Sub UpdateTipoProducto(instance As OyDPLUSMaestros.TipoProducto)
    End Sub
    Partial Private Sub DeleteTipoProducto(instance As OyDPLUSMaestros.TipoProducto)
    End Sub
    Partial Private Sub InsertClientesRelacionadosEncabezado(instance As OyDPLUSMaestros.ClientesRelacionadosEncabezado)
    End Sub
    Partial Private Sub UpdateClientesRelacionadosEncabezado(instance As OyDPLUSMaestros.ClientesRelacionadosEncabezado)
    End Sub
    Partial Private Sub DeleteClientesRelacionadosEncabezado(instance As OyDPLUSMaestros.ClientesRelacionadosEncabezado)
    End Sub
    Partial Private Sub InsertValidacionClientesRelacionados(instance As OyDPLUSMaestros.ValidacionClientesRelacionados)
    End Sub
    Partial Private Sub UpdateValidacionClientesRelacionados(instance As OyDPLUSMaestros.ValidacionClientesRelacionados)
    End Sub
    Partial Private Sub DeleteValidacionClientesRelacionados(instance As OyDPLUSMaestros.ValidacionClientesRelacionados)
    End Sub
    Partial Private Sub InsertPortalioClienteXTipoNegocioPrincipal(instance As OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
    End Sub
    Partial Private Sub UpdatePortalioClienteXTipoNegocioPrincipal(instance As OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
    End Sub
    Partial Private Sub DeletePortalioClienteXTipoNegocioPrincipal(instance As OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
    End Sub
    Partial Private Sub InsertCupoReceptorXTipoNegocioPrincipal(instance As OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
    End Sub
    Partial Private Sub UpdateCupoReceptorXTipoNegocioPrincipal(instance As OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
    End Sub
    Partial Private Sub DeleteCupoReceptorXTipoNegocioPrincipal(instance As OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
    End Sub
    Partial Private Sub InsertAliasEspecie(instance As OyDPLUSMaestros.AliasEspecie)
    End Sub
    Partial Private Sub DeleteAliasEspecie(instance As OyDPLUSMaestros.AliasEspecie)
    End Sub
    Partial Private Sub InsertClientesReceptor(instance As OyDPLUSMaestros.ClientesReceptor)
    End Sub
    Partial Private Sub UpdateClientesReceptor(instance As OyDPLUSMaestros.ClientesReceptor)
    End Sub
    Partial Private Sub DeleteClientesReceptor(instance As OyDPLUSMaestros.ClientesReceptor)
    End Sub
    Partial Private Sub InsertRN_TiposDocumento(instance As OyDPLUSMaestros.RN_TiposDocumento)
    End Sub
    Partial Private Sub UpdateRN_TiposDocumento(instance As OyDPLUSMaestros.RN_TiposDocumento)
    End Sub
    Partial Private Sub DeleteRN_TiposDocumento(instance As OyDPLUSMaestros.RN_TiposDocumento)
    End Sub
    Partial Private Sub InsertAuditoria(instance As OyDPLUSMaestros.Auditoria)
    End Sub
    Partial Private Sub UpdateAuditoria(instance As OyDPLUSMaestros.Auditoria)
    End Sub
    Partial Private Sub DeleteAuditoria(instance As OyDPLUSMaestros.Auditoria)
    End Sub
    Partial Private Sub InsertConceptosTesoreri(instance As OyDPLUSMaestros.ConceptosTesoreri)
    End Sub
    Partial Private Sub UpdateConceptosTesoreri(instance As OyDPLUSMaestros.ConceptosTesoreri)
    End Sub
    Partial Private Sub DeleteConceptosTesoreri(instance As OyDPLUSMaestros.ConceptosTesoreri)
    End Sub
    Partial Private Sub InsertDoctosRequerido(instance As OyDPLUSMaestros.DoctosRequerido)
    End Sub
    Partial Private Sub UpdateDoctosRequerido(instance As OyDPLUSMaestros.DoctosRequerido)
    End Sub
    Partial Private Sub DeleteDoctosRequerido(instance As OyDPLUSMaestros.DoctosRequerido)
    End Sub
    Partial Private Sub InsertReceptorActivo(instance As OyDPLUSMaestros.ReceptorActivo)
    End Sub
    Partial Private Sub UpdateReceptorActivo(instance As OyDPLUSMaestros.ReceptorActivo)
    End Sub
    Partial Private Sub DeleteReceptorActivo(instance As OyDPLUSMaestros.ReceptorActivo)
    End Sub
    Partial Private Sub InserttblControlHorarioFondos(instance As OyDPLUSMaestros.tblControlHorarioFondos)
    End Sub
    Partial Private Sub UpdatetblControlHorarioFondos(instance As OyDPLUSMaestros.tblControlHorarioFondos)
    End Sub
    Partial Private Sub DeletetblControlHorarioFondos(instance As OyDPLUSMaestros.tblControlHorarioFondos)
    End Sub
    Partial Private Sub InserttblFondosFormasPagos(instance As OyDPLUSMaestros.tblFondosFormasPagos)
    End Sub
    Partial Private Sub UpdatetblFondosFormasPagos(instance As OyDPLUSMaestros.tblFondosFormasPagos)
    End Sub
    Partial Private Sub DeletetblFondosFormasPagos(instance As OyDPLUSMaestros.tblFondosFormasPagos)
    End Sub
    Partial Private Sub InsertGrupoOperadores(instance As OyDPLUSMaestros.GrupoOperadores)
    End Sub
    Partial Private Sub UpdateGrupoOperadores(instance As OyDPLUSMaestros.GrupoOperadores)
    End Sub
    Partial Private Sub DeleteGrupoOperadores(instance As OyDPLUSMaestros.GrupoOperadores)
    End Sub
    Partial Private Sub InsertDetalleGrupoOperadores(instance As OyDPLUSMaestros.DetalleGrupoOperadores)
    End Sub
    Partial Private Sub UpdateDetalleGrupoOperadores(instance As OyDPLUSMaestros.DetalleGrupoOperadores)
    End Sub
    Partial Private Sub DeleteDetalleGrupoOperadores(instance As OyDPLUSMaestros.DetalleGrupoOperadores)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property Mensajes() As System.Data.Linq.Table(Of OyDPLUSMaestros.Mensaje)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.Mensaje)
        End Get
    End Property

    Public ReadOnly Property Reglas() As System.Data.Linq.Table(Of OyDPLUSMaestros.Regla)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.Regla)
        End Get
    End Property

    Public ReadOnly Property MensajesReglas() As System.Data.Linq.Table(Of OyDPLUSMaestros.MensajesRegla)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.MensajesRegla)
        End Get
    End Property

    Public ReadOnly Property TipoNegocio() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoNegocio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoNegocio)
        End Get
    End Property

    Public ReadOnly Property CertificacionXTipoNegocio() As System.Data.Linq.Table(Of OyDPLUSMaestros.CertificacionXTipoNegocio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.CertificacionXTipoNegocio)
        End Get
    End Property

    Public ReadOnly Property DocumentoXTipoNegocio() As System.Data.Linq.Table(Of OyDPLUSMaestros.DocumentoXTipoNegocio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.DocumentoXTipoNegocio)
        End Get
    End Property

    Public ReadOnly Property TipoNegocioXEspecie() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoNegocioXEspecie)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoNegocioXEspecie)
        End Get
    End Property

    Public ReadOnly Property TipoNegocioXTipoProducto() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoNegocioXTipoProducto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoNegocioXTipoProducto)
        End Get
    End Property

    Public ReadOnly Property CertificacionesXReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.CertificacionesXRecepto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.CertificacionesXRecepto)
        End Get
    End Property

    Public ReadOnly Property ConceptosXReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.ConceptosXRecepto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ConceptosXRecepto)
        End Get
    End Property

    Public ReadOnly Property ConfiguracionesAdicionalesReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        End Get
    End Property

    Public ReadOnly Property ParametrosReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.ParametrosRecepto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ParametrosRecepto)
        End Get
    End Property

    Public ReadOnly Property ReceptoresClientesAutorizados() As System.Data.Linq.Table(Of OyDPLUSMaestros.ReceptoresClientesAutorizado)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ReceptoresClientesAutorizado)
        End Get
    End Property

    Public ReadOnly Property TipoNegocioXReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoNegocioXRecepto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoNegocioXRecepto)
        End Get
    End Property

    Public ReadOnly Property TipoProductoXReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoProductoXRecepto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoProductoXRecepto)
        End Get
    End Property

    Public ReadOnly Property RN_ConfiguracionNivelAtribucion() As System.Data.Linq.Table(Of OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        End Get
    End Property

    Public ReadOnly Property RN_NivelesAtribucion() As System.Data.Linq.Table(Of OyDPLUSMaestros.RN_NivelesAtribucion)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.RN_NivelesAtribucion)
        End Get
    End Property

    Public ReadOnly Property Costos() As System.Data.Linq.Table(Of OyDPLUSMaestros.Costo)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.Costo)
        End Get
    End Property

    Public ReadOnly Property TiposProducto() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoProducto)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoProducto)
        End Get
    End Property

    Public ReadOnly Property TipoProductoXEspecie() As System.Data.Linq.Table(Of OyDPLUSMaestros.TipoProductoXEspeci)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.TipoProductoXEspeci)
        End Get
    End Property

    Public ReadOnly Property ControlHorarios() As System.Data.Linq.Table(Of OyDPLUSMaestros.ControlHorario)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ControlHorario)
        End Get
    End Property

    Public ReadOnly Property ClientesRelacionados() As System.Data.Linq.Table(Of OyDPLUSMaestros.ClientesRelacionados)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ClientesRelacionados)
        End Get
    End Property

    Public ReadOnly Property ClientesRelacionadosEncabezado() As System.Data.Linq.Table(Of OyDPLUSMaestros.ClientesRelacionadosEncabezado)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ClientesRelacionadosEncabezado)
        End Get
    End Property

    Public ReadOnly Property ValidacionClientesRelacionados() As System.Data.Linq.Table(Of OyDPLUSMaestros.ValidacionClientesRelacionados)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ValidacionClientesRelacionados)
        End Get
    End Property

    Public ReadOnly Property PortalioClienteXTipoNegocio() As System.Data.Linq.Table(Of OyDPLUSMaestros.PortalioClienteXTipoNegocio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.PortalioClienteXTipoNegocio)
        End Get
    End Property

    Public ReadOnly Property PortalioClienteXTipoNegocioPrincipal() As System.Data.Linq.Table(Of OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
        End Get
    End Property

    Public ReadOnly Property DistribucionComisionXTipoNegocio() As System.Data.Linq.Table(Of OyDPLUSMaestros.DistribucionComisionXTipoNegocio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.DistribucionComisionXTipoNegocio)
        End Get
    End Property

    Public ReadOnly Property CupoReceptorXTipoNegocio() As System.Data.Linq.Table(Of OyDPLUSMaestros.CupoReceptorXTipoNegocio)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.CupoReceptorXTipoNegocio)
        End Get
    End Property

    Public ReadOnly Property CupoReceptorXTipoNegocioPrincipal() As System.Data.Linq.Table(Of OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
        End Get
    End Property

    Public ReadOnly Property AliasEspecies() As System.Data.Linq.Table(Of OyDPLUSMaestros.AliasEspecie)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.AliasEspecie)
        End Get
    End Property

    Public ReadOnly Property BancosNacionalesFondos() As System.Data.Linq.Table(Of OyDPLUSMaestros.BancosNacionalesFondos)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.BancosNacionalesFondos)
        End Get
    End Property

    Public ReadOnly Property ClientesReceptor() As System.Data.Linq.Table(Of OyDPLUSMaestros.ClientesReceptor)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ClientesReceptor)
        End Get
    End Property

    Public ReadOnly Property RN_TiposDocumento() As System.Data.Linq.Table(Of OyDPLUSMaestros.RN_TiposDocumento)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.RN_TiposDocumento)
        End Get
    End Property

    Public ReadOnly Property Auditorias() As System.Data.Linq.Table(Of OyDPLUSMaestros.Auditoria)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.Auditoria)
        End Get
    End Property

    Public ReadOnly Property ConceptosTesoreria() As System.Data.Linq.Table(Of OyDPLUSMaestros.ConceptosTesoreri)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ConceptosTesoreri)
        End Get
    End Property

    Public ReadOnly Property DoctosRequeridos() As System.Data.Linq.Table(Of OyDPLUSMaestros.DoctosRequerido)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.DoctosRequerido)
        End Get
    End Property

    Public ReadOnly Property ReceptorActivo() As System.Data.Linq.Table(Of OyDPLUSMaestros.ReceptorActivo)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.ReceptorActivo)
        End Get
    End Property

    Public ReadOnly Property PreciosTick() As System.Data.Linq.Table(Of OyDPLUSMaestros.PreciosTick)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.PreciosTick)
        End Get
    End Property

    Public ReadOnly Property tblControlHorarioFondos() As System.Data.Linq.Table(Of OyDPLUSMaestros.tblControlHorarioFondos)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.tblControlHorarioFondos)
        End Get
    End Property

    Public ReadOnly Property tblFondosFormasPagos() As System.Data.Linq.Table(Of OyDPLUSMaestros.tblFondosFormasPagos)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.tblFondosFormasPagos)
        End Get
    End Property

    Public ReadOnly Property GrupoOperadores() As System.Data.Linq.Table(Of OyDPLUSMaestros.GrupoOperadores)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.GrupoOperadores)
        End Get
    End Property

    Public ReadOnly Property DetalleGrupoOperadores() As System.Data.Linq.Table(Of OyDPLUSMaestros.DetalleGrupoOperadores)
        Get
            Return Me.GetTable(Of OyDPLUSMaestros.DetalleGrupoOperadores)
        End Get
    End Property

    Private Sub InsertMensaje(ByVal obj As OyDPLUSMaestros.Mensaje)
        Dim p1 As Integer = obj.IDMensaje
        Me.uspOyDNet_Maestros_Mensajes_Actualizar(p1, obj.CodigoMensaje, obj.Mensaje, obj.MensajeConReempl, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDMensaje = p1
    End Sub

    Private Sub UpdateMensaje(ByVal obj As OyDPLUSMaestros.Mensaje)
        Dim p1 As Integer = obj.IDMensaje
        Me.uspOyDNet_Maestros_Mensajes_Actualizar(p1, obj.CodigoMensaje, obj.Mensaje, obj.MensajeConReempl, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDMensaje = p1
    End Sub

    Private Sub DeleteMensaje(ByVal obj As OyDPLUSMaestros.Mensaje)
        Me.uspOyDNet_Maestros_Mensajes_Eliminar(obj.IDMensaje, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertRegla(ByVal obj As OyDPLUSMaestros.Regla)
        Dim p1 As Integer = obj.IDRegla
        Me.uspOyDNet_Maestros_Reglas_Actualizar(p1, obj.CodigoRegla, obj.DescripcionRegla, obj.Modulo, obj.NombreCorto, obj.Prioridad, obj.CodigoTipoRegla, obj.CausasJustificacion, obj.NombreProcedimiento, obj.Parametros, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDRegla = p1
    End Sub

    Private Sub UpdateRegla(ByVal obj As OyDPLUSMaestros.Regla)
        Dim p1 As Integer = obj.IDRegla
        Me.uspOyDNet_Maestros_Reglas_Actualizar(p1, obj.CodigoRegla, obj.DescripcionRegla, obj.Modulo, obj.NombreCorto, obj.Prioridad, obj.CodigoTipoRegla, obj.CausasJustificacion, obj.NombreProcedimiento, obj.Parametros, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDRegla = p1
    End Sub

    Private Sub DeleteRegla(ByVal obj As OyDPLUSMaestros.Regla)
        Me.uspOyDNet_Maestros_Reglas_Eliminar(obj.IDRegla, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertMensajesRegla(ByVal obj As OyDPLUSMaestros.MensajesRegla)
        Dim p1 As Integer = obj.IDMensajeRegla
        Me.uspOyDNet_Maestros_MensajesReglas_Actualizar(p1, obj.IDRegla, obj.IDMensaje, obj.IDTipoMensaje, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDMensajeRegla = p1
    End Sub

    Private Sub UpdateMensajesRegla(ByVal obj As OyDPLUSMaestros.MensajesRegla)
        Dim p1 As Integer = obj.IDMensajeRegla
        Me.uspOyDNet_Maestros_MensajesReglas_Actualizar(p1, obj.IDRegla, obj.IDMensaje, obj.IDTipoMensaje, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.IDMensajeRegla = p1
    End Sub

    Private Sub DeleteMensajesRegla(ByVal obj As OyDPLUSMaestros.MensajesRegla)
        Me.uspOyDNet_Maestros_MensajesReglas_Eliminar(obj.IDMensajeRegla, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertCertificacionXTipoNegocio(ByVal obj As OyDPLUSMaestros.CertificacionXTipoNegocio)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_CertificacionXTipoNegocio_Actualizar(p1, obj.CodigoCertificacion, obj.CodigoTipoNegocio, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateCertificacionXTipoNegocio(ByVal obj As OyDPLUSMaestros.CertificacionXTipoNegocio)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_CertificacionXTipoNegocio_Actualizar(p1, obj.CodigoCertificacion, obj.CodigoTipoNegocio, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteCertificacionXTipoNegocio(ByVal obj As OyDPLUSMaestros.CertificacionXTipoNegocio)
        Me.uspOyDNet_Maestros_CertificacionXTipoNegocio_Eliminar(obj.ID, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertDocumentoXTipoNegocio(ByVal obj As OyDPLUSMaestros.DocumentoXTipoNegocio)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_DocumentoXTipoNegocio_Actualizar(p1, obj.TipoNegocio, CType(obj.CodDocumento, System.Nullable(Of Short)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.TipoOperacion)
        obj.ID = p1
    End Sub

    Private Sub UpdateDocumentoXTipoNegocio(ByVal obj As OyDPLUSMaestros.DocumentoXTipoNegocio)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_DocumentoXTipoNegocio_Actualizar(p1, obj.TipoNegocio, CType(obj.CodDocumento, System.Nullable(Of Short)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), obj.TipoOperacion)
        obj.ID = p1
    End Sub

    Private Sub DeleteDocumentoXTipoNegocio(ByVal obj As OyDPLUSMaestros.DocumentoXTipoNegocio)
        Me.uspOyDNet_Maestros_DocumentoXTipoNegocio_Eliminar(obj.ID, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertTipoNegocioXEspecie(ByVal obj As OyDPLUSMaestros.TipoNegocioXEspecie)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoNegocioXEspecie_Actualizar(p1, obj.TipoNegocio, obj.IDEspecie, CType(obj.ManejaISIN, System.Nullable(Of Boolean)), CType(obj.MaxValorCantidad, System.Nullable(Of Double)), CType(obj.PermiteNegociar, System.Nullable(Of Boolean)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(obj.PorcentajeGarantia, System.Nullable(Of Double)))
        obj.ID = p1
    End Sub

    Private Sub UpdateTipoNegocioXEspecie(ByVal obj As OyDPLUSMaestros.TipoNegocioXEspecie)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoNegocioXEspecie_Actualizar(p1, obj.TipoNegocio, obj.IDEspecie, CType(obj.ManejaISIN, System.Nullable(Of Boolean)), CType(obj.MaxValorCantidad, System.Nullable(Of Double)), CType(obj.PermiteNegociar, System.Nullable(Of Boolean)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), CType(obj.PorcentajeGarantia, System.Nullable(Of Double)))
        obj.ID = p1
    End Sub

    Private Sub DeleteTipoNegocioXEspecie(ByVal obj As OyDPLUSMaestros.TipoNegocioXEspecie)
        Me.uspOyDNet_Maestros_TipoNegocioXEspecie_Eliminar(obj.ID, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertTipoNegocioXTipoProducto(ByVal obj As OyDPLUSMaestros.TipoNegocioXTipoProducto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoNegocioXTipoProducto_Actualizar(p1, obj.TipoNegocio, obj.TipoProducto, obj.IDComitente, obj.Perfil, CType(obj.ValorMaxNegociacion, System.Nullable(Of Double)), CType(obj.PorcentajePatrimonioTecnico, System.Nullable(Of Double)), obj.Usuario, CType(obj.PermiteNegociar, System.Nullable(Of Boolean)), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateTipoNegocioXTipoProducto(ByVal obj As OyDPLUSMaestros.TipoNegocioXTipoProducto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoNegocioXTipoProducto_Actualizar(p1, obj.TipoNegocio, obj.TipoProducto, obj.IDComitente, obj.Perfil, CType(obj.ValorMaxNegociacion, System.Nullable(Of Double)), CType(obj.PorcentajePatrimonioTecnico, System.Nullable(Of Double)), obj.Usuario, CType(obj.PermiteNegociar, System.Nullable(Of Boolean)), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteTipoNegocioXTipoProducto(ByVal obj As OyDPLUSMaestros.TipoNegocioXTipoProducto)
        Me.uspOyDNet_Maestros_TipoNegocioXTipoProducto_Eliminar(obj.ID, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertCertificacionesXRecepto(ByVal obj As OyDPLUSMaestros.CertificacionesXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_CertificacionesXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.CodigoCertificacion, CType(obj.FechaInicial, System.Nullable(Of Date)), CType(obj.FechaFinal, System.Nullable(Of Date)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateCertificacionesXRecepto(ByVal obj As OyDPLUSMaestros.CertificacionesXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_CertificacionesXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.CodigoCertificacion, CType(obj.FechaInicial, System.Nullable(Of Date)), CType(obj.FechaFinal, System.Nullable(Of Date)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteCertificacionesXRecepto(ByVal obj As OyDPLUSMaestros.CertificacionesXRecepto)
        Me.uspOyDNet_Maestros_CertificacionesXReceptor_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertConceptosXRecepto(ByVal obj As OyDPLUSMaestros.ConceptosXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ConceptosXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.IdConcepto, obj.Prioridad, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateConceptosXRecepto(ByVal obj As OyDPLUSMaestros.ConceptosXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ConceptosXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.IdConcepto, obj.Prioridad, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteConceptosXRecepto(ByVal obj As OyDPLUSMaestros.ConceptosXRecepto)
        Me.uspOyDNet_Maestros_ConceptosXReceptor_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertConfiguracionesAdicionalesRecepto(ByVal obj As OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        Me.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Actualizar(obj.CodigoReceptor, obj.TipoOrden, obj.ExtensionDefecto, obj.TipoOrdenDefecto, CType(obj.EnrutaBus, System.Nullable(Of Boolean)), CType(obj.PorcentajePatrimonioTecnico, System.Nullable(Of Double)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub UpdateConfiguracionesAdicionalesRecepto(ByVal obj As OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        Me.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Actualizar(obj.CodigoReceptor, obj.TipoOrden, obj.ExtensionDefecto, obj.TipoOrdenDefecto, CType(obj.EnrutaBus, System.Nullable(Of Boolean)), CType(obj.PorcentajePatrimonioTecnico, System.Nullable(Of Double)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub DeleteConfiguracionesAdicionalesRecepto(ByVal obj As OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        Me.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Eliminar(obj.CodigoReceptor, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertParametrosRecepto(ByVal obj As OyDPLUSMaestros.ParametrosRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ParametrosReceptor_Actualizar(p1, obj.CodigoReceptor, obj.Topico, obj.Valor, obj.Prioridad, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateParametrosRecepto(ByVal obj As OyDPLUSMaestros.ParametrosRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ParametrosReceptor_Actualizar(p1, obj.CodigoReceptor, obj.Topico, obj.Valor, obj.Prioridad, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteParametrosRecepto(ByVal obj As OyDPLUSMaestros.ParametrosRecepto)
        Me.uspOyDNet_Maestros_ParametrosReceptor_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertReceptoresClientesAutorizado(ByVal obj As OyDPLUSMaestros.ReceptoresClientesAutorizado)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ReceptoresClientesAutorizados_Actualizar(p1, obj.CodigoReceptorCliente, obj.CodigoReceptorTercero, obj.IDComitente, CType(obj.FechaInicial, System.Nullable(Of Date)), CType(obj.FechaFinal, System.Nullable(Of Date)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateReceptoresClientesAutorizado(ByVal obj As OyDPLUSMaestros.ReceptoresClientesAutorizado)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ReceptoresClientesAutorizados_Actualizar(p1, obj.CodigoReceptorCliente, obj.CodigoReceptorTercero, obj.IDComitente, CType(obj.FechaInicial, System.Nullable(Of Date)), CType(obj.FechaFinal, System.Nullable(Of Date)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteReceptoresClientesAutorizado(ByVal obj As OyDPLUSMaestros.ReceptoresClientesAutorizado)
        Me.uspOyDNet_Maestros_ReceptoresClientesAutorizados_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertTipoNegocioXRecepto(ByVal obj As OyDPLUSMaestros.TipoNegocioXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoNegocioXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.CodigoTipoNegocio, CType(obj.ValorMaxNegociacion, System.Nullable(Of Double)), obj.Prioridad, CType(obj.PorcentajeComision, System.Nullable(Of Double)), CType(obj.ValorComision, System.Nullable(Of Double)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateTipoNegocioXRecepto(ByVal obj As OyDPLUSMaestros.TipoNegocioXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoNegocioXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.CodigoTipoNegocio, CType(obj.ValorMaxNegociacion, System.Nullable(Of Double)), obj.Prioridad, CType(obj.PorcentajeComision, System.Nullable(Of Double)), CType(obj.ValorComision, System.Nullable(Of Double)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteTipoNegocioXRecepto(ByVal obj As OyDPLUSMaestros.TipoNegocioXRecepto)
        Me.uspOyDNet_Maestros_TipoNegocioXReceptor_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertTipoProductoXRecepto(ByVal obj As OyDPLUSMaestros.TipoProductoXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoProductoXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.TipoProducto, obj.Prioridad, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateTipoProductoXRecepto(ByVal obj As OyDPLUSMaestros.TipoProductoXRecepto)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoProductoXReceptor_Actualizar(p1, obj.CodigoReceptor, obj.TipoProducto, obj.Prioridad, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteTipoProductoXRecepto(ByVal obj As OyDPLUSMaestros.TipoProductoXRecepto)
        Me.uspOyDNet_Maestros_TipoProductoXReceptor_Eliminar(obj.ID, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertRN_ConfiguracionNivelAtribucio(ByVal obj As OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Actualizar(p1, obj.Regla, obj.TipoDocumento, obj.NivelAprobacion, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateRN_ConfiguracionNivelAtribucio(ByVal obj As OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Actualizar(p1, obj.Regla, obj.TipoDocumento, obj.NivelAprobacion, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteRN_ConfiguracionNivelAtribucio(ByVal obj As OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        Me.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Eliminar(obj.ID, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertCosto(ByVal obj As OyDPLUSMaestros.Costo)
        Dim p1 As Integer = obj.Idcosto
        Me.uspOyDNet_Costos_Actualizar(p1, obj.CodigoFormapago, obj.CodigoTipoCheque, obj.CodigoTipoCruce, CType(obj.Valor, System.Nullable(Of Decimal)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.Idcosto = p1
    End Sub

    Private Sub UpdateCosto(ByVal obj As OyDPLUSMaestros.Costo)
        Dim p1 As Integer = obj.Idcosto
        Me.uspOyDNet_Costos_Actualizar(p1, obj.CodigoFormapago, obj.CodigoTipoCheque, obj.CodigoTipoCruce, CType(obj.Valor, System.Nullable(Of Decimal)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
        obj.Idcosto = p1
    End Sub

    Private Sub DeleteCosto(ByVal obj As OyDPLUSMaestros.Costo)
        Me.uspOyDNet_Costos_Eliminar(obj.Idcosto, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertTipoProductoXEspeci(ByVal obj As OyDPLUSMaestros.TipoProductoXEspeci)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoProductoXEspecie_Actualizar(p1, obj.CodigoTipoProducto, obj.IDEspecie, CType(obj.ValorMaxNegociacion, System.Nullable(Of Double)), CType(obj.PermiteNegociar, System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.CrucePorFaciales, System.Nullable(Of Boolean)))
        obj.ID = p1
    End Sub

    Private Sub UpdateTipoProductoXEspeci(ByVal obj As OyDPLUSMaestros.TipoProductoXEspeci)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_TipoProductoXEspecie_Actualizar(p1, obj.CodigoTipoProducto, obj.IDEspecie, CType(obj.ValorMaxNegociacion, System.Nullable(Of Double)), CType(obj.PermiteNegociar, System.Nullable(Of Boolean)), obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.CrucePorFaciales, System.Nullable(Of Boolean)))
        obj.ID = p1
    End Sub

    Private Sub DeleteTipoProductoXEspeci(ByVal obj As OyDPLUSMaestros.TipoProductoXEspeci)
        Me.uspOyDNet_Maestros_TipoProductoXEspecie_Eliminar(obj.ID, CType(Nothing, String), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertControlHorario(ByVal obj As OyDPLUSMaestros.ControlHorario)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ControlHorarios_Actualizar(p1, obj.Modulo, obj.TipoNegocio, obj.TipoOrden, obj.TipoProducto, obj.Instruccion, obj.HoraInicio, obj.HoraFin, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub UpdateControlHorario(ByVal obj As OyDPLUSMaestros.ControlHorario)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ControlHorarios_Actualizar(p1, obj.Modulo, obj.TipoNegocio, obj.TipoOrden, obj.TipoProducto, obj.Instruccion, obj.HoraInicio, obj.HoraFin, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub DeleteControlHorario(ByVal obj As OyDPLUSMaestros.ControlHorario)
        Dim p1 As Integer = obj.ID
        Me.uspOyDNet_Maestros_ControlHorarios_Eliminar(p1, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1
    End Sub

    Private Sub InsertClientesRelacionados(ByVal obj As OyDPLUSMaestros.ClientesRelacionados)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOyDNet_Maestros_ClientesRelacionados_Actualizar(p1, obj.TipoIdCliente, obj.NroDocumentoCliente, obj.TipoIdClienteRelacionado, obj.NroDocumentoClienteRelacionado, obj.TipoRelacion, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateClientesRelacionados(ByVal obj As OyDPLUSMaestros.ClientesRelacionados)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOyDNet_Maestros_ClientesRelacionados_Actualizar(p1, obj.TipoIdCliente, obj.NroDocumentoCliente, obj.TipoIdClienteRelacionado, obj.NroDocumentoClienteRelacionado, obj.TipoRelacion, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub DeleteClientesRelacionados(ByVal obj As OyDPLUSMaestros.ClientesRelacionados)
        Me.uspOyDNet_Maestros_ClientesRelacionados_EliminarRelacion(CType(obj.ID, System.Nullable(Of Integer)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertPortalioClienteXTipoNegocio(ByVal obj As OyDPLUSMaestros.PortalioClienteXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Actualizar(p1, obj.TipoProducto, obj.PerfilRiesgo, obj.CodigoOYD, obj.TipoNegocio, CType(obj.Porcentaje, System.Nullable(Of Double)), CType(obj.ValorMaximoCupo, System.Nullable(Of Double)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub UpdatePortalioClienteXTipoNegocio(ByVal obj As OyDPLUSMaestros.PortalioClienteXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Actualizar(p1, obj.TipoProducto, obj.PerfilRiesgo, obj.CodigoOYD, obj.TipoNegocio, CType(obj.Porcentaje, System.Nullable(Of Double)), CType(obj.ValorMaximoCupo, System.Nullable(Of Double)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub DeletePortalioClienteXTipoNegocio(ByVal obj As OyDPLUSMaestros.PortalioClienteXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Eliminar(p1, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub InsertDistribucionComisionXTipoNegocio(ByVal obj As OyDPLUSMaestros.DistribucionComisionXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Actualizar(p1, obj.TipoNegocio, obj.TipoProducto, obj.PerfilRiesgo, obj.CodigoOYD, CType(obj.LimiteInferior, System.Nullable(Of Double)), CType(obj.LimiteSuperior, System.Nullable(Of Double)), CType(obj.ComisionMinima, System.Nullable(Of Double)), CType(obj.ComisionMaxima, System.Nullable(Of Double)), CType(obj.ComisionEnPorcentaje, System.Nullable(Of Boolean)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateDistribucionComisionXTipoNegocio(ByVal obj As OyDPLUSMaestros.DistribucionComisionXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Actualizar(p1, obj.TipoNegocio, obj.TipoProducto, obj.PerfilRiesgo, obj.CodigoOYD, CType(obj.LimiteInferior, System.Nullable(Of Double)), CType(obj.LimiteSuperior, System.Nullable(Of Double)), CType(obj.ComisionMinima, System.Nullable(Of Double)), CType(obj.ComisionMaxima, System.Nullable(Of Double)), CType(obj.ComisionEnPorcentaje, System.Nullable(Of Boolean)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub DeleteDistribucionComisionXTipoNegocio(ByVal obj As OyDPLUSMaestros.DistribucionComisionXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Eliminar(p1, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub InsertCupoReceptorXTipoNegocio(ByVal obj As OyDPLUSMaestros.CupoReceptorXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Actualizar(p1, obj.IDSucursal, obj.IDMesa, obj.IDReceptor, obj.TipoNegocio, CType(obj.PorcentajeCupo, System.Nullable(Of Double)), CType(obj.ValorMaximoCupo, System.Nullable(Of Double)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateCupoReceptorXTipoNegocio(ByVal obj As OyDPLUSMaestros.CupoReceptorXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Actualizar(p1, obj.IDSucursal, obj.IDMesa, obj.IDReceptor, obj.TipoNegocio, CType(obj.PorcentajeCupo, System.Nullable(Of Double)), CType(obj.ValorMaximoCupo, System.Nullable(Of Double)), obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub DeleteCupoReceptorXTipoNegocio(ByVal obj As OyDPLUSMaestros.CupoReceptorXTipoNegocio)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Eliminar(p1, obj.Usuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateAliasEspecie(ByVal obj As OyDPLUSMaestros.AliasEspecie)
        Me.uspOyDNet_Maestros_AliasEspecies_Actualizar(obj.IDEspecies, obj.AliasEspecie, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub InsertBancosNacionalesFondos(ByVal obj As OyDPLUSMaestros.BancosNacionalesFondos)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOyDNet_Maestros_BancosNacionalesFondos_Actualizar(p1, CType(obj.IDBanco, System.Nullable(Of Integer)), obj.NroCuenta, obj.TipoCuenta, obj.TipoDocumentoTitular, obj.NroDocumentoTitular, obj.NombreTitular, obj.IDCodigoBancoSafyr, obj.CarteraColectiva, obj.Usuario, obj.InfoSesion)
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub UpdateBancosNacionalesFondos(ByVal obj As OyDPLUSMaestros.BancosNacionalesFondos)
        Dim p1 As System.Nullable(Of Integer) = obj.ID
        Me.uspOyDNet_Maestros_BancosNacionalesFondos_Actualizar(p1, CType(obj.IDBanco, System.Nullable(Of Integer)), obj.NroCuenta, obj.TipoCuenta, obj.TipoDocumentoTitular, obj.NroDocumentoTitular, obj.NombreTitular, obj.IDCodigoBancoSafyr, obj.CarteraColectiva, obj.Usuario, obj.InfoSesion)
        obj.ID = p1.GetValueOrDefault
    End Sub

    Private Sub DeleteBancosNacionalesFondos(ByVal obj As OyDPLUSMaestros.BancosNacionalesFondos)
        Me.uspOyDNet_Maestros_BancosNacionalesFondos_Eliminar(CType(obj.ID, System.Nullable(Of Integer)), obj.Usuario, obj.InfoSesion)
    End Sub

    Private Sub DeletePreciosTick(ByVal obj As OyDPLUSMaestros.PreciosTick)
        Dim p1 As String = obj.strMsgValidacion
        Me.uspOyDNet_Maestros_PreciosTick_Eliminar(CType(obj.intIDPreciosTick, System.Nullable(Of Integer)), obj.strUsuario, obj.strInfoSesion, CType(Nothing, System.Nullable(Of Byte)), p1)
        obj.strMsgValidacion = p1
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Mensajes_Actualizar")>
    Public Function uspOyDNet_Maestros_Mensajes_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDMensaje As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCodigoMensaje As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrMensaje As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrMensajeConReempl As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDMensaje, pstrCodigoMensaje, pstrMensaje, pstrMensajeConReempl, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintIDMensaje = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Mensajes_Eliminar")>
    Public Function uspOyDNet_Maestros_Mensajes_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDMensaje As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDMensaje, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Mensajes_Consultar")>
    Public Function uspOyDNet_Maestros_Mensajes_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCodigoMensaje As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.Mensaje)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoMensaje, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.Mensaje))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Mensajes_Filtrar")>
    Public Function uspOyDNet_Maestros_Mensajes_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.Mensaje)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.Mensaje))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Reglas_Actualizar")>
    Public Function uspOyDNet_Maestros_Reglas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDRegla As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCodigoRegla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrDescripcionRegla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreCorto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPrioridad As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCodigoTipoRegla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByVal pstrCausasJustificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombreProcedimiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByVal pstrParametros As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDRegla, pstrCodigoRegla, pstrDescripcionRegla, pstrModulo, pstrNombreCorto, pintPrioridad, pstrCodigoTipoRegla, pstrCausasJustificacion, pstrNombreProcedimiento, pstrParametros, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintIDRegla = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Reglas_Eliminar")>
    Public Function uspOyDNet_Maestros_Reglas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDRegla As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDRegla, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Reglas_Consultar")>
    Public Function uspOyDNet_Maestros_Reglas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrCodigoRegla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombreCorto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogMotorCalculos As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.Regla)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoRegla, pstrNombreCorto, plogMotorCalculos, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.Regla))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_Reglas_Filtrar")>
    Public Function uspOyDNet_Maestros_Reglas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.Regla)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.Regla))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_MensajesReglas_Actualizar")>
    Public Function uspOyDNet_Maestros_MensajesReglas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDMensajeRegla As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDRegla As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDMensaje As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDTipoMensaje As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDMensajeRegla, pintIDRegla, pintIDMensaje, pintIDTipoMensaje, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintIDMensajeRegla = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_MensajesReglas_Eliminar")>
    Public Function uspOyDNet_Maestros_MensajesReglas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDMensajeRegla As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDMensajeRegla, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_MensajesReglas_Consultar")>
    Public Function uspOyDNet_Maestros_MensajesReglas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDRegla As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDMensaje As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.MensajesRegla)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDRegla, pintIDMensaje, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.MensajesRegla))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_MensajesReglas_Filtrar")>
    Public Function uspOyDNet_Maestros_MensajesReglas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.MensajesRegla)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.MensajesRegla))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocio_Consultar")>
    Public Function uspOyDNet_Maestros_TipoNegocio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigo", DbType:="varchar(60)")> ByVal strCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), strCodigo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocio_Filtrar")>
    Public Function uspOyDNet_Maestros_TipoNegocio_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocio_Actualizar")>
    Public Function uspOyDNet_Maestros_TipoNegocio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigo", DbType:="varchar(60)")> ByVal strCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pdblPorcentajeMinComision", DbType:="Float NULL")> ByVal dblPorcentajeMinComision As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, strCodigo, dblPorcentajeMinComision, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_CertificacionXTipoNegocio_Actualizar")>
    Public Function uspOyDNet_Maestros_CertificacionXTipoNegocio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrCodigoCertificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrCodigoTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoCertificacion, pstrCodigoTipoNegocio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_CertificacionXTipoNegocio_Eliminar")>
    Public Function uspOyDNet_Maestros_CertificacionXTipoNegocio_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_CertificacionXTipoNegocio_Consultar")>
    Public Function uspOyDNet_Maestros_CertificacionXTipoNegocio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.CertificacionXTipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.CertificacionXTipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_DocumentoXTipoNegocio_Actualizar")>
    Public Function uspOyDNet_Maestros_DocumentoXTipoNegocio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="smallint")> ByVal pintCodDocumento As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrTipoOperacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrTipoNegocio, pintCodDocumento, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrTipoOperacion)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_DocumentoXTipoNegocio_Eliminar")>
    Public Function uspOyDNet_Maestros_DocumentoXTipoNegocio_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_DocumentoXTipoNegocio_Consultar")>
    Public Function uspOyDNet_Maestros_DocumentoXTipoNegocio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.DocumentoXTipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.DocumentoXTipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXEspecie_Actualizar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXEspecie_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogManejaISIN As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblMaxValorCantidad As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogPermiteNegociar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentajeGarantia As System.Nullable(Of Double)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrTipoNegocio, pstrIDEspecie, plogManejaISIN, pdblMaxValorCantidad, plogPermiteNegociar, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pdblPorcentajeGarantia)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXEspecie_Eliminar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXEspecie_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXEspecie_Consultar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXEspecie_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoNegocioXEspecie)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoNegocioXEspecie))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXTipoProducto_Actualizar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXTipoProducto_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrPerfil As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorMaxNegociacion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentajePatrimonioTecnico As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogPermiteNegociar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrTipoNegocio, pstrTipoProducto, plngIDComitente, pstrPerfil, pdblValorMaxNegociacion, pdblPorcentajePatrimonioTecnico, pstrUsuario, plogPermiteNegociar, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXTipoProducto_Eliminar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXTipoProducto_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXTipoProducto_Consultar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXTipoProducto_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoNegocioXTipoProducto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoNegocioXTipoProducto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Actualizar")>
    Public Function uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrExtensionDefecto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoOrdenDefecto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEnrutaBus As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentajePatrimonioTecnico As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoReceptor, pstrTipoOrden, pstrExtensionDefecto, pstrTipoOrdenDefecto, plogEnrutaBus, pdblPorcentajePatrimonioTecnico, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Eliminar")>
    Public Function uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Consultar")>
    Public Function uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Filtrar")>
    Public Function uspOyDNet_Maestros_ConfiguracionesAdicionalesReceptor_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ConfiguracionesAdicionalesRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_CertificacionesXReceptor_Actualizar")>
    Public Function uspOyDNet_Maestros_CertificacionesXReceptor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrCodigoCertificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaInicial As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaFinal As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoReceptor, pstrCodigoCertificacion, pdtmFechaInicial, pdtmFechaFinal, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_CertificacionesXReceptor_Eliminar")>
    Public Function uspOyDNet_Maestros_CertificacionesXReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_CertificacionesXReceptor_Consultar")>
    Public Function uspOyDNet_Maestros_CertificacionesXReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.CertificacionesXRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.CertificacionesXRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConceptosXReceptor_Actualizar")>
    Public Function uspOyDNet_Maestros_ConceptosXReceptor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdConcepto As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPrioridad As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoReceptor, plngIdConcepto, pintPrioridad, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConceptosXReceptor_Eliminar")>
    Public Function uspOyDNet_Maestros_ConceptosXReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ConceptosXReceptor_Consultar")>
    Public Function uspOyDNet_Maestros_ConceptosXReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ConceptosXRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ConceptosXRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ParametrosReceptor_Actualizar")>
    Public Function uspOyDNet_Maestros_ParametrosReceptor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrValor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPrioridad As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoReceptor, pstrTopico, pstrValor, pintPrioridad, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ParametrosReceptor_Eliminar")>
    Public Function uspOyDNet_Maestros_ParametrosReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ParametrosReceptor_Consultar")>
    Public Function uspOyDNet_Maestros_ParametrosReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ParametrosRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ParametrosRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ReceptoresClientesAutorizados_Actualizar")>
    Public Function uspOyDNet_Maestros_ReceptoresClientesAutorizados_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptorCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptorTercero As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaInicial As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFechaFinal As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoReceptorCliente, pstrCodigoReceptorTercero, plngIDComitente, pdtmFechaInicial, pdtmFechaFinal, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ReceptoresClientesAutorizados_Eliminar")>
    Public Function uspOyDNet_Maestros_ReceptoresClientesAutorizados_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ReceptoresClientesAutorizados_Consultar")>
    Public Function uspOyDNet_Maestros_ReceptoresClientesAutorizados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ReceptoresClientesAutorizado)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ReceptoresClientesAutorizado))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXReceptor_Actualizar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXReceptor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrCodigoTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorMaxNegociacion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPrioridad As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentajeComision As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorComision As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoReceptor, pstrCodigoTipoNegocio, pdblValorMaxNegociacion, pintPrioridad, pdblPorcentajeComision, pdblValorComision, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXReceptor_Eliminar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoNegocioXReceptor_Consultar")>
    Public Function uspOyDNet_Maestros_TipoNegocioXReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoNegocioXRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoNegocioXRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProductoXReceptor_Actualizar")>
    Public Function uspOyDNet_Maestros_TipoProductoXReceptor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrCodigoReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintPrioridad As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoReceptor, pstrTipoProducto, pintPrioridad, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProductoXReceptor_Eliminar")>
    Public Function uspOyDNet_Maestros_TipoProductoXReceptor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProductoXReceptor_Consultar")>
    Public Function uspOyDNet_Maestros_TipoProductoXReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoProductoXRecepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoProductoXRecepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_ClientesReceptor_Consultar")>
    Public Function uspOyDNet_ClientesReceptor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ClientesReceptor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ClientesReceptor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Actualizar")>
    Public Function uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDRegla As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDTipoDocumento As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDNivelAtribucion As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pintIDRegla, pintIDTipoDocumento, pintIDNivelAtribucion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Eliminar")>
    Public Function uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Consultar")>
    Public Function uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDRegla As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDTipoDocumento As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDNivelAtribucion As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDRegla, pintIDTipoDocumento, pintIDNivelAtribucion, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Filtrar")>
    Public Function uspOyDNet_Maestros_RN_ConfiguracionNivelAtribucion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.RN_ConfiguracionNivelAtribucio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_RN_TiposDocumento_Consultar")>
    Public Function uspOyDNet_Maestros_RN_TiposDocumento_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.RN_TiposDocumento)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.RN_TiposDocumento))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_RN_NivelesAtribucion_Consultar")>
    Public Function uspOyDNet_Maestros_RN_NivelesAtribucion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.RN_NivelesAtribucion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.RN_NivelesAtribucion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Costos_Actualizar")>
    Public Function uspOyDNet_Costos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdcosto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrCodigoFormapago As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrCodigoTipoCheque As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrCodigoTipoCruce As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal pnumValor As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdcosto, pstrCodigoFormapago, pstrCodigoTipoCheque, pstrCodigoTipoCruce, pnumValor, pstrUsuario, infosesion, pintErrorPersonalizado)
        pintIdcosto = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Costos_Eliminar")>
    Public Function uspOyDNet_Costos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdcosto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdcosto, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Costos_Consultar")>
    Public Function uspOyDNet_Costos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigoFormapago", DbType:="varchar(2)")> ByVal strCodigoFormapago As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigoTipoCheque", DbType:="varchar(2)")> ByVal strCodigoTipoCheque As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigoTipoCruce", DbType:="varchar(2)")> ByVal strCodigoTipoCruce As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.Costo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), strCodigoFormapago, strCodigoTipoCheque, strCodigoTipoCruce, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.Costo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Costos_Filtrar")>
    Public Function uspOyDNet_Costos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.Costo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.Costo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProductoXEspecie_Actualizar")>
    Public Function uspOyDNet_Maestros_TipoProductoXEspecie_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrCodigoTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblValorMaxNegociacion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogPermiteNegociar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCrucePorFaciales As System.Nullable(Of Boolean)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrCodigoTipoProducto, pstrIDEspecie, pdblValorMaxNegociacion, plogPermiteNegociar, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogCrucePorFaciales)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProductoXEspecie_Eliminar")>
    Public Function uspOyDNet_Maestros_TipoProductoXEspecie_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProductoXEspecie_Consultar")>
    Public Function uspOyDNet_Maestros_TipoProductoXEspecie_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoProductoXEspeci)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoProducto, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoProductoXEspeci))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProducto_Filtrar")>
    Public Function uspOyDNet_Maestros_TipoProducto_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoProducto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoProducto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_TipoProducto_Consultar")>
    Public Function uspOyDNet_Maestros_TipoProducto_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.TipoProducto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoProducto, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.TipoProducto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.usp_Valida4porlmil_OyDNet")>
    Public Function usp_Valida4porlmil_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByRef strvalor As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrParametro, strvalor)
        strvalor = CType(result.GetParameterValue(1), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ControlHorarios_Actualizar")>
    Public Function uspOyDNet_Maestros_ControlHorarios_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pintModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pintTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pintTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pintInstrucciones As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pstrHoraInicio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pstrHoraFin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pintModulo, pstrTipoNegocio, pintTipoOrden, pintTipoProducto, pintInstrucciones, pstrHoraInicio, pstrHoraFin, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ControlHorarios_Eliminar")>
    Public Function uspOyDNet_Maestros_ControlHorarios_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), Integer)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ControlHorarios_Consultar")>
    Public Function uspOyDNet_Maestros_ControlHorarios_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pintModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pintTipoOrden As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4)")> ByVal pintTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8)")> ByVal pintInstruccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ControlHorario)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintModulo, pstrTipoNegocio, pintTipoOrden, pintTipoProducto, pintInstruccion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ControlHorario))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ControlHorarios_Filtrar")>
    Public Function uspOyDNet_Maestros_ControlHorarios_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ControlHorario)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ControlHorario))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_Actualizar")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoIdCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumentoCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoIdClienteRelacionado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumentoClienteRelacionado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoRelacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrTipoIdCliente, pstrNroDocumentoCliente, pstrTipoIdClienteRelacionado, pstrNroDocumentoClienteRelacionado, pstrTipoRelacion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_Eliminar")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNroDocumento, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_EliminarRelacion")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_EliminarRelacion(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_Filtrar")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ClientesRelacionadosEncabezado)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ClientesRelacionadosEncabezado))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_Consultar")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrTipoRelacion As String) As ISingleResult(Of OyDPLUSMaestros.ClientesRelacionadosEncabezado)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoIdentificacion, pstrNroDocumento, pstrNombre, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrTipoRelacion)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ClientesRelacionadosEncabezado))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_ConsultarRelaciones")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_ConsultarRelaciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoIDCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ClientesRelacionados)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoIDCliente, pstrNroDocumento, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ClientesRelacionados))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ClientesRelacionados_ValidarRelaciones")>
    Public Function uspOyDNet_Maestros_ClientesRelacionados_ValidarRelaciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoIDCliente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrRelacionados As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ValidacionClientesRelacionados)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoIDCliente, pstrNroDocumento, pstrRelacionados, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ValidacionClientesRelacionados))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Filtrar")>
    Public Function uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Consultar")>
    Public Function uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrPerfilRiesgo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoProducto, pstrPerfilRiesgo, pstrIDComitente, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.PortalioClienteXTipoNegocioPrincipal))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Actualizar")>
    Public Function uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrPerfilRiesgo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentaje As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorMaxCupo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrTipoProducto, pstrPerfilRiesgo, pstrIDComitente, pstrTipoNegocio, pdblPorcentaje, pdblValorMaxCupo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Eliminar")>
    Public Function uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Consultar")>
    Public Function uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.DistribucionComisionXTipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoNegocio, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.DistribucionComisionXTipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Actualizar")>
    Public Function uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrPerfilRiesgo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrCodigoOYD As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblLimiteInferior As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblLimiteSuperior As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComisionMinima As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblComisionMaxima As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogComisionEnPorcentaje As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrTipoNegocio, pstrTipoProducto, pstrPerfilRiesgo, pstrCodigoOYD, pdblLimiteInferior, pdblLimiteSuperior, pdblComisionMinima, pdblComisionMaxima, plogComisionEnPorcentaje, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Eliminar")>
    Public Function uspOYDNet_Maestros_DistribucionComisionXTipoNegocio_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Filtrar")>
    Public Function uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Consultar")>
    Public Function uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDSucursal As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDMesa As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDSucursal, pintIDMesa, pstrReceptor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.CupoReceptorXTipoNegocioPrincipal))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Actualizar")>
    Public Function uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDSucursal As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDMesa As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrIDReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoNegocio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentajeCupo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorMaximoCupo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pintIDSucursal, pintIDMesa, pstrIDReceptor, pstrTipoNegocio, pdblPorcentajeCupo, pdblValorMaximoCupo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Eliminar")>
    Public Function uspOYDNet_Maestros_CupoReceptorXTipoNegocio_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Int32
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Int32)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_ConsultarRelaciones")>
    Public Function uspOYDNet_Maestros_PortafolioClienteXTipoNegocio_ConsultarRelaciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrTipoProducto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrPerfilRiesgo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.PortalioClienteXTipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoProducto, pstrPerfilRiesgo, pstrIDComitente, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.PortalioClienteXTipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOYDNet_Maestros_CupoReceptorXTipoNegocio_ConsultarRelaciones")>
    Public Function uspOYDNet_Maestros_CupoReceptorXTipoNegocio_ConsultarRelaciones(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDSucursal As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDMesa As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.CupoReceptorXTipoNegocio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDSucursal, pintIDMesa, pstrReceptor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.CupoReceptorXTipoNegocio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_AliasEspecies_Actualizar")>
    Public Function uspOyDNet_Maestros_AliasEspecies_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEspecies As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrAlias As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDEspecies, pstrAlias, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_AliasEspecies_Consultar")>
    Public Function uspOyDNet_Maestros_AliasEspecies_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEspecies As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNemotecnico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrAlias As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.AliasEspecie)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDEspecies, pstrNemotecnico, pstrNombre, pstrAlias, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.AliasEspecie))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_AliasEspecies_Filtrar")>
    Public Function uspOyDNet_Maestros_AliasEspecies_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.AliasEspecie)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.AliasEspecie))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_BancosNacionalesFondos_Actualizar")>
    Public Function uspOyDNet_Maestros_BancosNacionalesFondos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDBanco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNroCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrTipoCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8)")> ByVal pstrTipoDocumentoTitular As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrNroDocumentoTitular As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrNombreTitular As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCodigoBancoSafyr As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100)")> ByVal pstrCarteraColectiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pintIDBanco, pstrNroCuenta, pstrTipoCuenta, pstrTipoDocumentoTitular, pstrNroDocumentoTitular, pstrNombreTitular, pintIDCodigoBancoSafyr, pstrCarteraColectiva, pstrUsuario, pstrInfoSesion)
        pintID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_BancosNacionalesFondos_Eliminar")>
    Public Function uspOyDNet_Maestros_BancosNacionalesFondos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintID, pstrUsuario, pstrInfoSesion)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_BancosNacionalesFondos_Filtrar")>
    Public Function uspOyDNet_Maestros_BancosNacionalesFondos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.BancosNacionalesFondos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.BancosNacionalesFondos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_BancosNacionalesFondos_Consultar")>
    Public Function uspOyDNet_Maestros_BancosNacionalesFondos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDBanco As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNroCuenta As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.BancosNacionalesFondos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDBanco, pstrNroCuenta, pstrNroDocumento, pstrNombre, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.BancosNacionalesFondos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConceptosTesoreria_Filtrar")>
    Public Function uspOyDNet_Maestros_ConceptosTesoreria_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ConceptosTesoreri)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ConceptosTesoreri))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DoctosRequeridos_Filtrar")>
    Public Function uspOyDNet_Maestros_DoctosRequeridos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.DoctosRequerido)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.DoctosRequerido))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ReceptorActivo_Consultar")>
    Public Function uspOyDNet_Maestros_ReceptorActivo_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(4)")> ByVal pstrReceptor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.ReceptorActivo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrReceptor, pstrUsuario, infosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.ReceptorActivo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_PreciosTick_Actualizar")>
    Public Function uspOyDNet_Maestros_PreciosTick_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDPreciosTick As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPrecioInicial As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPrecioFinal As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblMultiplos As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDPreciosTick, pdblPrecioInicial, pdblPrecioFinal, pdblMultiplos, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pintIDPreciosTick = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        pstrMsgValidacion = CType(result.GetParameterValue(7), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_PreciosTick_Eliminar")>
    Public Function uspOyDNet_Maestros_PreciosTick_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDPreciosTick As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDPreciosTick, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(4), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_PreciosTick_Filtrar")>
    Public Function uspOyDNet_Maestros_PreciosTick_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.PreciosTick)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.PreciosTick))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_PreciosTick_Consultar")>
    Public Function uspOyDNet_Maestros_PreciosTick_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPrecioInicial As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPrecioFinal As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblMultiplos As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.PreciosTick)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, pdblPrecioInicial, pdblPrecioFinal, pdblMultiplos, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.PreciosTick))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ControlHorariosFondos_Consultar")>
    Public Function uspOyDNet_Maestros_ControlHorariosFondos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodigoFondo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrTipoMovimiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.tblControlHorarioFondos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrCodigoFondo, pstrTipoMovimiento, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.tblControlHorarioFondos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_ControlHorariosFondos_Filtrar")>
    Public Function uspOyDNet_Maestros_ControlHorariosFondos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.tblControlHorarioFondos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.tblControlHorarioFondos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_FondosFormasPagos_Consultar")>
    Public Function uspOyDNet_Maestros_FondosFormasPagos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrTipoMovimiento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrTipoTransaccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.tblFondosFormasPagos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrDescripcion, pstrTipoMovimiento, pstrTipoTransaccion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.tblFondosFormasPagos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUS.uspOyDNet_Maestros_FondosFormasPagos_Filtrar")>
    Public Function uspOyDNet_Maestros_FondosFormasPagos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.tblFondosFormasPagos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.tblFondosFormasPagos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspGrupoOperador_Consultar")>
    Public Function uspGrupoOperador_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrInfosesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrFiltro As String) As ISingleResult(Of OyDPLUSMaestros.GrupoOperadores)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNombre, pstrUsuario, infoSesion, pintErrorPersonalizado, pstrFiltro)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.GrupoOperadores))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspGrupoOperador_Modificar")>
    Public Function uspGrupoOperador_Modificar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDGrupoOperador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNombreGrupo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrDetalle As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrInfosesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.GrupoOperadores)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDGrupoOperador, pstrNombreGrupo, pstrDetalle, pstrUsuario, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.GrupoOperadores))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspGrupoOperador_Eliminar")>
    Public Function uspGrupoOperador_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDGrupoOperador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrInfosesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.GrupoOperadores)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDGrupoOperador, pstrUsuario, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.GrupoOperadores))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspDetalleGruposOperadores_Consultar")>
    Public Function uspDetalleGruposOperadores_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDGrupoOperador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrInfosesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.DetalleGrupoOperadores)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDGrupoOperador, pstrUsuario, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.DetalleGrupoOperadores))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspDetalleGruposOperadores_Eliminar")>
    Public Function uspDetalleGruposOperadores_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDGrupoOperador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrInfosesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSMaestros.DetalleGrupoOperadores)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDGrupoOperador, pstrUsuario, infoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSMaestros.DetalleGrupoOperadores))
    End Function
End Class

Namespace OyDPLUSMaestros

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblMensajes")>
    Partial Public Class Mensaje
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDMensaje As Integer

        Private _CodigoMensaje As String

        Private _Mensaje As String

        Private _MensajeConReempl As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDMensajeChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDMensajeChanged()
        End Sub
        Partial Private Sub OnCodigoMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoMensajeChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnMensajeConReemplChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeConReemplChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMensaje", Storage:="_IDMensaje", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDMensaje() As Integer
            Get
                Return Me._IDMensaje
            End Get
            Set
                If (Object.Equals(Me._IDMensaje, Value) = False) Then
                    Me.OnIDMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDMensaje = Value
                    Me.SendPropertyChanged("IDMensaje")
                    Me.OnIDMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoMensaje", Storage:="_CodigoMensaje", DbType:="Varchar(50) NOT NULL", CanBeNull:=False)>
        Public Property CodigoMensaje() As String
            Get
                Return Me._CodigoMensaje
            End Get
            Set
                If (String.Equals(Me._CodigoMensaje, Value) = False) Then
                    Me.OnCodigoMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoMensaje = Value
                    Me.SendPropertyChanged("CodigoMensaje")
                    Me.OnCodigoMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(500) NOT NULL", CanBeNull:=False)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensajeConReempl", Storage:="_MensajeConReempl", DbType:="Varchar(500)")>
        Public Property MensajeConReempl() As String
            Get
                Return Me._MensajeConReempl
            End Get
            Set
                If (String.Equals(Me._MensajeConReempl, Value) = False) Then
                    Me.OnMensajeConReemplChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MensajeConReempl = Value
                    Me.SendPropertyChanged("MensajeConReempl")
                    Me.OnMensajeConReemplChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblReglas")>
    Partial Public Class Regla
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDRegla As Integer

        Private _CodigoRegla As String

        Private _DescripcionRegla As String

        Private _Modulo As String

        Private _NombreCorto As String

        Private _Prioridad As System.Nullable(Of System.Int32)

        Private _CodigoTipoRegla As String

        Private _DescripcionCodigoTipoRegla As String

        Private _CausasJustificacion As String

        Private _NombreProcedimiento As String

        Private _Parametros As String

        Private _MotorCalculos As System.Nullable(Of Boolean)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDReglaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDReglaChanged()
        End Sub
        Partial Private Sub OnCodigoReglaChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReglaChanged()
        End Sub
        Partial Private Sub OnDescripcionReglaChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionReglaChanged()
        End Sub
        Partial Private Sub OnModuloChanging(value As String)
        End Sub
        Partial Private Sub OnModuloChanged()
        End Sub
        Partial Private Sub OnNombreCortoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCortoChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnCodigoTipoReglaChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoReglaChanged()
        End Sub
        Partial Private Sub OnDescripcionCodigoTipoReglaChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionCodigoTipoReglaChanged()
        End Sub
        Partial Private Sub OnCausasJustificacionChanging(value As String)
        End Sub
        Partial Private Sub OnCausasJustificacionChanged()
        End Sub
        Partial Private Sub OnNombreProcedimientoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreProcedimientoChanged()
        End Sub
        Partial Private Sub OnParametrosChanging(value As String)
        End Sub
        Partial Private Sub OnParametrosChanged()
        End Sub
        Partial Private Sub OnMotorCalculosChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnMotorCalculosChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDRegla", Storage:="_IDRegla", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDRegla() As Integer
            Get
                Return Me._IDRegla
            End Get
            Set
                If (Object.Equals(Me._IDRegla, Value) = False) Then
                    Me.OnIDReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDRegla = Value
                    Me.SendPropertyChanged("IDRegla")
                    Me.OnIDReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoRegla", Storage:="_CodigoRegla", DbType:="Varchar(50) NOT NULL", CanBeNull:=False)>
        Public Property CodigoRegla() As String
            Get
                Return Me._CodigoRegla
            End Get
            Set
                If (String.Equals(Me._CodigoRegla, Value) = False) Then
                    Me.OnCodigoReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoRegla = Value
                    Me.SendPropertyChanged("CodigoRegla")
                    Me.OnCodigoReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionRegla", Storage:="_DescripcionRegla", DbType:="Varchar(500)")>
        Public Property DescripcionRegla() As String
            Get
                Return Me._DescripcionRegla
            End Get
            Set
                If (String.Equals(Me._DescripcionRegla, Value) = False) Then
                    Me.OnDescripcionReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionRegla = Value
                    Me.SendPropertyChanged("DescripcionRegla")
                    Me.OnDescripcionReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModulo", Storage:="_Modulo", DbType:="Varchar(20)")>
        Public Property Modulo() As String
            Get
                Return Me._Modulo
            End Get
            Set
                If (String.Equals(Me._Modulo, Value) = False) Then
                    Me.OnModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modulo = Value
                    Me.SendPropertyChanged("Modulo")
                    Me.OnModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCorto", Storage:="_NombreCorto", DbType:="Varchar(50)")>
        Public Property NombreCorto() As String
            Get
                Return Me._NombreCorto
            End Get
            Set
                If (String.Equals(Me._NombreCorto, Value) = False) Then
                    Me.OnNombreCortoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCorto = Value
                    Me.SendPropertyChanged("NombreCorto")
                    Me.OnNombreCortoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int", CanBeNull:=True)>
        Public Property Prioridad() As System.Nullable(Of System.Int32)
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoRegla", Storage:="_CodigoTipoRegla", DbType:="Varchar(30)")>
        Public Property CodigoTipoRegla() As String
            Get
                Return Me._CodigoTipoRegla
            End Get
            Set
                If (String.Equals(Me._CodigoTipoRegla, Value) = False) Then
                    Me.OnCodigoTipoReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoRegla = Value
                    Me.SendPropertyChanged("CodigoTipoRegla")
                    Me.OnCodigoTipoReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionCodigoTipoRegla", Storage:="_DescripcionCodigoTipoRegla", DbType:="Varchar(50)")>
        Public Property DescripcionCodigoTipoRegla() As String
            Get
                Return Me._DescripcionCodigoTipoRegla
            End Get
            Set
                If (String.Equals(Me._DescripcionCodigoTipoRegla, Value) = False) Then
                    Me.OnDescripcionCodigoTipoReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DescripcionCodigoTipoRegla = Value
                    Me.SendPropertyChanged("DescripcionCodigoTipoRegla")
                    Me.OnDescripcionCodigoTipoReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCausasJustificacion", Storage:="_CausasJustificacion", DbType:="Varchar(8000)")>
        Public Property CausasJustificacion() As String
            Get
                Return Me._CausasJustificacion
            End Get
            Set
                If (String.Equals(Me._CausasJustificacion, Value) = False) Then
                    Me.OnCausasJustificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CausasJustificacion = Value
                    Me.SendPropertyChanged("CausasJustificacion")
                    Me.OnCausasJustificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreProcedimiento", Storage:="_NombreProcedimiento", DbType:="Varchar(100)")>
        Public Property NombreProcedimiento() As String
            Get
                Return Me._NombreProcedimiento
            End Get
            Set
                If (String.Equals(Me._NombreProcedimiento, Value) = False) Then
                    Me.OnNombreProcedimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreProcedimiento = Value
                    Me.SendPropertyChanged("NombreProcedimiento")
                    Me.OnNombreProcedimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParametros", Storage:="_Parametros", DbType:="Varchar(8000)")>
        Public Property Parametros() As String
            Get
                Return Me._Parametros
            End Get
            Set
                If (String.Equals(Me._Parametros, Value) = False) Then
                    Me.OnParametrosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Parametros = Value
                    Me.SendPropertyChanged("Parametros")
                    Me.OnParametrosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logMotorCalculos", Storage:="_MotorCalculos", DbType:="Bit")>
        Public Property MotorCalculos() As System.Nullable(Of Boolean)
            Get
                Return Me._MotorCalculos
            End Get
            Set
                If (Me._MotorCalculos.Equals(Value) = False) Then
                    Me.OnMotorCalculosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MotorCalculos = Value
                    Me.SendPropertyChanged("MotorCalculos")
                    Me.OnMotorCalculosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblMensajesReglas")>
    Partial Public Class MensajesRegla
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDMensajeRegla As Integer

        Private _IDRegla As Integer

        Private _NombreRegla As String

        Private _IDMensaje As Integer

        Private _NombreMensaje As String

        Private _IDTipoMensaje As Integer

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDMensajeReglaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDMensajeReglaChanged()
        End Sub
        Partial Private Sub OnIDReglaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDReglaChanged()
        End Sub
        Partial Private Sub OnNombreReglaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReglaChanged()
        End Sub
        Partial Private Sub OnIDMensajeChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDMensajeChanged()
        End Sub
        Partial Private Sub OnNombreMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnNombreMensajeChanged()
        End Sub
        Partial Private Sub OnIDTipoMensajeChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDTipoMensajeChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMensajeRegla", Storage:="_IDMensajeRegla", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDMensajeRegla() As Integer
            Get
                Return Me._IDMensajeRegla
            End Get
            Set
                If (Object.Equals(Me._IDMensajeRegla, Value) = False) Then
                    Me.OnIDMensajeReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDMensajeRegla = Value
                    Me.SendPropertyChanged("IDMensajeRegla")
                    Me.OnIDMensajeReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDRegla", Storage:="_IDRegla", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDRegla() As Integer
            Get
                Return Me._IDRegla
            End Get
            Set
                If (Object.Equals(Me._IDRegla, Value) = False) Then
                    Me.OnIDReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDRegla = Value
                    Me.SendPropertyChanged("IDRegla")
                    Me.OnIDReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoRegla", Storage:="_NombreRegla", DbType:="Varchar(100) NULL")>
        Public Property NombreRegla() As String
            Get
                Return Me._NombreRegla
            End Get
            Set
                If (String.Equals(Me._NombreRegla, Value) = False) Then
                    Me.OnNombreReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreRegla = Value
                    Me.SendPropertyChanged("NombreRegla")
                    Me.OnNombreReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMensaje", Storage:="_IDMensaje", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDMensaje() As Integer
            Get
                Return Me._IDMensaje
            End Get
            Set
                If (Object.Equals(Me._IDMensaje, Value) = False) Then
                    Me.OnIDMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDMensaje = Value
                    Me.SendPropertyChanged("IDMensaje")
                    Me.OnIDMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoMensaje", Storage:="_NombreMensaje", DbType:="Varchar(100) NULL")>
        Public Property NombreMensaje() As String
            Get
                Return Me._NombreMensaje
            End Get
            Set
                If (String.Equals(Me._NombreMensaje, Value) = False) Then
                    Me.OnNombreMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreMensaje = Value
                    Me.SendPropertyChanged("NombreMensaje")
                    Me.OnNombreMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTipoMensaje", Storage:="_IDTipoMensaje", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDTipoMensaje() As Integer
            Get
                Return Me._IDTipoMensaje
            End Get
            Set
                If (Object.Equals(Me._IDTipoMensaje, Value) = False) Then
                    Me.OnIDTipoMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDTipoMensaje = Value
                    Me.SendPropertyChanged("IDTipoMensaje")
                    Me.OnIDTipoMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoNegocio")>
    Partial Public Class TipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Codigo As String

        Private _Descripcion As String

        Private _Usuario As String

        Private _ConfiguracionMenu As String

        Private _PorcentajeMinComision As System.Nullable(Of Double)

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnConfiguracionMenuChanging(value As String)
        End Sub
        Partial Private Sub OnConfiguracionMenuChanged()
        End Sub
        Partial Private Sub OnPorcentajeMinComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPorcentajeMinComisionChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo", Storage:="_Codigo", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Codigo() As String
            Get
                Return Me._Codigo
            End Get
            Set
                If (String.Equals(Me._Codigo, Value) = False) Then
                    Me.OnCodigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Codigo = Value
                    Me.SendPropertyChanged("Codigo")
                    Me.OnCodigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConfiguracionMenu", Storage:="_ConfiguracionMenu", DbType:="Varchar(255)")>
        Public Property ConfiguracionMenu() As String
            Get
                Return Me._ConfiguracionMenu
            End Get
            Set
                If (String.Equals(Me._ConfiguracionMenu, Value) = False) Then
                    Me.OnConfiguracionMenuChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ConfiguracionMenu = Value
                    Me.SendPropertyChanged("ConfiguracionMenu")
                    Me.OnConfiguracionMenuChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeMinComision", Storage:="_PorcentajeMinComision", DbType:="Float NULL")>
        Public Property PorcentajeMinComision() As System.Nullable(Of Double)
            Get
                Return Me._PorcentajeMinComision
            End Get
            Set
                If (Me._PorcentajeMinComision.Equals(Value) = False) Then
                    Me.OnPorcentajeMinComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajeMinComision = Value
                    Me.SendPropertyChanged("PorcentajeMinComision")
                    Me.OnPorcentajeMinComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblCertificacionXTipoNegocio")>
    Partial Public Class CertificacionXTipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoCertificacion As String

        Private _CodigoTipoNegocio As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoCertificacionChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoCertificacionChanged()
        End Sub
        Partial Private Sub OnCodigoTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoNegocioChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoCertificacion", Storage:="_CodigoCertificacion", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property CodigoCertificacion() As String
            Get
                Return Me._CodigoCertificacion
            End Get
            Set
                If (String.Equals(Me._CodigoCertificacion, Value) = False) Then
                    Me.OnCodigoCertificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoCertificacion = Value
                    Me.SendPropertyChanged("CodigoCertificacion")
                    Me.OnCodigoCertificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoNegocio", Storage:="_CodigoTipoNegocio", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property CodigoTipoNegocio() As String
            Get
                Return Me._CodigoTipoNegocio
            End Get
            Set
                If (String.Equals(Me._CodigoTipoNegocio, Value) = False) Then
                    Me.OnCodigoTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoNegocio = Value
                    Me.SendPropertyChanged("CodigoTipoNegocio")
                    Me.OnCodigoTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblDocumentoXTipoNegocio")>
    Partial Public Class DocumentoXTipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoNegocio As String

        Private _CodDocumento As Short

        Private _Usuario As String

        Private _InfoSesion As String

        Private _TipoOperacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnCodDocumentoChanging(value As Short)
        End Sub
        Partial Private Sub OnCodDocumentoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnTipoOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOperacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCodDocumento", Storage:="_CodDocumento", DbType:="Smallint NOT NULL")>
        Public Property CodDocumento() As Short
            Get
                Return Me._CodDocumento
            End Get
            Set
                If ((Me._CodDocumento = Value) _
                            = False) Then
                    Me.OnCodDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodDocumento = Value
                    Me.SendPropertyChanged("CodDocumento")
                    Me.OnCodDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOperacion", Storage:="_TipoOperacion", DbType:="Varchar(50)")>
        Public Property TipoOperacion() As String
            Get
                Return Me._TipoOperacion
            End Get
            Set
                If (String.Equals(Me._TipoOperacion, Value) = False) Then
                    Me.OnTipoOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOperacion = Value
                    Me.SendPropertyChanged("TipoOperacion")
                    Me.OnTipoOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoNegocioXEspecie")>
    Partial Public Class TipoNegocioXEspecie
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoNegocio As String

        Private _IDEspecie As String

        Private _ManejaISIN As System.Nullable(Of Boolean)

        Private _MaxValorCantidad As Double

        Private _PermiteNegociar As System.Nullable(Of Boolean)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _PorcentajeGarantia As System.Nullable(Of Double)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnIDEspecieChanged()
        End Sub
        Partial Private Sub OnManejaISINChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnManejaISINChanged()
        End Sub
        Partial Private Sub OnMaxValorCantidadChanging(value As Double)
        End Sub
        Partial Private Sub OnMaxValorCantidadChanged()
        End Sub
        Partial Private Sub OnPermiteNegociarChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnPermiteNegociarChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnPorcentajeGarantiaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPorcentajeGarantiaChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(25) NOT NULL", CanBeNull:=False)>
        Public Property IDEspecie() As String
            Get
                Return Me._IDEspecie
            End Get
            Set
                If (String.Equals(Me._IDEspecie, Value) = False) Then
                    Me.OnIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDEspecie = Value
                    Me.SendPropertyChanged("IDEspecie")
                    Me.OnIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logManejaISIN", Storage:="_ManejaISIN", DbType:="Bit NULL")>
        Public Property ManejaISIN() As System.Nullable(Of Boolean)
            Get
                Return Me._ManejaISIN
            End Get
            Set
                If (Me._ManejaISIN.Equals(Value) = False) Then
                    Me.OnManejaISINChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ManejaISIN = Value
                    Me.SendPropertyChanged("ManejaISIN")
                    Me.OnManejaISINChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblMaxValorCantidad", Storage:="_MaxValorCantidad", DbType:="Float NOT NULL")>
        Public Property MaxValorCantidad() As Double
            Get
                Return Me._MaxValorCantidad
            End Get
            Set
                If ((Me._MaxValorCantidad = Value) _
                            = False) Then
                    Me.OnMaxValorCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MaxValorCantidad = Value
                    Me.SendPropertyChanged("MaxValorCantidad")
                    Me.OnMaxValorCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermiteNegociar", Storage:="_PermiteNegociar", DbType:="Bit NULL")>
        Public Property PermiteNegociar() As System.Nullable(Of Boolean)
            Get
                Return Me._PermiteNegociar
            End Get
            Set
                If (Me._PermiteNegociar.Equals(Value) = False) Then
                    Me.OnPermiteNegociarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PermiteNegociar = Value
                    Me.SendPropertyChanged("PermiteNegociar")
                    Me.OnPermiteNegociarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeGarantia", Storage:="_PorcentajeGarantia", DbType:="Float NULL")>
        Public Property PorcentajeGarantia() As System.Nullable(Of Double)
            Get
                Return Me._PorcentajeGarantia
            End Get
            Set
                If (Me._PorcentajeGarantia.Equals(Value) = False) Then
                    Me.OnPorcentajeGarantiaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajeGarantia = Value
                    Me.SendPropertyChanged("PorcentajeGarantia")
                    Me.OnPorcentajeGarantiaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoNegocioXTipoProducto")>
    Partial Public Class TipoNegocioXTipoProducto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoNegocio As String

        Private _TipoProducto As String

        Private _IDComitente As String

        Private _Nombre As String

        Private _Perfil As String

        Private _ValorMaxNegociacion As Double

        Private _PorcentajePatrimonioTecnico As System.Nullable(Of Double)

        Private _Usuario As String

        Private _PermiteNegociar As System.Nullable(Of Boolean)

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnPerfilChanging(value As String)
        End Sub
        Partial Private Sub OnPerfilChanged()
        End Sub
        Partial Private Sub OnValorMaxNegociacionChanging(value As Double)
        End Sub
        Partial Private Sub OnValorMaxNegociacionChanged()
        End Sub
        Partial Private Sub OnPorcentajePatrimonioTecnicoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPorcentajePatrimonioTecnicoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnPermiteNegociarChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnPermiteNegociarChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(4) NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Varchar(17)")>
        Public Property IDComitente() As String
            Get
                Return Me._IDComitente
            End Get
            Set
                If (String.Equals(Me._IDComitente, Value) = False) Then
                    Me.OnIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitente = Value
                    Me.SendPropertyChanged("IDComitente")
                    Me.OnIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(200)")>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfil", Storage:="_Perfil", DbType:="Varchar(4)")>
        Public Property Perfil() As String
            Get
                Return Me._Perfil
            End Get
            Set
                If (String.Equals(Me._Perfil, Value) = False) Then
                    Me.OnPerfilChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Perfil = Value
                    Me.SendPropertyChanged("Perfil")
                    Me.OnPerfilChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorMaxNegociacion", Storage:="_ValorMaxNegociacion", DbType:="Float NOT NULL")>
        Public Property ValorMaxNegociacion() As Double
            Get
                Return Me._ValorMaxNegociacion
            End Get
            Set
                If ((Me._ValorMaxNegociacion = Value) _
                            = False) Then
                    Me.OnValorMaxNegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorMaxNegociacion = Value
                    Me.SendPropertyChanged("ValorMaxNegociacion")
                    Me.OnValorMaxNegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajePatrimonioTecnico", Storage:="_PorcentajePatrimonioTecnico", DbType:="Float")>
        Public Property PorcentajePatrimonioTecnico() As System.Nullable(Of Double)
            Get
                Return Me._PorcentajePatrimonioTecnico
            End Get
            Set
                If (Me._PorcentajePatrimonioTecnico.Equals(Value) = False) Then
                    Me.OnPorcentajePatrimonioTecnicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajePatrimonioTecnico = Value
                    Me.SendPropertyChanged("PorcentajePatrimonioTecnico")
                    Me.OnPorcentajePatrimonioTecnicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermiteNegociar", Storage:="_PermiteNegociar", DbType:="Bit Null")>
        Public Property PermiteNegociar() As System.Nullable(Of Boolean)
            Get
                Return Me._PermiteNegociar
            End Get
            Set
                If (Me._PermiteNegociar.Equals(Value) = False) Then
                    Me.OnPermiteNegociarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PermiteNegociar = Value
                    Me.SendPropertyChanged("PermiteNegociar")
                    Me.OnPermiteNegociarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblCertificacionesXReceptor")>
    Partial Public Class CertificacionesXRecepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _CodigoCertificacion As String

        Private _FechaInicial As Date

        Private _FechaFinal As Date

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnCodigoCertificacionChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoCertificacionChanged()
        End Sub
        Partial Private Sub OnFechaInicialChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaInicialChanged()
        End Sub
        Partial Private Sub OnFechaFinalChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaFinalChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoCertificacion", Storage:="_CodigoCertificacion", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property CodigoCertificacion() As String
            Get
                Return Me._CodigoCertificacion
            End Get
            Set
                If (String.Equals(Me._CodigoCertificacion, Value) = False) Then
                    Me.OnCodigoCertificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoCertificacion = Value
                    Me.SendPropertyChanged("CodigoCertificacion")
                    Me.OnCodigoCertificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInicial", Storage:="_FechaInicial", DbType:="Datetime NOT NULL")>
        Public Property FechaInicial() As Date
            Get
                Return Me._FechaInicial
            End Get
            Set
                If ((Me._FechaInicial = Value) _
                            = False) Then
                    Me.OnFechaInicialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInicial = Value
                    Me.SendPropertyChanged("FechaInicial")
                    Me.OnFechaInicialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaFinal", Storage:="_FechaFinal", DbType:="Datetime NOT NULL")>
        Public Property FechaFinal() As Date
            Get
                Return Me._FechaFinal
            End Get
            Set
                If ((Me._FechaFinal = Value) _
                            = False) Then
                    Me.OnFechaFinalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaFinal = Value
                    Me.SendPropertyChanged("FechaFinal")
                    Me.OnFechaFinalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblConceptosXReceptor")>
    Partial Public Class ConceptosXRecepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _IdConcepto As System.Nullable(Of System.Int32)

        Private _Prioridad As Integer

        Private _Usuario As String

        Private _InfoSesion As String

        Private _Descripcion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnIdConceptoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIdConceptoChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdConcepto", Storage:="_IdConcepto", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IdConcepto() As System.Nullable(Of System.Int32)
            Get
                Return Me._IdConcepto
            End Get
            Set
                If (Object.Equals(Me._IdConcepto, Value) = False) Then
                    Me.OnIdConceptoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdConcepto = Value
                    Me.SendPropertyChanged("IdConcepto")
                    Me.OnIdConceptoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(1000)")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblConfiguracionesAdicionalesReceptor")>
    Partial Public Class ConfiguracionesAdicionalesRecepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _CodigoReceptor As String

        Private _NombreReceptor As String

        Private _TipoOrden As String

        Private _NombreTipoOrden As String

        Private _ExtensionDefecto As String

        Private _TipoOrdenDefecto As String

        Private _NombreTipoOrdenDefecto As String

        Private _EnrutaBus As System.Nullable(Of Boolean)

        Private _PorcentajePatrimonioTecnico As System.Nullable(Of Double)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnNombreReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorChanged()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnNombreTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOrdenChanged()
        End Sub
        Partial Private Sub OnExtensionDefectoChanging(value As String)
        End Sub
        Partial Private Sub OnExtensionDefectoChanged()
        End Sub
        Partial Private Sub OnTipoOrdenDefectoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenDefectoChanged()
        End Sub
        Partial Private Sub OnNombreTipoOrdenDefectoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOrdenDefectoChanged()
        End Sub
        Partial Private Sub OnEnrutaBusChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEnrutaBusChanged()
        End Sub
        Partial Private Sub OnPorcentajePatrimonioTecnicoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPorcentajePatrimonioTecnicoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptor", Storage:="_NombreReceptor", DbType:="Varchar(200) NULL")>
        Public Property NombreReceptor() As String
            Get
                Return Me._NombreReceptor
            End Get
            Set
                If (String.Equals(Me._NombreReceptor, Value) = False) Then
                    Me.OnNombreReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptor = Value
                    Me.SendPropertyChanged("NombreReceptor")
                    Me.OnNombreReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(1)")>
        Public Property TipoOrden() As String
            Get
                Return Me._TipoOrden
            End Get
            Set
                If (String.Equals(Me._TipoOrden, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrden = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOrden", Storage:="_NombreTipoOrden", DbType:="Varchar(200) NULL")>
        Public Property NombreTipoOrden() As String
            Get
                Return Me._NombreTipoOrden
            End Get
            Set
                If (String.Equals(Me._NombreTipoOrden, Value) = False) Then
                    Me.OnNombreTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOrden = Value
                    Me.SendPropertyChanged("NombreTipoOrden")
                    Me.OnNombreTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strExtensionDefecto", Storage:="_ExtensionDefecto", DbType:="Varchar(20)")>
        Public Property ExtensionDefecto() As String
            Get
                Return Me._ExtensionDefecto
            End Get
            Set
                If (String.Equals(Me._ExtensionDefecto, Value) = False) Then
                    Me.OnExtensionDefectoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ExtensionDefecto = Value
                    Me.SendPropertyChanged("ExtensionDefecto")
                    Me.OnExtensionDefectoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoOrdenDefecto", Storage:="_TipoOrdenDefecto", DbType:="Varchar(1)")>
        Public Property TipoOrdenDefecto() As String
            Get
                Return Me._TipoOrdenDefecto
            End Get
            Set
                If (String.Equals(Me._TipoOrdenDefecto, Value) = False) Then
                    Me.OnTipoOrdenDefectoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrdenDefecto = Value
                    Me.SendPropertyChanged("TipoOrdenDefecto")
                    Me.OnTipoOrdenDefectoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOrdenDefecto", Storage:="_NombreTipoOrdenDefecto", DbType:="Varchar(200) NULL")>
        Public Property NombreTipoOrdenDefecto() As String
            Get
                Return Me._NombreTipoOrdenDefecto
            End Get
            Set
                If (String.Equals(Me._NombreTipoOrdenDefecto, Value) = False) Then
                    Me.OnNombreTipoOrdenDefectoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOrdenDefecto = Value
                    Me.SendPropertyChanged("NombreTipoOrdenDefecto")
                    Me.OnNombreTipoOrdenDefectoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEnrutaBus", Storage:="_EnrutaBus", DbType:="Bit")>
        Public Property EnrutaBus() As System.Nullable(Of Boolean)
            Get
                Return Me._EnrutaBus
            End Get
            Set
                If (Me._EnrutaBus.Equals(Value) = False) Then
                    Me.OnEnrutaBusChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EnrutaBus = Value
                    Me.SendPropertyChanged("EnrutaBus")
                    Me.OnEnrutaBusChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajePatrimonioTecnico", Storage:="_PorcentajePatrimonioTecnico", DbType:="Float")>
        Public Property PorcentajePatrimonioTecnico() As System.Nullable(Of Double)
            Get
                Return Me._PorcentajePatrimonioTecnico
            End Get
            Set
                If (Me._PorcentajePatrimonioTecnico.Equals(Value) = False) Then
                    Me.OnPorcentajePatrimonioTecnicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajePatrimonioTecnico = Value
                    Me.SendPropertyChanged("PorcentajePatrimonioTecnico")
                    Me.OnPorcentajePatrimonioTecnicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblParametrosReceptor")>
    Partial Public Class ParametrosRecepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _Topico As String

        Private _Valor As String

        Private _Prioridad As Integer

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnTopicoChanging(value As String)
        End Sub
        Partial Private Sub OnTopicoChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As String)
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTopico", Storage:="_Topico", DbType:="Varchar(20) NOT NULL", CanBeNull:=False)>
        Public Property Topico() As String
            Get
                Return Me._Topico
            End Get
            Set
                If (String.Equals(Me._Topico, Value) = False) Then
                    Me.OnTopicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Topico = Value
                    Me.SendPropertyChanged("Topico")
                    Me.OnTopicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Valor() As String
            Get
                Return Me._Valor
            End Get
            Set
                If (String.Equals(Me._Valor, Value) = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblReceptoresClientesAutorizados")>
    Partial Public Class ReceptoresClientesAutorizado
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptorCliente As String

        Private _NombreReceptorCliente As String

        Private _CodigoReceptorTercero As String

        Private _NombreReceptorTercero As String

        Private _IDComitente As String

        Private _NombreCliente As String

        Private _FechaInicial As Date

        Private _FechaFinal As Date

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorClienteChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorClienteChanged()
        End Sub
        Partial Private Sub OnNombreReceptorClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorClienteChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorTerceroChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorTerceroChanged()
        End Sub
        Partial Private Sub OnNombreReceptorTerceroChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorTerceroChanged()
        End Sub
        Partial Private Sub OnIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnFechaInicialChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaInicialChanged()
        End Sub
        Partial Private Sub OnFechaFinalChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaFinalChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptorCliente", Storage:="_CodigoReceptorCliente", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptorCliente() As String
            Get
                Return Me._CodigoReceptorCliente
            End Get
            Set
                If (String.Equals(Me._CodigoReceptorCliente, Value) = False) Then
                    Me.OnCodigoReceptorClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptorCliente = Value
                    Me.SendPropertyChanged("CodigoReceptorCliente")
                    Me.OnCodigoReceptorClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptorCliente", Storage:="_NombreReceptorCliente", DbType:="Varchar(200) NULL")>
        Public Property NombreReceptorCliente() As String
            Get
                Return Me._NombreReceptorCliente
            End Get
            Set
                If (String.Equals(Me._NombreReceptorCliente, Value) = False) Then
                    Me.OnNombreReceptorClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorCliente = Value
                    Me.SendPropertyChanged("NombreReceptorCliente")
                    Me.OnNombreReceptorClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptorTercero", Storage:="_CodigoReceptorTercero", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptorTercero() As String
            Get
                Return Me._CodigoReceptorTercero
            End Get
            Set
                If (String.Equals(Me._CodigoReceptorTercero, Value) = False) Then
                    Me.OnCodigoReceptorTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptorTercero = Value
                    Me.SendPropertyChanged("CodigoReceptorTercero")
                    Me.OnCodigoReceptorTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptorTercero", Storage:="_NombreReceptorTercero", DbType:="Varchar(200) NULL")>
        Public Property NombreReceptorTercero() As String
            Get
                Return Me._NombreReceptorTercero
            End Get
            Set
                If (String.Equals(Me._NombreReceptorTercero, Value) = False) Then
                    Me.OnNombreReceptorTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptorTercero = Value
                    Me.SendPropertyChanged("NombreReceptorTercero")
                    Me.OnNombreReceptorTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17)")>
        Public Property IDComitente() As String
            Get
                Return Me._IDComitente
            End Get
            Set
                If (String.Equals(Me._IDComitente, Value) = False) Then
                    Me.OnIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitente = Value
                    Me.SendPropertyChanged("IDComitente")
                    Me.OnIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="Varchar(200) NULL")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInicial", Storage:="_FechaInicial", DbType:="Datetime NOT NULL")>
        Public Property FechaInicial() As Date
            Get
                Return Me._FechaInicial
            End Get
            Set
                If ((Me._FechaInicial = Value) _
                            = False) Then
                    Me.OnFechaInicialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInicial = Value
                    Me.SendPropertyChanged("FechaInicial")
                    Me.OnFechaInicialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaFinal", Storage:="_FechaFinal", DbType:="Datetime NOT NULL")>
        Public Property FechaFinal() As Date
            Get
                Return Me._FechaFinal
            End Get
            Set
                If ((Me._FechaFinal = Value) _
                            = False) Then
                    Me.OnFechaFinalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaFinal = Value
                    Me.SendPropertyChanged("FechaFinal")
                    Me.OnFechaFinalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoNegocioXReceptor")>
    Partial Public Class TipoNegocioXRecepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _CodigoTipoNegocio As String

        Private _ValorMaxNegociacion As Double

        Private _Prioridad As Integer

        Private _Usuario As String

        Private _PorcentajeComision As System.Nullable(Of Double)

        Private _ValorComision As System.Nullable(Of Double)

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnCodigoTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoNegocioChanged()
        End Sub
        Partial Private Sub OnValorMaxNegociacionChanging(value As Double)
        End Sub
        Partial Private Sub OnValorMaxNegociacionChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnPorcentajeComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPorcentajeComisionChanged()
        End Sub
        Partial Private Sub OnValorComisionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorComisionChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoNegocio", Storage:="_CodigoTipoNegocio", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property CodigoTipoNegocio() As String
            Get
                Return Me._CodigoTipoNegocio
            End Get
            Set
                If (String.Equals(Me._CodigoTipoNegocio, Value) = False) Then
                    Me.OnCodigoTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoNegocio = Value
                    Me.SendPropertyChanged("CodigoTipoNegocio")
                    Me.OnCodigoTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorMaxNegociacion", Storage:="_ValorMaxNegociacion", DbType:="Float NOT NULL")>
        Public Property ValorMaxNegociacion() As Double
            Get
                Return Me._ValorMaxNegociacion
            End Get
            Set
                If ((Me._ValorMaxNegociacion = Value) _
                            = False) Then
                    Me.OnValorMaxNegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorMaxNegociacion = Value
                    Me.SendPropertyChanged("ValorMaxNegociacion")
                    Me.OnValorMaxNegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeComision", Storage:="_PorcentajeComision", DbType:="Float")>
        Public Property PorcentajeComision() As System.Nullable(Of Double)
            Get
                Return Me._PorcentajeComision
            End Get
            Set
                If (Me._PorcentajeComision.Equals(Value) = False) Then
                    Me.OnPorcentajeComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajeComision = Value
                    Me.SendPropertyChanged("PorcentajeComision")
                    Me.OnPorcentajeComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorComision", Storage:="_ValorComision", DbType:="Float")>
        Public Property ValorComision() As System.Nullable(Of Double)
            Get
                Return Me._ValorComision
            End Get
            Set
                If (Me._ValorComision.Equals(Value) = False) Then
                    Me.OnValorComisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorComision = Value
                    Me.SendPropertyChanged("ValorComision")
                    Me.OnValorComisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoProductoXReceptor")>
    Partial Public Class TipoProductoXRecepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _TipoProducto As String

        Private _Prioridad As Integer

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnPrioridadChanging(value As Integer)
        End Sub
        Partial Private Sub OnPrioridadChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intPrioridad", Storage:="_Prioridad", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Prioridad() As Integer
            Get
                Return Me._Prioridad
            End Get
            Set
                If (Object.Equals(Me._Prioridad, Value) = False) Then
                    Me.OnPrioridadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Prioridad = Value
                    Me.SendPropertyChanged("Prioridad")
                    Me.OnPrioridadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblRN_ConfiguracionNivelAtribucion")>
    Partial Public Class RN_ConfiguracionNivelAtribucio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Regla As System.Nullable(Of System.Int32)

        Private _CodigoRegla As String

        Private _TipoDocumento As System.Nullable(Of System.Int32)

        Private _NombreDocumento As String

        Private _NivelAprobacion As System.Nullable(Of System.Int32)

        Private _NombreNivel As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnReglaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnReglaChanged()
        End Sub
        Partial Private Sub OnCodigoReglaChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReglaChanged()
        End Sub
        Partial Private Sub OnTipoDocumentoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnTipoDocumentoChanged()
        End Sub
        Partial Private Sub OnNombreDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreDocumentoChanged()
        End Sub
        Partial Private Sub OnNivelAprobacionChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnNivelAprobacionChanged()
        End Sub
        Partial Private Sub OnNombreNivelChanging(value As String)
        End Sub
        Partial Private Sub OnNombreNivelChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDRegla", Storage:="_Regla", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property Regla() As System.Nullable(Of System.Int32)
            Get
                Return Me._Regla
            End Get
            Set
                If (Object.Equals(Me._Regla, Value) = False) Then
                    Me.OnReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Regla = Value
                    Me.SendPropertyChanged("Regla")
                    Me.OnReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoRegla", Storage:="_CodigoRegla", DbType:="Varchar(100) NULL")>
        Public Property CodigoRegla() As String
            Get
                Return Me._CodigoRegla
            End Get
            Set
                If (String.Equals(Me._CodigoRegla, Value) = False) Then
                    Me.OnCodigoReglaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoRegla = Value
                    Me.SendPropertyChanged("CodigoRegla")
                    Me.OnCodigoReglaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTipoDocumento", Storage:="_TipoDocumento", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property TipoDocumento() As System.Nullable(Of System.Int32)
            Get
                Return Me._TipoDocumento
            End Get
            Set
                If (Object.Equals(Me._TipoDocumento, Value) = False) Then
                    Me.OnTipoDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoDocumento = Value
                    Me.SendPropertyChanged("TipoDocumento")
                    Me.OnTipoDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreDocumento", Storage:="_NombreDocumento", DbType:="Varchar(100) NULL")>
        Public Property NombreDocumento() As String
            Get
                Return Me._NombreDocumento
            End Get
            Set
                If (String.Equals(Me._NombreDocumento, Value) = False) Then
                    Me.OnNombreDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreDocumento = Value
                    Me.SendPropertyChanged("NombreDocumento")
                    Me.OnNombreDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNivelAtribucion", Storage:="_NivelAprobacion", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property NivelAprobacion() As System.Nullable(Of System.Int32)
            Get
                Return Me._NivelAprobacion
            End Get
            Set
                If (Object.Equals(Me._NivelAprobacion, Value) = False) Then
                    Me.OnNivelAprobacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NivelAprobacion = Value
                    Me.SendPropertyChanged("NivelAprobacion")
                    Me.OnNivelAprobacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreNivel", Storage:="_NombreNivel", DbType:="Varchar(100) NULL")>
        Public Property NombreNivel() As String
            Get
                Return Me._NombreNivel
            End Get
            Set
                If (String.Equals(Me._NombreNivel, Value) = False) Then
                    Me.OnNombreNivelChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreNivel = Value
                    Me.SendPropertyChanged("NombreNivel")
                    Me.OnNombreNivelChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class RN_NivelesAtribucion
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDNivel As System.Nullable(Of System.Int32)

        Private _IDNivelPadre As System.Nullable(Of System.Int32)

        Private _NombreNivel As String

        Private _IDTipoDocumento As System.Nullable(Of System.Int32)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDNivelChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNivelChanged()
        End Sub
        Partial Private Sub OnIDNivelPadreChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDNivelPadreChanged()
        End Sub
        Partial Private Sub OnNombreNivelChanging(value As String)
        End Sub
        Partial Private Sub OnNombreNivelChanged()
        End Sub
        Partial Private Sub OnIDTipoDocumentoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDTipoDocumentoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNivel", Storage:="_IDNivel", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDNivel() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNivel
            End Get
            Set
                If (Object.Equals(Me._IDNivel, Value) = False) Then
                    Me.OnIDNivelChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNivel = Value
                    Me.SendPropertyChanged("IDNivel")
                    Me.OnIDNivelChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDNivelPadre", Storage:="_IDNivelPadre", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDNivelPadre() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDNivelPadre
            End Get
            Set
                If (Object.Equals(Me._IDNivelPadre, Value) = False) Then
                    Me.OnIDNivelPadreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDNivelPadre = Value
                    Me.SendPropertyChanged("IDNivelPadre")
                    Me.OnIDNivelPadreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreNivel", Storage:="_NombreNivel", DbType:="Varchar(200) NOT NULL", CanBeNull:=False)>
        Public Property NombreNivel() As String
            Get
                Return Me._NombreNivel
            End Get
            Set
                If (String.Equals(Me._NombreNivel, Value) = False) Then
                    Me.OnNombreNivelChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreNivel = Value
                    Me.SendPropertyChanged("NombreNivel")
                    Me.OnNombreNivelChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTipoDocumento", Storage:="_IDTipoDocumento", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDTipoDocumento() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDTipoDocumento
            End Get
            Set
                If (Object.Equals(Me._IDTipoDocumento, Value) = False) Then
                    Me.OnIDTipoDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDTipoDocumento = Value
                    Me.SendPropertyChanged("IDTipoDocumento")
                    Me.OnIDTipoDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblCostos")>
    Partial Public Class Costo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Idcosto As Integer

        Private _CodigoFormapago As String

        Private _NombreFormaPago As String

        Private _CodigoTipoCheque As String

        Private _NombreTipoCheque As String

        Private _CodigoTipoCruce As String

        Private _NombreTipoCruce As String

        Private _Valor As Decimal

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdcostoChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdcostoChanged()
        End Sub
        Partial Private Sub OnCodigoFormapagoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoFormapagoChanged()
        End Sub
        Partial Private Sub OnNombreFormaPagoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreFormaPagoChanged()
        End Sub
        Partial Private Sub OnCodigoTipoChequeChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoChequeChanged()
        End Sub
        Partial Private Sub OnNombreTipoChequeChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoChequeChanged()
        End Sub
        Partial Private Sub OnCodigoTipoCruceChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoCruceChanged()
        End Sub
        Partial Private Sub OnNombreTipoCruceChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoCruceChanged()
        End Sub
        Partial Private Sub OnValorChanging(value As Decimal)
        End Sub
        Partial Private Sub OnValorChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdcosto", Storage:="_Idcosto", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property Idcosto() As Integer
            Get
                Return Me._Idcosto
            End Get
            Set
                If (Object.Equals(Me._Idcosto, Value) = False) Then
                    Me.OnIdcostoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Idcosto = Value
                    Me.SendPropertyChanged("Idcosto")
                    Me.OnIdcostoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoFormapago", Storage:="_CodigoFormapago", DbType:="Varchar(2) NOT NULL", CanBeNull:=False)>
        Public Property CodigoFormapago() As String
            Get
                Return Me._CodigoFormapago
            End Get
            Set
                If (String.Equals(Me._CodigoFormapago, Value) = False) Then
                    Me.OnCodigoFormapagoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoFormapago = Value
                    Me.SendPropertyChanged("CodigoFormapago")
                    Me.OnCodigoFormapagoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreFormaPago", Storage:="_NombreFormaPago", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreFormaPago() As String
            Get
                Return Me._NombreFormaPago
            End Get
            Set
                If (String.Equals(Me._NombreFormaPago, Value) = False) Then
                    Me.OnNombreFormaPagoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreFormaPago = Value
                    Me.SendPropertyChanged("NombreFormaPago")
                    Me.OnNombreFormaPagoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoCheque", Storage:="_CodigoTipoCheque", DbType:="Varchar(2)")>
        Public Property CodigoTipoCheque() As String
            Get
                Return Me._CodigoTipoCheque
            End Get
            Set
                If (String.Equals(Me._CodigoTipoCheque, Value) = False) Then
                    Me.OnCodigoTipoChequeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoCheque = Value
                    Me.SendPropertyChanged("CodigoTipoCheque")
                    Me.OnCodigoTipoChequeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoCheque", Storage:="_NombreTipoCheque", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreTipoCheque() As String
            Get
                Return Me._NombreTipoCheque
            End Get
            Set
                If (String.Equals(Me._NombreTipoCheque, Value) = False) Then
                    Me.OnNombreTipoChequeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoCheque = Value
                    Me.SendPropertyChanged("NombreTipoCheque")
                    Me.OnNombreTipoChequeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoCruce", Storage:="_CodigoTipoCruce", DbType:="Varchar(2)")>
        Public Property CodigoTipoCruce() As String
            Get
                Return Me._CodigoTipoCruce
            End Get
            Set
                If (String.Equals(Me._CodigoTipoCruce, Value) = False) Then
                    Me.OnCodigoTipoCruceChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoCruce = Value
                    Me.SendPropertyChanged("CodigoTipoCruce")
                    Me.OnCodigoTipoCruceChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoCruce", Storage:="_NombreTipoCruce", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreTipoCruce() As String
            Get
                Return Me._NombreTipoCruce
            End Get
            Set
                If (String.Equals(Me._NombreTipoCruce, Value) = False) Then
                    Me.OnNombreTipoCruceChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoCruce = Value
                    Me.SendPropertyChanged("NombreTipoCruce")
                    Me.OnNombreTipoCruceChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numValor", Storage:="_Valor", DbType:="Numeric NOT NULL")>
        Public Property Valor() As Decimal
            Get
                Return Me._Valor
            End Get
            Set
                If ((Me._Valor = Value) _
                            = False) Then
                    Me.OnValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Valor = Value
                    Me.SendPropertyChanged("Valor")
                    Me.OnValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class TipoProducto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Codigo As String

        Private _Descripcion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo", Storage:="_Codigo", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Codigo() As String
            Get
                Return Me._Codigo
            End Get
            Set
                If (String.Equals(Me._Codigo, Value) = False) Then
                    Me.OnCodigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Codigo = Value
                    Me.SendPropertyChanged("Codigo")
                    Me.OnCodigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(200) NOT NULL", CanBeNull:=False)>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblTipoProductoXEspecie")>
    Partial Public Class TipoProductoXEspeci
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoTipoProducto As String

        Private _IDEspecie As String

        Private _ValorMaxNegociacion As Double

        Private _PermiteNegociar As System.Nullable(Of Boolean)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _CrucePorFaciales As System.Nullable(Of Boolean)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoTipoProductoChanged()
        End Sub
        Partial Private Sub OnIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnIDEspecieChanged()
        End Sub
        Partial Private Sub OnValorMaxNegociacionChanging(value As Double)
        End Sub
        Partial Private Sub OnValorMaxNegociacionChanged()
        End Sub
        Partial Private Sub OnPermiteNegociarChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnPermiteNegociarChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnCrucePorFacialesChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnCrucePorFacialesChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoTipoProducto", Storage:="_CodigoTipoProducto", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property CodigoTipoProducto() As String
            Get
                Return Me._CodigoTipoProducto
            End Get
            Set
                If (String.Equals(Me._CodigoTipoProducto, Value) = False) Then
                    Me.OnCodigoTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoTipoProducto = Value
                    Me.SendPropertyChanged("CodigoTipoProducto")
                    Me.OnCodigoTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(25) NULL")>
        Public Property IDEspecie() As String
            Get
                Return Me._IDEspecie
            End Get
            Set
                If (String.Equals(Me._IDEspecie, Value) = False) Then
                    Me.OnIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDEspecie = Value
                    Me.SendPropertyChanged("IDEspecie")
                    Me.OnIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorMaxNegociacion", Storage:="_ValorMaxNegociacion", DbType:="Float NOT NULL")>
        Public Property ValorMaxNegociacion() As Double
            Get
                Return Me._ValorMaxNegociacion
            End Get
            Set
                If ((Me._ValorMaxNegociacion = Value) _
                            = False) Then
                    Me.OnValorMaxNegociacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorMaxNegociacion = Value
                    Me.SendPropertyChanged("ValorMaxNegociacion")
                    Me.OnValorMaxNegociacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermiteNegociar", Storage:="_PermiteNegociar", DbType:="Bit NULL")>
        Public Property PermiteNegociar() As System.Nullable(Of Boolean)
            Get
                Return Me._PermiteNegociar
            End Get
            Set
                If (Me._PermiteNegociar.Equals(Value) = False) Then
                    Me.OnPermiteNegociarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PermiteNegociar = Value
                    Me.SendPropertyChanged("PermiteNegociar")
                    Me.OnPermiteNegociarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCrucePorFaciales", Storage:="_CrucePorFaciales", DbType:="Bit NULL")>
        Public Property CrucePorFaciales() As System.Nullable(Of Boolean)
            Get
                Return Me._CrucePorFaciales
            End Get
            Set
                If (Me._CrucePorFaciales.Equals(Value) = False) Then
                    Me.OnCrucePorFacialesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CrucePorFaciales = Value
                    Me.SendPropertyChanged("CrucePorFaciales")
                    Me.OnCrucePorFacialesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblControlHorarios")>
    Partial Public Class ControlHorario
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Modulo As String

        Private _TipoNegocio As String

        Private _TipoOrden As String

        Private _TipoProducto As String

        Private _Instruccion As String

        Private _HoraInicio As String

        Private _HoraFin As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _NombreTipoNegocio As String

        Private _NombreModulo As String

        Private _NombreTipoOrden As String

        Private _NombreTipoProducto As String

        Private _NombreInstruccion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnModuloChanging(value As String)
        End Sub
        Partial Private Sub OnModuloChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnTipoOrdenChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnInstruccionChanging(value As String)
        End Sub
        Partial Private Sub OnInstruccionChanged()
        End Sub
        Partial Private Sub OnHoraInicioChanging(value As String)
        End Sub
        Partial Private Sub OnHoraInicioChanged()
        End Sub
        Partial Private Sub OnHoraFinChanging(value As String)
        End Sub
        Partial Private Sub OnHoraFinChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnNombreTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoNegocioChanged()
        End Sub
        Partial Private Sub OnNombreModuloChanging(value As String)
        End Sub
        Partial Private Sub OnNombreModuloChanged()
        End Sub
        Partial Private Sub OnNombreTipoOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoOrdenChanged()
        End Sub
        Partial Private Sub OnNombreTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoProductoChanged()
        End Sub
        Partial Private Sub OnNombreInstruccionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreInstruccionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intModulo", Storage:="_Modulo", DbType:="Varchar(4) NULL")>
        Public Property Modulo() As String
            Get
                Return Me._Modulo
            End Get
            Set
                If (String.Equals(Me._Modulo, Value) = False) Then
                    Me.OnModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Modulo = Value
                    Me.SendPropertyChanged("Modulo")
                    Me.OnModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(4) NULL")>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoOrden", Storage:="_TipoOrden", DbType:="Varchar(4) NULL")>
        Public Property TipoOrden() As String
            Get
                Return Me._TipoOrden
            End Get
            Set
                If (String.Equals(Me._TipoOrden, Value) = False) Then
                    Me.OnTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoOrden = Value
                    Me.SendPropertyChanged("TipoOrden")
                    Me.OnTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(4) NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intInstrucciones", Storage:="_Instruccion", DbType:="Varchar(8) NULL")>
        Public Property Instruccion() As String
            Get
                Return Me._Instruccion
            End Get
            Set
                If (String.Equals(Me._Instruccion, Value) = False) Then
                    Me.OnInstruccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Instruccion = Value
                    Me.SendPropertyChanged("Instruccion")
                    Me.OnInstruccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraInicio", Storage:="_HoraInicio", DbType:="Varchar(8) NULL")>
        Public Property HoraInicio() As String
            Get
                Return Me._HoraInicio
            End Get
            Set
                If (String.Equals(Me._HoraInicio, Value) = False) Then
                    Me.OnHoraInicioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HoraInicio = Value
                    Me.SendPropertyChanged("HoraInicio")
                    Me.OnHoraInicioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraFin", Storage:="_HoraFin", DbType:="Varchar(8) NULL")>
        Public Property HoraFin() As String
            Get
                Return Me._HoraFin
            End Get
            Set
                If (String.Equals(Me._HoraFin, Value) = False) Then
                    Me.OnHoraFinChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HoraFin = Value
                    Me.SendPropertyChanged("HoraFin")
                    Me.OnHoraFinChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoNegocio", Storage:="_NombreTipoNegocio", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoNegocio() As String
            Get
                Return Me._NombreTipoNegocio
            End Get
            Set
                If (String.Equals(Me._NombreTipoNegocio, Value) = False) Then
                    Me.OnNombreTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoNegocio = Value
                    Me.SendPropertyChanged("NombreTipoNegocio")
                    Me.OnNombreTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreModulo", Storage:="_NombreModulo", DbType:="Varchar(100) NULL")>
        Public Property NombreModulo() As String
            Get
                Return Me._NombreModulo
            End Get
            Set
                If (String.Equals(Me._NombreModulo, Value) = False) Then
                    Me.OnNombreModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreModulo = Value
                    Me.SendPropertyChanged("NombreModulo")
                    Me.OnNombreModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOrden", Storage:="_NombreTipoOrden", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoOrden() As String
            Get
                Return Me._NombreTipoOrden
            End Get
            Set
                If (String.Equals(Me._NombreTipoOrden, Value) = False) Then
                    Me.OnNombreTipoOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoOrden = Value
                    Me.SendPropertyChanged("NombreTipoOrden")
                    Me.OnNombreTipoOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoProducto", Storage:="_NombreTipoProducto", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoProducto() As String
            Get
                Return Me._NombreTipoProducto
            End Get
            Set
                If (String.Equals(Me._NombreTipoProducto, Value) = False) Then
                    Me.OnNombreTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoProducto = Value
                    Me.SendPropertyChanged("NombreTipoProducto")
                    Me.OnNombreTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreInstruccion", Storage:="_NombreInstruccion", DbType:="Varchar(100) NULL")>
        Public Property NombreInstruccion() As String
            Get
                Return Me._NombreInstruccion
            End Get
            Set
                If (String.Equals(Me._NombreInstruccion, Value) = False) Then
                    Me.OnNombreInstruccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreInstruccion = Value
                    Me.SendPropertyChanged("NombreInstruccion")
                    Me.OnNombreInstruccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblClientesRelacionados")>
    Partial Public Class ClientesRelacionados
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoIdCliente As String

        Private _NombreTipoIdCliente As String

        Private _NroDocumentoCliente As String

        Private _NombreCliente As String

        Private _TipoIdClienteRelacionado As String

        Private _NombreTipoIdClienteRelacionado As String

        Private _NroDocumentoClienteRelacionado As String

        Private _NombreClienteRelacionado As String

        Private _TipoRelacion As String

        Private _InfoSesion As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoIdClienteChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdClienteChanged()
        End Sub
        Partial Private Sub OnNombreTipoIdClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoIdClienteChanged()
        End Sub
        Partial Private Sub OnNroDocumentoClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoClienteChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnTipoIdClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnNombreTipoIdClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoIdClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnNroDocumentoClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnNombreClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnTipoRelacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoRelacionChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdCliente", Storage:="_TipoIdCliente", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoIdCliente() As String
            Get
                Return Me._TipoIdCliente
            End Get
            Set
                If (String.Equals(Me._TipoIdCliente, Value) = False) Then
                    Me.OnTipoIdClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdCliente = Value
                    Me.SendPropertyChanged("TipoIdCliente")
                    Me.OnTipoIdClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoIdCliente", Storage:="_NombreTipoIdCliente", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoIdCliente() As String
            Get
                Return Me._NombreTipoIdCliente
            End Get
            Set
                If (String.Equals(Me._NombreTipoIdCliente, Value) = False) Then
                    Me.OnNombreTipoIdClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoIdCliente = Value
                    Me.SendPropertyChanged("NombreTipoIdCliente")
                    Me.OnNombreTipoIdClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoCliente", Storage:="_NroDocumentoCliente", DbType:="Varchar(15) NOT NULL", CanBeNull:=False)>
        Public Property NroDocumentoCliente() As String
            Get
                Return Me._NroDocumentoCliente
            End Get
            Set
                If (String.Equals(Me._NroDocumentoCliente, Value) = False) Then
                    Me.OnNroDocumentoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumentoCliente = Value
                    Me.SendPropertyChanged("NroDocumentoCliente")
                    Me.OnNroDocumentoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="Varchar(100) NULL")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdClienteRelacionado", Storage:="_TipoIdClienteRelacionado", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoIdClienteRelacionado() As String
            Get
                Return Me._TipoIdClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._TipoIdClienteRelacionado, Value) = False) Then
                    Me.OnTipoIdClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdClienteRelacionado = Value
                    Me.SendPropertyChanged("TipoIdClienteRelacionado")
                    Me.OnTipoIdClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoIdClienteRelacionado", Storage:="_NombreTipoIdClienteRelacionado", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoIdClienteRelacionado() As String
            Get
                Return Me._NombreTipoIdClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._NombreTipoIdClienteRelacionado, Value) = False) Then
                    Me.OnNombreTipoIdClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoIdClienteRelacionado = Value
                    Me.SendPropertyChanged("NombreTipoIdClienteRelacionado")
                    Me.OnNombreTipoIdClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoClienteRelacionado", Storage:="_NroDocumentoClienteRelacionado", DbType:="Varchar(15) NOT NULL", CanBeNull:=False)>
        Public Property NroDocumentoClienteRelacionado() As String
            Get
                Return Me._NroDocumentoClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._NroDocumentoClienteRelacionado, Value) = False) Then
                    Me.OnNroDocumentoClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumentoClienteRelacionado = Value
                    Me.SendPropertyChanged("NroDocumentoClienteRelacionado")
                    Me.OnNroDocumentoClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClienteRelacionado", Storage:="_NombreClienteRelacionado", DbType:="Varchar(100) NULL")>
        Public Property NombreClienteRelacionado() As String
            Get
                Return Me._NombreClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._NombreClienteRelacionado, Value) = False) Then
                    Me.OnNombreClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreClienteRelacionado = Value
                    Me.SendPropertyChanged("NombreClienteRelacionado")
                    Me.OnNombreClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoRelacion", Storage:="_TipoRelacion", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoRelacion() As String
            Get
                Return Me._TipoRelacion
            End Get
            Set
                If (String.Equals(Me._TipoRelacion, Value) = False) Then
                    Me.OnTipoRelacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoRelacion = Value
                    Me.SendPropertyChanged("TipoRelacion")
                    Me.OnTipoRelacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ClientesRelacionadosEncabezado
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoIdCliente As String

        Private _NombreTipoIdCliente As String

        Private _NroDocumentoCliente As String

        Private _NombreCliente As String

        Private _TipoIdClienteRelacionado As String

        Private _NombreTipoIdClienteRelacionado As String

        Private _NroDocumentoClienteRelacionado As String

        Private _NombreClienteRelacionado As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoIdClienteChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdClienteChanged()
        End Sub
        Partial Private Sub OnNombreTipoIdClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoIdClienteChanged()
        End Sub
        Partial Private Sub OnNroDocumentoClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoClienteChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnTipoIdClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnNombreTipoIdClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoIdClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnNroDocumentoClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnNombreClienteRelacionadoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteRelacionadoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdCliente", Storage:="_TipoIdCliente", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoIdCliente() As String
            Get
                Return Me._TipoIdCliente
            End Get
            Set
                If (String.Equals(Me._TipoIdCliente, Value) = False) Then
                    Me.OnTipoIdClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdCliente = Value
                    Me.SendPropertyChanged("TipoIdCliente")
                    Me.OnTipoIdClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoIdCliente", Storage:="_NombreTipoIdCliente", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoIdCliente() As String
            Get
                Return Me._NombreTipoIdCliente
            End Get
            Set
                If (String.Equals(Me._NombreTipoIdCliente, Value) = False) Then
                    Me.OnNombreTipoIdClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoIdCliente = Value
                    Me.SendPropertyChanged("NombreTipoIdCliente")
                    Me.OnNombreTipoIdClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoCliente", Storage:="_NroDocumentoCliente", DbType:="Varchar(15) NOT NULL", CanBeNull:=False)>
        Public Property NroDocumentoCliente() As String
            Get
                Return Me._NroDocumentoCliente
            End Get
            Set
                If (String.Equals(Me._NroDocumentoCliente, Value) = False) Then
                    Me.OnNroDocumentoClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumentoCliente = Value
                    Me.SendPropertyChanged("NroDocumentoCliente")
                    Me.OnNroDocumentoClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="Varchar(100) NULL")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdClienteRelacionado", Storage:="_TipoIdClienteRelacionado", DbType:="Varchar(4) NULL")>
        Public Property TipoIdClienteRelacionado() As String
            Get
                Return Me._TipoIdClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._TipoIdClienteRelacionado, Value) = False) Then
                    Me.OnTipoIdClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdClienteRelacionado = Value
                    Me.SendPropertyChanged("TipoIdClienteRelacionado")
                    Me.OnTipoIdClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoIdClienteRelacionado", Storage:="_NombreTipoIdClienteRelacionado", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoIdClienteRelacionado() As String
            Get
                Return Me._NombreTipoIdClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._NombreTipoIdClienteRelacionado, Value) = False) Then
                    Me.OnNombreTipoIdClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoIdClienteRelacionado = Value
                    Me.SendPropertyChanged("NombreTipoIdClienteRelacionado")
                    Me.OnNombreTipoIdClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoClienteRelacionado", Storage:="_NroDocumentoClienteRelacionado", DbType:="Varchar(15) NULL")>
        Public Property NroDocumentoClienteRelacionado() As String
            Get
                Return Me._NroDocumentoClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._NroDocumentoClienteRelacionado, Value) = False) Then
                    Me.OnNroDocumentoClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumentoClienteRelacionado = Value
                    Me.SendPropertyChanged("NroDocumentoClienteRelacionado")
                    Me.OnNroDocumentoClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClienteRelacionado", Storage:="_NombreClienteRelacionado", DbType:="Varchar(100) NULL")>
        Public Property NombreClienteRelacionado() As String
            Get
                Return Me._NombreClienteRelacionado
            End Get
            Set
                If (String.Equals(Me._NombreClienteRelacionado, Value) = False) Then
                    Me.OnNombreClienteRelacionadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreClienteRelacionado = Value
                    Me.SendPropertyChanged("NombreClienteRelacionado")
                    Me.OnNombreClienteRelacionadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ValidacionClientesRelacionados
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _NroDocumento As String

        Private _TipoIdentificacion As String

        Private _NombreTipoIdentificacion As String

        Private _NombreCliente As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnNroDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoChanged()
        End Sub
        Partial Private Sub OnTipoIdentificacionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoIdentificacionChanged()
        End Sub
        Partial Private Sub OnNombreTipoIdentificacionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoIdentificacionChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_NroDocumento", DbType:="Varchar(100) NULL")>
        Public Property NroDocumento() As String
            Get
                Return Me._NroDocumento
            End Get
            Set
                If (String.Equals(Me._NroDocumento, Value) = False) Then
                    Me.OnNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumento = Value
                    Me.SendPropertyChanged("NroDocumento")
                    Me.OnNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoIdentificacion", Storage:="_TipoIdentificacion", DbType:="Varchar(100) NULL")>
        Public Property TipoIdentificacion() As String
            Get
                Return Me._TipoIdentificacion
            End Get
            Set
                If (String.Equals(Me._TipoIdentificacion, Value) = False) Then
                    Me.OnTipoIdentificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoIdentificacion = Value
                    Me.SendPropertyChanged("TipoIdentificacion")
                    Me.OnTipoIdentificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoIdentificacion", Storage:="_NombreTipoIdentificacion", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoIdentificacion() As String
            Get
                Return Me._NombreTipoIdentificacion
            End Get
            Set
                If (String.Equals(Me._NombreTipoIdentificacion, Value) = False) Then
                    Me.OnNombreTipoIdentificacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoIdentificacion = Value
                    Me.SendPropertyChanged("NombreTipoIdentificacion")
                    Me.OnNombreTipoIdentificacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="Varchar(100) NULL")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblPortalioClienteXTipoNegocio")>
    Partial Public Class PortalioClienteXTipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoProducto As String

        Private _PerfilRiesgo As String

        Private _CodigoOYD As String

        Private _NombreCodigoOYD As String

        Private _TipoNegocio As String

        Private _Porcentaje As Double

        Private _ValorMaximoCupo As Double

        Private _InfoSesion As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnPerfilRiesgoChanging(value As String)
        End Sub
        Partial Private Sub OnPerfilRiesgoChanged()
        End Sub
        Partial Private Sub OnCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoOYDChanged()
        End Sub
        Partial Private Sub OnNombreCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCodigoOYDChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnPorcentajeChanging(value As Double)
        End Sub
        Partial Private Sub OnPorcentajeChanged()
        End Sub
        Partial Private Sub OnValorMaximoCupoChanging(value As Double)
        End Sub
        Partial Private Sub OnValorMaximoCupoChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(4)  NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfilRiesgo", Storage:="_PerfilRiesgo", DbType:="Varchar(4)  NULL")>
        Public Property PerfilRiesgo() As String
            Get
                Return Me._PerfilRiesgo
            End Get
            Set
                If (String.Equals(Me._PerfilRiesgo, Value) = False) Then
                    Me.OnPerfilRiesgoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PerfilRiesgo = Value
                    Me.SendPropertyChanged("PerfilRiesgo")
                    Me.OnPerfilRiesgoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_CodigoOYD", DbType:="Varchar(17)  NULL")>
        Public Property CodigoOYD() As String
            Get
                Return Me._CodigoOYD
            End Get
            Set
                If (String.Equals(Me._CodigoOYD, Value) = False) Then
                    Me.OnCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoOYD = Value
                    Me.SendPropertyChanged("CodigoOYD")
                    Me.OnCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCodigoOYD", Storage:="_NombreCodigoOYD", DbType:="Varchar(100) NULL")>
        Public Property NombreCodigoOYD() As String
            Get
                Return Me._NombreCodigoOYD
            End Get
            Set
                If (String.Equals(Me._NombreCodigoOYD, Value) = False) Then
                    Me.OnNombreCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCodigoOYD = Value
                    Me.SendPropertyChanged("NombreCodigoOYD")
                    Me.OnNombreCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentaje", Storage:="_Porcentaje", DbType:="Float NOT NULL")>
        Public Property Porcentaje() As Double
            Get
                Return Me._Porcentaje
            End Get
            Set
                If ((Me._Porcentaje = Value) _
                            = False) Then
                    Me.OnPorcentajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Porcentaje = Value
                    Me.SendPropertyChanged("Porcentaje")
                    Me.OnPorcentajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorMaximoCupo", Storage:="_ValorMaximoCupo", DbType:="Float NOT NULL")>
        Public Property ValorMaximoCupo() As Double
            Get
                Return Me._ValorMaximoCupo
            End Get
            Set
                If ((Me._ValorMaximoCupo = Value) _
                            = False) Then
                    Me.OnValorMaximoCupoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorMaximoCupo = Value
                    Me.SendPropertyChanged("ValorMaximoCupo")
                    Me.OnValorMaximoCupoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class PortalioClienteXTipoNegocioPrincipal
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoProducto As String

        Private _PerfilRiesgo As String

        Private _CodigoOYD As String

        Private _NombreTipoProducto As String

        Private _NombrePerfilRiesgo As String

        Private _NombreCodigoOYD As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnPerfilRiesgoChanging(value As String)
        End Sub
        Partial Private Sub OnPerfilRiesgoChanged()
        End Sub
        Partial Private Sub OnCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoOYDChanged()
        End Sub
        Partial Private Sub OnNombreTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoProductoChanged()
        End Sub
        Partial Private Sub OnNombrePerfilRiesgoChanging(value As String)
        End Sub
        Partial Private Sub OnNombrePerfilRiesgoChanged()
        End Sub
        Partial Private Sub OnNombreCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCodigoOYDChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(4) NOT NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfilRiesgo", Storage:="_PerfilRiesgo", DbType:="Varchar(4) NOT NULL")>
        Public Property PerfilRiesgo() As String
            Get
                Return Me._PerfilRiesgo
            End Get
            Set
                If (String.Equals(Me._PerfilRiesgo, Value) = False) Then
                    Me.OnPerfilRiesgoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PerfilRiesgo = Value
                    Me.SendPropertyChanged("PerfilRiesgo")
                    Me.OnPerfilRiesgoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_CodigoOYD", DbType:="Varchar(17) NOT NULL")>
        Public Property CodigoOYD() As String
            Get
                Return Me._CodigoOYD
            End Get
            Set
                If (String.Equals(Me._CodigoOYD, Value) = False) Then
                    Me.OnCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoOYD = Value
                    Me.SendPropertyChanged("CodigoOYD")
                    Me.OnCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoProducto", Storage:="_NombreTipoProducto", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoProducto() As String
            Get
                Return Me._NombreTipoProducto
            End Get
            Set
                If (String.Equals(Me._NombreTipoProducto, Value) = False) Then
                    Me.OnNombreTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoProducto = Value
                    Me.SendPropertyChanged("NombreTipoProducto")
                    Me.OnNombreTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombrePerfilRiesgo", Storage:="_NombrePerfilRiesgo", DbType:="Varchar(100) NULL")>
        Public Property NombrePerfilRiesgo() As String
            Get
                Return Me._NombrePerfilRiesgo
            End Get
            Set
                If (String.Equals(Me._NombrePerfilRiesgo, Value) = False) Then
                    Me.OnNombrePerfilRiesgoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombrePerfilRiesgo = Value
                    Me.SendPropertyChanged("NombrePerfilRiesgo")
                    Me.OnNombrePerfilRiesgoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCodigoOYD", Storage:="_NombreCodigoOYD", DbType:="Varchar(100) NULL")>
        Public Property NombreCodigoOYD() As String
            Get
                Return Me._NombreCodigoOYD
            End Get
            Set
                If (String.Equals(Me._NombreCodigoOYD, Value) = False) Then
                    Me.OnNombreCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCodigoOYD = Value
                    Me.SendPropertyChanged("NombreCodigoOYD")
                    Me.OnNombreCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblDistribucionComisionXTipoNegocio")>
    Partial Public Class DistribucionComisionXTipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _TipoNegocio As String

        Private _TipoProducto As String

        Private _PerfilRiesgo As String

        Private _CodigoOYD As String

        Private _NombreCodigoOYD As String

        Private _LimiteInferior As Double

        Private _LimiteSuperior As Double

        Private _ComisionMinima As Double

        Private _ComisionMaxima As Double

        Private _ComisionEnPorcentaje As Boolean

        Private _InfoSesion As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoProductoChanged()
        End Sub
        Partial Private Sub OnPerfilRiesgoChanging(value As String)
        End Sub
        Partial Private Sub OnPerfilRiesgoChanged()
        End Sub
        Partial Private Sub OnCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoOYDChanged()
        End Sub
        Partial Private Sub OnNombreCodigoOYDChanging(value As String)
        End Sub
        Partial Private Sub OnNombreCodigoOYDChanged()
        End Sub
        Partial Private Sub OnLimiteInferiorChanging(value As Double)
        End Sub
        Partial Private Sub OnLimiteInferiorChanged()
        End Sub
        Partial Private Sub OnLimiteSuperiorChanging(value As Double)
        End Sub
        Partial Private Sub OnLimiteSuperiorChanged()
        End Sub
        Partial Private Sub OnComisionMinimaChanging(value As Double)
        End Sub
        Partial Private Sub OnComisionMinimaChanged()
        End Sub
        Partial Private Sub OnComisionMaximaChanging(value As Double)
        End Sub
        Partial Private Sub OnComisionMaximaChanged()
        End Sub
        Partial Private Sub OnComisionEnPorcentajeChanging(value As Boolean)
        End Sub
        Partial Private Sub OnComisionEnPorcentajeChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto", DbType:="Varchar(4) NULL")>
        Public Property TipoProducto() As String
            Get
                Return Me._TipoProducto
            End Get
            Set
                If (String.Equals(Me._TipoProducto, Value) = False) Then
                    Me.OnTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoProducto = Value
                    Me.SendPropertyChanged("TipoProducto")
                    Me.OnTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPerfilRiesgo", Storage:="_PerfilRiesgo", DbType:="Varchar(4) NULL")>
        Public Property PerfilRiesgo() As String
            Get
                Return Me._PerfilRiesgo
            End Get
            Set
                If (String.Equals(Me._PerfilRiesgo, Value) = False) Then
                    Me.OnPerfilRiesgoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PerfilRiesgo = Value
                    Me.SendPropertyChanged("PerfilRiesgo")
                    Me.OnPerfilRiesgoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoOYD", Storage:="_CodigoOYD", DbType:="Varchar(17) NULL")>
        Public Property CodigoOYD() As String
            Get
                Return Me._CodigoOYD
            End Get
            Set
                If (String.Equals(Me._CodigoOYD, Value) = False) Then
                    Me.OnCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoOYD = Value
                    Me.SendPropertyChanged("CodigoOYD")
                    Me.OnCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCodigoOYD", Storage:="_NombreCodigoOYD", DbType:="Varchar(100) NULL")>
        Public Property NombreCodigoOYD() As String
            Get
                Return Me._NombreCodigoOYD
            End Get
            Set
                If (String.Equals(Me._NombreCodigoOYD, Value) = False) Then
                    Me.OnNombreCodigoOYDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCodigoOYD = Value
                    Me.SendPropertyChanged("NombreCodigoOYD")
                    Me.OnNombreCodigoOYDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblLimiteInferior", Storage:="_LimiteInferior", DbType:="Float NOT NULL")>
        Public Property LimiteInferior() As Double
            Get
                Return Me._LimiteInferior
            End Get
            Set
                If ((Me._LimiteInferior = Value) _
                            = False) Then
                    Me.OnLimiteInferiorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._LimiteInferior = Value
                    Me.SendPropertyChanged("LimiteInferior")
                    Me.OnLimiteInferiorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblLimiteSuperior", Storage:="_LimiteSuperior", DbType:="Float NOT NULL")>
        Public Property LimiteSuperior() As Double
            Get
                Return Me._LimiteSuperior
            End Get
            Set
                If ((Me._LimiteSuperior = Value) _
                            = False) Then
                    Me.OnLimiteSuperiorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._LimiteSuperior = Value
                    Me.SendPropertyChanged("LimiteSuperior")
                    Me.OnLimiteSuperiorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionMinima", Storage:="_ComisionMinima", DbType:="Float NOT NULL")>
        Public Property ComisionMinima() As Double
            Get
                Return Me._ComisionMinima
            End Get
            Set
                If ((Me._ComisionMinima = Value) _
                            = False) Then
                    Me.OnComisionMinimaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComisionMinima = Value
                    Me.SendPropertyChanged("ComisionMinima")
                    Me.OnComisionMinimaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblComisionMaxima", Storage:="_ComisionMaxima", DbType:="Float NOT NULL")>
        Public Property ComisionMaxima() As Double
            Get
                Return Me._ComisionMaxima
            End Get
            Set
                If ((Me._ComisionMaxima = Value) _
                            = False) Then
                    Me.OnComisionMaximaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComisionMaxima = Value
                    Me.SendPropertyChanged("ComisionMaxima")
                    Me.OnComisionMaximaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logComisionEnPorcentaje", Storage:="_ComisionEnPorcentaje", DbType:="Bit NOT NULL")>
        Public Property ComisionEnPorcentaje() As Boolean
            Get
                Return Me._ComisionEnPorcentaje
            End Get
            Set
                If ((Me._ComisionEnPorcentaje = Value) _
                            = False) Then
                    Me.OnComisionEnPorcentajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ComisionEnPorcentaje = Value
                    Me.SendPropertyChanged("ComisionEnPorcentaje")
                    Me.OnComisionEnPorcentajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblCupoReceptorXTipoNegocio")>
    Partial Public Class CupoReceptorXTipoNegocio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDSucursal As System.Nullable(Of System.Int32)

        Private _IDMesa As System.Nullable(Of System.Int32)

        Private _IDReceptor As String

        Private _NombreIDReceptor As String

        Private _TipoNegocio As String

        Private _PorcentajeCupo As System.Nullable(Of Double)

        Private _ValorMaximoCupo As System.Nullable(Of Double)

        Private _InfoSesion As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDSucursalChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDSucursalChanged()
        End Sub
        Partial Private Sub OnIDMesaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDMesaChanged()
        End Sub
        Partial Private Sub OnIDReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnIDReceptorChanged()
        End Sub
        Partial Private Sub OnNombreIDReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreIDReceptorChanged()
        End Sub
        Partial Private Sub OnTipoNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnTipoNegocioChanged()
        End Sub
        Partial Private Sub OnPorcentajeCupoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnPorcentajeCupoChanged()
        End Sub
        Partial Private Sub OnValorMaximoCupoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnValorMaximoCupoChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDSucursal", Storage:="_IDSucursal", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDSucursal() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDSucursal
            End Get
            Set
                If (Object.Equals(Me._IDSucursal, Value) = False) Then
                    Me.OnIDSucursalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucursal = Value
                    Me.SendPropertyChanged("IDSucursal")
                    Me.OnIDSucursalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMesa", Storage:="_IDMesa", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDMesa() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDMesa
            End Get
            Set
                If (Object.Equals(Me._IDMesa, Value) = False) Then
                    Me.OnIDMesaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDMesa = Value
                    Me.SendPropertyChanged("IDMesa")
                    Me.OnIDMesaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NULL")>
        Public Property IDReceptor() As String
            Get
                Return Me._IDReceptor
            End Get
            Set
                If (String.Equals(Me._IDReceptor, Value) = False) Then
                    Me.OnIDReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptor = Value
                    Me.SendPropertyChanged("IDReceptor")
                    Me.OnIDReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreIDReceptor", Storage:="_NombreIDReceptor", DbType:="Varchar(100) NULL")>
        Public Property NombreIDReceptor() As String
            Get
                Return Me._NombreIDReceptor
            End Get
            Set
                If (String.Equals(Me._NombreIDReceptor, Value) = False) Then
                    Me.OnNombreIDReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreIDReceptor = Value
                    Me.SendPropertyChanged("NombreIDReceptor")
                    Me.OnNombreIDReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoNegocio", Storage:="_TipoNegocio", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property TipoNegocio() As String
            Get
                Return Me._TipoNegocio
            End Get
            Set
                If (String.Equals(Me._TipoNegocio, Value) = False) Then
                    Me.OnTipoNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoNegocio = Value
                    Me.SendPropertyChanged("TipoNegocio")
                    Me.OnTipoNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeCupo", Storage:="_PorcentajeCupo", DbType:="Float NULL")>
        Public Property PorcentajeCupo() As System.Nullable(Of Double)
            Get
                Return Me._PorcentajeCupo
            End Get
            Set
                If (Me._PorcentajeCupo.Equals(Value) = False) Then
                    Me.OnPorcentajeCupoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PorcentajeCupo = Value
                    Me.SendPropertyChanged("PorcentajeCupo")
                    Me.OnPorcentajeCupoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorMaximoCupo", Storage:="_ValorMaximoCupo", DbType:="Float NULL")>
        Public Property ValorMaximoCupo() As System.Nullable(Of Double)
            Get
                Return Me._ValorMaximoCupo
            End Get
            Set
                If (Me._ValorMaximoCupo.Equals(Value) = False) Then
                    Me.OnValorMaximoCupoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ValorMaximoCupo = Value
                    Me.SendPropertyChanged("ValorMaximoCupo")
                    Me.OnValorMaximoCupoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class CupoReceptorXTipoNegocioPrincipal
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDSucursal As System.Nullable(Of System.Int32)

        Private _IDMesa As System.Nullable(Of System.Int32)

        Private _IDReceptor As String

        Private _NombreSucursal As String

        Private _NombreMesa As String

        Private _NombreReceptor As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDSucursalChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDSucursalChanged()
        End Sub
        Partial Private Sub OnIDMesaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDMesaChanged()
        End Sub
        Partial Private Sub OnIDReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnIDReceptorChanged()
        End Sub
        Partial Private Sub OnNombreSucursalChanging(value As String)
        End Sub
        Partial Private Sub OnNombreSucursalChanged()
        End Sub
        Partial Private Sub OnNombreMesaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreMesaChanged()
        End Sub
        Partial Private Sub OnNombreReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDSucursal", Storage:="_IDSucursal", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDSucursal() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDSucursal
            End Get
            Set
                If (Object.Equals(Me._IDSucursal, Value) = False) Then
                    Me.OnIDSucursalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucursal = Value
                    Me.SendPropertyChanged("IDSucursal")
                    Me.OnIDSucursalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDMesa", Storage:="_IDMesa", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDMesa() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDMesa
            End Get
            Set
                If (Object.Equals(Me._IDMesa, Value) = False) Then
                    Me.OnIDMesaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDMesa = Value
                    Me.SendPropertyChanged("IDMesa")
                    Me.OnIDMesaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_IDReceptor", DbType:="Varchar(4) NULL")>
        Public Property IDReceptor() As String
            Get
                Return Me._IDReceptor
            End Get
            Set
                If (String.Equals(Me._IDReceptor, Value) = False) Then
                    Me.OnIDReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDReceptor = Value
                    Me.SendPropertyChanged("IDReceptor")
                    Me.OnIDReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreSucursal", Storage:="_NombreSucursal", DbType:="Varchar(100) NULL")>
        Public Property NombreSucursal() As String
            Get
                Return Me._NombreSucursal
            End Get
            Set
                If (String.Equals(Me._NombreSucursal, Value) = False) Then
                    Me.OnNombreSucursalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreSucursal = Value
                    Me.SendPropertyChanged("NombreSucursal")
                    Me.OnNombreSucursalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreMesa", Storage:="_NombreMesa", DbType:="Varchar(100) NULL")>
        Public Property NombreMesa() As String
            Get
                Return Me._NombreMesa
            End Get
            Set
                If (String.Equals(Me._NombreMesa, Value) = False) Then
                    Me.OnNombreMesaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreMesa = Value
                    Me.SendPropertyChanged("NombreMesa")
                    Me.OnNombreMesaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptor", Storage:="_NombreReceptor", DbType:="Varchar(100) NULL")>
        Public Property NombreReceptor() As String
            Get
                Return Me._NombreReceptor
            End Get
            Set
                If (String.Equals(Me._NombreReceptor, Value) = False) Then
                    Me.OnNombreReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptor = Value
                    Me.SendPropertyChanged("NombreReceptor")
                    Me.OnNombreReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAliasEspecies")>
    Partial Public Class AliasEspecie
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDEspecies As Integer

        Private _Nemotecnico As String

        Private _Nombre As String

        Private _AliasEspecie As String

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDEspeciesChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDEspeciesChanged()
        End Sub
        Partial Private Sub OnNemotecnicoChanging(value As String)
        End Sub
        Partial Private Sub OnNemotecnicoChanged()
        End Sub
        Partial Private Sub OnNombreChanging(value As String)
        End Sub
        Partial Private Sub OnNombreChanged()
        End Sub
        Partial Private Sub OnAliasEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnAliasEspecieChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEspecies", Storage:="_IDEspecies", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDEspecies() As Integer
            Get
                Return Me._IDEspecies
            End Get
            Set
                If (Object.Equals(Me._IDEspecies, Value) = False) Then
                    Me.OnIDEspeciesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDEspecies = Value
                    Me.SendPropertyChanged("IDEspecies")
                    Me.OnIDEspeciesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNemotecnico", Storage:="_Nemotecnico", DbType:="Varchar(15)")>
        Public Property Nemotecnico() As String
            Get
                Return Me._Nemotecnico
            End Get
            Set
                If (String.Equals(Me._Nemotecnico, Value) = False) Then
                    Me.OnNemotecnicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nemotecnico = Value
                    Me.SendPropertyChanged("Nemotecnico")
                    Me.OnNemotecnicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50)")>
        Public Property Nombre() As String
            Get
                Return Me._Nombre
            End Get
            Set
                If (String.Equals(Me._Nombre, Value) = False) Then
                    Me.OnNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Nombre = Value
                    Me.SendPropertyChanged("Nombre")
                    Me.OnNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAlias", Storage:="_AliasEspecie", DbType:="Varchar(50)")>
        Public Property AliasEspecie() As String
            Get
                Return Me._AliasEspecie
            End Get
            Set
                If (String.Equals(Me._AliasEspecie, Value) = False) Then
                    Me.OnAliasEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AliasEspecie = Value
                    Me.SendPropertyChanged("AliasEspecie")
                    Me.OnAliasEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblBancosNacionalesFondos")>
    Partial Public Class BancosNacionalesFondos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDBanco As Integer

        Private _NombreBanco As String

        Private _NroCuenta As String

        Private _TipoCuenta As String

        Private _NombreTipoCuenta As String

        Private _TipoDocumentoTitular As String

        Private _NombreTipoDocumentoTitular As String

        Private _NroDocumentoTitular As String

        Private _NombreTitular As String

        Private _IDCodigoBancoSafyr As System.Nullable(Of System.Int32)

        Private _CarteraColectiva As String

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDBancoChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDBancoChanged()
        End Sub
        Partial Private Sub OnNombreBancoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreBancoChanged()
        End Sub
        Partial Private Sub OnNroCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnNroCuentaChanged()
        End Sub
        Partial Private Sub OnTipoCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoCuentaChanged()
        End Sub
        Partial Private Sub OnNombreTipoCuentaChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoCuentaChanged()
        End Sub
        Partial Private Sub OnTipoDocumentoTitularChanging(value As String)
        End Sub
        Partial Private Sub OnTipoDocumentoTitularChanged()
        End Sub
        Partial Private Sub OnNombreTipoDocumentoTitularChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTipoDocumentoTitularChanged()
        End Sub
        Partial Private Sub OnNroDocumentoTitularChanging(value As String)
        End Sub
        Partial Private Sub OnNroDocumentoTitularChanged()
        End Sub
        Partial Private Sub OnNombreTitularChanging(value As String)
        End Sub
        Partial Private Sub OnNombreTitularChanged()
        End Sub
        Partial Private Sub OnIDCodigoBancoSafyrChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDCodigoBancoSafyrChanged()
        End Sub
        Partial Private Sub OnCarteraColectivaChanging(value As String)
        End Sub
        Partial Private Sub OnCarteraColectivaChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDBanco", Storage:="_IDBanco", DbType:="Int")>
        Public Property IDBanco() As Integer
            Get
                Return Me._IDBanco
            End Get
            Set
                If ((Me._IDBanco = Value) _
                            = False) Then
                    Me.OnIDBancoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDBanco = Value
                    Me.SendPropertyChanged("IDBanco")
                    Me.OnIDBancoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreBanco", Storage:="_NombreBanco", DbType:="Varchar(100) NULL")>
        Public Property NombreBanco() As String
            Get
                Return Me._NombreBanco
            End Get
            Set
                If (String.Equals(Me._NombreBanco, Value) = False) Then
                    Me.OnNombreBancoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreBanco = Value
                    Me.SendPropertyChanged("NombreBanco")
                    Me.OnNombreBancoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroCuenta", Storage:="_NroCuenta", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property NroCuenta() As String
            Get
                Return Me._NroCuenta
            End Get
            Set
                If (String.Equals(Me._NroCuenta, Value) = False) Then
                    Me.OnNroCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroCuenta = Value
                    Me.SendPropertyChanged("NroCuenta")
                    Me.OnNroCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCuenta", Storage:="_TipoCuenta", DbType:="Varchar(8) NOT NULL", CanBeNull:=False)>
        Public Property TipoCuenta() As String
            Get
                Return Me._TipoCuenta
            End Get
            Set
                If (String.Equals(Me._TipoCuenta, Value) = False) Then
                    Me.OnTipoCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoCuenta = Value
                    Me.SendPropertyChanged("TipoCuenta")
                    Me.OnTipoCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoCuenta", Storage:="_NombreTipoCuenta", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoCuenta() As String
            Get
                Return Me._NombreTipoCuenta
            End Get
            Set
                If (String.Equals(Me._NombreTipoCuenta, Value) = False) Then
                    Me.OnNombreTipoCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoCuenta = Value
                    Me.SendPropertyChanged("NombreTipoCuenta")
                    Me.OnNombreTipoCuentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoDocumentoTitular", Storage:="_TipoDocumentoTitular", DbType:="Varchar(8) NOT NULL", CanBeNull:=False)>
        Public Property TipoDocumentoTitular() As String
            Get
                Return Me._TipoDocumentoTitular
            End Get
            Set
                If (String.Equals(Me._TipoDocumentoTitular, Value) = False) Then
                    Me.OnTipoDocumentoTitularChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoDocumentoTitular = Value
                    Me.SendPropertyChanged("TipoDocumentoTitular")
                    Me.OnTipoDocumentoTitularChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoDocumentoTitular", Storage:="_NombreTipoDocumentoTitular", DbType:="Varchar(100) NULL")>
        Public Property NombreTipoDocumentoTitular() As String
            Get
                Return Me._NombreTipoDocumentoTitular
            End Get
            Set
                If (String.Equals(Me._NombreTipoDocumentoTitular, Value) = False) Then
                    Me.OnNombreTipoDocumentoTitularChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTipoDocumentoTitular = Value
                    Me.SendPropertyChanged("NombreTipoDocumentoTitular")
                    Me.OnNombreTipoDocumentoTitularChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumentoTitular", Storage:="_NroDocumentoTitular", DbType:="Varchar(25) NOT NULL", CanBeNull:=False)>
        Public Property NroDocumentoTitular() As String
            Get
                Return Me._NroDocumentoTitular
            End Get
            Set
                If (String.Equals(Me._NroDocumentoTitular, Value) = False) Then
                    Me.OnNroDocumentoTitularChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroDocumentoTitular = Value
                    Me.SendPropertyChanged("NroDocumentoTitular")
                    Me.OnNroDocumentoTitularChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTitular", Storage:="_NombreTitular", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property NombreTitular() As String
            Get
                Return Me._NombreTitular
            End Get
            Set
                If (String.Equals(Me._NombreTitular, Value) = False) Then
                    Me.OnNombreTitularChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreTitular = Value
                    Me.SendPropertyChanged("NombreTitular")
                    Me.OnNombreTitularChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCodigoBancoSafyr", Storage:="_IDCodigoBancoSafyr", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDCodigoBancoSafyr() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDCodigoBancoSafyr
            End Get
            Set
                If (Object.Equals(Me._IDCodigoBancoSafyr, Value) = False) Then
                    Me.OnIDCodigoBancoSafyrChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDCodigoBancoSafyr = Value
                    Me.SendPropertyChanged("IDCodigoBancoSafyr")
                    Me.OnIDCodigoBancoSafyrChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCarteraColectiva", Storage:="_CarteraColectiva", DbType:="Varchar(100) NULL")>
        Public Property CarteraColectiva() As String
            Get
                Return Me._CarteraColectiva
            End Get
            Set
                If (String.Equals(Me._CarteraColectiva, Value) = False) Then
                    Me.OnCarteraColectivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CarteraColectiva = Value
                    Me.SendPropertyChanged("CarteraColectiva")
                    Me.OnCarteraColectivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class ClientesReceptor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _CodigoReceptor As String

        Private _NombreReceptor As String

        Private _IDComitente As String

        Private _NombreCliente As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnCodigoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoReceptorChanged()
        End Sub
        Partial Private Sub OnNombreReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreReceptorChanged()
        End Sub
        Partial Private Sub OnIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteChanged()
        End Sub
        Partial Private Sub OnNombreClienteChanging(value As String)
        End Sub
        Partial Private Sub OnNombreClienteChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoReceptor", Storage:="_CodigoReceptor", DbType:="Varchar(4) NOT NULL", CanBeNull:=False)>
        Public Property CodigoReceptor() As String
            Get
                Return Me._CodigoReceptor
            End Get
            Set
                If (String.Equals(Me._CodigoReceptor, Value) = False) Then
                    Me.OnCodigoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoReceptor = Value
                    Me.SendPropertyChanged("CodigoReceptor")
                    Me.OnCodigoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreReceptor", Storage:="_NombreReceptor", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreReceptor() As String
            Get
                Return Me._NombreReceptor
            End Get
            Set
                If (String.Equals(Me._NombreReceptor, Value) = False) Then
                    Me.OnNombreReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreReceptor = Value
                    Me.SendPropertyChanged("NombreReceptor")
                    Me.OnNombreReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDComitente", Storage:="_IDComitente", DbType:="Varchar(17) NOT NULL", CanBeNull:=False)>
        Public Property IDComitente() As String
            Get
                Return Me._IDComitente
            End Get
            Set
                If (String.Equals(Me._IDComitente, Value) = False) Then
                    Me.OnIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitente = Value
                    Me.SendPropertyChanged("IDComitente")
                    Me.OnIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente", DbType:="Varchar(100) NOT NULL")>
        Public Property NombreCliente() As String
            Get
                Return Me._NombreCliente
            End Get
            Set
                If (String.Equals(Me._NombreCliente, Value) = False) Then
                    Me.OnNombreClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreCliente = Value
                    Me.SendPropertyChanged("NombreCliente")
                    Me.OnNombreClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class RN_TiposDocumento
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDTipoDocumento As System.Nullable(Of System.Int32)

        Private _NombreDocumento As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDTipoDocumentoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDTipoDocumentoChanged()
        End Sub
        Partial Private Sub OnNombreDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreDocumentoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If (Object.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDTipoDocumento", Storage:="_IDTipoDocumento", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDTipoDocumento() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDTipoDocumento
            End Get
            Set
                If (Object.Equals(Me._IDTipoDocumento, Value) = False) Then
                    Me.OnIDTipoDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDTipoDocumento = Value
                    Me.SendPropertyChanged("IDTipoDocumento")
                    Me.OnIDTipoDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreDocumento", Storage:="_NombreDocumento", DbType:="Varchar(200) NOT NULL", CanBeNull:=False)>
        Public Property NombreDocumento() As String
            Get
                Return Me._NombreDocumento
            End Get
            Set
                If (String.Equals(Me._NombreDocumento, Value) = False) Then
                    Me.OnNombreDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreDocumento = Value
                    Me.SendPropertyChanged("NombreDocumento")
                    Me.OnNombreDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class Auditoria
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _Servidor As String

        Private _Maquina As String

        Private _DirIPMaquina As String

        Private _Browser As String

        Private _ErrorPersonalizado As Byte

        Private _ID As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnServidorChanging(value As String)
        End Sub
        Partial Private Sub OnServidorChanged()
        End Sub
        Partial Private Sub OnMaquinaChanging(value As String)
        End Sub
        Partial Private Sub OnMaquinaChanged()
        End Sub
        Partial Private Sub OnDirIPMaquinaChanging(value As String)
        End Sub
        Partial Private Sub OnDirIPMaquinaChanged()
        End Sub
        Partial Private Sub OnBrowserChanging(value As String)
        End Sub
        Partial Private Sub OnBrowserChanged()
        End Sub
        Partial Private Sub OnErrorPersonalizadoChanging(value As Byte)
        End Sub
        Partial Private Sub OnErrorPersonalizadoChanged()
        End Sub
        Partial Private Sub OnIDChanging(value As String)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Servidor", DbType:="VarChar(50)", CanBeNull:=False)>
        Public Property Servidor() As String
            Get
                Return Me._Servidor
            End Get
            Set
                If (String.Equals(Me._Servidor, Value) = False) Then
                    Me.OnServidorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Servidor = Value
                    Me.SendPropertyChanged("Servidor")
                    Me.OnServidorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maquina", DbType:="VarChar(50)", CanBeNull:=False)>
        Public Property Maquina() As String
            Get
                Return Me._Maquina
            End Get
            Set
                If (String.Equals(Me._Maquina, Value) = False) Then
                    Me.OnMaquinaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Maquina = Value
                    Me.SendPropertyChanged("Maquina")
                    Me.OnMaquinaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirIPMaquina", DbType:="VarChar(50)", CanBeNull:=False)>
        Public Property DirIPMaquina() As String
            Get
                Return Me._DirIPMaquina
            End Get
            Set
                If (String.Equals(Me._DirIPMaquina, Value) = False) Then
                    Me.OnDirIPMaquinaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DirIPMaquina = Value
                    Me.SendPropertyChanged("DirIPMaquina")
                    Me.OnDirIPMaquinaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Browser", DbType:="VarChar(250)", CanBeNull:=False)>
        Public Property Browser() As String
            Get
                Return Me._Browser
            End Get
            Set
                If (String.Equals(Me._Browser, Value) = False) Then
                    Me.OnBrowserChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Browser = Value
                    Me.SendPropertyChanged("Browser")
                    Me.OnBrowserChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorPersonalizado")>
        Public Property ErrorPersonalizado() As Byte
            Get
                Return Me._ErrorPersonalizado
            End Get
            Set
                If ((Me._ErrorPersonalizado = Value) _
                            = False) Then
                    Me.OnErrorPersonalizadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ErrorPersonalizado = Value
                    Me.SendPropertyChanged("ErrorPersonalizado")
                    Me.OnErrorPersonalizadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property ID() As String
            Get
                Return Me._ID
            End Get
            Set
                If (String.Equals(Me._ID, Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblConceptosTesoreria")>
    Partial Public Class ConceptosTesoreri
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDComisionista As Integer

        Private _IDSucComisionista As Integer

        Private _IDConcepto As Integer

        Private _Detalle As String

        Private _AplicaA As String

        Private _Actualizacion As Date

        Private _Usuario As String

        Private _CuentaContable As String

        Private _Activo As Boolean

        Private _ParametroContable As String

        Private _CuentaContableAux As String

        Private _NitTercero As String

        Private _Msg As String

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDComisionistaChanged()
        End Sub
        Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDSucComisionistaChanged()
        End Sub
        Partial Private Sub OnIDConceptoChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDConceptoChanged()
        End Sub
        Partial Private Sub OnDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleChanged()
        End Sub
        Partial Private Sub OnAplicaAChanging(value As String)
        End Sub
        Partial Private Sub OnAplicaAChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnCuentaContableChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaContableChanged()
        End Sub
        Partial Private Sub OnActivoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnActivoChanged()
        End Sub
        Partial Private Sub OnParametroContableChanging(value As String)
        End Sub
        Partial Private Sub OnParametroContableChanged()
        End Sub
        Partial Private Sub OnCuentaContableAuxChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaContableAuxChanged()
        End Sub
        Partial Private Sub OnNitTerceroChanging(value As String)
        End Sub
        Partial Private Sub OnNitTerceroChanged()
        End Sub
        Partial Private Sub OnMsgChanging(value As String)
        End Sub
        Partial Private Sub OnMsgChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDComisionista() As Integer
            Get
                Return Me._IDComisionista
            End Get
            Set
                If (Object.Equals(Me._IDComisionista, Value) = False) Then
                    Me.OnIDComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComisionista = Value
                    Me.SendPropertyChanged("IDComisionista")
                    Me.OnIDComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=False)>
        Public Property IDSucComisionista() As Integer
            Get
                Return Me._IDSucComisionista
            End Get
            Set
                If (Object.Equals(Me._IDSucComisionista, Value) = False) Then
                    Me.OnIDSucComisionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSucComisionista = Value
                    Me.SendPropertyChanged("IDSucComisionista")
                    Me.OnIDSucComisionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LngIDConcepto", Storage:="_IDConcepto", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDConcepto() As Integer
            Get
                Return Me._IDConcepto
            End Get
            Set
                If (Object.Equals(Me._IDConcepto, Value) = False) Then
                    Me.OnIDConceptoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDConcepto = Value
                    Me.SendPropertyChanged("IDConcepto")
                    Me.OnIDConceptoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Detalle() As String
            Get
                Return Me._Detalle
            End Get
            Set
                If (String.Equals(Me._Detalle, Value) = False) Then
                    Me.OnDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Detalle = Value
                    Me.SendPropertyChanged("Detalle")
                    Me.OnDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrAplicaA", Storage:="_AplicaA", DbType:="Varchar(15) NOT NULL", CanBeNull:=False)>
        Public Property AplicaA() As String
            Get
                Return Me._AplicaA
            End Get
            Set
                If (String.Equals(Me._AplicaA, Value) = False) Then
                    Me.OnAplicaAChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AplicaA = Value
                    Me.SendPropertyChanged("AplicaA")
                    Me.OnAplicaAChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>
        Public Property Actualizacion() As Date
            Get
                Return Me._Actualizacion
            End Get
            Set
                If ((Me._Actualizacion = Value) _
                            = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(25)")>
        Public Property CuentaContable() As String
            Get
                Return Me._CuentaContable
            End Get
            Set
                If (String.Equals(Me._CuentaContable, Value) = False) Then
                    Me.OnCuentaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaContable = Value
                    Me.SendPropertyChanged("CuentaContable")
                    Me.OnCuentaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>
        Public Property Activo() As Boolean
            Get
                Return Me._Activo
            End Get
            Set
                If ((Me._Activo = Value) _
                            = False) Then
                    Me.OnActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Activo = Value
                    Me.SendPropertyChanged("Activo")
                    Me.OnActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParametroContable", Storage:="_ParametroContable", DbType:="Varchar(5)")>
        Public Property ParametroContable() As String
            Get
                Return Me._ParametroContable
            End Get
            Set
                If (String.Equals(Me._ParametroContable, Value) = False) Then
                    Me.OnParametroContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ParametroContable = Value
                    Me.SendPropertyChanged("ParametroContable")
                    Me.OnParametroContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContableAux", Storage:="_CuentaContableAux", DbType:="Varchar(25)")>
        Public Property CuentaContableAux() As String
            Get
                Return Me._CuentaContableAux
            End Get
            Set
                If (String.Equals(Me._CuentaContableAux, Value) = False) Then
                    Me.OnCuentaContableAuxChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaContableAux = Value
                    Me.SendPropertyChanged("CuentaContableAux")
                    Me.OnCuentaContableAuxChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitTercero", Storage:="_NitTercero", DbType:="Varchar(15)")>
        Public Property NitTercero() As String
            Get
                Return Me._NitTercero
            End Get
            Set
                If (String.Equals(Me._NitTercero, Value) = False) Then
                    Me.OnNitTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NitTercero = Value
                    Me.SendPropertyChanged("NitTercero")
                    Me.OnNitTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>
        Public Property Msg() As String
            Get
                Return Me._Msg
            End Get
            Set
                If (String.Equals(Me._Msg, Value) = False) Then
                    Me.OnMsgChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Msg = Value
                    Me.SendPropertyChanged("Msg")
                    Me.OnMsgChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDoctosRequeridos")>
    Partial Public Class DoctosRequerido
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDDocumento As Short

        Private _CodigoDocto As String

        Private _NombreDocumento As String

        Private _Requerido As System.Nullable(Of Boolean)

        Private _FechaIniVigencia As System.Nullable(Of Boolean)

        Private _FechaFinVigencia As System.Nullable(Of Boolean)

        Private _DocuActivo As System.Nullable(Of Boolean)

        Private _Usuario As String

        Private _Actualizacion As Date

        Private _FechaEntrega As System.Nullable(Of DateTime)

        Private _FechaInicioVigencia As System.Nullable(Of DateTime)

        Private _FechaFinDeVigencia As System.Nullable(Of DateTime)

        Private _AplicaA As System.Nullable(Of System.Int32)

        Private _InfoSesion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDDocumentoChanging(value As Short)
        End Sub
        Partial Private Sub OnIDDocumentoChanged()
        End Sub
        Partial Private Sub OnCodigoDoctoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoDoctoChanged()
        End Sub
        Partial Private Sub OnNombreDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreDocumentoChanged()
        End Sub
        Partial Private Sub OnRequeridoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnRequeridoChanged()
        End Sub
        Partial Private Sub OnFechaIniVigenciaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnFechaIniVigenciaChanged()
        End Sub
        Partial Private Sub OnFechaFinVigenciaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnFechaFinVigenciaChanged()
        End Sub
        Partial Private Sub OnDocuActivoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnDocuActivoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnFechaEntregaChanging(value As System.Nullable(Of DateTime))
        End Sub
        Partial Private Sub OnFechaEntregaChanged()
        End Sub
        Partial Private Sub OnFechaInicioVigenciaChanging(value As System.Nullable(Of DateTime))
        End Sub
        Partial Private Sub OnFechaInicioVigenciaChanged()
        End Sub
        Partial Private Sub OnFechaFinDeVigenciaChanging(value As System.Nullable(Of DateTime))
        End Sub
        Partial Private Sub OnFechaFinDeVigenciaChanged()
        End Sub
        Partial Private Sub OnAplicaAChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnAplicaAChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngid", Storage:="_IDDocumento", AutoSync:=AutoSync.OnInsert, DbType:="Smallint NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDDocumento() As Short
            Get
                Return Me._IDDocumento
            End Get
            Set
                If ((Me._IDDocumento = Value) _
                            = False) Then
                    Me.OnIDDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDDocumento = Value
                    Me.SendPropertyChanged("IDDocumento")
                    Me.OnIDDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodDocto", Storage:="_CodigoDocto", DbType:="Varchar(20) NOT NULL", CanBeNull:=False)>
        Public Property CodigoDocto() As String
            Get
                Return Me._CodigoDocto
            End Get
            Set
                If (String.Equals(Me._CodigoDocto, Value) = False) Then
                    Me.OnCodigoDoctoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoDocto = Value
                    Me.SendPropertyChanged("CodigoDocto")
                    Me.OnCodigoDoctoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreDocumento", Storage:="_NombreDocumento", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property NombreDocumento() As String
            Get
                Return Me._NombreDocumento
            End Get
            Set
                If (String.Equals(Me._NombreDocumento, Value) = False) Then
                    Me.OnNombreDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreDocumento = Value
                    Me.SendPropertyChanged("NombreDocumento")
                    Me.OnNombreDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitRequerido", Storage:="_Requerido", DbType:="Bit NOT NULL")>
        Public Property Requerido() As System.Nullable(Of Boolean)
            Get
                Return Me._Requerido
            End Get
            Set
                If (Me._Requerido.Equals(Value) = False) Then
                    Me.OnRequeridoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Requerido = Value
                    Me.SendPropertyChanged("Requerido")
                    Me.OnRequeridoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaIniVigenciaDocto", Storage:="_FechaIniVigencia", DbType:="Bit NOT NULL")>
        Public Property FechaIniVigencia() As System.Nullable(Of Boolean)
            Get
                Return Me._FechaIniVigencia
            End Get
            Set
                If (Me._FechaIniVigencia.Equals(Value) = False) Then
                    Me.OnFechaIniVigenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaIniVigencia = Value
                    Me.SendPropertyChanged("FechaIniVigencia")
                    Me.OnFechaIniVigenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitFechaFinVigenciaDocto", Storage:="_FechaFinVigencia", DbType:="Bit NOT NULL")>
        Public Property FechaFinVigencia() As System.Nullable(Of Boolean)
            Get
                Return Me._FechaFinVigencia
            End Get
            Set
                If (Me._FechaFinVigencia.Equals(Value) = False) Then
                    Me.OnFechaFinVigenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaFinVigencia = Value
                    Me.SendPropertyChanged("FechaFinVigencia")
                    Me.OnFechaFinVigenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="bitDocuActivo", Storage:="_DocuActivo", DbType:="Bit NOT NULL")>
        Public Property DocuActivo() As System.Nullable(Of Boolean)
            Get
                Return Me._DocuActivo
            End Get
            Set
                If (Me._DocuActivo.Equals(Value) = False) Then
                    Me.OnDocuActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._DocuActivo = Value
                    Me.SendPropertyChanged("DocuActivo")
                    Me.OnDocuActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>
        Public Property Actualizacion() As Date
            Get
                Return Me._Actualizacion
            End Get
            Set
                If ((Me._Actualizacion = Value) _
                            = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEntrega", Storage:="_FechaEntrega", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaEntrega() As System.Nullable(Of DateTime)
            Get
                Return Me._FechaEntrega
            End Get
            Set
                If (Object.Equals(Me._FechaEntrega, Value) = False) Then
                    Me.OnFechaEntregaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaEntrega = Value
                    Me.SendPropertyChanged("FechaEntrega")
                    Me.OnFechaEntregaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmIniVigencia", Storage:="_FechaInicioVigencia", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaInicioVigencia() As System.Nullable(Of DateTime)
            Get
                Return Me._FechaInicioVigencia
            End Get
            Set
                If (Object.Equals(Me._FechaInicioVigencia, Value) = False) Then
                    Me.OnFechaInicioVigenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInicioVigencia = Value
                    Me.SendPropertyChanged("FechaInicioVigencia")
                    Me.OnFechaInicioVigenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFinVigencia", Storage:="_FechaFinDeVigencia", DbType:="DateTime", CanBeNull:=True)>
        Public Property FechaFinDeVigencia() As System.Nullable(Of DateTime)
            Get
                Return Me._FechaFinDeVigencia
            End Get
            Set
                If (Object.Equals(Me._FechaFinDeVigencia, Value) = False) Then
                    Me.OnFechaFinDeVigenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaFinDeVigencia = Value
                    Me.SendPropertyChanged("FechaFinDeVigencia")
                    Me.OnFechaFinDeVigenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngAplicaA", Storage:="_AplicaA", DbType:="Int", CanBeNull:=True)>
        Public Property AplicaA() As System.Nullable(Of System.Int32)
            Get
                Return Me._AplicaA
            End Get
            Set
                If (Object.Equals(Me._AplicaA, Value) = False) Then
                    Me.OnAplicaAChanging(Value)
                    Me.SendPropertyChanging()
                    Me._AplicaA = Value
                    Me.SendPropertyChanged("AplicaA")
                    Me.OnAplicaAChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblReceptorActivo")>
    Partial Public Class ReceptorActivo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIdReceptores As Integer

        Private _TipoReceptor As String

        Private _strID As String

        Private _logActivo As System.Nullable(Of Boolean)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIdReceptoresChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIdReceptoresChanged()
        End Sub
        Partial Private Sub OnTipoReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnTipoReceptorChanged()
        End Sub
        Partial Private Sub OnstrIDChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDChanged()
        End Sub
        Partial Private Sub OnlogActivoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogActivoChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdReceptores", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIdReceptores() As Integer
            Get
                Return Me._intIdReceptores
            End Get
            Set
                If (Object.Equals(Me._intIdReceptores, Value) = False) Then
                    Me.OnintIdReceptoresChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIdReceptores = Value
                    Me.SendPropertyChanged("intIdReceptores")
                    Me.OnintIdReceptoresChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoReceptor", Storage:="_TipoReceptor", DbType:="Varchar(50) NOT NULL")>
        Public Property TipoReceptor() As String
            Get
                Return Me._TipoReceptor
            End Get
            Set
                If (String.Equals(Me._TipoReceptor, Value) = False) Then
                    Me.OnTipoReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoReceptor = Value
                    Me.SendPropertyChanged("TipoReceptor")
                    Me.OnTipoReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strID", DbType:="Varchar(50) NULL")>
        Public Property strID() As String
            Get
                Return Me._strID
            End Get
            Set
                If (String.Equals(Me._strID, Value) = False) Then
                    Me.OnstrIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strID = Value
                    Me.SendPropertyChanged("strID")
                    Me.OnstrIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="Bit NULL")>
        Public Property logActivo() As System.Nullable(Of Boolean)
            Get
                Return Me._logActivo
            End Get
            Set
                If (Me._logActivo.Equals(Value) = False) Then
                    Me.OnlogActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logActivo = Value
                    Me.SendPropertyChanged("logActivo")
                    Me.OnlogActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblPreciosTick")>
    Partial Public Class PreciosTick
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDPreciosTick As Integer

        Private _dblPrecioInicial As System.Nullable(Of Double)

        Private _dblPrecioFinal As System.Nullable(Of Double)

        Private _dblMultiplos As System.Nullable(Of Double)

        Private _dtmActualizacion As System.Nullable(Of System.DateTime)

        Private _strUsuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDPreciosTickChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDPreciosTickChanged()
        End Sub
        Partial Private Sub OndblPrecioInicialChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPrecioInicialChanged()
        End Sub
        Partial Private Sub OndblPrecioFinalChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPrecioFinalChanged()
        End Sub
        Partial Private Sub OndblMultiplosChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblMultiplosChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDPreciosTick", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDPreciosTick() As Integer
            Get
                Return Me._intIDPreciosTick
            End Get
            Set
                If ((Me._intIDPreciosTick = Value) _
                            = False) Then
                    Me.OnintIDPreciosTickChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDPreciosTick = Value
                    Me.SendPropertyChanged("intIDPreciosTick")
                    Me.OnintIDPreciosTickChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioInicial", DbType:="Float NULL")>
        Public Property dblPrecioInicial() As System.Nullable(Of Double)
            Get
                Return Me._dblPrecioInicial
            End Get
            Set
                If (Me._dblPrecioInicial.Equals(Value) = False) Then
                    Me.OndblPrecioInicialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioInicial = Value
                    Me.SendPropertyChanged("dblPrecioInicial")
                    Me.OndblPrecioInicialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPrecioFinal", DbType:="Float NULL")>
        Public Property dblPrecioFinal() As System.Nullable(Of Double)
            Get
                Return Me._dblPrecioFinal
            End Get
            Set
                If (Me._dblPrecioFinal.Equals(Value) = False) Then
                    Me.OndblPrecioFinalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPrecioFinal = Value
                    Me.SendPropertyChanged("dblPrecioFinal")
                    Me.OndblPrecioFinalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblMultiplos", DbType:="Float NULL")>
        Public Property dblMultiplos() As System.Nullable(Of Double)
            Get
                Return Me._dblMultiplos
            End Get
            Set
                If (Me._dblMultiplos.Equals(Value) = False) Then
                    Me.OndblMultiplosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblMultiplos = Value
                    Me.SendPropertyChanged("dblMultiplos")
                    Me.OndblMultiplosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmActualizacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If (Object.Equals(Me._dtmActualizacion, Value) = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblControlHorarioFondos")>
    Partial Public Class tblControlHorarioFondos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIdFondoControlHorario As Integer

        Private _CodigoFondo As String

        Private _TipoMovimiento As String

        Private _HoraInicio As String

        Private _HoraFin As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIdFondoControlHorarioChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIdFondoControlHorarioChanged()
        End Sub
        Partial Private Sub OnCodigoFondoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoFondoChanged()
        End Sub
        Partial Private Sub OnTipoMovimientoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoMovimientoChanged()
        End Sub
        Partial Private Sub OnHoraInicioChanging(value As String)
        End Sub
        Partial Private Sub OnHoraInicioChanged()
        End Sub
        Partial Private Sub OnHoraFinChanging(value As String)
        End Sub
        Partial Private Sub OnHoraFinChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdFondoControlHorario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIdFondoControlHorario() As Integer
            Get
                Return Me._intIdFondoControlHorario
            End Get
            Set
                If (Object.Equals(Me._intIdFondoControlHorario, Value) = False) Then
                    Me.OnintIdFondoControlHorarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIdFondoControlHorario = Value
                    Me.SendPropertyChanged("intIdFondoControlHorario")
                    Me.OnintIdFondoControlHorarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoFondo", Storage:="_CodigoFondo", DbType:="Varchar(50) NOT NULL")>
        Public Property CodigoFondo() As String
            Get
                Return Me._CodigoFondo
            End Get
            Set
                If (String.Equals(Me._CodigoFondo, Value) = False) Then
                    Me.OnCodigoFondoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodigoFondo = Value
                    Me.SendPropertyChanged("CodigoFondo")
                    Me.OnCodigoFondoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoMovimiento", Storage:="_TipoMovimiento", DbType:="Varchar(50) NOT NULL")>
        Public Property TipoMovimiento() As String
            Get
                Return Me._TipoMovimiento
            End Get
            Set
                If (String.Equals(Me._TipoMovimiento, Value) = False) Then
                    Me.OnTipoMovimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoMovimiento = Value
                    Me.SendPropertyChanged("TipoMovimiento")
                    Me.OnTipoMovimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraInicio", Storage:="_HoraInicio", DbType:="Varchar(50) NOT NULL")>
        Public Property HoraInicio() As String
            Get
                Return Me._HoraInicio
            End Get
            Set
                If (String.Equals(Me._HoraInicio, Value) = False) Then
                    Me.OnHoraInicioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HoraInicio = Value
                    Me.SendPropertyChanged("HoraInicio")
                    Me.OnHoraInicioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strHoraFin", Storage:="_HoraFin", DbType:="Varchar(50) NOT NULL")>
        Public Property HoraFin() As String
            Get
                Return Me._HoraFin
            End Get
            Set
                If (String.Equals(Me._HoraFin, Value) = False) Then
                    Me.OnHoraFinChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HoraFin = Value
                    Me.SendPropertyChanged("HoraFin")
                    Me.OnHoraFinChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(50) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="OYDPLUS.tblFondosFormasPagos")>
    Partial Public Class tblFondosFormasPagos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIdFondoFormaPago As Integer

        Private _Descripcion As String

        Private _TipoMovimiento As String

        Private _TipoTransaccion As String

        Private _Usuario As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIdFondoFormaPagoChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIdFondoFormaPagoChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnTipoMovimientoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoMovimientoChanged()
        End Sub
        Partial Private Sub OnTipoTransaccionChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTransaccionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdFondoFormaPago", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIdFondoFormaPago() As Integer
            Get
                Return Me._intIdFondoFormaPago
            End Get
            Set
                If (Object.Equals(Me._intIdFondoFormaPago, Value) = False) Then
                    Me.OnintIdFondoFormaPagoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIdFondoFormaPago = Value
                    Me.SendPropertyChanged("intIdFondoFormaPago")
                    Me.OnintIdFondoFormaPagoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoMovimiento", Storage:="_TipoMovimiento", DbType:="Varchar(50) NOT NULL")>
        Public Property TipoMovimiento() As String
            Get
                Return Me._TipoMovimiento
            End Get
            Set
                If (String.Equals(Me._TipoMovimiento, Value) = False) Then
                    Me.OnTipoMovimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoMovimiento = Value
                    Me.SendPropertyChanged("TipoMovimiento")
                    Me.OnTipoMovimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTransaccion", Storage:="_TipoTransaccion", DbType:="Varchar(50) NOT NULL")>
        Public Property TipoTransaccion() As String
            Get
                Return Me._TipoTransaccion
            End Get
            Set
                If (String.Equals(Me._TipoTransaccion, Value) = False) Then
                    Me.OnTipoTransaccionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTransaccion = Value
                    Me.SendPropertyChanged("TipoTransaccion")
                    Me.OnTipoTransaccionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(50) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblGruposOperador")>
    Partial Public Class GrupoOperadores
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDGrupoOperador As Integer

        Private _NombreGrupo As String

        Private _dtmActualizacion As Date

        Private _Usuario As String

        Private _InfoSesion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDGrupoOperadorChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDGrupoOperadorChanged()
        End Sub
        Partial Private Sub OnNombreGrupoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreGrupoChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDGrupoOperador", Storage:="_IDGrupoOperador", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDGrupoOperador() As Integer
            Get
                Return Me._IDGrupoOperador
            End Get
            Set
                If ((Me._IDGrupoOperador = Value) _
                            = False) Then
                    Me.OnIDGrupoOperadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDGrupoOperador = Value
                    Me.SendPropertyChanged("IDGrupoOperador")
                    Me.OnIDGrupoOperadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrNombreGrupo", Storage:="_NombreGrupo", DbType:="VarChar(50)")>
        Public Property NombreGrupo() As String
            Get
                Return Me._NombreGrupo
            End Get
            Set
                If (String.Equals(Me._NombreGrupo, Value) = False) Then
                    Me.OnNombreGrupoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreGrupo = Value
                    Me.SendPropertyChanged("NombreGrupo")
                    Me.OnNombreGrupoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime", CanBeNull:=True)>
        Public Property dtmActualizacion() As Date
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If (Object.Equals(Me._dtmActualizacion, Value) = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="VarChar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDetalleGruposOperador")>
    Partial Public Class DetalleGrupoOperadores
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IDGrupoOperadorDetalle As Integer

        Private _IDGrupoOperador As Integer

        Private _IDEmpleado As Integer

        Private _NombreOperador As String

        Private _Documento As String

        Private _Receptor As String

        Private _Login As String

        Private _dtmActualizacion As Date

        Private _Usuario As String

        Private _InfoSesion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDGrupoOperadorDetalleChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDGrupoOperadorDetalleChanged()
        End Sub
        Partial Private Sub OnIDGrupoOperadorChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDGrupoOperadorChanged()
        End Sub
        Partial Private Sub OnIDEmpleadoChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDEmpleadoChanged()
        End Sub
        Partial Private Sub OnNombreOperadorChanging(value As String)
        End Sub
        Partial Private Sub OnNombreOperadorChanged()
        End Sub
        Partial Private Sub OnDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnDocumentoChanged()
        End Sub
        Partial Private Sub OnReceptorChanging(value As String)
        End Sub
        Partial Private Sub OnReceptorChanged()
        End Sub
        Partial Private Sub OnLoginChanging(value As String)
        End Sub
        Partial Private Sub OnLoginChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDGrupoOperadorDetalle", Storage:="_IDGrupoOperadorDetalle", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IDGrupoOperadorDetalle() As Integer
            Get
                Return Me._IDGrupoOperadorDetalle
            End Get
            Set
                If ((Me._IDGrupoOperadorDetalle = Value) _
                            = False) Then
                    Me.OnIDGrupoOperadorDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDGrupoOperadorDetalle = Value
                    Me.SendPropertyChanged("IDGrupoOperadorDetalle")
                    Me.OnIDGrupoOperadorDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDGrupoOperador", Storage:="_IDGrupoOperador", DbType:="Int NOT NULL")>
        Public Property IDGrupoOperador() As Integer
            Get
                Return Me._IDGrupoOperador
            End Get
            Set
                If ((Me._IDGrupoOperador = Value) _
                            = False) Then
                    Me.OnIDGrupoOperadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDGrupoOperador = Value
                    Me.SendPropertyChanged("IDGrupoOperador")
                    Me.OnIDGrupoOperadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDEmpleado", Storage:="_IDEmpleado", DbType:="Int NOT NULL")>
        Public Property IDEmpleado() As Integer
            Get
                Return Me._IDEmpleado
            End Get
            Set
                If ((Me._IDEmpleado = Value) _
                            = False) Then
                    Me.OnIDEmpleadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDEmpleado = Value
                    Me.SendPropertyChanged("IDEmpleado")
                    Me.OnIDEmpleadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_NombreOperador", DbType:="VarChar(250)")>
        Public Property NombreOperador() As String
            Get
                Return Me._NombreOperador
            End Get
            Set
                If (String.Equals(Me._NombreOperador, Value) = False) Then
                    Me.OnNombreOperadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreOperador = Value
                    Me.SendPropertyChanged("NombreOperador")
                    Me.OnNombreOperadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNroDocumento", Storage:="_Documento", DbType:="Varchar(20) NOT NULL")>
        Public Property Documento() As String
            Get
                Return Me._Documento
            End Get
            Set
                If (String.Equals(Me._Documento, Value) = False) Then
                    Me.OnDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Documento = Value
                    Me.SendPropertyChanged("Documento")
                    Me.OnDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDReceptor", Storage:="_Receptor", DbType:="VarChar(4)")>
        Public Property Receptor() As String
            Get
                Return Me._Receptor
            End Get
            Set
                If (String.Equals(Me._Receptor, Value) = False) Then
                    Me.OnReceptorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Receptor = Value
                    Me.SendPropertyChanged("Receptor")
                    Me.OnReceptorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLogin", Storage:="_Login", DbType:="Varchar(20) NOT NULL")>
        Public Property Login() As String
            Get
                Return Me._Login
            End Get
            Set
                If (String.Equals(Me._Login, Value) = False) Then
                    Me.OnLoginChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Login = Value
                    Me.SendPropertyChanged("Login")
                    Me.OnLoginChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime", CanBeNull:=True)>
        Public Property dtmActualizacion() As Date
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If (Object.Equals(Me._dtmActualizacion, Value) = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="VarChar(60)")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOYDPlus")>
Partial Public Class OyDPLUSDecevalDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertInversionistas(instance As OyDPLUSDeceval.Inversionistas)
    End Sub
    Partial Private Sub UpdateInversionistas(instance As OyDPLUSDeceval.Inversionistas)
    End Sub
    Partial Private Sub DeleteInversionistas(instance As OyDPLUSDeceval.Inversionistas)
    End Sub
    Partial Private Sub InsertDetalleInversionistas(instance As OyDPLUSDeceval.DetalleInversionistas)
    End Sub
    Partial Private Sub UpdateDetalleInversionistas(instance As OyDPLUSDeceval.DetalleInversionistas)
    End Sub
    Partial Private Sub DeleteDetalleInversionistas(instance As OyDPLUSDeceval.DetalleInversionistas)
    End Sub
    Partial Private Sub InserttblResultadoEnvio(instance As OyDPLUSDeceval.tblResultadoEnvio)
    End Sub
    Partial Private Sub UpdatetblResultadoEnvio(instance As OyDPLUSDeceval.tblResultadoEnvio)
    End Sub
    Partial Private Sub DeletetblResultadoEnvio(instance As OyDPLUSDeceval.tblResultadoEnvio)
    End Sub
    Partial Private Sub InsertConfiguracionArchivo(instance As OyDPLUSDeceval.ConfiguracionArchivo)
    End Sub
    Partial Private Sub UpdateConfiguracionArchivo(instance As OyDPLUSDeceval.ConfiguracionArchivo)
    End Sub
    Partial Private Sub DeleteConfiguracionArchivo(instance As OyDPLUSDeceval.ConfiguracionArchivo)
    End Sub
    Partial Private Sub InserttblResultadoEnvioArchivo(instance As OyDPLUSDeceval.tblResultadoEnvioArchivo)
    End Sub
    Partial Private Sub UpdatetblResultadoEnvioArchivo(instance As OyDPLUSDeceval.tblResultadoEnvioArchivo)
    End Sub
    Partial Private Sub DeletetblResultadoEnvioArchivo(instance As OyDPLUSDeceval.tblResultadoEnvioArchivo)
    End Sub
    Partial Private Sub InsertArchivos(instance As OyDPLUSDeceval.Archivos)
    End Sub
    Partial Private Sub UpdateArchivos(instance As OyDPLUSDeceval.Archivos)
    End Sub
    Partial Private Sub DeleteArchivos(instance As OyDPLUSDeceval.Archivos)
    End Sub
    Partial Private Sub InsertDetalleArchivos(instance As OyDPLUSDeceval.DetalleArchivos)
    End Sub
    Partial Private Sub UpdateDetalleArchivos(instance As OyDPLUSDeceval.DetalleArchivos)
    End Sub
    Partial Private Sub DeleteDetalleArchivos(instance As OyDPLUSDeceval.DetalleArchivos)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property Inversionistas() As System.Data.Linq.Table(Of OyDPLUSDeceval.Inversionistas)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.Inversionistas)
        End Get
    End Property

    Public ReadOnly Property DetalleInversionistas() As System.Data.Linq.Table(Of OyDPLUSDeceval.DetalleInversionistas)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.DetalleInversionistas)
        End Get
    End Property

    Public ReadOnly Property tblResultadoEnvio() As System.Data.Linq.Table(Of OyDPLUSDeceval.tblResultadoEnvio)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.tblResultadoEnvio)
        End Get
    End Property

    Public ReadOnly Property ConfiguracionArchivo() As System.Data.Linq.Table(Of OyDPLUSDeceval.ConfiguracionArchivo)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.ConfiguracionArchivo)
        End Get
    End Property

    Public ReadOnly Property tblResultadoEnvioArchivo() As System.Data.Linq.Table(Of OyDPLUSDeceval.tblResultadoEnvioArchivo)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.tblResultadoEnvioArchivo)
        End Get
    End Property

    Public ReadOnly Property Archivos() As System.Data.Linq.Table(Of OyDPLUSDeceval.Archivos)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.Archivos)
        End Get
    End Property

    Public ReadOnly Property DetalleArchivos() As System.Data.Linq.Table(Of OyDPLUSDeceval.DetalleArchivos)
        Get
            Return Me.GetTable(Of OyDPLUSDeceval.DetalleArchivos)
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalInversionistas_Consultar")>
    Public Function uspOyDNet_DecevalInversionistas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17) NOT NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(100) NOT NULL")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSDeceval.Inversionistas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pstrEstado, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.Inversionistas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalDetalleInversionistas_Consultar")>
    Public Function uspOyDNet_DecevalDetalleInversionistas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDInversionista As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSDeceval.DetalleInversionistas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDInversionista, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.DetalleInversionistas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalInversionistas_Actualizar")>
    Public Function uspOyDNet_DecevalInversionistas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(max)")> ByVal pstrRegistros As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSDeceval.tblResultadoEnvio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, pstrRegistros, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.tblResultadoEnvio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_ConfiguracionArchivo_Consultar")>
    Public Function uspOyDNet_ConfiguracionArchivo_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSDeceval.ConfiguracionArchivo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.ConfiguracionArchivo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalArchivos_Solicitar")>
    Public Function uspOyDNet_DecevalArchivos_Solicitar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar (80) NOT NULL")> ByVal pstrArchivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT NOT NULL")> ByVal pintTipoArchivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NOT NULL")> ByVal pstrCodigoISIN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT NOT NULL")> ByVal pintCuentaInversionista As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar (20) NOT NULL")> ByVal pstrCodigoDeposito As String) As ISingleResult(Of OyDPLUSDeceval.tblResultadoEnvioArchivo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrArchivo, pintTipoArchivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrCodigoISIN, pintCuentaInversionista, pstrCodigoDeposito)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.tblResultadoEnvioArchivo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalArchivos_Consultar")>
    Public Function uspOyDNet_DecevalArchivos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NULL")> ByVal pdtmFecha As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSDeceval.Archivos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFecha, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.Archivos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalDetalleArchivos_Consultar")>
    Public Function uspOyDNet_DecevalDetalleArchivos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDArchivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of OyDPLUSDeceval.DetalleArchivos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDArchivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of OyDPLUSDeceval.DetalleArchivos))
    End Function
End Class

Namespace OyDPLUSDeceval

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="DECEVAL.tblInversionistas")>
    Partial Public Class Inversionistas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDComitente As String

        Private _Estado As String

        Private _NIF As String

        Private _Fecha As Date

        Private _Usuario As String

        Private _Detalle As String

        Private _Generar As System.Nullable(Of Boolean)

        Private _InfoSesion As String

        Private _logAprobadoUsuario As System.Nullable(Of Boolean)

        Private _NumeroSolicitud As System.Nullable(Of Integer)

        Private _NumeroCuenta As System.Nullable(Of Integer)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnIDComitenteChanged()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnNIFChanging(value As String)
        End Sub
        Partial Private Sub OnNIFChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleChanged()
        End Sub
        Partial Private Sub OnGenerarChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnGenerarChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnlogAprobadoUsuarioChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogAprobadoUsuarioChanged()
        End Sub
        Partial Private Sub OnNumeroSolicitudChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnNumeroSolicitudChanged()
        End Sub
        Partial Private Sub OnNumeroCuentaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnNumeroCuentaChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL")>
        Public Property IDComitente() As String
            Get
                Return Me._IDComitente
            End Get
            Set
                If (String.Equals(Me._IDComitente, Value) = False) Then
                    Me.OnIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDComitente = Value
                    Me.SendPropertyChanged("IDComitente")
                    Me.OnIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNIF", Storage:="_NIF", DbType:="Varchar(20) NOT NULL", CanBeNull:=False)>
        Public Property NIF() As String
            Get
                Return Me._NIF
            End Get
            Set
                If (String.Equals(Me._NIF, Value) = False) Then
                    Me.OnNIFChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NIF = Value
                    Me.SendPropertyChanged("NIF")
                    Me.OnNIFChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="datetime NOT NULL", CanBeNull:=False)>
        Public Property Fecha() As Date
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="Varchar(500) NULL")>
        Public Property Detalle() As String
            Get
                Return Me._Detalle
            End Get
            Set
                If (String.Equals(Me._Detalle, Value) = False) Then
                    Me.OnDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Detalle = Value
                    Me.SendPropertyChanged("Detalle")
                    Me.OnDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LogGenerar", Storage:="_Generar", DbType:="bit NULL", CanBeNull:=True)>
        Public Property Generar() As System.Nullable(Of Boolean)
            Get
                Return Me._Generar
            End Get
            Set
                If (Object.Equals(Me._Generar, Value) = False) Then
                    Me.OnGenerarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Generar = Value
                    Me.SendPropertyChanged("Generar")
                    Me.OnGenerarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logAprobadoUsuario", DbType:="bit NULL", CanBeNull:=True)>
        Public Property logAprobadoUsuario() As System.Nullable(Of Boolean)
            Get
                Return Me._logAprobadoUsuario
            End Get
            Set
                If (Object.Equals(Me._logAprobadoUsuario, Value) = False) Then
                    Me.OnlogAprobadoUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logAprobadoUsuario = Value
                    Me.SendPropertyChanged("logAprobadoUsuario")
                    Me.OnlogAprobadoUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNumeroSolicitud", Storage:="_NumeroSolicitud", DbType:="int NULL")>
        Public Property NumeroSolicitud() As System.Nullable(Of Integer)
            Get
                Return Me._NumeroSolicitud
            End Get
            Set
                If (Me._NumeroSolicitud.Equals(Value) = False) Then
                    Me.OnNumeroSolicitudChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NumeroSolicitud = Value
                    Me.SendPropertyChanged("NumeroSolicitud")
                    Me.OnNumeroSolicitudChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNumeroCuenta", Storage:="_NumeroCuenta", DbType:="int NULL")>
        Public Property NumeroCuenta() As System.Nullable(Of Integer)
            Get
                Return Me._NumeroCuenta
            End Get
            Set
                If (Me._NumeroCuenta.Equals(Value) = False) Then
                    Me.OnNumeroCuentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NumeroCuenta = Value
                    Me.SendPropertyChanged("NumeroCuenta")
                    Me.OnNumeroCuentaChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="DECEVAL.tblDetalleInversionistas")>
    Partial Public Class DetalleInversionistas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDInversionista As Integer

        Private _Detalle As String

        Private _Fecha As Date

        Private _Usuario As String

        Private _InfoSesion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDInversionistaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDInversionistaChanged()
        End Sub
        Partial Private Sub OnDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDInversionista", Storage:="_IDInversionista", DbType:="Int NOT NULL")>
        Public Property IDInversionista() As Integer
            Get
                Return Me._IDInversionista
            End Get
            Set
                If ((Me._IDInversionista = Value) _
                            = False) Then
                    Me.OnIDInversionistaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDInversionista = Value
                    Me.SendPropertyChanged("IDInversionista")
                    Me.OnIDInversionistaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="varchar(max) NOT NULL", CanBeNull:=False)>
        Public Property Detalle() As String
            Get
                Return Me._Detalle
            End Get
            Set
                If (String.Equals(Me._Detalle, Value) = False) Then
                    Me.OnDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Detalle = Value
                    Me.SendPropertyChanged("Detalle")
                    Me.OnDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="datetime NOT NULL", CanBeNull:=False)>
        Public Property Fecha() As Date
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblResultadoEnvio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _logExitoso As System.Nullable(Of Boolean)

        Private _Mensaje As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnlogExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogExitosoChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExitoso", DbType:="bit null")>
        Public Property logExitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._logExitoso
            End Get
            Set
                If (Me._logExitoso.Equals(Value) = False) Then
                    Me.OnlogExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logExitoso = Value
                    Me.SendPropertyChanged("logExitoso")
                    Me.OnlogExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="varchar(500)", CanBeNull:=True)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (Object.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="DECEVAL.tblConfiguracionArchivo")>
    Partial Public Class ConfiguracionArchivo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Archivo As String

        Private _TipoArchivo As Integer

        Private _logActivo As Boolean

        Private _Usuario As String

        Private _Actualizacion As Date

        Private _ProcedimientoProceso As String

        Private _Codigo As String

        Private _HabilitarSeleccionCliente As System.Nullable(Of Boolean)

        Private _HabilitarSeleccionEspecie As System.Nullable(Of Boolean)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnArchivoChanging(value As String)
        End Sub
        Partial Private Sub OnArchivoChanged()
        End Sub
        Partial Private Sub OnTipoArchivoChanging(value As Integer)
        End Sub
        Partial Private Sub OnTipoArchivoChanged()
        End Sub
        Partial Private Sub OnlogActivoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnlogActivoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnProcedimientoProcesoChanging(value As String)
        End Sub
        Partial Private Sub OnProcedimientoProcesoChanged()
        End Sub
        Partial Private Sub OnCodigoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoChanged()
        End Sub
        Partial Private Sub OnHabilitarSeleccionClienteChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnHabilitarSeleccionClienteChanged()
        End Sub
        Partial Private Sub OnHabilitarSeleccionEspecieChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnHabilitarSeleccionEspecieChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strArchivo", Storage:="_Archivo", DbType:="varchar (80) NOT NULL", CanBeNull:=False)>
        Public Property Archivo() As String
            Get
                Return Me._Archivo
            End Get
            Set
                If (String.Equals(Me._Archivo, Value) = False) Then
                    Me.OnArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Archivo = Value
                    Me.SendPropertyChanged("Archivo")
                    Me.OnArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoArchivo", Storage:="_TipoArchivo", DbType:="INT NOT NULL")>
        Public Property TipoArchivo() As Integer
            Get
                Return Me._TipoArchivo
            End Get
            Set
                If ((Me._TipoArchivo = Value) _
                            = False) Then
                    Me.OnTipoArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoArchivo = Value
                    Me.SendPropertyChanged("TipoArchivo")
                    Me.OnTipoArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="bit NOT NULL")>
        Public Property logActivo() As Boolean
            Get
                Return Me._logActivo
            End Get
            Set
                If ((Me._logActivo = Value) _
                            = False) Then
                    Me.OnlogActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logActivo = Value
                    Me.SendPropertyChanged("logActivo")
                    Me.OnlogActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(100) NOT NULL", CanBeNull:=False)>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="datetime NOT NULL", CanBeNull:=False)>
        Public Property Actualizacion() As Date
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Object.Equals(Me._Actualizacion, Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strProcedimientoProceso", Storage:="_ProcedimientoProceso", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property ProcedimientoProceso() As String
            Get
                Return Me._ProcedimientoProceso
            End Get
            Set
                If (String.Equals(Me._ProcedimientoProceso, Value) = False) Then
                    Me.OnProcedimientoProcesoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ProcedimientoProceso = Value
                    Me.SendPropertyChanged("ProcedimientoProceso")
                    Me.OnProcedimientoProcesoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo", Storage:="_Codigo", DbType:="Varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property Codigo() As String
            Get
                Return Me._Codigo
            End Get
            Set
                If (String.Equals(Me._Codigo, Value) = False) Then
                    Me.OnCodigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Codigo = Value
                    Me.SendPropertyChanged("Codigo")
                    Me.OnCodigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logHabilitarSeleccionCliente", Storage:="_HabilitarSeleccionCliente", DbType:="bit  NULL")>
        Public Property HabilitarSeleccionCliente() As System.Nullable(Of Boolean)
            Get
                Return Me._HabilitarSeleccionCliente
            End Get
            Set
                If (Me._HabilitarSeleccionCliente.Equals(Value) = False) Then
                    Me.OnHabilitarSeleccionClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HabilitarSeleccionCliente = Value
                    Me.SendPropertyChanged("HabilitarSeleccionCliente")
                    Me.OnHabilitarSeleccionClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logHabilitarSeleccionEspecie", Storage:="_HabilitarSeleccionEspecie", DbType:="bit  NULL")>
        Public Property HabilitarSeleccionEspecie() As System.Nullable(Of Boolean)
            Get
                Return Me._HabilitarSeleccionEspecie
            End Get
            Set
                If (Me._HabilitarSeleccionEspecie.Equals(Value) = False) Then
                    Me.OnHabilitarSeleccionEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._HabilitarSeleccionEspecie = Value
                    Me.SendPropertyChanged("HabilitarSeleccionEspecie")
                    Me.OnHabilitarSeleccionEspecieChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblResultadoEnvioArchivo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _logExitoso As System.Nullable(Of Boolean)

        Private _Mensaje As String

        Private _IDArchivoInsertado As System.Nullable(Of System.Int32)

        Private _NombreArchivo As String

        Private _EjecucionAutomatica As System.Nullable(Of Boolean)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnlogExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogExitosoChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnIDArchivoInsertadoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDArchivoInsertadoChanged()
        End Sub
        Partial Private Sub OnNombreArchivoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreArchivoChanged()
        End Sub
        Partial Private Sub OnEjecucionAutomaticaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEjecucionAutomaticaChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExitoso", DbType:="bit null")>
        Public Property logExitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._logExitoso
            End Get
            Set
                If (Me._logExitoso.Equals(Value) = False) Then
                    Me.OnlogExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logExitoso = Value
                    Me.SendPropertyChanged("logExitoso")
                    Me.OnlogExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="varchar(500)", CanBeNull:=True)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (Object.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDArchivoInsertado", Storage:="_IDArchivoInsertado", DbType:="int", CanBeNull:=True)>
        Public Property IDArchivoInsertado() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDArchivoInsertado
            End Get
            Set
                If (Object.Equals(Me._IDArchivoInsertado, Value) = False) Then
                    Me.OnIDArchivoInsertadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDArchivoInsertado = Value
                    Me.SendPropertyChanged("IDArchivoInsertado")
                    Me.OnIDArchivoInsertadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreArchivo", Storage:="_NombreArchivo", DbType:="varchar(500)", CanBeNull:=True)>
        Public Property NombreArchivo() As String
            Get
                Return Me._NombreArchivo
            End Get
            Set
                If (Object.Equals(Me._NombreArchivo, Value) = False) Then
                    Me.OnNombreArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreArchivo = Value
                    Me.SendPropertyChanged("NombreArchivo")
                    Me.OnNombreArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEjecucionAutomatica", Storage:="_EjecucionAutomatica", DbType:="bit")>
        Public Property EjecucionAutomatica() As System.Nullable(Of Boolean)
            Get
                Return Me._EjecucionAutomatica
            End Get
            Set
                If (Me._EjecucionAutomatica.Equals(Value) = False) Then
                    Me.OnEjecucionAutomaticaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EjecucionAutomatica = Value
                    Me.SendPropertyChanged("EjecucionAutomatica")
                    Me.OnEjecucionAutomaticaChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="DECEVAL.tblArchivos")>
    Partial Public Class Archivos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _Archivo As String

        Private _TipoArchivo As System.Nullable(Of System.Int32)

        Private _IDSistemaDestino As System.Nullable(Of System.Int32)

        Private _EjecucionAutomatica As System.Nullable(Of Boolean)

        Private _Estado As String

        Private _NombreEstado As String

        Private _Detalle As String

        Private _Fecha As System.Nullable(Of System.DateTime)

        Private _PendienteProceso As System.Nullable(Of Boolean)

        Private _RutaArchivo As String

        Private _Usuario As String

        Private _Actualizacion As System.Nullable(Of System.DateTime)

        Private _NombreArchivo As String

        Private _NombreArchivoGeneracion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnArchivoChanging(value As String)
        End Sub
        Partial Private Sub OnArchivoChanged()
        End Sub
        Partial Private Sub OnTipoArchivoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnTipoArchivoChanged()
        End Sub
        Partial Private Sub OnIDSistemaDestinoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDSistemaDestinoChanged()
        End Sub
        Partial Private Sub OnEjecucionAutomaticaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEjecucionAutomaticaChanged()
        End Sub
        Partial Private Sub OnEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnEstadoChanged()
        End Sub
        Partial Private Sub OnNombreEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreEstadoChanged()
        End Sub
        Partial Private Sub OnDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
        Partial Private Sub OnPendienteProcesoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnPendienteProcesoChanged()
        End Sub
        Partial Private Sub OnRutaArchivoChanging(value As String)
        End Sub
        Partial Private Sub OnRutaArchivoChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnActualizacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OnActualizacionChanged()
        End Sub
        Partial Private Sub OnNombreArchivoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreArchivoChanged()
        End Sub
        Partial Private Sub OnNombreArchivoGeneracionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreArchivoGeneracionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strArchivo", Storage:="_Archivo", DbType:="varchar(80) NOT NULL")>
        Public Property Archivo() As String
            Get
                Return Me._Archivo
            End Get
            Set
                If (String.Equals(Me._Archivo, Value) = False) Then
                    Me.OnArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Archivo = Value
                    Me.SendPropertyChanged("Archivo")
                    Me.OnArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoArchivo", Storage:="_TipoArchivo", DbType:="Int NULL", CanBeNull:=True)>
        Public Property TipoArchivo() As System.Nullable(Of System.Int32)
            Get
                Return Me._TipoArchivo
            End Get
            Set
                If (Object.Equals(Me._TipoArchivo, Value) = False) Then
                    Me.OnTipoArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoArchivo = Value
                    Me.SendPropertyChanged("TipoArchivo")
                    Me.OnTipoArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDSistemaDestino", Storage:="_IDSistemaDestino", DbType:="Int NULL", CanBeNull:=True)>
        Public Property IDSistemaDestino() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDSistemaDestino
            End Get
            Set
                If (Object.Equals(Me._IDSistemaDestino, Value) = False) Then
                    Me.OnIDSistemaDestinoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDSistemaDestino = Value
                    Me.SendPropertyChanged("IDSistemaDestino")
                    Me.OnIDSistemaDestinoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEjecucionAutomatica", Storage:="_EjecucionAutomatica", DbType:="Bit NULL")>
        Public Property EjecucionAutomatica() As System.Nullable(Of Boolean)
            Get
                Return Me._EjecucionAutomatica
            End Get
            Set
                If (Me._EjecucionAutomatica.Equals(Value) = False) Then
                    Me.OnEjecucionAutomaticaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EjecucionAutomatica = Value
                    Me.SendPropertyChanged("EjecucionAutomatica")
                    Me.OnEjecucionAutomaticaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstado", Storage:="_Estado", DbType:="varchar(80) NOT NULL")>
        Public Property Estado() As String
            Get
                Return Me._Estado
            End Get
            Set
                If (String.Equals(Me._Estado, Value) = False) Then
                    Me.OnEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Estado = Value
                    Me.SendPropertyChanged("Estado")
                    Me.OnEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreEstado", Storage:="_NombreEstado", DbType:="varchar(80) NOT NULL", CanBeNull:=False)>
        Public Property NombreEstado() As String
            Get
                Return Me._NombreEstado
            End Get
            Set
                If (String.Equals(Me._NombreEstado, Value) = False) Then
                    Me.OnNombreEstadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreEstado = Value
                    Me.SendPropertyChanged("NombreEstado")
                    Me.OnNombreEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="varchar(500) NOT NULL")>
        Public Property Detalle() As String
            Get
                Return Me._Detalle
            End Get
            Set
                If (String.Equals(Me._Detalle, Value) = False) Then
                    Me.OnDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Detalle = Value
                    Me.SendPropertyChanged("Detalle")
                    Me.OnDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property Fecha() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPendienteProceso", Storage:="_PendienteProceso", DbType:="Bit NULL")>
        Public Property PendienteProceso() As System.Nullable(Of Boolean)
            Get
                Return Me._PendienteProceso
            End Get
            Set
                If (Me._PendienteProceso.Equals(Value) = False) Then
                    Me.OnPendienteProcesoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._PendienteProceso = Value
                    Me.SendPropertyChanged("PendienteProceso")
                    Me.OnPendienteProcesoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRutaArchivo", Storage:="_RutaArchivo", DbType:="varchar(500) NOT NULL")>
        Public Property RutaArchivo() As String
            Get
                Return Me._RutaArchivo
            End Get
            Set
                If (String.Equals(Me._RutaArchivo, Value) = False) Then
                    Me.OnRutaArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._RutaArchivo = Value
                    Me.SendPropertyChanged("RutaArchivo")
                    Me.OnRutaArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property Actualizacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._Actualizacion
            End Get
            Set
                If (Object.Equals(Me._Actualizacion, Value) = False) Then
                    Me.OnActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Actualizacion = Value
                    Me.SendPropertyChanged("Actualizacion")
                    Me.OnActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreArchivo", Storage:="_NombreArchivo", DbType:="varchar(80) NOT NULL")>
        Public Property NombreArchivo() As String
            Get
                Return Me._NombreArchivo
            End Get
            Set
                If (String.Equals(Me._NombreArchivo, Value) = False) Then
                    Me.OnNombreArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreArchivo = Value
                    Me.SendPropertyChanged("NombreArchivo")
                    Me.OnNombreArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreArchivoGeneracion", Storage:="_NombreArchivoGeneracion", DbType:="varchar(80) NOT NULL")>
        Public Property NombreArchivoGeneracion() As String
            Get
                Return Me._NombreArchivoGeneracion
            End Get
            Set
                If (String.Equals(Me._NombreArchivoGeneracion, Value) = False) Then
                    Me.OnNombreArchivoGeneracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreArchivoGeneracion = Value
                    Me.SendPropertyChanged("NombreArchivoGeneracion")
                    Me.OnNombreArchivoGeneracionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="DECEVAL.tblDetalleArchivos")>
    Partial Public Class DetalleArchivos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IDArchivo As Integer

        Private _Detalle As String

        Private _Fecha As Date

        Private _Usuario As String

        Private _InfoSesion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIDArchivoChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDArchivoChanged()
        End Sub
        Partial Private Sub OnDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnDetalleChanged()
        End Sub
        Partial Private Sub OnFechaChanging(value As Date)
        End Sub
        Partial Private Sub OnFechaChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDArchivo", Storage:="_IDArchivo", DbType:="Int NOT NULL")>
        Public Property IDArchivo() As Integer
            Get
                Return Me._IDArchivo
            End Get
            Set
                If ((Me._IDArchivo = Value) _
                            = False) Then
                    Me.OnIDArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDArchivo = Value
                    Me.SendPropertyChanged("IDArchivo")
                    Me.OnIDArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalle", Storage:="_Detalle", DbType:="varchar(max) NOT NULL", CanBeNull:=False)>
        Public Property Detalle() As String
            Get
                Return Me._Detalle
            End Get
            Set
                If (String.Equals(Me._Detalle, Value) = False) Then
                    Me.OnDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Detalle = Value
                    Me.SendPropertyChanged("Detalle")
                    Me.OnDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFecha", Storage:="_Fecha", DbType:="datetime NOT NULL", CanBeNull:=False)>
        Public Property Fecha() As Date
            Get
                Return Me._Fecha
            End Get
            Set
                If (Object.Equals(Me._Fecha, Value) = False) Then
                    Me.OnFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fecha = Value
                    Me.SendPropertyChanged("Fecha")
                    Me.OnFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

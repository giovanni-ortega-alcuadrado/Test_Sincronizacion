'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dbOyDNetPlusV12")>
Partial Public Class OyDPLUSGarantiasDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAuditoria(instance As Auditoria)
    End Sub
    Partial Private Sub UpdateAuditoria(instance As Auditoria)
    End Sub
    Partial Private Sub DeleteAuditoria(instance As Auditoria)
    End Sub
    Partial Private Sub InsertItemComboGarantia(instance As ItemComboGarantia)
    End Sub
    Partial Private Sub UpdateItemComboGarantia(instance As ItemComboGarantia)
    End Sub
    Partial Private Sub DeleteItemComboGarantia(instance As ItemComboGarantia)
    End Sub
    Partial Private Sub InsertVisorDeGarantias(instance As VisorDeGarantias)
    End Sub
    Partial Private Sub UpdateVisorDeGarantias(instance As VisorDeGarantias)
    End Sub
    Partial Private Sub DeleteVisorDeGarantias(instance As VisorDeGarantias)
    End Sub
    Partial Private Sub InsertTitulosGarantia(instance As TitulosGarantia)
    End Sub
    Partial Private Sub UpdateTitulosGarantia(instance As TitulosGarantia)
    End Sub
    Partial Private Sub DeleteTitulosGarantia(instance As TitulosGarantia)
    End Sub
    Partial Private Sub InsertRespuestaValidaciones(instance As RespuestaValidaciones)
    End Sub
    Partial Private Sub UpdateRespuestaValidaciones(instance As RespuestaValidaciones)
    End Sub
    Partial Private Sub DeleteRespuestaValidaciones(instance As RespuestaValidaciones)
    End Sub
    Partial Private Sub InsertSaldosCliente(instance As SaldosCliente)
    End Sub
    Partial Private Sub UpdateSaldosCliente(instance As SaldosCliente)
    End Sub
    Partial Private Sub DeleteSaldosCliente(instance As SaldosCliente)
    End Sub
    Partial Private Sub InsertSaldosBloqueados(instance As SaldosBloqueados)
    End Sub
    Partial Private Sub UpdateSaldosBloqueados(instance As SaldosBloqueados)
    End Sub
    Partial Private Sub DeleteSaldosBloqueados(instance As SaldosBloqueados)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property Auditorias() As System.Data.Linq.Table(Of Auditoria)
        Get
            Return Me.GetTable(Of Auditoria)
        End Get
    End Property

    Public ReadOnly Property ItemComboGarantias() As System.Data.Linq.Table(Of ItemComboGarantia)
        Get
            Return Me.GetTable(Of ItemComboGarantia)
        End Get
    End Property

    Public ReadOnly Property VisorDeGarantias() As System.Data.Linq.Table(Of VisorDeGarantias)
        Get
            Return Me.GetTable(Of VisorDeGarantias)
        End Get
    End Property

    Public ReadOnly Property TitulosGarantias() As System.Data.Linq.Table(Of TitulosGarantia)
        Get
            Return Me.GetTable(Of TitulosGarantia)
        End Get
    End Property

    Public ReadOnly Property RespuestaValidaciones() As System.Data.Linq.Table(Of RespuestaValidaciones)
        Get
            Return Me.GetTable(Of RespuestaValidaciones)
        End Get
    End Property

    Public ReadOnly Property SaldosCliente() As System.Data.Linq.Table(Of SaldosCliente)
        Get
            Return Me.GetTable(Of SaldosCliente)
        End Get
    End Property

    Public ReadOnly Property SaldosBloqueados() As System.Data.Linq.Table(Of SaldosBloqueados)
        Get
            Return Me.GetTable(Of SaldosBloqueados)
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_Custodias_Consultar")>
    Public Function uspOyDNet_Garantias_Custodias_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDLiquidacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrEstadoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoMercado As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of TitulosGarantia)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pintIDLiquidacion, plngParcial, pstrTipo, pstrClase, pdtmLiquidacion, pstrEstadoTitulo, pintTipoMercado, pstrIdEspecie, pdblCantidad, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of TitulosGarantia))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_Operaciones_Consultar")>
    Public Function uspOyDNet_Garantias_Operaciones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDLiquidacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoMercado As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal pstrTipoGarantia As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogActualizarDatos As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEnviarCorreos As System.Nullable(Of Boolean)) As ISingleResult(Of VisorDeGarantias)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pstrIdEspecie, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pintIDLiquidacion, plngParcial, pstrTipo, pstrClase, pdtmLiquidacion, pintTipoMercado, pstrTipoGarantia, plogActualizarDatos, plogEnviarCorreos)
        Return CType(result.ReturnValue, ISingleResult(Of VisorDeGarantias))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_SaldosBloqueados_Consultar")>
    Public Function uspOyDNet_Garantias_SaldosBloqueados_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDLiquidacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoMercado As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of SaldosBloqueados)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pintIDLiquidacion, plngParcial, pstrTipo, pstrClase, pdtmLiquidacion, pintTipoMercado, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of SaldosBloqueados))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_Saldos_Bloquear_Liberar")>
    Public Function uspOyDNet_Garantias_Saldos_Bloquear_Liberar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(17)")> ByVal plngIDComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal pstrMotivoBloqueoSaldo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Money")> ByVal pcurValorBloqueado As System.Nullable(Of Decimal),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrNaturaleza As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaBloqueo As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal pstrDetalleBloqueo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDLiquidacion As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoMercado As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogSAG As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrRadicado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogReasiganar As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Money")> ByVal pcurValorReasignar As System.Nullable(Of Decimal),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdBloqueo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of RespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pstrMotivoBloqueoSaldo, pcurValorBloqueado, pstrNaturaleza, pdtmFechaBloqueo, pstrDetalleBloqueo, pintIDLiquidacion, plngParcial, pstrTipo, pstrClase, pdtmLiquidacion, pintTipoMercado, plogSAG, pstrRadicado, plogReasiganar, pcurValorReasignar, pintIdBloqueo, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of RespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_Custodias_Bloquear_Liberar")>
    Public Function uspOyDNet_Garantias_Custodias_Bloquear_Liberar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdRecibo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngSecuencia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrMotivoBloqueo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(300)")> ByVal pstrNotasBloqueo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrAccionAEjecutar As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmRecibo As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDLiquidacion As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngParcial As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipo As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmLiquidacion As System.Nullable(Of Date),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintTipoMercado As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogSAG As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrRadicado As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogReasiganar As System.Nullable(Of Boolean),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblCantidadReasignar As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdBloqueo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pINTErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of RespuestaValidaciones)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIdRecibo, plngSecuencia, pstrMotivoBloqueo, pstrNotasBloqueo, pdblCantidad, pstrAccionAEjecutar, pdtmRecibo, pintIDLiquidacion, plngParcial, pstrTipo, pstrClase, pdtmLiquidacion, pintTipoMercado, plogSAG, pstrRadicado, plogReasiganar, pdblCantidadReasignar, pintIdBloqueo, pstrUsuario, pstrInfosesion, pINTErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of RespuestaValidaciones))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspValidarSaldoClientesTesoreria_OyDNet")>
    Public Function uspValidarSaldoClientesTesoreria_OyDNet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDComisionista As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDSucComisionista As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmDocumento As System.Nullable(Of Date)) As ISingleResult(Of sp_VerificarSaldoResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComisionista, plngIDSucComisionista, plngIDComitente, pdtmDocumento)
        Return CType(result.ReturnValue, ISingleResult(Of sp_VerificarSaldoResult))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_SaldoCliente_Consultar")>
    Public Function uspOyDNet_Garantias_SaldoCliente_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmCorte As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of SaldosCliente)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pdtmCorte, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of SaldosCliente))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="OYDPLUSGarantias.uspOyDNet_Garantias_CargarCombos")>
    Public Function uspOyDNet_Garantias_CargarCombos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrListaNombreCombos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrCondicionTexto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintCondicionNumerica As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String) As ISingleResult(Of ItemComboGarantia)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrListaNombreCombos, pstrCondicionTexto, pintCondicionNumerica, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of ItemComboGarantia))
    End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
Partial Public Class Auditoria
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Servidor As String

    Private _Maquina As String

    Private _DirIPMaquina As String

    Private _Browser As String

    Private _ErrorPersonalizado As Byte

    Private _ID As String

    Private _Usuario As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnServidorChanging(value As String)
    End Sub
    Partial Private Sub OnServidorChanged()
    End Sub
    Partial Private Sub OnMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnMaquinaChanged()
    End Sub
    Partial Private Sub OnDirIPMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnDirIPMaquinaChanged()
    End Sub
    Partial Private Sub OnBrowserChanging(value As String)
    End Sub
    Partial Private Sub OnBrowserChanged()
    End Sub
    Partial Private Sub OnErrorPersonalizadoChanging(value As Byte)
    End Sub
    Partial Private Sub OnErrorPersonalizadoChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Servidor", DbType:="VarChar(50)", CanBeNull:=False)>
    Public Property Servidor() As String
        Get
            Return Me._Servidor
        End Get
        Set
            If (String.Equals(Me._Servidor, Value) = False) Then
                Me.OnServidorChanging(Value)
                Me.SendPropertyChanging()
                Me._Servidor = Value
                Me.SendPropertyChanged("Servidor")
                Me.OnServidorChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maquina", DbType:="VarChar(50)", CanBeNull:=False)>
    Public Property Maquina() As String
        Get
            Return Me._Maquina
        End Get
        Set
            If (String.Equals(Me._Maquina, Value) = False) Then
                Me.OnMaquinaChanging(Value)
                Me.SendPropertyChanging()
                Me._Maquina = Value
                Me.SendPropertyChanged("Maquina")
                Me.OnMaquinaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirIPMaquina", DbType:="VarChar(50)", CanBeNull:=False)>
    Public Property DirIPMaquina() As String
        Get
            Return Me._DirIPMaquina
        End Get
        Set
            If (String.Equals(Me._DirIPMaquina, Value) = False) Then
                Me.OnDirIPMaquinaChanging(Value)
                Me.SendPropertyChanging()
                Me._DirIPMaquina = Value
                Me.SendPropertyChanged("DirIPMaquina")
                Me.OnDirIPMaquinaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Browser", DbType:="VarChar(250)", CanBeNull:=False)>
    Public Property Browser() As String
        Get
            Return Me._Browser
        End Get
        Set
            If (String.Equals(Me._Browser, Value) = False) Then
                Me.OnBrowserChanging(Value)
                Me.SendPropertyChanging()
                Me._Browser = Value
                Me.SendPropertyChanged("Browser")
                Me.OnBrowserChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorPersonalizado")>
    Public Property ErrorPersonalizado() As Byte
        Get
            Return Me._ErrorPersonalizado
        End Get
        Set
            If ((Me._ErrorPersonalizado = Value) _
                        = False) Then
                Me.OnErrorPersonalizadoChanging(Value)
                Me.SendPropertyChanging()
                Me._ErrorPersonalizado = Value
                Me.SendPropertyChanged("ErrorPersonalizado")
                Me.OnErrorPersonalizadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property ID() As String
        Get
            Return Me._ID
        End Get
        Set
            If (String.Equals(Me._ID, Value) = False) Then
                Me.OnIDChanging(Value)
                Me.SendPropertyChanging()
                Me._ID = Value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(60) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, Value) = False) Then
                Me.OnUsuarioChanging(Value)
                Me.SendPropertyChanging()
                Me._Usuario = Value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
Partial Public Class ItemComboGarantia
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Categoria As String

    Private _ID As String

    Private _Descripcion As String

    Private _intID As System.Nullable(Of System.Int32)

    Private _Retorno As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnintIDChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Categoria() As String
        Get
            Return Me._Categoria
        End Get
        Set
            If (String.Equals(Me._Categoria, Value) = False) Then
                Me.OnCategoriaChanging(Value)
                Me.SendPropertyChanging()
                Me._Categoria = Value
                Me.SendPropertyChanged("Categoria")
                Me.OnCategoriaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property ID() As String
        Get
            Return Me._ID
        End Get
        Set
            If (String.Equals(Me._ID, Value) = False) Then
                Me.OnIDChanging(Value)
                Me.SendPropertyChanging()
                Me._ID = Value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, Value) = False) Then
                Me.OnDescripcionChanging(Value)
                Me.SendPropertyChanging()
                Me._Descripcion = Value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", CanBeNull:=True)>
    Public Property intID() As System.Nullable(Of System.Int32)
        Get
            Return Me._intID
        End Get
        Set
            If (Object.Equals(Me._intID, Value) = False) Then
                Me.OnintIDChanging(Value)
                Me.SendPropertyChanging()
                Me._intID = Value
                Me.SendPropertyChanged("intID")
                Me.OnintIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Retorno")>
    Public Property Retorno() As String
        Get
            Return Me._Retorno
        End Get
        Set
            If (String.Equals(Me._Retorno, Value) = False) Then
                Me.OnRetornoChanging(Value)
                Me.SendPropertyChanging()
                Me._Retorno = Value
                Me.SendPropertyChanged("Retorno")
                Me.OnRetornoChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VisorDeGarantias")>
Partial Public Class VisorDeGarantias
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer

    Private _IDCliente As String

    Private _NroDocumento As String

    Private _NombreCliente As String

    Private _TipoProducto As String

    Private _SaldoBloqueado As System.Nullable(Of Double)

    Private _BloqueadoTitulos As System.Nullable(Of Double)

    Private _IDLiquidacion As Integer

    Private _Parcial As Integer

    Private _Tipo As String

    Private _ClaseOrden As String

    Private _FechaLiquidacion As System.Nullable(Of Date)

    Private _IDEspecie As String

    Private _totalliq_Inicio As System.Nullable(Of Double)

    Private _Cumplimiento_Inicio As System.Nullable(Of Date)

    Private _totalliq_Regreso As System.Nullable(Of Double)

    Private _CumplimientoRegreso As System.Nullable(Of Date)

    Private _ValorBloquear As System.Nullable(Of Decimal)

    Private _Prioridad As System.Nullable(Of Integer)

    Private _PrioridadGrupo As System.Nullable(Of Integer)

    Private _Bloqueando As System.Nullable(Of Boolean)

    Private _DesBloqueando As System.Nullable(Of Boolean)

    Private _DescripcionTipoOferta As String

    Private _NombreClase As String

    Private _NombreTipoOperacion As String

    Private _PorcCastigoLegal As System.Nullable(Of Decimal)

    Private _PorcCastigoInterno As System.Nullable(Of Decimal)

    Private _PorcCumplimientoLegal As System.Nullable(Of Decimal)

    Private _PorcCumplimientoInterno As System.Nullable(Of Decimal)

    Private _PorcAmarilloCumpLegal As System.Nullable(Of Decimal)

    Private _PorcRojoCumpLegal As System.Nullable(Of Decimal)

    Private _PorcAmarilloCumpInterno As System.Nullable(Of Decimal)

    Private _PorcRojoCumpInterno As System.Nullable(Of Decimal)

    Private _ValorLegalRequerido As System.Nullable(Of Double)

    Private _ValorInternoRequerido As System.Nullable(Of Double)

    Private _ValorTotalRequerido As System.Nullable(Of Double)

    Private _ValorLegalAsociado As System.Nullable(Of Double)

    Private _ValorInternoAsociado As System.Nullable(Of Double)

    Private _ValorTotalAsociado As System.Nullable(Of Double)

    Private _CoberturaBolsa As System.Nullable(Of Double)

    Private _CoberturaValores As System.Nullable(Of Double)

    Private _CoberturaTotal As System.Nullable(Of Double)

    Private _TipoGarantia As String

    Private _SaldoBloqueadoXLiq As System.Nullable(Of Double)

    Private _BloqueadoTitulosXLiq As System.Nullable(Of Double)

    Private _SaldoCliente As System.Nullable(Of Double)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDClienteChanging(value As String)
    End Sub
    Partial Private Sub OnIDClienteChanged()
    End Sub
    Partial Private Sub OnNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNroDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreClienteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreClienteChanged()
    End Sub
    Partial Private Sub OnTipoProductoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoProductoChanged()
    End Sub
    Partial Private Sub OnSaldoBloqueadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSaldoBloqueadoChanged()
    End Sub
    Partial Private Sub OnBloqueadoTitulosChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBloqueadoTitulosChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLiquidacionChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As Integer)
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseOrdenChanging(value As String)
    End Sub
    Partial Private Sub OnClaseOrdenChanged()
    End Sub
    Partial Private Sub OnFechaLiquidacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaLiquidacionChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub Ontotalliq_InicioChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Ontotalliq_InicioChanged()
    End Sub
    Partial Private Sub OnCumplimiento_InicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCumplimiento_InicioChanged()
    End Sub
    Partial Private Sub Ontotalliq_RegresoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Ontotalliq_RegresoChanged()
    End Sub
    Partial Private Sub OnCumplimientoRegresoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCumplimientoRegresoChanged()
    End Sub
    Partial Private Sub OnValorBloquearChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorBloquearChanged()
    End Sub
    Partial Private Sub OnPrioridadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPrioridadChanged()
    End Sub
    Partial Private Sub OnPrioridadGrupoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPrioridadGrupoChanged()
    End Sub
    Partial Private Sub OnPuedeBloquearChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPuedeBloquearChanged()
    End Sub
    Partial Private Sub OnPuedeDesBloquearChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPuedeDesBloquearChanged()
    End Sub
    Partial Private Sub OnDescripcionTipoOfertaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionTipoOfertaChanged()
    End Sub
    Partial Private Sub OnNombreClaseChanging(value As String)
    End Sub
    Partial Private Sub OnNombreClaseChanged()
    End Sub
    Partial Private Sub OnNombreTipoOperacionChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTipoOperacionChanged()
    End Sub
    Partial Private Sub OnPorcCastigoLegalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcCastigoLegalChanged()
    End Sub
    Partial Private Sub OnPorcCastigoInternoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcCastigoInternoChanged()
    End Sub
    Partial Private Sub OnPorcCumplimientoLegalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcCumplimientoLegalChanged()
    End Sub
    Partial Private Sub OnPorcCumplimientoInternoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcCumplimientoInternoChanged()
    End Sub
    Partial Private Sub OnPorcAmarilloCumpLegalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcAmarilloCumpLegalChanged()
    End Sub
    Partial Private Sub OnPorcRojoCumpLegalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcRojoCumpLegalChanged()
    End Sub
    Partial Private Sub OnPorcAmarilloCumpInternoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcAmarilloCumpInternoChanged()
    End Sub
    Partial Private Sub OnPorcRojoCumpInternoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPorcRojoCumpInternoChanged()
    End Sub
    Partial Private Sub OnValorLegalRequeridoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorLegalRequeridoChanged()
    End Sub
    Partial Private Sub OnValorInternoRequeridoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorInternoRequeridoChanged()
    End Sub
    Partial Private Sub OnValorTotalRequeridoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorTotalRequeridoChanged()
    End Sub
    Partial Private Sub OnValorLegalAsociadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorLegalAsociadoChanged()
    End Sub
    Partial Private Sub OnValorInternoAsociadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorInternoAsociadoChanged()
    End Sub
    Partial Private Sub OnValorTotalAsociadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorTotalAsociadoChanged()
    End Sub
    Partial Private Sub OnCoberturaBolsaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCoberturaBolsaChanged()
    End Sub
    Partial Private Sub OnCoberturaValoresChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCoberturaValoresChanged()
    End Sub
    Partial Private Sub OnCoberturaTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCoberturaTotalChanged()
    End Sub
    Partial Private Sub OnTipoGarantiaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoGarantiaChanged()
    End Sub
    Partial Private Sub OnSaldoBloqueadoXLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSaldoBloqueadoXLiqChanged()
    End Sub
    Partial Private Sub OnBloqueadoTitulosXLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBloqueadoTitulosXLiqChanged()
    End Sub
    Partial Private Sub OnSaldoClienteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSaldoClienteChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_ID")>
    Public Property ID() As Integer
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = Value) _
                        = False) Then
                Me.OnIDChanging(Value)
                Me.SendPropertyChanging()
                Me._ID = Value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDCliente", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property IDCliente() As String
        Get
            Return Me._IDCliente
        End Get
        Set
            If (String.Equals(Me._IDCliente, Value) = False) Then
                Me.OnIDClienteChanging(Value)
                Me.SendPropertyChanging()
                Me._IDCliente = Value
                Me.SendPropertyChanged("IDCliente")
                Me.OnIDClienteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNrodocumento", Storage:="_NroDocumento")>
    Public Property NroDocumento() As String
        Get
            Return Me._NroDocumento
        End Get
        Set
            If (String.Equals(Me._NroDocumento, Value) = False) Then
                Me.OnNroDocumentoChanging(Value)
                Me.SendPropertyChanging()
                Me._NroDocumento = Value
                Me.SendPropertyChanged("NroDocumento")
                Me.OnNroDocumentoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreCliente", Storage:="_NombreCliente")>
    Public Property NombreCliente() As String
        Get
            Return Me._NombreCliente
        End Get
        Set
            If (String.Equals(Me._NombreCliente, Value) = False) Then
                Me.OnNombreClienteChanging(Value)
                Me.SendPropertyChanging()
                Me._NombreCliente = Value
                Me.SendPropertyChanged("NombreCliente")
                Me.OnNombreClienteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoProducto", Storage:="_TipoProducto")>
    Public Property TipoProducto() As String
        Get
            Return Me._TipoProducto
        End Get
        Set
            If (String.Equals(Me._TipoProducto, Value) = False) Then
                Me.OnTipoProductoChanging(Value)
                Me.SendPropertyChanging()
                Me._TipoProducto = Value
                Me.SendPropertyChanged("TipoProducto")
                Me.OnTipoProductoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSaldoBloqueado", Storage:="_SaldoBloqueado")>
    Public Property SaldoBloqueado() As System.Nullable(Of Double)
        Get
            Return Me._SaldoBloqueado
        End Get
        Set
            If (Me._SaldoBloqueado.Equals(Value) = False) Then
                Me.OnSaldoBloqueadoChanging(Value)
                Me.SendPropertyChanging()
                Me._SaldoBloqueado = Value
                Me.SendPropertyChanged("SaldoBloqueado")
                Me.OnSaldoBloqueadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblBloqueadoTitulos", Storage:="_BloqueadoTitulos")>
    Public Property BloqueadoTitulos() As System.Nullable(Of Double)
        Get
            Return Me._BloqueadoTitulos
        End Get
        Set
            If (Me._BloqueadoTitulos.Equals(Value) = False) Then
                Me.OnBloqueadoTitulosChanging(Value)
                Me.SendPropertyChanging()
                Me._BloqueadoTitulos = Value
                Me.SendPropertyChanged("BloqueadoTitulos")
                Me.OnBloqueadoTitulosChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdLiquidacion", Storage:="_IDLiquidacion", IsPrimaryKey:=True)>
    Public Property IDLiquidacion() As Integer
        Get
            Return Me._IDLiquidacion
        End Get
        Set
            If ((Me._IDLiquidacion = Value) _
                        = False) Then
                Me.OnIDLiquidacionChanging(Value)
                Me.SendPropertyChanging()
                Me._IDLiquidacion = Value
                Me.SendPropertyChanged("IDLiquidacion")
                Me.OnIDLiquidacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", IsPrimaryKey:=True)>
    Public Property Parcial() As Integer
        Get
            Return Me._Parcial
        End Get
        Set
            If ((Me._Parcial = Value) _
                        = False) Then
                Me.OnParcialChanging(Value)
                Me.SendPropertyChanging()
                Me._Parcial = Value
                Me.SendPropertyChanged("Parcial")
                Me.OnParcialChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Tipo() As String
        Get
            Return Me._Tipo
        End Get
        Set
            If (String.Equals(Me._Tipo, Value) = False) Then
                Me.OnTipoChanging(Value)
                Me.SendPropertyChanging()
                Me._Tipo = Value
                Me.SendPropertyChanged("Tipo")
                Me.OnTipoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseOrden", Storage:="_ClaseOrden", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property ClaseOrden() As String
        Get
            Return Me._ClaseOrden
        End Get
        Set
            If (String.Equals(Me._ClaseOrden, Value) = False) Then
                Me.OnClaseOrdenChanging(Value)
                Me.SendPropertyChanging()
                Me._ClaseOrden = Value
                Me.SendPropertyChanged("ClaseOrden")
                Me.OnClaseOrdenChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmLiquidacion", Storage:="_FechaLiquidacion", IsPrimaryKey:=True)>
    Public Property FechaLiquidacion() As System.Nullable(Of Date)
        Get
            Return Me._FechaLiquidacion
        End Get
        Set
            If (Me._FechaLiquidacion.Equals(Value) = False) Then
                Me.OnFechaLiquidacionChanging(Value)
                Me.SendPropertyChanging()
                Me._FechaLiquidacion = Value
                Me.SendPropertyChanged("FechaLiquidacion")
                Me.OnFechaLiquidacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_IDEspecie")>
    Public Property IDEspecie() As String
        Get
            Return Me._IDEspecie
        End Get
        Set
            If (String.Equals(Me._IDEspecie, Value) = False) Then
                Me.OnIDEspecieChanging(Value)
                Me.SendPropertyChanging()
                Me._IDEspecie = Value
                Me.SendPropertyChanged("IDEspecie")
                Me.OnIDEspecieChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Curtotalliq_Inicio", Storage:="_totalliq_Inicio")>
    Public Property totalliq_Inicio() As System.Nullable(Of Double)
        Get
            Return Me._totalliq_Inicio
        End Get
        Set
            If (Me._totalliq_Inicio.Equals(Value) = False) Then
                Me.Ontotalliq_InicioChanging(Value)
                Me.SendPropertyChanging()
                Me._totalliq_Inicio = Value
                Me.SendPropertyChanged("totalliq_Inicio")
                Me.Ontotalliq_InicioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento_Inicio", Storage:="_Cumplimiento_Inicio")>
    Public Property Cumplimiento_Inicio() As System.Nullable(Of Date)
        Get
            Return Me._Cumplimiento_Inicio
        End Get
        Set
            If (Me._Cumplimiento_Inicio.Equals(Value) = False) Then
                Me.OnCumplimiento_InicioChanging(Value)
                Me.SendPropertyChanging()
                Me._Cumplimiento_Inicio = Value
                Me.SendPropertyChanged("Cumplimiento_Inicio")
                Me.OnCumplimiento_InicioChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Curtotalliq_Regreso", Storage:="_totalliq_Regreso")>
    Public Property totalliq_Regreso() As System.Nullable(Of Double)
        Get
            Return Me._totalliq_Regreso
        End Get
        Set
            If (Me._totalliq_Regreso.Equals(Value) = False) Then
                Me.Ontotalliq_RegresoChanging(Value)
                Me.SendPropertyChanging()
                Me._totalliq_Regreso = Value
                Me.SendPropertyChanged("totalliq_Regreso")
                Me.Ontotalliq_RegresoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCumplimiento_Regreso", Storage:="_CumplimientoRegreso")>
    Public Property CumplimientoRegreso() As System.Nullable(Of Date)
        Get
            Return Me._CumplimientoRegreso
        End Get
        Set
            If (Me._CumplimientoRegreso.Equals(Value) = False) Then
                Me.OnCumplimientoRegresoChanging(Value)
                Me.SendPropertyChanging()
                Me._CumplimientoRegreso = Value
                Me.SendPropertyChanged("CumplimientoRegreso")
                Me.OnCumplimientoRegresoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorBloquear")>
    Public Property ValorBloquear() As System.Nullable(Of Decimal)
        Get
            Return Me._ValorBloquear
        End Get
        Set
            If (Me._ValorBloquear.Equals(Value) = False) Then
                Me.OnValorBloquearChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorBloquear = Value
                Me.SendPropertyChanged("ValorBloquear")
                Me.OnValorBloquearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prioridad")>
    Public Property Prioridad() As System.Nullable(Of Integer)
        Get
            Return Me._Prioridad
        End Get
        Set
            If (Me._Prioridad.Equals(Value) = False) Then
                Me.OnPrioridadChanging(Value)
                Me.SendPropertyChanging()
                Me._Prioridad = Value
                Me.SendPropertyChanged("Prioridad")
                Me.OnPrioridadChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrioridadGrupo")>
    Public Property PrioridadGrupo() As System.Nullable(Of Integer)
        Get
            Return Me._PrioridadGrupo
        End Get
        Set
            If (Me._PrioridadGrupo.Equals(Value) = False) Then
                Me.OnPrioridadGrupoChanging(Value)
                Me.SendPropertyChanging()
                Me._PrioridadGrupo = Value
                Me.SendPropertyChanged("PrioridadGrupo")
                Me.OnPrioridadGrupoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bloqueando")>
    Public Property PuedeBloquear() As System.Nullable(Of Boolean)
        Get
            Return Me._Bloqueando
        End Get
        Set
            If (Me._Bloqueando.Equals(Value) = False) Then
                Me.OnPuedeBloquearChanging(Value)
                Me.SendPropertyChanging()
                Me._Bloqueando = Value
                Me.SendPropertyChanged("PuedeBloquear")
                Me.OnPuedeBloquearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesBloqueando")>
    Public Property PuedeDesBloquear() As System.Nullable(Of Boolean)
        Get
            Return Me._DesBloqueando
        End Get
        Set
            If (Me._DesBloqueando.Equals(Value) = False) Then
                Me.OnPuedeDesBloquearChanging(Value)
                Me.SendPropertyChanging()
                Me._DesBloqueando = Value
                Me.SendPropertyChanged("PuedeDesBloquear")
                Me.OnPuedeDesBloquearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionTipoOferta", Storage:="_DescripcionTipoOferta")>
    Public Property DescripcionTipoOferta() As String
        Get
            Return Me._DescripcionTipoOferta
        End Get
        Set
            If (String.Equals(Me._DescripcionTipoOferta, Value) = False) Then
                Me.OnDescripcionTipoOfertaChanging(Value)
                Me.SendPropertyChanging()
                Me._DescripcionTipoOferta = Value
                Me.SendPropertyChanged("DescripcionTipoOferta")
                Me.OnDescripcionTipoOfertaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreClase", Storage:="_NombreClase")>
    Public Property NombreClase() As String
        Get
            Return Me._NombreClase
        End Get
        Set
            If (String.Equals(Me._NombreClase, Value) = False) Then
                Me.OnNombreClaseChanging(Value)
                Me.SendPropertyChanging()
                Me._NombreClase = Value
                Me.SendPropertyChanged("NombreClase")
                Me.OnNombreClaseChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreTipoOperacion", Storage:="_NombreTipoOperacion")>
    Public Property NombreTipoOperacion() As String
        Get
            Return Me._NombreTipoOperacion
        End Get
        Set
            If (String.Equals(Me._NombreTipoOperacion, Value) = False) Then
                Me.OnNombreTipoOperacionChanging(Value)
                Me.SendPropertyChanging()
                Me._NombreTipoOperacion = Value
                Me.SendPropertyChanged("NombreTipoOperacion")
                Me.OnNombreTipoOperacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcCastigoLegal", Storage:="_PorcCastigoLegal")>
    Public Property PorcCastigoLegal() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcCastigoLegal
        End Get
        Set
            If (Me._PorcCastigoLegal.Equals(Value) = False) Then
                Me.OnPorcCastigoLegalChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcCastigoLegal = Value
                Me.SendPropertyChanged("PorcCastigoLegal")
                Me.OnPorcCastigoLegalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcCastigoInterno", Storage:="_PorcCastigoInterno")>
    Public Property PorcCastigoInterno() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcCastigoInterno
        End Get
        Set
            If (Me._PorcCastigoInterno.Equals(Value) = False) Then
                Me.OnPorcCastigoInternoChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcCastigoInterno = Value
                Me.SendPropertyChanged("PorcCastigoInterno")
                Me.OnPorcCastigoInternoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcCumplimientoLegal", Storage:="_PorcCumplimientoLegal")>
    Public Property PorcCumplimientoLegal() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcCumplimientoLegal
        End Get
        Set
            If (Me._PorcCumplimientoLegal.Equals(Value) = False) Then
                Me.OnPorcCumplimientoLegalChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcCumplimientoLegal = Value
                Me.SendPropertyChanged("PorcCumplimientoLegal")
                Me.OnPorcCumplimientoLegalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcCumplimientoInterno", Storage:="_PorcCumplimientoInterno")>
    Public Property PorcCumplimientoInterno() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcCumplimientoInterno
        End Get
        Set
            If (Me._PorcCumplimientoInterno.Equals(Value) = False) Then
                Me.OnPorcCumplimientoInternoChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcCumplimientoInterno = Value
                Me.SendPropertyChanged("PorcCumplimientoInterno")
                Me.OnPorcCumplimientoInternoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcAmarilloCumpLegal", Storage:="_PorcAmarilloCumpLegal")>
    Public Property PorcAmarilloCumpLegal() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcAmarilloCumpLegal
        End Get
        Set
            If (Me._PorcAmarilloCumpLegal.Equals(Value) = False) Then
                Me.OnPorcAmarilloCumpLegalChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcAmarilloCumpLegal = Value
                Me.SendPropertyChanged("PorcAmarilloCumpLegal")
                Me.OnPorcAmarilloCumpLegalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcRojoCumpLegal", Storage:="_PorcRojoCumpLegal")>
    Public Property PorcRojoCumpLegal() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcRojoCumpLegal
        End Get
        Set
            If (Me._PorcRojoCumpLegal.Equals(Value) = False) Then
                Me.OnPorcRojoCumpLegalChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcRojoCumpLegal = Value
                Me.SendPropertyChanged("PorcRojoCumpLegal")
                Me.OnPorcRojoCumpLegalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcAmarilloCumpInterno", Storage:="_PorcAmarilloCumpInterno")>
    Public Property PorcAmarilloCumpInterno() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcAmarilloCumpInterno
        End Get
        Set
            If (Me._PorcAmarilloCumpInterno.Equals(Value) = False) Then
                Me.OnPorcAmarilloCumpInternoChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcAmarilloCumpInterno = Value
                Me.SendPropertyChanged("PorcAmarilloCumpInterno")
                Me.OnPorcAmarilloCumpInternoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numPorcRojoCumpInterno", Storage:="_PorcRojoCumpInterno")>
    Public Property PorcRojoCumpInterno() As System.Nullable(Of Decimal)
        Get
            Return Me._PorcRojoCumpInterno
        End Get
        Set
            If (Me._PorcRojoCumpInterno.Equals(Value) = False) Then
                Me.OnPorcRojoCumpInternoChanging(Value)
                Me.SendPropertyChanging()
                Me._PorcRojoCumpInterno = Value
                Me.SendPropertyChanged("PorcRojoCumpInterno")
                Me.OnPorcRojoCumpInternoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorLegalRequerido", Storage:="_ValorLegalRequerido")>
    Public Property ValorLegalRequerido() As System.Nullable(Of Double)
        Get
            Return Me._ValorLegalRequerido
        End Get
        Set
            If (Me._ValorLegalRequerido.Equals(Value) = False) Then
                Me.OnValorLegalRequeridoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorLegalRequerido = Value
                Me.SendPropertyChanged("ValorLegalRequerido")
                Me.OnValorLegalRequeridoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorInternoRequerido", Storage:="_ValorInternoRequerido")>
    Public Property ValorInternoRequerido() As System.Nullable(Of Double)
        Get
            Return Me._ValorInternoRequerido
        End Get
        Set
            If (Me._ValorInternoRequerido.Equals(Value) = False) Then
                Me.OnValorInternoRequeridoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorInternoRequerido = Value
                Me.SendPropertyChanged("ValorInternoRequerido")
                Me.OnValorInternoRequeridoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorTotalRequerido", Storage:="_ValorTotalRequerido")>
    Public Property ValorTotalRequerido() As System.Nullable(Of Double)
        Get
            Return Me._ValorTotalRequerido
        End Get
        Set
            If (Me._ValorTotalRequerido.Equals(Value) = False) Then
                Me.OnValorTotalRequeridoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorTotalRequerido = Value
                Me.SendPropertyChanged("ValorTotalRequerido")
                Me.OnValorTotalRequeridoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorLegalAsociado", Storage:="_ValorLegalAsociado")>
    Public Property ValorLegalAsociado() As System.Nullable(Of Double)
        Get
            Return Me._ValorLegalAsociado
        End Get
        Set
            If (Me._ValorLegalAsociado.Equals(Value) = False) Then
                Me.OnValorLegalAsociadoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorLegalAsociado = Value
                Me.SendPropertyChanged("ValorLegalAsociado")
                Me.OnValorLegalAsociadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorInternoAsociado", Storage:="_ValorInternoAsociado")>
    Public Property ValorInternoAsociado() As System.Nullable(Of Double)
        Get
            Return Me._ValorInternoAsociado
        End Get
        Set
            If (Me._ValorInternoAsociado.Equals(Value) = False) Then
                Me.OnValorInternoAsociadoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorInternoAsociado = Value
                Me.SendPropertyChanged("ValorInternoAsociado")
                Me.OnValorInternoAsociadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorTotalAsociado", Storage:="_ValorTotalAsociado")>
    Public Property ValorTotalAsociado() As System.Nullable(Of Double)
        Get
            Return Me._ValorTotalAsociado
        End Get
        Set
            If (Me._ValorTotalAsociado.Equals(Value) = False) Then
                Me.OnValorTotalAsociadoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorTotalAsociado = Value
                Me.SendPropertyChanged("ValorTotalAsociado")
                Me.OnValorTotalAsociadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCoberturaBolsa", Storage:="_CoberturaBolsa")>
    Public Property CoberturaBolsa() As System.Nullable(Of Double)
        Get
            Return Me._CoberturaBolsa
        End Get
        Set
            If (Me._CoberturaBolsa.Equals(Value) = False) Then
                Me.OnCoberturaBolsaChanging(Value)
                Me.SendPropertyChanging()
                Me._CoberturaBolsa = Value
                Me.SendPropertyChanged("CoberturaBolsa")
                Me.OnCoberturaBolsaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCoberturaValores", Storage:="_CoberturaValores")>
    Public Property CoberturaValores() As System.Nullable(Of Double)
        Get
            Return Me._CoberturaValores
        End Get
        Set
            If (Me._CoberturaValores.Equals(Value) = False) Then
                Me.OnCoberturaValoresChanging(Value)
                Me.SendPropertyChanging()
                Me._CoberturaValores = Value
                Me.SendPropertyChanged("CoberturaValores")
                Me.OnCoberturaValoresChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCoberturaTotal", Storage:="_CoberturaTotal")>
    Public Property CoberturaTotal() As System.Nullable(Of Double)
        Get
            Return Me._CoberturaTotal
        End Get
        Set
            If (Me._CoberturaTotal.Equals(Value) = False) Then
                Me.OnCoberturaTotalChanging(Value)
                Me.SendPropertyChanging()
                Me._CoberturaTotal = Value
                Me.SendPropertyChanged("CoberturaTotal")
                Me.OnCoberturaTotalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoGarantia", Storage:="_TipoGarantia")>
    Public Property TipoGarantia() As String
        Get
            Return Me._TipoGarantia
        End Get
        Set
            If (String.Equals(Me._TipoGarantia, Value) = False) Then
                Me.OnTipoGarantiaChanging(Value)
                Me.SendPropertyChanging()
                Me._TipoGarantia = Value
                Me.SendPropertyChanged("TipoGarantia")
                Me.OnTipoGarantiaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSaldoBloqueadoXLiq", Storage:="_SaldoBloqueadoXLiq")>
    Public Property SaldoBloqueadoXLiq() As System.Nullable(Of Double)
        Get
            Return Me._SaldoBloqueadoXLiq
        End Get
        Set
            If (Me._SaldoBloqueadoXLiq.Equals(Value) = False) Then
                Me.OnSaldoBloqueadoXLiqChanging(Value)
                Me.SendPropertyChanging()
                Me._SaldoBloqueadoXLiq = Value
                Me.SendPropertyChanged("SaldoBloqueadoXLiq")
                Me.OnSaldoBloqueadoXLiqChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblBloqueadoTitulosXLiq", Storage:="_BloqueadoTitulosXLiq")>
    Public Property BloqueadoTitulosXLiq() As System.Nullable(Of Double)
        Get
            Return Me._BloqueadoTitulosXLiq
        End Get
        Set
            If (Me._BloqueadoTitulosXLiq.Equals(Value) = False) Then
                Me.OnBloqueadoTitulosXLiqChanging(Value)
                Me.SendPropertyChanging()
                Me._BloqueadoTitulosXLiq = Value
                Me.SendPropertyChanged("BloqueadoTitulosXLiq")
                Me.OnBloqueadoTitulosXLiqChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSaldoCliente", Storage:="_SaldoCliente")>
    Public Property SaldoCliente() As System.Nullable(Of Double)
        Get
            Return Me._SaldoCliente
        End Get
        Set
            If (Me._SaldoCliente.Equals(Value) = False) Then
                Me.OnSaldoClienteChanging(Value)
                Me.SendPropertyChanging()
                Me._SaldoCliente = Value
                Me.SendPropertyChanged("SaldoCliente")
                Me.OnSaldoClienteChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TitulosGarantias")>
Partial Public Class TitulosGarantia
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As System.Nullable(Of Integer)

    Private _IDRecibo As Integer

    Private _Secuencia As Integer

    Private _Especie As String

    Private _Cantidad As System.Nullable(Of Double)

    Private _CantidadReasignar As System.Nullable(Of Double)

    Private _EstadoActual As String

    Private _MotivoBloqueo As String

    Private _NotasBloqueo As String

    Private _Isin As String

    Private _Fungible As System.Nullable(Of Integer)

    Private _IdCuentaDeceval As System.Nullable(Of Integer)

    Private _Fondo As String

    Private _Modalidad As String

    Private _Emision As System.Nullable(Of Date)

    Private _Vencimiento As System.Nullable(Of Date)

    Private _FechaRecibo As Date

    Private _Total As System.Nullable(Of Double)

    Private _TotalAdmisible As System.Nullable(Of Double)

    Private _IDCliente As String

    Private _Bloqueado As System.Nullable(Of Boolean)

    Private _BloquearDesbloqueado As System.Nullable(Of Boolean)

    Private _DesBloquearBloqueado As System.Nullable(Of Boolean)

    Private _Bloquear As System.Nullable(Of Boolean)

    Private _EditarBloqueando As System.Nullable(Of Boolean)

    Private _IDLiquidacionBloqueo As System.Nullable(Of Integer)

    Private _CantidadBloquear As System.Nullable(Of Double)

    Private _TituloEditable As Boolean

    Private _SAG As System.Nullable(Of Boolean)

    Private _Radicado As String

    Private _PuedeReasignar As System.Nullable(Of Boolean)

    Private _Reasignar As System.Nullable(Of Boolean)

    Private _IdBloqueo As Integer

    Private _RadicadoReasignar As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDReciboChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDReciboChanged()
    End Sub
    Partial Private Sub OnSecuenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSecuenciaChanged()
    End Sub
    Partial Private Sub OnEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnEspecieChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnCantidadReasignarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadReasignarChanged()
    End Sub
    Partial Private Sub OnEstadoActualChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoActualChanged()
    End Sub
    Partial Private Sub OnMotivoBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnMotivoBloqueoChanged()
    End Sub
    Partial Private Sub OnNotasBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnNotasBloqueoChanged()
    End Sub
    Partial Private Sub OnIsinChanging(value As String)
    End Sub
    Partial Private Sub OnIsinChanged()
    End Sub
    Partial Private Sub OnFungibleChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFungibleChanged()
    End Sub
    Partial Private Sub OnIdCuentaDecevalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCuentaDecevalChanged()
    End Sub
    Partial Private Sub OnFondoChanging(value As String)
    End Sub
    Partial Private Sub OnFondoChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnFechaReciboChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaReciboChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnTotalAdmisibleChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalAdmisibleChanged()
    End Sub
    Partial Private Sub OnIDClienteChanging(value As String)
    End Sub
    Partial Private Sub OnIDClienteChanged()
    End Sub
    Partial Private Sub OnBloqueadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBloqueadoChanged()
    End Sub
    Partial Private Sub OnBloquearDesbloqueadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBloquearDesbloqueadoChanged()
    End Sub
    Partial Private Sub OnDesBloquearBloqueadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDesBloquearBloqueadoChanged()
    End Sub
    Partial Private Sub OnBloquearChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBloquearChanged()
    End Sub
    Partial Private Sub OnEditarBloqueandoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEditarBloqueandoChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionBloqueoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDLiquidacionBloqueoChanged()
    End Sub
    Partial Private Sub OnCantidadBloquearChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadBloquearChanged()
    End Sub
    Partial Private Sub OnTituloEditableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTituloEditableChanged()
    End Sub
    Partial Private Sub OnSAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSAGChanged()
    End Sub
    Partial Private Sub OnRadicadoChanging(value As String)
    End Sub
    Partial Private Sub OnRadicadoChanged()
    End Sub
    Partial Private Sub OnPuedeReasignarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPuedeReasignarChanged()
    End Sub
    Partial Private Sub OnReasignarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnReasignarChanged()
    End Sub
    Partial Private Sub OnIdBloqueoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBloqueoChanged()
    End Sub
    Partial Private Sub OnRadicadoReasignarChanging(value As String)
    End Sub
    Partial Private Sub OnRadicadoReasignarChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_ID")>
    Public Property ID() As System.Nullable(Of Integer)
        Get
            Return Me._ID
        End Get
        Set
            If (Me._ID.Equals(Value) = False) Then
                Me.OnIDChanging(Value)
                Me.SendPropertyChanging()
                Me._ID = Value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdRecibo", Storage:="_IDRecibo", IsPrimaryKey:=True)>
    Public Property IDRecibo() As Integer
        Get
            Return Me._IDRecibo
        End Get
        Set
            If ((Me._IDRecibo = Value) _
                        = False) Then
                Me.OnIDReciboChanging(Value)
                Me.SendPropertyChanging()
                Me._IDRecibo = Value
                Me.SendPropertyChanged("IDRecibo")
                Me.OnIDReciboChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngSecuencia", Storage:="_Secuencia", IsPrimaryKey:=True)>
    Public Property Secuencia() As Integer
        Get
            Return Me._Secuencia
        End Get
        Set
            If ((Me._Secuencia = Value) _
                        = False) Then
                Me.OnSecuenciaChanging(Value)
                Me.SendPropertyChanging()
                Me._Secuencia = Value
                Me.SendPropertyChanged("Secuencia")
                Me.OnSecuenciaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_Especie", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Especie() As String
        Get
            Return Me._Especie
        End Get
        Set
            If (String.Equals(Me._Especie, Value) = False) Then
                Me.OnEspecieChanging(Value)
                Me.SendPropertyChanging()
                Me._Especie = Value
                Me.SendPropertyChanged("Especie")
                Me.OnEspecieChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidad", Storage:="_Cantidad")>
    Public Property Cantidad() As System.Nullable(Of Double)
        Get
            Return Me._Cantidad
        End Get
        Set
            If (Me._Cantidad.Equals(Value) = False) Then
                Me.OnCantidadChanging(Value)
                Me.SendPropertyChanging()
                Me._Cantidad = Value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCantidadReasignar", Storage:="_CantidadReasignar")>
    Public Property CantidadReasignar() As System.Nullable(Of Double)
        Get
            Return Me._CantidadReasignar
        End Get
        Set
            If (Me._CantidadReasignar.Equals(Value) = False) Then
                Me.OnCantidadReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._CantidadReasignar = Value
                Me.SendPropertyChanged("CantidadReasignar")
                Me.OnCantidadReasignarChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEstadoActual", Storage:="_EstadoActual")>
    Public Property EstadoActual() As String
        Get
            Return Me._EstadoActual
        End Get
        Set
            If (String.Equals(Me._EstadoActual, Value) = False) Then
                Me.OnEstadoActualChanging(Value)
                Me.SendPropertyChanging()
                Me._EstadoActual = Value
                Me.SendPropertyChanged("EstadoActual")
                Me.OnEstadoActualChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMotivoBloqueo", Storage:="_MotivoBloqueo")>
    Public Property MotivoBloqueo() As String
        Get
            Return Me._MotivoBloqueo
        End Get
        Set
            If (String.Equals(Me._MotivoBloqueo, Value) = False) Then
                Me.OnMotivoBloqueoChanging(Value)
                Me.SendPropertyChanging()
                Me._MotivoBloqueo = Value
                Me.SendPropertyChanged("MotivoBloqueo")
                Me.OnMotivoBloqueoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotasBloqueo", Storage:="_NotasBloqueo")>
    Public Property NotasBloqueo() As String
        Get
            Return Me._NotasBloqueo
        End Get
        Set
            If (String.Equals(Me._NotasBloqueo, Value) = False) Then
                Me.OnNotasBloqueoChanging(Value)
                Me.SendPropertyChanging()
                Me._NotasBloqueo = Value
                Me.SendPropertyChanged("NotasBloqueo")
                Me.OnNotasBloqueoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIsin", Storage:="_Isin")>
    Public Property Isin() As String
        Get
            Return Me._Isin
        End Get
        Set
            If (String.Equals(Me._Isin, Value) = False) Then
                Me.OnIsinChanging(Value)
                Me.SendPropertyChanging()
                Me._Isin = Value
                Me.SendPropertyChanged("Isin")
                Me.OnIsinChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngFungible", Storage:="_Fungible")>
    Public Property Fungible() As System.Nullable(Of Integer)
        Get
            Return Me._Fungible
        End Get
        Set
            If (Me._Fungible.Equals(Value) = False) Then
                Me.OnFungibleChanging(Value)
                Me.SendPropertyChanging()
                Me._Fungible = Value
                Me.SendPropertyChanged("Fungible")
                Me.OnFungibleChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdCuentaDeceval", Storage:="_IdCuentaDeceval")>
    Public Property IdCuentaDeceval() As System.Nullable(Of Integer)
        Get
            Return Me._IdCuentaDeceval
        End Get
        Set
            If (Me._IdCuentaDeceval.Equals(Value) = False) Then
                Me.OnIdCuentaDecevalChanging(Value)
                Me.SendPropertyChanging()
                Me._IdCuentaDeceval = Value
                Me.SendPropertyChanged("IdCuentaDeceval")
                Me.OnIdCuentaDecevalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFondo", Storage:="_Fondo")>
    Public Property Fondo() As String
        Get
            Return Me._Fondo
        End Get
        Set
            If (String.Equals(Me._Fondo, Value) = False) Then
                Me.OnFondoChanging(Value)
                Me.SendPropertyChanging()
                Me._Fondo = Value
                Me.SendPropertyChanged("Fondo")
                Me.OnFondoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad")>
    Public Property Modalidad() As String
        Get
            Return Me._Modalidad
        End Get
        Set
            If (String.Equals(Me._Modalidad, Value) = False) Then
                Me.OnModalidadChanging(Value)
                Me.SendPropertyChanging()
                Me._Modalidad = Value
                Me.SendPropertyChanged("Modalidad")
                Me.OnModalidadChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision")>
    Public Property Emision() As System.Nullable(Of Date)
        Get
            Return Me._Emision
        End Get
        Set
            If (Me._Emision.Equals(Value) = False) Then
                Me.OnEmisionChanging(Value)
                Me.SendPropertyChanging()
                Me._Emision = Value
                Me.SendPropertyChanged("Emision")
                Me.OnEmisionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento")>
    Public Property Vencimiento() As System.Nullable(Of Date)
        Get
            Return Me._Vencimiento
        End Get
        Set
            If (Me._Vencimiento.Equals(Value) = False) Then
                Me.OnVencimientoChanging(Value)
                Me.SendPropertyChanging()
                Me._Vencimiento = Value
                Me.SendPropertyChanged("Vencimiento")
                Me.OnVencimientoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmRecibo", Storage:="_FechaRecibo")>
    Public Property FechaRecibo() As Date
        Get
            Return Me._FechaRecibo
        End Get
        Set
            If ((Me._FechaRecibo = Value) _
                        = False) Then
                Me.OnFechaReciboChanging(Value)
                Me.SendPropertyChanging()
                Me._FechaRecibo = Value
                Me.SendPropertyChanged("FechaRecibo")
                Me.OnFechaReciboChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTotal", Storage:="_Total")>
    Public Property Total() As System.Nullable(Of Double)
        Get
            Return Me._Total
        End Get
        Set
            If (Me._Total.Equals(Value) = False) Then
                Me.OnTotalChanging(Value)
                Me.SendPropertyChanging()
                Me._Total = Value
                Me.SendPropertyChanged("Total")
                Me.OnTotalChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curTotalAdmisible", Storage:="_TotalAdmisible")>
    Public Property TotalAdmisible() As System.Nullable(Of Double)
        Get
            Return Me._TotalAdmisible
        End Get
        Set
            If (Me._TotalAdmisible.Equals(Value) = False) Then
                Me.OnTotalAdmisibleChanging(Value)
                Me.SendPropertyChanging()
                Me._TotalAdmisible = Value
                Me.SendPropertyChanged("TotalAdmisible")
                Me.OnTotalAdmisibleChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdComitente", Storage:="_IDCliente", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property IDCliente() As String
        Get
            Return Me._IDCliente
        End Get
        Set
            If (String.Equals(Me._IDCliente, Value) = False) Then
                Me.OnIDClienteChanging(Value)
                Me.SendPropertyChanging()
                Me._IDCliente = Value
                Me.SendPropertyChanged("IDCliente")
                Me.OnIDClienteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logBloqueado", Storage:="_Bloqueado")>
    Public Property Bloqueado() As System.Nullable(Of Boolean)
        Get
            Return Me._Bloqueado
        End Get
        Set
            If (Me._Bloqueado.Equals(Value) = False) Then
                Me.OnBloqueadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Bloqueado = Value
                Me.SendPropertyChanged("Bloqueado")
                Me.OnBloqueadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BloquearDesbloqueado")>
    Public Property BloquearDesbloqueado() As System.Nullable(Of Boolean)
        Get
            Return Me._BloquearDesbloqueado
        End Get
        Set
            If (Me._BloquearDesbloqueado.Equals(Value) = False) Then
                Me.OnBloquearDesbloqueadoChanging(Value)
                Me.SendPropertyChanging()
                Me._BloquearDesbloqueado = Value
                Me.SendPropertyChanged("BloquearDesbloqueado")
                Me.OnBloquearDesbloqueadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesBloquearBloqueado")>
    Public Property DesBloquearBloqueado() As System.Nullable(Of Boolean)
        Get
            Return Me._DesBloquearBloqueado
        End Get
        Set
            If (Me._DesBloquearBloqueado.Equals(Value) = False) Then
                Me.OnDesBloquearBloqueadoChanging(Value)
                Me.SendPropertyChanging()
                Me._DesBloquearBloqueado = Value
                Me.SendPropertyChanged("DesBloquearBloqueado")
                Me.OnDesBloquearBloqueadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bloquear")>
    Public Property Bloquear() As System.Nullable(Of Boolean)
        Get
            Return Me._Bloquear
        End Get
        Set
            If (Me._Bloquear.Equals(Value) = False) Then
                Me.OnBloquearChanging(Value)
                Me.SendPropertyChanging()
                Me._Bloquear = Value
                Me.SendPropertyChanged("Bloquear")
                Me.OnBloquearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditarBloqueando")>
    Public Property EditarBloqueando() As System.Nullable(Of Boolean)
        Get
            Return Me._EditarBloqueando
        End Get
        Set
            If (Me._EditarBloqueando.Equals(Value) = False) Then
                Me.OnEditarBloqueandoChanging(Value)
                Me.SendPropertyChanging()
                Me._EditarBloqueando = Value
                Me.SendPropertyChanged("EditarBloqueando")
                Me.OnEditarBloqueandoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdLiquidacion", Storage:="_IDLiquidacionBloqueo")>
    Public Property IDLiquidacionBloqueo() As System.Nullable(Of Integer)
        Get
            Return Me._IDLiquidacionBloqueo
        End Get
        Set
            If (Me._IDLiquidacionBloqueo.Equals(Value) = False) Then
                Me.OnIDLiquidacionBloqueoChanging(Value)
                Me.SendPropertyChanging()
                Me._IDLiquidacionBloqueo = Value
                Me.SendPropertyChanged("IDLiquidacionBloqueo")
                Me.OnIDLiquidacionBloqueoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantidadBloquear")>
    Public Property CantidadBloquear() As System.Nullable(Of Double)
        Get
            Return Me._CantidadBloquear
        End Get
        Set
            If (Me._CantidadBloquear.Equals(Value) = False) Then
                Me.OnCantidadBloquearChanging(Value)
                Me.SendPropertyChanging()
                Me._CantidadBloquear = Value
                Me.SendPropertyChanged("CantidadBloquear")
                Me.OnCantidadBloquearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTituloEditable", Storage:="_TituloEditable")>
    Public Property TituloEditable() As Boolean
        Get
            Return Me._TituloEditable
        End Get
        Set
            If ((Me._TituloEditable = Value) _
                        = False) Then
                Me.OnTituloEditableChanging(Value)
                Me.SendPropertyChanging()
                Me._TituloEditable = Value
                Me.SendPropertyChanged("TituloEditable")
                Me.OnTituloEditableChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSAG", Storage:="_SAG")>
    Public Property SAG() As System.Nullable(Of Boolean)
        Get
            Return Me._SAG
        End Get
        Set
            If (Me._SAG.Equals(Value) = False) Then
                Me.OnSAGChanging(Value)
                Me.SendPropertyChanging()
                Me._SAG = Value
                Me.SendPropertyChanged("SAG")
                Me.OnSAGChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRadicado", Storage:="_Radicado")>
    Public Property Radicado() As String
        Get
            Return Me._Radicado
        End Get
        Set
            If (String.Equals(Me._Radicado, Value) = False) Then
                Me.OnRadicadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Radicado = Value
                Me.SendPropertyChanged("Radicado")
                Me.OnRadicadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuedeReasignar")>
    Public Property PuedeReasignar() As System.Nullable(Of Boolean)
        Get
            Return Me._PuedeReasignar
        End Get
        Set
            If (Me._PuedeReasignar.Equals(Value) = False) Then
                Me.OnPuedeReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._PuedeReasignar = Value
                Me.SendPropertyChanged("PuedeReasignar")
                Me.OnPuedeReasignarChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reasignar")>
    Public Property Reasignar() As System.Nullable(Of Boolean)
        Get
            Return Me._Reasignar
        End Get
        Set
            If (Me._Reasignar.Equals(Value) = False) Then
                Me.OnReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._Reasignar = Value
                Me.SendPropertyChanged("Reasignar")
                Me.OnReasignarChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdBloqueo", Storage:="_IdBloqueo", IsPrimaryKey:=True)>
    Public Property IdBloqueo() As Integer
        Get
            Return Me._IdBloqueo
        End Get
        Set
            If ((Me._IdBloqueo = Value) _
                        = False) Then
                Me.OnIdBloqueoChanging(Value)
                Me.SendPropertyChanging()
                Me._IdBloqueo = Value
                Me.SendPropertyChanged("IdBloqueo")
                Me.OnIdBloqueoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRadicadoReasignar", Storage:="_RadicadoReasignar", DbType:="VarChar(20)")>
    Public Property RadicadoReasignar() As String
        Get
            Return Me._RadicadoReasignar
        End Get
        Set
            If (String.Equals(Me._RadicadoReasignar, Value) = False) Then
                Me.OnRadicadoReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._RadicadoReasignar = Value
                Me.SendPropertyChanged("RadicadoReasignar")
                Me.OnRadicadoReasignarChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblRespuestaValidaciones")>
Partial Public Class RespuestaValidaciones
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer

    Private _Exitoso As Boolean

    Private _DetieneIngreso As Boolean

    Private _RequiereConfirmacion As Boolean

    Private _RequiereJustificacion As Boolean

    Private _RequiereAprobacion As Boolean

    Private _Regla As String

    Private _NombreRegla As String

    Private _Confirmacion As String

    Private _Mensaje As String

    Private _CausasJustificacion As String

    Private _IDOrdenIdentity As System.Nullable(Of System.Int32)

    Private _DetalleRegla As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnDetieneIngresoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDetieneIngresoChanged()
    End Sub
    Partial Private Sub OnRequiereConfirmacionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRequiereConfirmacionChanged()
    End Sub
    Partial Private Sub OnRequiereJustificacionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRequiereJustificacionChanged()
    End Sub
    Partial Private Sub OnRequiereAprobacionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRequiereAprobacionChanged()
    End Sub
    Partial Private Sub OnReglaChanging(value As String)
    End Sub
    Partial Private Sub OnReglaChanged()
    End Sub
    Partial Private Sub OnNombreReglaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreReglaChanged()
    End Sub
    Partial Private Sub OnConfirmacionChanging(value As String)
    End Sub
    Partial Private Sub OnConfirmacionChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnCausasJustificacionChanging(value As String)
    End Sub
    Partial Private Sub OnCausasJustificacionChanged()
    End Sub
    Partial Private Sub OnIDOrdenIdentityChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnIDOrdenIdentityChanged()
    End Sub
    Partial Private Sub OnDetalleReglaChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleReglaChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=False, IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Integer
        Get
            Return Me._ID
        End Get
        Set
            If (Object.Equals(Me._ID, Value) = False) Then
                Me.OnIDChanging(Value)
                Me.SendPropertyChanging()
                Me._ID = Value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit NOT NULL")>
    Public Property Exitoso() As Boolean
        Get
            Return Me._Exitoso
        End Get
        Set
            If ((Me._Exitoso = Value) _
                        = False) Then
                Me.OnExitosoChanging(Value)
                Me.SendPropertyChanging()
                Me._Exitoso = Value
                Me.SendPropertyChanged("Exitoso")
                Me.OnExitosoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDetieneIngreso", Storage:="_DetieneIngreso", DbType:="Bit NOT NULL")>
    Public Property DetieneIngreso() As Boolean
        Get
            Return Me._DetieneIngreso
        End Get
        Set
            If ((Me._DetieneIngreso = Value) _
                        = False) Then
                Me.OnDetieneIngresoChanging(Value)
                Me.SendPropertyChanging()
                Me._DetieneIngreso = Value
                Me.SendPropertyChanged("DetieneIngreso")
                Me.OnDetieneIngresoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRequiereConfirmacion", Storage:="_RequiereConfirmacion", DbType:="Bit NOT NULL")>
    Public Property RequiereConfirmacion() As Boolean
        Get
            Return Me._RequiereConfirmacion
        End Get
        Set
            If ((Me._RequiereConfirmacion = Value) _
                        = False) Then
                Me.OnRequiereConfirmacionChanging(Value)
                Me.SendPropertyChanging()
                Me._RequiereConfirmacion = Value
                Me.SendPropertyChanged("RequiereConfirmacion")
                Me.OnRequiereConfirmacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRequiereJustificacion", Storage:="_RequiereJustificacion", DbType:="Bit NOT NULL")>
    Public Property RequiereJustificacion() As Boolean
        Get
            Return Me._RequiereJustificacion
        End Get
        Set
            If ((Me._RequiereJustificacion = Value) _
                        = False) Then
                Me.OnRequiereJustificacionChanging(Value)
                Me.SendPropertyChanging()
                Me._RequiereJustificacion = Value
                Me.SendPropertyChanged("RequiereJustificacion")
                Me.OnRequiereJustificacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logRequiereAprobacion", Storage:="_RequiereAprobacion", DbType:="Bit NOT NULL")>
    Public Property RequiereAprobacion() As Boolean
        Get
            Return Me._RequiereAprobacion
        End Get
        Set
            If ((Me._RequiereAprobacion = Value) _
                        = False) Then
                Me.OnRequiereAprobacionChanging(Value)
                Me.SendPropertyChanging()
                Me._RequiereAprobacion = Value
                Me.SendPropertyChanged("RequiereAprobacion")
                Me.OnRequiereAprobacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRegla", Storage:="_Regla", DbType:="Varchar(20) NOT NULL")>
    Public Property Regla() As String
        Get
            Return Me._Regla
        End Get
        Set
            If (String.Equals(Me._Regla, Value) = False) Then
                Me.OnReglaChanging(Value)
                Me.SendPropertyChanging()
                Me._Regla = Value
                Me.SendPropertyChanged("Regla")
                Me.OnReglaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreRegla", Storage:="_NombreRegla", DbType:="Varchar(20) NOT NULL")>
    Public Property NombreRegla() As String
        Get
            Return Me._NombreRegla
        End Get
        Set
            If (String.Equals(Me._NombreRegla, Value) = False) Then
                Me.OnNombreReglaChanging(Value)
                Me.SendPropertyChanging()
                Me._NombreRegla = Value
                Me.SendPropertyChanged("NombreRegla")
                Me.OnNombreReglaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConfirmacion", Storage:="_Confirmacion", DbType:="Varchar(200) NOT NULL")>
    Public Property Confirmacion() As String
        Get
            Return Me._Confirmacion
        End Get
        Set
            If (String.Equals(Me._Confirmacion, Value) = False) Then
                Me.OnConfirmacionChanging(Value)
                Me.SendPropertyChanging()
                Me._Confirmacion = Value
                Me.SendPropertyChanged("Confirmacion")
                Me.OnConfirmacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(1000) NOT NULL", CanBeNull:=False)>
    Public Property Mensaje() As String
        Get
            Return Me._Mensaje
        End Get
        Set
            If (String.Equals(Me._Mensaje, Value) = False) Then
                Me.OnMensajeChanging(Value)
                Me.SendPropertyChanging()
                Me._Mensaje = Value
                Me.SendPropertyChanged("Mensaje")
                Me.OnMensajeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCausasJustificacion", Storage:="_CausasJustificacion", DbType:="Varchar(5000) NOT NULL")>
    Public Property CausasJustificacion() As String
        Get
            Return Me._CausasJustificacion
        End Get
        Set
            If (String.Equals(Me._CausasJustificacion, Value) = False) Then
                Me.OnCausasJustificacionChanging(Value)
                Me.SendPropertyChanging()
                Me._CausasJustificacion = Value
                Me.SendPropertyChanged("CausasJustificacion")
                Me.OnCausasJustificacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDOrdenIdentity", Storage:="_IDOrdenIdentity", DbType:="INT NOT NULL", CanBeNull:=True)>
    Public Property IDOrdenIdentity() As System.Nullable(Of System.Int32)
        Get
            Return Me._IDOrdenIdentity
        End Get
        Set
            If (Object.Equals(Me._IDOrdenIdentity, Value) = False) Then
                Me.OnIDOrdenIdentityChanging(Value)
                Me.SendPropertyChanging()
                Me._IDOrdenIdentity = Value
                Me.SendPropertyChanged("IDOrdenIdentity")
                Me.OnIDOrdenIdentityChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDetalleRegla", Storage:="_DetalleRegla", DbType:="Varchar(max) NOT NULL")>
    Public Property DetalleRegla() As String
        Get
            Return Me._DetalleRegla
        End Get
        Set
            If (String.Equals(Me._DetalleRegla, Value) = False) Then
                Me.OnDetalleReglaChanging(Value)
                Me.SendPropertyChanging()
                Me._DetalleRegla = Value
                Me.SendPropertyChanged("DetalleRegla")
                Me.OnDetalleReglaChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SaldosCliente")>
Partial Public Class SaldosCliente
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _IDComitente As String

    Private _SaldoCliente As System.Nullable(Of Double)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnSaldoClienteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSaldoClienteChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property IDComitente() As String
        Get
            Return Me._IDComitente
        End Get
        Set
            If (String.Equals(Me._IDComitente, Value) = False) Then
                Me.OnIDComitenteChanging(Value)
                Me.SendPropertyChanging()
                Me._IDComitente = Value
                Me.SendPropertyChanged("IDComitente")
                Me.OnIDComitenteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblSaldoCliente", Storage:="_SaldoCliente", DbType:="float")>
    Public Property SaldoCliente() As System.Nullable(Of Double)
        Get
            Return Me._SaldoCliente
        End Get
        Set
            If (Me._SaldoCliente.Equals(Value) = False) Then
                Me.OnSaldoClienteChanging(Value)
                Me.SendPropertyChanging()
                Me._SaldoCliente = Value
                Me.SendPropertyChanged("SaldoCliente")
                Me.OnSaldoClienteChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SaldosBloqueados")>
Partial Public Class SaldosBloqueados
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _IdRegistro As Integer

    Private _IDDocumento As Integer

    Private _NombreConsecutivo As String

    Private _IdTesoreria As Integer

    Private _IDComitente As String

    Private _IDLiquidacion As System.Nullable(Of Integer)

    Private _Parcial As System.Nullable(Of Integer)

    Private _Tipo As String

    Private _Clase As String

    Private _TipoMercado As System.Nullable(Of Integer)

    Private _SAG As System.Nullable(Of Boolean)

    Private _Radicado As String

    Private _ValorBloqueado As System.Nullable(Of Double)

    Private _ValorReasignar As System.Nullable(Of Double)

    Private _Desbloqueando As System.Nullable(Of Boolean)

    Private _DesbloquearSaldo As System.Nullable(Of Boolean)

    Private _Reasignar As System.Nullable(Of Boolean)

    Private _IdBloqueo As Integer

    Private _RadicadoReasignar As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdRegistroChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdRegistroChanged()
    End Sub
    Partial Private Sub OnIDDocumentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDocumentoChanged()
    End Sub
    Partial Private Sub OnNombreConsecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreConsecutivoChanged()
    End Sub
    Partial Private Sub OnIdTesoreriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdTesoreriaChanged()
    End Sub
    Partial Private Sub OnIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDComitenteChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDLiquidacionChanged()
    End Sub
    Partial Private Sub OnParcialChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParcialChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As String)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnTipoMercadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTipoMercadoChanged()
    End Sub
    Partial Private Sub OnSAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSAGChanged()
    End Sub
    Partial Private Sub OnRadicadoChanging(value As String)
    End Sub
    Partial Private Sub OnRadicadoChanged()
    End Sub
    Partial Private Sub OnValorBloqueadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorBloqueadoChanged()
    End Sub
    Partial Private Sub OnValorReasignarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorReasignarChanged()
    End Sub
    Partial Private Sub OnDesbloqueandoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDesbloqueandoChanged()
    End Sub
    Partial Private Sub OnDesbloquearSaldoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDesbloquearSaldoChanged()
    End Sub
    Partial Private Sub OnReasignarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnReasignarChanged()
    End Sub
    Partial Private Sub OnIdBloqueoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBloqueoChanged()
    End Sub
    Partial Private Sub OnRadicadoReasignarChanging(value As String)
    End Sub
    Partial Private Sub OnRadicadoReasignarChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdRegistro", Storage:="_IdRegistro", DbType:="Int NOT NULL")>
    Public Property IdRegistro() As Integer
        Get
            Return Me._IdRegistro
        End Get
        Set
            If ((Me._IdRegistro = Value) _
                        = False) Then
                Me.OnIdRegistroChanging(Value)
                Me.SendPropertyChanging()
                Me._IdRegistro = Value
                Me.SendPropertyChanged("IdRegistro")
                Me.OnIdRegistroChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDocumento", Storage:="_IDDocumento", DbType:="Int NOT NULL")>
    Public Property IDDocumento() As Integer
        Get
            Return Me._IDDocumento
        End Get
        Set
            If ((Me._IDDocumento = Value) _
                        = False) Then
                Me.OnIDDocumentoChanging(Value)
                Me.SendPropertyChanging()
                Me._IDDocumento = Value
                Me.SendPropertyChanged("IDDocumento")
                Me.OnIDDocumentoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConsecutivo", Storage:="_NombreConsecutivo", DbType:="VarChar(15) NOT NULL", CanBeNull:=False)>
    Public Property NombreConsecutivo() As String
        Get
            Return Me._NombreConsecutivo
        End Get
        Set
            If (String.Equals(Me._NombreConsecutivo, Value) = False) Then
                Me.OnNombreConsecutivoChanging(Value)
                Me.SendPropertyChanging()
                Me._NombreConsecutivo = Value
                Me.SendPropertyChanged("NombreConsecutivo")
                Me.OnNombreConsecutivoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTesoreria", Storage:="_IdTesoreria", DbType:="Int NOT NULL")>
    Public Property IdTesoreria() As Integer
        Get
            Return Me._IdTesoreria
        End Get
        Set
            If ((Me._IdTesoreria = Value) _
                        = False) Then
                Me.OnIdTesoreriaChanging(Value)
                Me.SendPropertyChanging()
                Me._IdTesoreria = Value
                Me.SendPropertyChanged("IdTesoreria")
                Me.OnIdTesoreriaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComitente", Storage:="_IDComitente", DbType:="Char(17) NOT NULL", CanBeNull:=False)>
    Public Property IDComitente() As String
        Get
            Return Me._IDComitente
        End Get
        Set
            If (String.Equals(Me._IDComitente, Value) = False) Then
                Me.OnIDComitenteChanging(Value)
                Me.SendPropertyChanging()
                Me._IDComitente = Value
                Me.SendPropertyChanged("IDComitente")
                Me.OnIDComitenteChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidacion", Storage:="_IDLiquidacion", DbType:="Int")>
    Public Property IDLiquidacion() As System.Nullable(Of Integer)
        Get
            Return Me._IDLiquidacion
        End Get
        Set
            If (Me._IDLiquidacion.Equals(Value) = False) Then
                Me.OnIDLiquidacionChanging(Value)
                Me.SendPropertyChanging()
                Me._IDLiquidacion = Value
                Me.SendPropertyChanged("IDLiquidacion")
                Me.OnIDLiquidacionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngParcial", Storage:="_Parcial", DbType:="Int")>
    Public Property Parcial() As System.Nullable(Of Integer)
        Get
            Return Me._Parcial
        End Get
        Set
            If (Me._Parcial.Equals(Value) = False) Then
                Me.OnParcialChanging(Value)
                Me.SendPropertyChanging()
                Me._Parcial = Value
                Me.SendPropertyChanged("Parcial")
                Me.OnParcialChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="VarChar(1)")>
    Public Property Tipo() As String
        Get
            Return Me._Tipo
        End Get
        Set
            If (String.Equals(Me._Tipo, Value) = False) Then
                Me.OnTipoChanging(Value)
                Me.SendPropertyChanging()
                Me._Tipo = Value
                Me.SendPropertyChanged("Tipo")
                Me.OnTipoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClase", Storage:="_Clase", DbType:="VarChar(1)")>
    Public Property Clase() As String
        Get
            Return Me._Clase
        End Get
        Set
            If (String.Equals(Me._Clase, Value) = False) Then
                Me.OnClaseChanging(Value)
                Me.SendPropertyChanging()
                Me._Clase = Value
                Me.SendPropertyChanged("Clase")
                Me.OnClaseChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intTipoMercado", Storage:="_TipoMercado", DbType:="Int")>
    Public Property TipoMercado() As System.Nullable(Of Integer)
        Get
            Return Me._TipoMercado
        End Get
        Set
            If (Me._TipoMercado.Equals(Value) = False) Then
                Me.OnTipoMercadoChanging(Value)
                Me.SendPropertyChanging()
                Me._TipoMercado = Value
                Me.SendPropertyChanged("TipoMercado")
                Me.OnTipoMercadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSAG", Storage:="_SAG", DbType:="Bit")>
    Public Property SAG() As System.Nullable(Of Boolean)
        Get
            Return Me._SAG
        End Get
        Set
            If (Me._SAG.Equals(Value) = False) Then
                Me.OnSAGChanging(Value)
                Me.SendPropertyChanging()
                Me._SAG = Value
                Me.SendPropertyChanged("SAG")
                Me.OnSAGChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRadicado", Storage:="_Radicado", DbType:="VarChar(20)")>
    Public Property Radicado() As String
        Get
            Return Me._Radicado
        End Get
        Set
            If (String.Equals(Me._Radicado, Value) = False) Then
                Me.OnRadicadoChanging(Value)
                Me.SendPropertyChanging()
                Me._Radicado = Value
                Me.SendPropertyChanged("Radicado")
                Me.OnRadicadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorBloqueado", Storage:="_ValorBloqueado")>
    Public Property ValorBloqueado() As System.Nullable(Of Double)
        Get
            Return Me._ValorBloqueado
        End Get
        Set
            If (Me._ValorBloqueado.Equals(Value) = False) Then
                Me.OnValorBloqueadoChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorBloqueado = Value
                Me.SendPropertyChanged("ValorBloqueado")
                Me.OnValorBloqueadoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curValorReasignar", Storage:="_ValorReasignar")>
    Public Property ValorReasignar() As System.Nullable(Of Double)
        Get
            Return Me._ValorReasignar
        End Get
        Set
            If (Me._ValorReasignar.Equals(Value) = False) Then
                Me.OnValorReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._ValorReasignar = Value
                Me.SendPropertyChanged("ValorReasignar")
                Me.OnValorReasignarChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDesbloqueando", Storage:="_Desbloqueando")>
    Public Property Desbloqueando() As System.Nullable(Of Boolean)
        Get
            Return Me._Desbloqueando
        End Get
        Set
            If (Me._Desbloqueando.Equals(Value) = False) Then
                Me.OnDesbloqueandoChanging(Value)
                Me.SendPropertyChanging()
                Me._Desbloqueando = Value
                Me.SendPropertyChanged("Desbloqueando")
                Me.OnDesbloqueandoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDesbloquearSaldo", Storage:="_DesbloquearSaldo")>
    Public Property DesbloquearSaldo() As System.Nullable(Of Boolean)
        Get
            Return Me._DesbloquearSaldo
        End Get
        Set
            If (Me._DesbloquearSaldo.Equals(Value) = False) Then
                Me.OnDesbloquearSaldoChanging(Value)
                Me.SendPropertyChanging()
                Me._DesbloquearSaldo = Value
                Me.SendPropertyChanged("DesbloquearSaldo")
                Me.OnDesbloquearSaldoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reasignar")>
    Public Property Reasignar() As System.Nullable(Of Boolean)
        Get
            Return Me._Reasignar
        End Get
        Set
            If (Me._Reasignar.Equals(Value) = False) Then
                Me.OnReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._Reasignar = Value
                Me.SendPropertyChanged("Reasignar")
                Me.OnReasignarChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdBloqueo", Storage:="_IdBloqueo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property IdBloqueo() As Integer
        Get
            Return Me._IdBloqueo
        End Get
        Set
            If ((Me._IdBloqueo = Value) _
                        = False) Then
                Me.OnIdBloqueoChanging(Value)
                Me.SendPropertyChanging()
                Me._IdBloqueo = Value
                Me.SendPropertyChanged("IdBloqueo")
                Me.OnIdBloqueoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRadicadoReasignar", Storage:="_RadicadoReasignar", DbType:="VarChar(20)")>
    Public Property RadicadoReasignar() As String
        Get
            Return Me._RadicadoReasignar
        End Get
        Set
            If (String.Equals(Me._RadicadoReasignar, Value) = False) Then
                Me.OnRadicadoReasignarChanging(Value)
                Me.SendPropertyChanging()
                Me._RadicadoReasignar = Value
                Me.SendPropertyChanged("RadicadoReasignar")
                Me.OnRadicadoReasignarChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

Partial Public Class sp_VerificarSaldoResult

    Private _SaldoCliente As Double

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SaldoCliente", DbType:="Float")>
    Public Property SaldoCliente() As Double
        Get
            Return Me._SaldoCliente
        End Get
        Set
            If ((Me._SaldoCliente = Value) _
                        = False) Then
                Me._SaldoCliente = Value
            End If
        End Set
    End Property
End Class

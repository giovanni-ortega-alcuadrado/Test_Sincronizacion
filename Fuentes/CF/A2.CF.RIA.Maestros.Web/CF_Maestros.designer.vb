'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class CF_MaestrosDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub InsertConfirmacion(instance As CFMaestros.Confirmacion)
    End Sub
    Partial Private Sub UpdateConfirmacion(instance As CFMaestros.Confirmacion)
    End Sub
    Partial Private Sub DeleteConfirmacion(instance As CFMaestros.Confirmacion)
    End Sub
    Partial Private Sub InsertListaConfiguracion(instance As CFMaestros.ListaConfiguracion)
    End Sub
    Partial Private Sub UpdateListaConfiguracion(instance As CFMaestros.ListaConfiguracion)
    End Sub
    Partial Private Sub DeleteListaConfiguracion(instance As CFMaestros.ListaConfiguracion)
    End Sub
    Partial Private Sub InsertSubGrupo(instance As CFMaestros.SubGrupo)
    End Sub
    Partial Private Sub UpdateSubGrupo(instance As CFMaestros.SubGrupo)
    End Sub
    Partial Private Sub DeleteSubGrupo(instance As CFMaestros.SubGrupo)
    End Sub
    Partial Private Sub InsertValidacionEliminarRegistro(instance As CFMaestros.ValidacionEliminarRegistro)
    End Sub
    Partial Private Sub UpdateValidacionEliminarRegistro(instance As CFMaestros.ValidacionEliminarRegistro)
    End Sub
    Partial Private Sub DeleteValidacionEliminarRegistro(instance As CFMaestros.ValidacionEliminarRegistro)
    End Sub
    Partial Private Sub InsertTiposEntida(instance As CFMaestros.TiposEntida)
    End Sub
    Partial Private Sub UpdateTiposEntida(instance As CFMaestros.TiposEntida)
    End Sub
    Partial Private Sub DeleteTiposEntida(instance As CFMaestros.TiposEntida)
    End Sub
    Partial Private Sub InsertCodigos_CII(instance As CFMaestros.Codigos_CII)
    End Sub
    Partial Private Sub UpdateCodigos_CII(instance As CFMaestros.Codigos_CII)
    End Sub
    Partial Private Sub DeleteCodigos_CII(instance As CFMaestros.Codigos_CII)
    End Sub
    Partial Private Sub InsertClasificacion(instance As CFMaestros.Clasificacion)
    End Sub
    Partial Private Sub UpdateClasificacion(instance As CFMaestros.Clasificacion)
    End Sub
    Partial Private Sub DeleteClasificacion(instance As CFMaestros.Clasificacion)
    End Sub
    Partial Private Sub InsertEspeciesExcluidasEncabezado(instance As CFMaestros.EspeciesExcluidasEncabezado)
    End Sub
    Partial Private Sub UpdateEspeciesExcluidasEncabezado(instance As CFMaestros.EspeciesExcluidasEncabezado)
    End Sub
    Partial Private Sub DeleteEspeciesExcluidasEncabezado(instance As CFMaestros.EspeciesExcluidasEncabezado)
    End Sub
    Partial Private Sub DeleteEspeciesExcluidasDetalles(instance As CFMaestros.EspeciesExcluidasDetalles)
    End Sub
    Partial Private Sub InsertConfiguracionContableMultimoneda(instance As CFMaestros.ConfiguracionContableMultimoneda)
    End Sub
    Partial Private Sub UpdateConfiguracionContableMultimoneda(instance As CFMaestros.ConfiguracionContableMultimoneda)
    End Sub
    Partial Private Sub DeleteConfiguracionContableMultimoneda(instance As CFMaestros.ConfiguracionContableMultimoneda)
    End Sub
    Partial Private Sub DeleteCuentasFondosDetalle(instance As CFMaestros.CuentasFondosDetalle)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Confirmacion() As System.Data.Linq.Table(Of CFMaestros.Confirmacion)
		Get
			Return Me.GetTable(Of CFMaestros.Confirmacion)
		End Get
	End Property
	
	Public ReadOnly Property ListaConfiguracion() As System.Data.Linq.Table(Of CFMaestros.ListaConfiguracion)
		Get
			Return Me.GetTable(Of CFMaestros.ListaConfiguracion)
		End Get
	End Property
	
	Public ReadOnly Property Listas() As System.Data.Linq.Table(Of CFMaestros.Lista)
		Get
			Return Me.GetTable(Of CFMaestros.Lista)
		End Get
	End Property
	
	Public ReadOnly Property Parametros() As System.Data.Linq.Table(Of CFMaestros.Parametro)
		Get
			Return Me.GetTable(Of CFMaestros.Parametro)
		End Get
	End Property
	
	Public ReadOnly Property Paises() As System.Data.Linq.Table(Of CFMaestros.Paise)
		Get
			Return Me.GetTable(Of CFMaestros.Paise)
		End Get
	End Property
	
	Public ReadOnly Property Departamentos() As System.Data.Linq.Table(Of CFMaestros.Departamento)
		Get
			Return Me.GetTable(Of CFMaestros.Departamento)
		End Get
	End Property
	
	Public ReadOnly Property Ciudades() As System.Data.Linq.Table(Of CFMaestros.Ciudade)
		Get
			Return Me.GetTable(Of CFMaestros.Ciudade)
		End Get
	End Property
	
	Public ReadOnly Property Calificadoras() As System.Data.Linq.Table(Of CFMaestros.Calificadoras)
		Get
			Return Me.GetTable(Of CFMaestros.Calificadoras)
		End Get
	End Property
	
	Public ReadOnly Property CalificacionesInversiones() As System.Data.Linq.Table(Of CFMaestros.CalificacionesInversiones)
		Get
			Return Me.GetTable(Of CFMaestros.CalificacionesInversiones)
		End Get
	End Property
	
	Public ReadOnly Property CalificacionesCalificadora() As System.Data.Linq.Table(Of CFMaestros.CalificacionesCalificadora)
		Get
			Return Me.GetTable(Of CFMaestros.CalificacionesCalificadora)
		End Get
	End Property
	
	Public ReadOnly Property ChoquesTasasInteres() As System.Data.Linq.Table(Of CFMaestros.ChoquesTasasInteres)
		Get
			Return Me.GetTable(Of CFMaestros.ChoquesTasasInteres)
		End Get
	End Property
	
	Public ReadOnly Property Entidades() As System.Data.Linq.Table(Of CFMaestros.Entidades)
		Get
			Return Me.GetTable(Of CFMaestros.Entidades)
		End Get
	End Property
	
	Public ReadOnly Property Subgrupos() As System.Data.Linq.Table(Of CFMaestros.SubGrupo)
		Get
			Return Me.GetTable(Of CFMaestros.SubGrupo)
		End Get
	End Property
	
	Public ReadOnly Property CalificacionesEmisor() As System.Data.Linq.Table(Of CFMaestros.CalificacionesEmisor)
		Get
			Return Me.GetTable(Of CFMaestros.CalificacionesEmisor)
		End Get
	End Property
	
	Public ReadOnly Property ValidacionEliminarRegistro() As System.Data.Linq.Table(Of CFMaestros.ValidacionEliminarRegistro)
		Get
			Return Me.GetTable(Of CFMaestros.ValidacionEliminarRegistro)
		End Get
	End Property
	
	Public ReadOnly Property TiposEntidad() As System.Data.Linq.Table(Of CFMaestros.TiposEntida)
		Get
			Return Me.GetTable(Of CFMaestros.TiposEntida)
		End Get
	End Property
	
	Public ReadOnly Property Codigos_CIIU() As System.Data.Linq.Table(Of CFMaestros.Codigos_CII)
		Get
			Return Me.GetTable(Of CFMaestros.Codigos_CII)
		End Get
	End Property
	
	Public ReadOnly Property Clasificaciones() As System.Data.Linq.Table(Of CFMaestros.Clasificacion)
		Get
			Return Me.GetTable(Of CFMaestros.Clasificacion)
		End Get
	End Property
	
	Public ReadOnly Property EstadosConceptoTitulos() As System.Data.Linq.Table(Of CFMaestros.EstadosConceptoTitulos)
		Get
			Return Me.GetTable(Of CFMaestros.EstadosConceptoTitulos)
		End Get
	End Property
	
	Public ReadOnly Property EntidadesCuentasDeposito() As System.Data.Linq.Table(Of CFMaestros.EntidadesCuentasDeposito)
		Get
			Return Me.GetTable(Of CFMaestros.EntidadesCuentasDeposito)
		End Get
	End Property
	
	Public ReadOnly Property EstadosBloqueoTitulos() As System.Data.Linq.Table(Of CFMaestros.EstadosBloqueoTitulos)
		Get
			Return Me.GetTable(Of CFMaestros.EstadosBloqueoTitulos)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesExcluidasEncabezado() As System.Data.Linq.Table(Of CFMaestros.EspeciesExcluidasEncabezado)
		Get
			Return Me.GetTable(Of CFMaestros.EspeciesExcluidasEncabezado)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesExcluidasDetalles() As System.Data.Linq.Table(Of CFMaestros.EspeciesExcluidasDetalles)
		Get
			Return Me.GetTable(Of CFMaestros.EspeciesExcluidasDetalles)
		End Get
	End Property
	
	Public ReadOnly Property tblClaseContableTitulo() As System.Data.Linq.Table(Of CFMaestros.tblClaseContableTitulo)
		Get
			Return Me.GetTable(Of CFMaestros.tblClaseContableTitulo)
		End Get
	End Property
	
	Public ReadOnly Property ConfiguracionContableMultimoneda() As System.Data.Linq.Table(Of CFMaestros.ConfiguracionContableMultimoneda)
		Get
			Return Me.GetTable(Of CFMaestros.ConfiguracionContableMultimoneda)
		End Get
	End Property
	
	Public ReadOnly Property CuentasFondos() As System.Data.Linq.Table(Of CFMaestros.CuentasFondos)
		Get
			Return Me.GetTable(Of CFMaestros.CuentasFondos)
		End Get
	End Property
	
	Public ReadOnly Property CuentasFondosDetalle() As System.Data.Linq.Table(Of CFMaestros.CuentasFondosDetalle)
		Get
			Return Me.GetTable(Of CFMaestros.CuentasFondosDetalle)
		End Get
	End Property
	
	Public ReadOnly Property EstadosEntradaSalidaTitulos() As System.Data.Linq.Table(Of CFMaestros.EstadosEntradaSalidaTitulos)
		Get
			Return Me.GetTable(Of CFMaestros.EstadosEntradaSalidaTitulos)
		End Get
	End Property
	
	Private Sub InsertLista(ByVal obj As CFMaestros.Lista)
		Dim p1 As Integer = obj.IDLista
		Me.uspOyDNet_Maestros_Listas_Actualizar(p1, obj.Topico, obj.Descripcion, obj.Retorno, CType(obj.Activo,System.Nullable(Of Boolean)), obj.Comentario, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.HabilitarConfiguracionLista,System.Nullable(Of Boolean)))
		obj.IDLista = p1
	End Sub
	
	Private Sub UpdateLista(ByVal obj As CFMaestros.Lista)
		Dim p1 As Integer = obj.IDLista
		Me.uspOyDNet_Maestros_Listas_Actualizar(p1, obj.Topico, obj.Descripcion, obj.Retorno, CType(obj.Activo,System.Nullable(Of Boolean)), obj.Comentario, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.HabilitarConfiguracionLista,System.Nullable(Of Boolean)))
		obj.IDLista = p1
	End Sub
	
	Private Sub DeleteLista(ByVal obj As CFMaestros.Lista)
		Me.uspOyDNet_Maestros_Listas_Eliminar(obj.IDLista, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertParametro(ByVal obj As CFMaestros.Parametro)
		Dim p1 As Integer = obj.IDparametro
		Me.uspOyDNet_Maestros_Parametros_Actualizar(p1, obj.Parametro, obj.Valor, obj.Descripcion, obj.Tipo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDparametro = p1
	End Sub
	
	Private Sub UpdateParametro(ByVal obj As CFMaestros.Parametro)
		Dim p1 As Integer = obj.IDparametro
		Me.uspOyDNet_Maestros_Parametros_Actualizar(p1, obj.Parametro, obj.Valor, obj.Descripcion, obj.Tipo, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDparametro = p1
	End Sub
	
	Private Sub DeleteParametro(ByVal obj As CFMaestros.Parametro)
		Me.uspOyDNet_Maestros_Parametros_Eliminar(obj.Parametro, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertPaise(ByVal obj As CFMaestros.Paise)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IDPais
		Me.uspOyDNet_Maestros_Paises_Actualizar(p1, obj.Nombre, obj.Codigo_ISO, obj.Usuario, p2, obj.CodigoDane, obj.NivelRiesgo, obj.ZonaEconomica, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IDPais = p2
	End Sub
	
	Private Sub UpdatePaise(ByVal obj As CFMaestros.Paise)
		Dim p1 As Integer = obj.ID
		Dim p2 As Integer = obj.IDPais
		Me.uspOyDNet_Maestros_Paises_Actualizar(p1, obj.Nombre, obj.Codigo_ISO, obj.Usuario, p2, obj.CodigoDane, obj.NivelRiesgo, obj.ZonaEconomica, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IDPais = p2
	End Sub
	
	Private Sub DeletePaise(ByVal obj As CFMaestros.Paise)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Paises_Eliminar(obj.IDPais, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertDepartamento(ByVal obj As CFMaestros.Departamento)
		Me.uspOyDNet_Maestros_Departamentos_Actualizar(obj.IDPais, obj.ID, obj.Nombre, obj.Codigo_DaneDEPTO, obj.Usuario, obj.IDDepartamento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateDepartamento(ByVal obj As CFMaestros.Departamento)
		Me.uspOyDNet_Maestros_Departamentos_Actualizar(obj.IDPais, obj.ID, obj.Nombre, obj.Codigo_DaneDEPTO, obj.Usuario, obj.IDDepartamento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteDepartamento(ByVal obj As CFMaestros.Departamento)
		Me.uspOyDNet_Maestros_Departamentos_Eliminar(obj.IDDepartamento, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertCiudade(ByVal obj As CFMaestros.Ciudade)
		Dim p1 As Integer = obj.IDCodigo
		Dim p2 As Integer = obj.IDCiudad
		Me.uspOyDNet_Maestros_Ciudades_Actualizar(p1, obj.Nombre, CType(obj.EsCapital,System.Nullable(Of Boolean)), obj.IDdepartamento, obj.CodigoDANE, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCodigo = p1
		obj.IDCiudad = p2
	End Sub
	
	Private Sub UpdateCiudade(ByVal obj As CFMaestros.Ciudade)
		Dim p1 As Integer = obj.IDCodigo
		Dim p2 As Integer = obj.IDCiudad
		Me.uspOyDNet_Maestros_Ciudades_Actualizar(p1, obj.Nombre, CType(obj.EsCapital,System.Nullable(Of Boolean)), obj.IDdepartamento, obj.CodigoDANE, obj.Usuario, p2, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDCodigo = p1
		obj.IDCiudad = p2
	End Sub
	
	Private Sub DeleteCiudade(ByVal obj As CFMaestros.Ciudade)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_Ciudades_Eliminar(obj.IDCiudad, p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub

    Private Sub InsertCalificacionesEmisor(ByVal obj As CFMaestros.CalificacionesEmisor)
        Me.uspCalculosFinancieros_CalificacionEmisor_Actualizar(CType(obj.intIdCalificacionEmisor, System.Nullable(Of Integer)), CType(obj.intIdEmisor, System.Nullable(Of Integer)), CType(obj.intIdCalificacionInversion, System.Nullable(Of Integer)), CType(obj.logTransmitirASuper, System.Nullable(Of Boolean)), obj.dtmFechaCalificacionEmisor, obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
    End Sub

    Private Sub UpdateCalificacionesEmisor(ByVal obj As CFMaestros.CalificacionesEmisor)
		Me.uspCalculosFinancieros_CalificacionEmisor_Actualizar(CType(obj.intIdCalificacionEmisor,System.Nullable(Of Integer)), CType(obj.intIdEmisor,System.Nullable(Of Integer)), CType(obj.intIdCalificacionInversion,System.Nullable(Of Integer)), CType(obj.logTransmitirASuper,System.Nullable(Of Boolean)), obj.dtmFechaCalificacionEmisor, obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteCalificacionesEmisor(ByVal obj As CFMaestros.CalificacionesEmisor)
		Me.uspCalculosFinancieros_CalificacionEmisor_Eliminar(CType(obj.intIdCalificacionEmisor,System.Nullable(Of Integer)), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    Private Sub InsertEspeciesExcluidasDetalles(ByVal obj As CFMaestros.EspeciesExcluidasDetalles)
        Me.PorDefinir26()
    End Sub

    Private Sub UpdateEspeciesExcluidasDetalles(ByVal obj As CFMaestros.EspeciesExcluidasDetalles)
		Me.PorDefinir26
	End Sub

    Private Sub DeletetblClaseContableTitulo(ByVal obj As CFMaestros.tblClaseContableTitulo)
        Dim p1 As String = obj.strMsgValidacion
        Me.uspCalculosFinancieros_ClaseContableTitulo_Eliminar(CType(obj.intIDClaseContableTitulo, System.Nullable(Of Integer)), obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), p1)
        obj.strMsgValidacion = p1
    End Sub

    Private Sub InsertCuentasFondosDetalle(ByVal obj As CFMaestros.CuentasFondosDetalle)
        Me.PorDefinir_IDCuentasFondosDetalle()
    End Sub

    Private Sub UpdateCuentasFondosDetalle(ByVal obj As CFMaestros.CuentasFondosDetalle)
		Me.PorDefinir_IDCuentasFondosDetalle
	End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ClaseContableTitulo_Actualizar")>
    Public Function uspCalculosFinancieros_ClaseContableTitulo_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDClaseContableTitulo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrTipoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrReferencia As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogGravado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogNCRNGO As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogMultimoneda As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlDetalleGrid As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClaseContableTitulo, pstrTipoTitulo, pstrReferencia, plogGravado, plogNCRNGO, pstrUsuario, plogMultimoneda, pxmlDetalleGrid, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIDClaseContableTitulo = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(10),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ClaseContableTitulo_Eliminar")>  _
	Public Function uspCalculosFinancieros_ClaseContableTitulo_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClaseContableTitulo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClaseContableTitulo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ClaseContableTitulo_Consultar")>  _
	Public Function uspCalculosFinancieros_ClaseContableTitulo_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrAccion", DbType:="varchar(20)")> ByVal strAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrTipoTitulo", DbType:="varchar(50)")> ByVal strTipoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrReferencia", DbType:="varchar(50)")> ByVal strReferencia As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrUsuario", DbType:="varchar(60)")> ByVal strUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.tblClaseContableTitulo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strAccion, strTipoTitulo, strReferencia, strUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.tblClaseContableTitulo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ClaseContableTitulo_Filtrar")>  _
	Public Function uspCalculosFinancieros_ClaseContableTitulo_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrUsuario", DbType:="varchar(60)")> ByVal strUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.tblClaseContableTitulo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, strUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.tblClaseContableTitulo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Listas_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Listas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDLista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrRetorno As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal pLogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrComentario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogHabilitarConfiguracionLista As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDLista, pstrTopico, pstrDescripcion, pstrRetorno, pLogActivo, pstrComentario, pstrUsuario, infosesion, pintErrorPersonalizado, plogHabilitarConfiguracionLista)
		pintIDLista = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Listas_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Listas_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDLista As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDLista, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Listas_Consultar")>  _
	Public Function uspOyDNet_Maestros_Listas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrTopico", DbType:="varchar(20)")> ByVal strTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrRetorno", DbType:="varchar(80)")> ByVal strRetorno As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Lista)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strTopico, strDescripcion, strRetorno, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Lista))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Listas_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Listas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Lista)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Lista))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ListaConfiguracion_Consultar")>  _
	Public Function uspOyDNet_Maestros_ListaConfiguracion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrTopico", DbType:="varchar(20)")> ByVal strTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(50)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrTipoDato", DbType:="varchar(10)")> ByVal strTipoDato As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ListaConfiguracion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strTopico, strDescripcion, strTipoDato, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ListaConfiguracion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ListaConfiguracion_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ListaConfiguracion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ListaConfiguracion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ListaConfiguracion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfiguracionListas_Validar_Retornos")>  _
	Public Function uspOyDNet_Maestros_ConfiguracionListas_Validar_Retornos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(max)")> ByVal pstrRetornos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Confirmacion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTopico, pstrRetornos, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Confirmacion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Parametros_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Parametros_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pIdParametro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5000)")> ByVal pstrValor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrTipo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pIdParametro, pstrParametro, pstrValor, pstrDescripcion, pstrTipo, pstrUsuario, infosesion, pintErrorPersonalizado)
		pIdParametro = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Parametros_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Parametros_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrParametro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Parametros_Consultar")>  _
	Public Function uspOyDNet_Maestros_Parametros_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pIdParametro", DbType:="int")> ByVal IdParametro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrParametro", DbType:="varchar(50)")> ByVal strParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrValor", DbType:="varchar(5000)")> ByVal strValor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Parametro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), IdParametro, strParametro, strValor, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Parametro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Parametros_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Parametros_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Parametro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Parametro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfiguracionParametros_Consultar")>  _
	Public Function uspOyDNet_Maestros_ConfiguracionParametros_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pIdParametro", DbType:="int")> ByVal IdParametro As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrParametro", DbType:="varchar(50)")> ByVal strParametro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrValor", DbType:="varchar(5000)")> ByVal strValor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(5000)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Parametro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), IdParametro, strParametro, strValor, strDescripcion, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Parametro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ConfiguracionParametros_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ConfiguracionParametros_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Parametro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Parametro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Paises_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Paises_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(3)")> ByVal pstrCodigo_ISO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDPais As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="nvarchar(100)")> ByVal pstrCodigoDane As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdClasificacionRiesgo As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrZonaEconomica As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, pstrCodigo_ISO, pstrUsuario, pintIDPais, pstrCodigoDane, pintIdClasificacionRiesgo, pstrZonaEconomica, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		pintIDPais = CType(result.GetParameterValue(4),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Paises_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Paises_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPais As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPais, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Paises_Consultar")>  _
	Public Function uspOyDNet_Maestros_Paises_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(40)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Paise)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Paise))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Paises_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Paises_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Paise)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Paise))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_DepartamentosPaise_Consultar")>  _
	Public Function uspOyDNet_Maestros_DepartamentosPaise_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPais As int32, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Departamento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPais, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Departamento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Departamentos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Departamentos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPais As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrCodigo_DaneDEPTO As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDepartamento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDPais, plngID, pstrNombre, pstrCodigo_DaneDEPTO, pstrUsuario, pintIDDepartamento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Departamentos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Departamentos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDepartamento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDDepartamento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Departamentos_Consultar")>  _
	Public Function uspOyDNet_Maestros_Departamentos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(40)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Departamento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Departamento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Departamentos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Departamentos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Departamento)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Departamento))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ciudades_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Ciudades_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(40)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEsCapital As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDdepartamento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(6)")> ByVal pstrCodigo_DANE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDCiudad As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, plogEsCapital, plngIDdepartamento, pstrCodigo_DANE, pstrUsuario, pintIDCiudad, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),Integer)
		pintIDCiudad = CType(result.GetParameterValue(6),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ciudades_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Ciudades_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDCiudad As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCiudad, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ciudades_Consultar")>  _
	Public Function uspOyDNet_Maestros_Ciudades_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(40)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigo_DANE", DbType:="varchar(6)")> ByVal strCodigo_DANE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDdepartamento", DbType:="int")> ByVal lngIDdepartamento As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Ciudade)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strCodigo_DANE, lngIDdepartamento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Ciudade))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Ciudades_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Ciudades_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Ciudade)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Ciudade))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Calificadoras_Actualizar")>  _
	Public Function uspCalculosFinancieros_Calificadoras_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIdCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCodCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNomCalificadora As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificadora, pintCodCalificadora, pstrNomCalificadora, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIdCalificadora = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(6),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Calificadoras_Eliminar")>  _
	Public Function uspCalculosFinancieros_Calificadoras_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificadora, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Calificadoras_Filtrar")>  _
	Public Function uspCalculosFinancieros_Calificadoras_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Calificadoras)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Calificadoras))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Calificadoras_Consultar")>  _
	Public Function uspCalculosFinancieros_Calificadoras_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintCodCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrNomCalificadora As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Calificadoras)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintIdCalificadora, pintCodCalificadora, pstrNomCalificadora, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Calificadoras))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesInversiones_Actualizar")>  _
	Public Function uspCalculosFinancieros_CalificacionesInversiones_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintIdCalificacionInversion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrTipoCalificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrTipoCalificacionInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrNombreCalificacionInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificacionInversion, pstrTipoCalificacion, pstrTipoCalificacionInversion, pstrNombreCalificacionInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIdCalificacionInversion = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(7),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesInversiones_Eliminar")>  _
	Public Function uspCalculosFinancieros_CalificacionesInversiones_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIdCalificacionInversion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificacionInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesInversiones_Filtrar")>  _
	Public Function uspCalculosFinancieros_CalificacionesInversiones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CalificacionesInversiones)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CalificacionesInversiones))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesInversiones_Consultar")>  _
	Public Function uspCalculosFinancieros_CalificacionesInversiones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrTipoCalificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrTipoCalificacionInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(500)")> ByVal pstrNombreCalificacionInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CalificacionesInversiones)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrTipoCalificacion, pstrTipoCalificacionInversion, pstrNombreCalificacionInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CalificacionesInversiones))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesCalificadora_Actualizar")>  _
	Public Function uspCalculosFinancieros_CalificacionesCalificadora_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintIdCalificaCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIdCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDCalificacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintCodigoSuper As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificaCalificadora, pintIdCalificadora, pintIDCalificacion, pintCodigoSuper, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIdCalificaCalificadora = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(7),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesCalificadora_Eliminar")>  _
	Public Function uspCalculosFinancieros_CalificacionesCalificadora_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIdCalificaCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificaCalificadora, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesCalificadora_Filtrar")>  _
	Public Function uspCalculosFinancieros_CalificacionesCalificadora_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CalificacionesCalificadora)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CalificacionesCalificadora))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionesCalificadora_Consultar")>  _
	Public Function uspCalculosFinancieros_CalificacionesCalificadora_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIdCalificaCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintCodCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDCalificacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintCodigoSuper As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CalificacionesCalificadora)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintIdCalificaCalificadora, pintCodCalificadora, pintIDCalificacion, pintCodigoSuper, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CalificacionesCalificadora))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ChoquesTasasInteres_Actualizar")>  _
	Public Function uspCalculosFinancieros_ChoquesTasasInteres_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintIDChoquesTasasInteres As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintZona As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintBanda As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NOT NULL")> ByVal pdblLimiteInferior As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblLimiteSuperior As System.Nullable(of System.Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NOT NULL")> ByVal pstrTipoMoneda As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintPBS As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDChoquesTasasInteres, pintZona, pintBanda, pdblLimiteInferior, pdblLimiteSuperior, pstrTipoMoneda, pintPBS, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIDChoquesTasasInteres = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(10),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ChoquesTasasInteres_Eliminar")>  _
	Public Function uspCalculosFinancieros_ChoquesTasasInteres_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDChoquesTasasInteres As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDChoquesTasasInteres, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ChoquesTasasInteres_Filtrar")>  _
	Public Function uspCalculosFinancieros_ChoquesTasasInteres_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ChoquesTasasInteres)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ChoquesTasasInteres))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ChoquesTasasInteres_Consultar")>  _
	Public Function uspCalculosFinancieros_ChoquesTasasInteres_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintZona As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintBanda As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NOT NULL")> ByVal pstrTipoMoneda As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ChoquesTasasInteres)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintZona, pintBanda, pstrTipoMoneda, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ChoquesTasasInteres))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_Actualizar")>  _
	Public Function uspCalculosFinancieros_Entidades_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintIDEntidad As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1) NOT NULL")> ByVal pstrTipoIdentificacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NOT NULL")> ByVal pstrNroDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NOT NULL")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDTipoEntidad As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDCodigoCIIU As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(25) NULL")> ByVal pstrTelefono As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NULL")> ByVal pstrDireccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintIDCalificacionInversionLarga As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintIDCalificacionInversionCorta As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogActivo As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintIDCalificadora As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblValorCupo As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblValorCupoConsumido As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal plngIDPoblacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal plngIDDepartamento As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal plngIDPais As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogReplicarAEmisores As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogEsComisionista As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogAplicaEnrutamiento As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3) NULL")> ByVal pstrCodigoEmisor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogVigiladoSuper As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal plngIDGrupo As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal plngIDSubGrupo As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogCarteraColectiva As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintCodigoEntidadAdmin As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10) NULL")> ByVal pstrClaseInversion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintDigitoVerificacion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintIDComisionista As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintCodigoNaturaleza As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogAdecuadoGobierno As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80) NULL")> ByVal pstrTipoFondo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50) NULL")> ByVal pstrCalidadTributaria As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50) NULL")> ByVal pstrClasificacionAfiliado As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEntidad, pstrTipoIdentificacion, pstrNroDocumento, pstrNombre, pintIDTipoEntidad, pintIDCodigoCIIU, pstrTelefono, pstrDireccion, pintIDCalificacionInversionLarga, pintIDCalificacionInversionCorta, plogActivo, pintIDCalificadora, pdblValorCupo, pdblValorCupoConsumido, plngIDPoblacion, plngIDDepartamento, plngIDPais, plogReplicarAEmisores, plogEsComisionista, pstrEMail, plogAplicaEnrutamiento, pstrCodigoEmisor, plogVigiladoSuper, plngIDGrupo, plngIDSubGrupo, plogCarteraColectiva, pintCodigoEntidadAdmin, pstrClaseInversion, pintDigitoVerificacion, pintIDComisionista, pintCodigoNaturaleza, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion, plogAdecuadoGobierno, pstrTipoFondo, pstrCalidadTributaria, pstrClasificacionAfiliado)
		pintIDEntidad = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(34),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_Eliminar")>  _
	Public Function uspCalculosFinancieros_Entidades_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDEntidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEntidad, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_Filtrar")>  _
	Public Function uspCalculosFinancieros_Entidades_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Entidades)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Entidades))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_Consultar")>  _
	Public Function uspCalculosFinancieros_Entidades_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1) NOT NULL")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NOT NULL")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NOT NULL")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDTipoEntidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDCodigoCIIU As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintIDCalificacionInversion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintIDCalificadora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Entidades)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrTipoIdentificacion, pstrNroDocumento, pstrNombre, pintIDTipoEntidad, pintIDCodigoCIIU, pintIDCalificacionInversion, pintIDCalificadora, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Entidades))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_ValidarEmisor")>  _
	Public Function uspCalculosFinancieros_Entidades_ValidarEmisor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NOT NULL")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDTipoEntidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNroDocumento, pintIDTipoEntidad, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(5),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_DigitoNIT_Calcular")>  _
	Public Function uspCalculosFinancieros_DigitoNIT_Calcular(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintDigitoVerificacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNroDocumento, pintDigitoVerificacion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		pintDigitoVerificacion = CType(result.GetParameterValue(1),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionEmisor_Actualizar")>  _
	Public Function uspCalculosFinancieros_CalificacionEmisor_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCalificacionEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCalificacionInversion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT")> ByVal plogTransmitirASuper As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DATETIME")> ByVal pdtmFechaCalificacionEmisor As Date, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificacionEmisor, pintIdEmisor, pintIdCalificacionInversion, plogTransmitirASuper, pdtmFechaCalificacionEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionEmisor_Filtrar")>  _
	Public Function uspCalculosFinancieros_CalificacionEmisor_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CalificacionesEmisor)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CalificacionesEmisor))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionEmisor_Eliminar")>  _
	Public Function uspCalculosFinancieros_CalificacionEmisor_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCalificacionEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificacionEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalificacionEmisor_Consultar")>  _
	Public Function uspCalculosFinancieros_CalificacionEmisor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCalificacionEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCalificacionInversion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CalificacionesEmisor)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdCalificacionEmisor, pintIdEmisor, pintIdCalificacionInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CalificacionesEmisor))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ValidarEliminarRegistro")>  _
	Public Function uspOyDNet_Maestros_ValidarEliminarRegistro(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrTablas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrCampos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrValores As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ValidacionEliminarRegistro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTablas, pstrCampos, pstrValores, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ValidacionEliminarRegistro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ValidarDuplicidadRegistro")>  _
	Public Function uspOyDNet_Maestros_ValidarDuplicidadRegistro(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrNombreTabla As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrCampos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(500)")> ByVal pstrValores As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ValidacionEliminarRegistro)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNombreTabla, pstrCampos, pstrValores, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ValidacionEliminarRegistro))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposEntidad_Consultar")>  _
	Public Function uspOyDNet_Maestros_TiposEntidad_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.TiposEntida)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.TiposEntida))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_TiposEntidad_Filtrar")>  _
	Public Function uspOyDNet_Maestros_TiposEntidad_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.TiposEntida)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.TiposEntida))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Codigos_CIIU_Consultar")>  _
	Public Function uspOyDNet_Maestros_Codigos_CIIU_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrCodigo", DbType:="varchar(10)")> ByVal strCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrDescripcion", DbType:="varchar(255)")> ByVal strDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Codigos_CII)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strCodigo, strDescripcion, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Codigos_CII))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Codigos_CIIU_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Codigos_CIIU_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Codigos_CII)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Codigos_CII))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Clasificaciones_Consultar")>  _
	Public Function uspOyDNet_Maestros_Clasificaciones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrAplicaA", DbType:="Varchar(1)")> ByVal strAplicaA As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogEsGrupo", DbType:="bit")> ByVal logEsGrupo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plogEsSector", DbType:="bit")> ByVal logEsSector As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngIDPerteneceA", DbType:="Int")> ByVal lngIDPerteneceA As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Clasificacion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, strAplicaA, logEsGrupo, logEsSector, lngIDPerteneceA, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Clasificacion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Clasificaciones_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Clasificaciones_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.Clasificacion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.Clasificacion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EstadosConceptoTitulos_Actualizar")>  _
	Public Function uspOyDNet_EstadosConceptoTitulos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDEstadosConceptoTitulos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NOT NULL")> ByVal pstrDescripcionConceptoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7) NOT NULL")> ByVal pstrEstadoEntrada As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7) NULL")> ByVal pstrEstadoSalida As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEstadosConceptoTitulos, pstrDescripcionConceptoTitulo, pstrEstadoEntrada, pstrEstadoSalida, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIDEstadosConceptoTitulos = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(7),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EstadosConceptoTitulos_Eliminar")>  _
	Public Function uspOyDNet_EstadosConceptoTitulos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDEstadosConceptoTitulos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEstadosConceptoTitulos, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EstadosConceptoTitulos_Filtrar")>  _
	Public Function uspOyDNet_EstadosConceptoTitulos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EstadosConceptoTitulos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EstadosConceptoTitulos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_EstadosConceptoTitulos_Consultar")>  _
	Public Function uspOyDNet_EstadosConceptoTitulos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7) NULL")> ByVal pstrConceptoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7) NULL")> ByVal pstrEstadoEntrada As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(7) NULL")> ByVal pstrEstadoSalida As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EstadosConceptoTitulos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrConceptoTitulo, pstrEstadoEntrada, pstrEstadoSalida, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EstadosConceptoTitulos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_CuentasDeposito_Actualizar")>  _
	Public Function uspCalculosFinancieros_Entidades_CuentasDeposito_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDEntidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4) NOT NULL")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(25) NOT NULL")> ByVal pstrCuentaDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuarioWindows As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pintIDEntidad, pstrDeposito, pstrCuentaDeposito, pstrUsuario, pstrUsuarioWindows, pstrMaquina, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintID = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(9),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_CuentasDeposito_Eliminar")>  _
	Public Function uspCalculosFinancieros_Entidades_CuentasDeposito_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_CuentasDeposito_Filtar")>  _
	Public Function uspCalculosFinancieros_Entidades_CuentasDeposito_Filtar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EntidadesCuentasDeposito)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EntidadesCuentasDeposito))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_Entidades_CuentasDeposito_Consultar")>  _
	Public Function uspCalculosFinancieros_Entidades_CuentasDeposito_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NULL")> ByVal plogConsultarDesdeMaestro As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDEntidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(4) NOT NULL")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(25) NOT NULL")> ByVal pstrCuentaDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EntidadesCuentasDeposito)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plogConsultarDesdeMaestro, pstrAccion, pintIDEntidad, pstrDeposito, pstrCuentaDeposito, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EntidadesCuentasDeposito))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosBloqueoTitulos_Actualizar")>  _
	Public Function uspCalculosFinancieros_EstadosBloqueoTitulos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5) NOT NULL")> ByVal pstrEstadoBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5) NOT NULL")> ByVal pstrEstadoDesBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NOT NULL")> ByVal pstrMecanismo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5) NOT NULL")> ByVal pstrMotivoBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NULL")> ByVal plogEstado As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pstrEstadoBloqueo, pstrEstadoDesBloqueo, pstrMecanismo, pstrMotivoBloqueo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion, plogEstado)
		pintID = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(8),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosBloqueoTitulos_Eliminar")>  _
	Public Function uspCalculosFinancieros_EstadosBloqueoTitulos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosBloqueoTitulos_Filtar")>  _
	Public Function uspCalculosFinancieros_EstadosBloqueoTitulos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EstadosBloqueoTitulos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EstadosBloqueoTitulos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosBloqueoTitulos_Consultar")>  _
	Public Function uspCalculosFinancieros_EstadosBloqueoTitulos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5) NULL")> ByVal pstrEstadoBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5) NULL")> ByVal pstrEstadoDesBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NULL")> ByVal pstrMecanismo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5) NULL")> ByVal pstrMotivoBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EstadosBloqueoTitulos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrEstadoBloqueo, pstrEstadoDesBloqueo, pstrMecanismo, pstrMotivoBloqueo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EstadosBloqueoTitulos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.usp_SubGruposListar")>  _
	Public Function usp_SubGruposListar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int  NOT NULL")> ByVal pIntPadre As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.SubGrupo)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pIntPadre, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.SubGrupo))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EspeciesExcluidas_Actualizar")>  _
	Public Function uspCalculosFinancieros_EspeciesExcluidas_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrFormato As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlDetalleGrid As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFormato, pxmlDetalleGrid, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(5),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EspeciesExcluidas_Filtrar")>  _
	Public Function uspCalculosFinancieros_EspeciesExcluidas_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EspeciesExcluidasEncabezado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EspeciesExcluidasEncabezado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EspeciesExcluidas_Consultar")>  _
	Public Function uspCalculosFinancieros_EspeciesExcluidas_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80)")> ByVal pstrFormato As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80)")> ByVal pstrExclusionFormato As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EspeciesExcluidasEncabezado)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrFormato, pstrIDEspecie, pstrExclusionFormato, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EspeciesExcluidasEncabezado))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EspeciesExcluidas_Detalles_Consultar")>  _
	Public Function uspCalculosFinancieros_EspeciesExcluidas_Detalles_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80) NOT NULL")> ByVal pstrFormato As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EspeciesExcluidasDetalles)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrFormato, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EspeciesExcluidasDetalles))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function PorDefinir26() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ClaseContableTitulo_Detalle_Consultar")>  _
	Public Function uspCalculosFinancieros_ClaseContableTitulo_Detalle_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDClaseContableTitulo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.ConfiguracionContableMultimoneda)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintIDClaseContableTitulo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.ConfiguracionContableMultimoneda))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CuentasFondos_Actualizar")>  _
	Public Function uspCalculosFinancieros_CuentasFondos_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDCuentasDeceval As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngidCuentaDeceval As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrDeposito As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17)")> ByVal plngIDComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrTipoIdComitente As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrPrefijo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlDetalleGrid As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByVal pstrConector1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrTipoIdBenef1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal plngNroDocBenef1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(3)")> ByVal pstrConector2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrTipoIdBenef2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal plngNroDocBenef2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)NOT NULL")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(25)")> ByVal pstrCuentaPrincipalDCV As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCuentasDeceval, plngidCuentaDeceval, pstrDeposito, plngIDComitente, pstrTipoIdComitente, pstrNroDocumento, pstrNombre, pstrPrefijo, pxmlDetalleGrid, pstrConector1, pstrTipoIdBenef1, plngNroDocBenef1, pstrConector2, pstrTipoIdBenef2, plngNroDocBenef2, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion, pstrCuentaPrincipalDCV)
		pintIDCuentasDeceval = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(18),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CuentasFondos_Eliminar")>  _
	Public Function uspCalculosFinancieros_CuentasFondos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCuentasDeceval As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDCuentasDeceval, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CuentasFondos_Filtrar")>  _
	Public Function uspCalculosFinancieros_CuentasFondos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CuentasFondos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CuentasFondos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CuentasFondos_Consultar")>  _
	Public Function uspCalculosFinancieros_CuentasFondos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngidCuentaDeceval As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrTipoIdComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NULL")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrPrefijo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CuentasFondos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, plngidCuentaDeceval, pstrDeposito, plngIDComitente, pstrTipoIdComitente, pstrNroDocumento, pstrNombre, pstrPrefijo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CuentasFondos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CuentasFondosDetalle_Consultar")>  _
	Public Function uspCalculosFinancieros_CuentasFondosDetalle_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCuentasDeceval As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrNroDocumento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrTipoIdentificacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngidCuentaDeceval As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10)")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.CuentasFondosDetalle)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintIDCuentasDeceval, pstrNroDocumento, pstrTipoIdentificacion, plngidCuentaDeceval, pstrDeposito, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.CuentasFondosDetalle))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function PorDefinir_IDCuentasFondosDetalle() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Actualizar")>  _
	Public Function uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDEstadosEntradaSalidaTitulos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NOT NULL")> ByVal pstrRetorno As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200) NOT NULL")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20) NULL")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NULL")> ByVal pstrMecanismo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrMotivoBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrEstadoActual As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60)NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEstadosEntradaSalidaTitulos, pstrRetorno, pstrDescripcion, pstrTopico, pstrMecanismo, pstrMotivoBloqueo, pstrEstadoActual, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIDEstadosEntradaSalidaTitulos = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(10),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Eliminar")>  _
	Public Function uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDEstadosEntradaSalidaTitulos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDEstadosEntradaSalidaTitulos, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Filtrar")>  _
	Public Function uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EstadosEntradaSalidaTitulos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EstadosEntradaSalidaTitulos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Consultar")>  _
	Public Function uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(200) NOT NULL")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20) NULL")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NULL")> ByVal pstrMecanismo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrMotivoBloqueo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrEstadoActual As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFMaestros.EstadosEntradaSalidaTitulos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrDescripcion, pstrTopico, pstrMecanismo, pstrMotivoBloqueo, pstrEstadoActual, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFMaestros.EstadosEntradaSalidaTitulos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Consecutivo_Consultar")>  _
	Public Function uspCalculosFinancieros_EstadosEntradaSalidaTitulos_Consecutivo_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20) NULL")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NULL")> ByRef pstrRetorno As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTopico, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrRetorno)
		pstrRetorno = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

Namespace CFMaestros
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tempConfirmacion")>  _
	Partial Public Class Confirmacion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDConfirmacion As Integer
		
		Private _Tipo As String
		
		Private _Retorno As String
		
		Private _Exitoso As System.Nullable(Of Boolean)
		
		Private _Mensage As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDConfirmacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConfirmacionChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnMensageChanging(value As String)
    End Sub
    Partial Private Sub OnMensageChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConfirmacion", Storage:="_IDConfirmacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDConfirmacion() As Integer
			Get
				Return Me._IDConfirmacion
			End Get
			Set
				If (Object.Equals(Me._IDConfirmacion, value) = false) Then
					Me.OnIDConfirmacionChanging(value)
					Me.SendPropertyChanging
					Me._IDConfirmacion = value
					Me.SendPropertyChanged("IDConfirmacion")
					Me.OnIDConfirmacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Varchar(30)  NULL")>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetorno", Storage:="_Retorno", DbType:="Varchar(30)  NULL")>  _
		Public Property Retorno() As String
			Get
				Return Me._Retorno
			End Get
			Set
				If (String.Equals(Me._Retorno, value) = false) Then
					Me.OnRetornoChanging(value)
					Me.SendPropertyChanging
					Me._Retorno = value
					Me.SendPropertyChanged("Retorno")
					Me.OnRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit  NULL")>  _
		Public Property Exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._Exitoso
			End Get
			Set
				If (Me._Exitoso.Equals(value) = false) Then
					Me.OnExitosoChanging(value)
					Me.SendPropertyChanging
					Me._Exitoso = value
					Me.SendPropertyChanged("Exitoso")
					Me.OnExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensage", Storage:="_Mensage", DbType:="Varchar(max)  NULL")>  _
		Public Property Mensage() As String
			Get
				Return Me._Mensage
			End Get
			Set
				If (String.Equals(Me._Mensage, value) = false) Then
					Me.OnMensageChanging(value)
					Me.SendPropertyChanging
					Me._Mensage = value
					Me.SendPropertyChanged("Mensage")
					Me.OnMensageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblListaConfiguracion")>  _
	Partial Public Class ListaConfiguracion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDListaConfiguracion As Integer
		
		Private _Topico As String
		
		Private _TipoDato As String
		
		Private _DescripcionTipoDato As String
		
		Private _longitud As Integer
		
		Private _Modificable As Boolean
		
		Private _Descripcion As String
		
		Private _Usuario As String
		
		Private _Actualizacion As Date
		
		Private _InfoSesion As String
		
		Private _LongitudDescripcion As Integer
		
		Private _SQLValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDListaConfiguracionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDListaConfiguracionChanged()
    End Sub
    Partial Private Sub OnTopicoChanging(value As String)
    End Sub
    Partial Private Sub OnTopicoChanged()
    End Sub
    Partial Private Sub OnTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChanged()
    End Sub
    Partial Private Sub OnDescripcionTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionTipoDatoChanged()
    End Sub
    Partial Private Sub OnlongitudChanging(value As Integer)
    End Sub
    Partial Private Sub OnlongitudChanged()
    End Sub
    Partial Private Sub OnModificableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnModificableChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnLongitudDescripcionChanging(value As Integer)
    End Sub
    Partial Private Sub OnLongitudDescripcionChanged()
    End Sub
    Partial Private Sub OnSQLValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnSQLValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdListaConfiguracion", Storage:="_IDListaConfiguracion", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsDbGenerated:=true)>  _
		Public Property IDListaConfiguracion() As Integer
			Get
				Return Me._IDListaConfiguracion
			End Get
			Set
				If (Object.Equals(Me._IDListaConfiguracion, value) = false) Then
					Me.OnIDListaConfiguracionChanging(value)
					Me.SendPropertyChanging
					Me._IDListaConfiguracion = value
					Me.SendPropertyChanged("IDListaConfiguracion")
					Me.OnIDListaConfiguracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTopico", Storage:="_Topico", DbType:="Varchar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Topico() As String
			Get
				Return Me._Topico
			End Get
			Set
				If (String.Equals(Me._Topico, value) = false) Then
					Me.OnTopicoChanging(value)
					Me.SendPropertyChanging
					Me._Topico = value
					Me.SendPropertyChanged("Topico")
					Me.OnTopicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoDato", Storage:="_TipoDato", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoDato() As String
			Get
				Return Me._TipoDato
			End Get
			Set
				If (String.Equals(Me._TipoDato, value) = false) Then
					Me.OnTipoDatoChanging(value)
					Me.SendPropertyChanging
					Me._TipoDato = value
					Me.SendPropertyChanged("TipoDato")
					Me.OnTipoDatoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcionTipoDato", Storage:="_DescripcionTipoDato", DbType:="Varchar(500)  NULL")>  _
		Public Property DescripcionTipoDato() As String
			Get
				Return Me._DescripcionTipoDato
			End Get
			Set
				If (String.Equals(Me._DescripcionTipoDato, value) = false) Then
					Me.OnDescripcionTipoDatoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionTipoDato = value
					Me.SendPropertyChanged("DescripcionTipoDato")
					Me.OnDescripcionTipoDatoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intlongitud", Storage:="_longitud", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property longitud() As Integer
			Get
				Return Me._longitud
			End Get
			Set
				If (Object.Equals(Me._longitud, value) = false) Then
					Me.OnlongitudChanging(value)
					Me.SendPropertyChanging
					Me._longitud = value
					Me.SendPropertyChanged("longitud")
					Me.OnlongitudChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logModificable", Storage:="_Modificable", DbType:="Bit NOT NULL")>  _
		Public Property Modificable() As Boolean
			Get
				Return Me._Modificable
			End Get
			Set
				If ((Me._Modificable = value)  _
							= false) Then
					Me.OnModificableChanging(value)
					Me.SendPropertyChanging
					Me._Modificable = value
					Me.SendPropertyChanged("Modificable")
					Me.OnModificableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intLongitudDescripcion", Storage:="_LongitudDescripcion", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property LongitudDescripcion() As Integer
			Get
				Return Me._LongitudDescripcion
			End Get
			Set
				If (Object.Equals(Me._LongitudDescripcion, value) = false) Then
					Me.OnLongitudDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._LongitudDescripcion = value
					Me.SendPropertyChanged("LongitudDescripcion")
					Me.OnLongitudDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSQLValidacion", Storage:="_SQLValidacion", DbType:="Varchar(Max)  NULL")>  _
		Public Property SQLValidacion() As String
			Get
				Return Me._SQLValidacion
			End Get
			Set
				If (String.Equals(Me._SQLValidacion, value) = false) Then
					Me.OnSQLValidacionChanging(value)
					Me.SendPropertyChanging
					Me._SQLValidacion = value
					Me.SendPropertyChanged("SQLValidacion")
					Me.OnSQLValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLista")>  _
	Partial Public Class Lista
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _Topico As String
		
		Private _Descripcion As String
		
		Private _Retorno As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _Activo As Boolean
		
		Private _IDLista As Integer
		
		Private _Comentario As String
		
		Private _InfoSesion As String
		
		Private _HabilitarConfiguracionLista As System.Nullable(Of Boolean)
		
		Private _PermiteModificar As System.Nullable(Of Boolean)
		
		Private _Seleccionado As System.Nullable(Of Boolean)
		
		Private _RetornoTexto As String
		
		Private _RetornoEntero As String
		
		Private _RetornoDecimal As String
		
		Private _RetornoFecha As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnTopicoChanging(value As String)
    End Sub
    Partial Private Sub OnTopicoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnIDListaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDListaChanged()
    End Sub
    Partial Private Sub OnComentarioChanging(value As String)
    End Sub
    Partial Private Sub OnComentarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnHabilitarConfiguracionListaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnHabilitarConfiguracionListaChanged()
    End Sub
    Partial Private Sub OnPermiteModificarChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPermiteModificarChanged()
    End Sub
    Partial Private Sub OnSeleccionadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSeleccionadoChanged()
    End Sub
    Partial Private Sub OnRetornoTextoChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoTextoChanged()
    End Sub
    Partial Private Sub OnRetornoEnteroChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoEnteroChanged()
    End Sub
    Partial Private Sub OnRetornoDecimalChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoDecimalChanged()
    End Sub
    Partial Private Sub OnRetornoFechaChanging(value As String)
    End Sub
    Partial Private Sub OnRetornoFechaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTopico", Storage:="_Topico", DbType:="Varchar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Topico() As String
			Get
				Return Me._Topico
			End Get
			Set
				If (String.Equals(Me._Topico, value) = false) Then
					Me.OnTopicoChanging(value)
					Me.SendPropertyChanging
					Me._Topico = value
					Me.SendPropertyChanged("Topico")
					Me.OnTopicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetorno", Storage:="_Retorno", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property Retorno() As String
			Get
				Return Me._Retorno
			End Get
			Set
				If (String.Equals(Me._Retorno, value) = false) Then
					Me.OnRetornoChanging(value)
					Me.SendPropertyChanging
					Me._Retorno = value
					Me.SendPropertyChanged("Retorno")
					Me.OnRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="LogActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLista", Storage:="_IDLista", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDLista() As Integer
			Get
				Return Me._IDLista
			End Get
			Set
				If (Object.Equals(Me._IDLista, value) = false) Then
					Me.OnIDListaChanging(value)
					Me.SendPropertyChanging
					Me._IDLista = value
					Me.SendPropertyChanged("IDLista")
					Me.OnIDListaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strComentario", Storage:="_Comentario", DbType:="Varchar(500)")>  _
		Public Property Comentario() As String
			Get
				Return Me._Comentario
			End Get
			Set
				If (String.Equals(Me._Comentario, value) = false) Then
					Me.OnComentarioChanging(value)
					Me.SendPropertyChanging
					Me._Comentario = value
					Me.SendPropertyChanged("Comentario")
					Me.OnComentarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logHabilitarConfiguracionLista", Storage:="_HabilitarConfiguracionLista", DbType:="Bit  NULL")>  _
		Public Property HabilitarConfiguracionLista() As System.Nullable(Of Boolean)
			Get
				Return Me._HabilitarConfiguracionLista
			End Get
			Set
				If (Me._HabilitarConfiguracionLista.Equals(value) = false) Then
					Me.OnHabilitarConfiguracionListaChanging(value)
					Me.SendPropertyChanging
					Me._HabilitarConfiguracionLista = value
					Me.SendPropertyChanged("HabilitarConfiguracionLista")
					Me.OnHabilitarConfiguracionListaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermiteModificar", Storage:="_PermiteModificar", DbType:="Bit  NULL")>  _
		Public Property PermiteModificar() As System.Nullable(Of Boolean)
			Get
				Return Me._PermiteModificar
			End Get
			Set
				If (Me._PermiteModificar.Equals(value) = false) Then
					Me.OnPermiteModificarChanging(value)
					Me.SendPropertyChanging
					Me._PermiteModificar = value
					Me.SendPropertyChanged("PermiteModificar")
					Me.OnPermiteModificarChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logSeleccionado", Storage:="_Seleccionado", DbType:="Bit  NULL")>  _
		Public Property Seleccionado() As System.Nullable(Of Boolean)
			Get
				Return Me._Seleccionado
			End Get
			Set
				If (Me._Seleccionado.Equals(value) = false) Then
					Me.OnSeleccionadoChanging(value)
					Me.SendPropertyChanging
					Me._Seleccionado = value
					Me.SendPropertyChanged("Seleccionado")
					Me.OnSeleccionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetornoTexto", Storage:="_RetornoTexto", DbType:="Varchar(80)  NULL")>  _
		Public Property RetornoTexto() As String
			Get
				Return Me._RetornoTexto
			End Get
			Set
				If (String.Equals(Me._RetornoTexto, value) = false) Then
					Me.OnRetornoTextoChanging(value)
					Me.SendPropertyChanging
					Me._RetornoTexto = value
					Me.SendPropertyChanged("RetornoTexto")
					Me.OnRetornoTextoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetornoEntero", Storage:="_RetornoEntero", DbType:="Varchar(80)  NULL")>  _
		Public Property RetornoEntero() As String
			Get
				Return Me._RetornoEntero
			End Get
			Set
				If (String.Equals(Me._RetornoEntero, value) = false) Then
					Me.OnRetornoEnteroChanging(value)
					Me.SendPropertyChanging
					Me._RetornoEntero = value
					Me.SendPropertyChanged("RetornoEntero")
					Me.OnRetornoEnteroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetornoDecimal", Storage:="_RetornoDecimal", DbType:="Varchar(80)  NULL")>  _
		Public Property RetornoDecimal() As String
			Get
				Return Me._RetornoDecimal
			End Get
			Set
				If (String.Equals(Me._RetornoDecimal, value) = false) Then
					Me.OnRetornoDecimalChanging(value)
					Me.SendPropertyChanging
					Me._RetornoDecimal = value
					Me.SendPropertyChanged("RetornoDecimal")
					Me.OnRetornoDecimalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRetornoFecha", Storage:="_RetornoFecha", DbType:="Varchar(80)  NULL")>  _
		Public Property RetornoFecha() As String
			Get
				Return Me._RetornoFecha
			End Get
			Set
				If (String.Equals(Me._RetornoFecha, value) = false) Then
					Me.OnRetornoFechaChanging(value)
					Me.SendPropertyChanging
					Me._RetornoFecha = value
					Me.SendPropertyChanged("RetornoFecha")
					Me.OnRetornoFechaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblParametros")>  _
	Partial Public Class Parametro
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDparametro As Integer
		
		Private _Parametro As String
		
		Private _Valor As String
		
		Private _Descripcion As String
		
		Private _Tipo As String
		
		Private _Usuario As String
		
		Private _Actualizacion As Date
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDparametroChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDparametroChanged()
    End Sub
    Partial Private Sub OnParametroChanging(value As String)
    End Sub
    Partial Private Sub OnParametroChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="IdParametro", Storage:="_IDparametro", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsDbGenerated:=true)>  _
		Public Property IDparametro() As Integer
			Get
				Return Me._IDparametro
			End Get
			Set
				If (Object.Equals(Me._IDparametro, value) = false) Then
					Me.OnIDparametroChanging(value)
					Me.SendPropertyChanging
					Me._IDparametro = value
					Me.SendPropertyChanged("IDparametro")
					Me.OnIDparametroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strParametro", Storage:="_Parametro", DbType:="Varchar(50) NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Parametro() As String
			Get
				Return Me._Parametro
			End Get
			Set
				If (String.Equals(Me._Parametro, value) = false) Then
					Me.OnParametroChanging(value)
					Me.SendPropertyChanging
					Me._Parametro = value
					Me.SendPropertyChanged("Parametro")
					Me.OnParametroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", DbType:="Varchar(5000)")>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(500)")>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipo", Storage:="_Tipo", DbType:="Varchar(10) NOT NULL")>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblPaises")>  _
	Partial Public Class Paise
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _ID As Integer
		
		Private _Nombre As String
		
		Private _Codigo_ISO As String
		
		Private _Actualizacion As Date
		
		Private _Msg As String
		
		Private _Usuario As String
		
		Private _IDPais As Integer
		
		Private _CodigoDane As String
		
		Private _NivelRiesgo As Integer
		
		Private _ZonaEconomica As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCodigo_ISOChanging(value As String)
    End Sub
    Partial Private Sub OnCodigo_ISOChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnCodigoDaneChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoDaneChanged()
    End Sub
    Partial Private Sub OnNivelRiesgoChanging(value As Integer)
    End Sub
    Partial Private Sub OnNivelRiesgoChanged()
    End Sub
    Partial Private Sub OnZonaEconomicaChanging(value As String)
    End Sub
    Partial Private Sub OnZonaEconomicaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(40) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo_ISO", Storage:="_Codigo_ISO", DbType:="Varchar(3)")>  _
		Public Property Codigo_ISO() As String
			Get
				Return Me._Codigo_ISO
			End Get
			Set
				If (String.Equals(Me._Codigo_ISO, value) = false) Then
					Me.OnCodigo_ISOChanging(value)
					Me.SendPropertyChanging
					Me._Codigo_ISO = value
					Me.SendPropertyChanged("Codigo_ISO")
					Me.OnCodigo_ISOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
		Public Property Msg() As String
			Get
				Return Me._Msg
			End Get
			Set
				If (String.Equals(Me._Msg, value) = false) Then
					Me.OnMsgChanging(value)
					Me.SendPropertyChanging
					Me._Msg = value
					Me.SendPropertyChanged("Msg")
					Me.OnMsgChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDPais", Storage:="_IDPais", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDPais() As Integer
			Get
				Return Me._IDPais
			End Get
			Set
				If (Object.Equals(Me._IDPais, value) = false) Then
					Me.OnIDPaisChanging(value)
					Me.SendPropertyChanging
					Me._IDPais = value
					Me.SendPropertyChanged("IDPais")
					Me.OnIDPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoDane", Storage:="_CodigoDane", DbType:="Nvarchar(100)")>  _
		Public Property CodigoDane() As String
			Get
				Return Me._CodigoDane
			End Get
			Set
				If (String.Equals(Me._CodigoDane, value) = false) Then
					Me.OnCodigoDaneChanging(value)
					Me.SendPropertyChanging
					Me._CodigoDane = value
					Me.SendPropertyChanged("CodigoDane")
					Me.OnCodigoDaneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdClasificacionRiesgo", Storage:="_NivelRiesgo", DbType:="Int", CanBeNull:=true)>  _
		Public Property NivelRiesgo() As Integer
			Get
				Return Me._NivelRiesgo
			End Get
			Set
				If (Object.Equals(Me._NivelRiesgo, value) = false) Then
					Me.OnNivelRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._NivelRiesgo = value
					Me.SendPropertyChanged("NivelRiesgo")
					Me.OnNivelRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strZonaEconomica", Storage:="_ZonaEconomica", DbType:="Varchar(80) NULL")>  _
		Public Property ZonaEconomica() As String
			Get
				Return Me._ZonaEconomica
			End Get
			Set
				If (String.Equals(Me._ZonaEconomica, value) = false) Then
					Me.OnZonaEconomicaChanging(value)
					Me.SendPropertyChanging
					Me._ZonaEconomica = value
					Me.SendPropertyChanged("ZonaEconomica")
					Me.OnZonaEconomicaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDepartamentos")>  _
	Partial Public Class Departamento
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _IDPais As Integer
		
		Private _ID As Integer
		
		Private _Nombre As String
		
		Private _Codigo_DaneDEPTO As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDDepartamento As Integer
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCodigo_DaneDEPTOChanging(value As String)
    End Sub
    Partial Private Sub OnCodigo_DaneDEPTOChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDDepartamentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPais", Storage:="_IDPais", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDPais() As Integer
			Get
				Return Me._IDPais
			End Get
			Set
				If (Object.Equals(Me._IDPais, value) = false) Then
					Me.OnIDPaisChanging(value)
					Me.SendPropertyChanging
					Me._IDPais = value
					Me.SendPropertyChanged("IDPais")
					Me.OnIDPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(40) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo_DaneDEPTO", Storage:="_Codigo_DaneDEPTO", DbType:="Varchar(2)")>  _
		Public Property Codigo_DaneDEPTO() As String
			Get
				Return Me._Codigo_DaneDEPTO
			End Get
			Set
				If (String.Equals(Me._Codigo_DaneDEPTO, value) = false) Then
					Me.OnCodigo_DaneDEPTOChanging(value)
					Me.SendPropertyChanging
					Me._Codigo_DaneDEPTO = value
					Me.SendPropertyChanged("Codigo_DaneDEPTO")
					Me.OnCodigo_DaneDEPTOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDepartamento", Storage:="_IDDepartamento", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDDepartamento() As Integer
			Get
				Return Me._IDDepartamento
			End Get
			Set
				If (Object.Equals(Me._IDDepartamento, value) = false) Then
					Me.OnIDDepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._IDDepartamento = value
					Me.SendPropertyChanged("IDDepartamento")
					Me.OnIDDepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCiudades")>  _
	Partial Public Class Ciudade
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _IDCodigo As Integer
		
		Private _Nombre As String
		
		Private _EsCapital As Boolean
		
		Private _IDdepartamento As Integer
		
		Private _CodigoDANE As String
		
		Private _Actualizacion As Date
		
		Private _NombreDepartamento As String
		
		Private _Msg As String
		
		Private _Usuario As String
		
		Private _IDCiudad As Integer
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDCodigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnEsCapitalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsCapitalChanged()
    End Sub
    Partial Private Sub OnIDdepartamentoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDdepartamentoChanged()
    End Sub
    Partial Private Sub OnCodigoDANEChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoDANEChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnNombreDepartamentoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDepartamentoChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCiudadChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCiudadChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDCodigo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDCodigo() As Integer
			Get
				Return Me._IDCodigo
			End Get
			Set
				If (Object.Equals(Me._IDCodigo, value) = false) Then
					Me.OnIDCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IDCodigo = value
					Me.SendPropertyChanged("IDCodigo")
					Me.OnIDCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(40) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsCapital", Storage:="_EsCapital", DbType:="Bit NOT NULL")>  _
		Public Property EsCapital() As Boolean
			Get
				Return Me._EsCapital
			End Get
			Set
				If ((Me._EsCapital = value)  _
							= false) Then
					Me.OnEsCapitalChanging(value)
					Me.SendPropertyChanging
					Me._EsCapital = value
					Me.SendPropertyChanged("EsCapital")
					Me.OnEsCapitalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDdepartamento", Storage:="_IDdepartamento", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDdepartamento() As Integer
			Get
				Return Me._IDdepartamento
			End Get
			Set
				If (Object.Equals(Me._IDdepartamento, value) = false) Then
					Me.OnIDdepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._IDdepartamento = value
					Me.SendPropertyChanged("IDdepartamento")
					Me.OnIDdepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo_DANE", Storage:="_CodigoDANE", DbType:="Varchar(6)")>  _
		Public Property CodigoDANE() As String
			Get
				Return Me._CodigoDANE
			End Get
			Set
				If (String.Equals(Me._CodigoDANE, value) = false) Then
					Me.OnCodigoDANEChanging(value)
					Me.SendPropertyChanging
					Me._CodigoDANE = value
					Me.SendPropertyChanged("CodigoDANE")
					Me.OnCodigoDANEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreDepartamento", DbType:="Varchar(40)")>  _
		Public Property NombreDepartamento() As String
			Get
				Return Me._NombreDepartamento
			End Get
			Set
				If (String.Equals(Me._NombreDepartamento, value) = false) Then
					Me.OnNombreDepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._NombreDepartamento = value
					Me.SendPropertyChanged("NombreDepartamento")
					Me.OnNombreDepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
		Public Property Msg() As String
			Get
				Return Me._Msg
			End Get
			Set
				If (String.Equals(Me._Msg, value) = false) Then
					Me.OnMsgChanging(value)
					Me.SendPropertyChanging
					Me._Msg = value
					Me.SendPropertyChanged("Msg")
					Me.OnMsgChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCiudad", Storage:="_IDCiudad", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDCiudad() As Integer
			Get
				Return Me._IDCiudad
			End Get
			Set
				If (Object.Equals(Me._IDCiudad, value) = false) Then
					Me.OnIDCiudadChanging(value)
					Me.SendPropertyChanging
					Me._IDCiudad = value
					Me.SendPropertyChanged("IDCiudad")
					Me.OnIDCiudadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblCalificadoras")>  _
	Partial Public Class Calificadoras
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdCalificadora As Integer
		
		Private _intCodCalificadora As Integer
		
		Private _strNomCalificadora As String
		
		Private _dtmActualizacion As Date
		
		Private _strUsuario As String
		
		Private _InfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdCalificadoraChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdCalificadoraChanged()
    End Sub
    Partial Private Sub OnintCodCalificadoraChanging(value As Integer)
    End Sub
    Partial Private Sub OnintCodCalificadoraChanged()
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanging(value As String)
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificadora", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdCalificadora() As Integer
			Get
				Return Me._intIdCalificadora
			End Get
			Set
				If ((Me._intIdCalificadora = value)  _
							= false) Then
					Me.OnintIdCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificadora = value
					Me.SendPropertyChanged("intIdCalificadora")
					Me.OnintIdCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCodCalificadora", DbType:="int NOT NULL")>  _
		Public Property intCodCalificadora() As Integer
			Get
				Return Me._intCodCalificadora
			End Get
			Set
				If ((Me._intCodCalificadora = value)  _
							= false) Then
					Me.OnintCodCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._intCodCalificadora = value
					Me.SendPropertyChanged("intCodCalificadora")
					Me.OnintCodCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNomCalificadora", DbType:="Varchar(100)NOT NULL")>  _
		Public Property strNomCalificadora() As String
			Get
				Return Me._strNomCalificadora
			End Get
			Set
				If (String.Equals(Me._strNomCalificadora, value) = false) Then
					Me.OnstrNomCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._strNomCalificadora = value
					Me.SendPropertyChanged("strNomCalificadora")
					Me.OnstrNomCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property dtmActualizacion() As Date
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If ((Me._dtmActualizacion = value)  _
							= false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60)NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblCalificacionesInversiones")>  _
	Partial Public Class CalificacionesInversiones
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdCalificacionInversion As Integer
		
		Private _strCalificacion As String
		
		Private _strTipoCalificacion As String
		
		Private _strDescTipoCalificacion As String
		
		Private _strCalificacionInversion As String
		
		Private _dtmActualizacion As System.Nullable(Of Date)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdCalificacionInversionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdCalificacionInversionChanged()
    End Sub
    Partial Private Sub OnstrCalificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrCalificacionChanged()
    End Sub
    Partial Private Sub OnstrTipoCalificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoCalificacionChanged()
    End Sub
    Partial Private Sub OnstrDescTipoCalificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescTipoCalificacionChanged()
    End Sub
    Partial Private Sub OnstrCalificacionInversionChanging(value As String)
    End Sub
    Partial Private Sub OnstrCalificacionInversionChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificacionInversion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdCalificacionInversion() As Integer
			Get
				Return Me._intIdCalificacionInversion
			End Get
			Set
				If ((Me._intIdCalificacionInversion = value)  _
							= false) Then
					Me.OnintIdCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificacionInversion = value
					Me.SendPropertyChanged("intIdCalificacionInversion")
					Me.OnintIdCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCalificacion", DbType:="Varchar(10) NOT NULL")>  _
		Public Property strCalificacion() As String
			Get
				Return Me._strCalificacion
			End Get
			Set
				If (String.Equals(Me._strCalificacion, value) = false) Then
					Me.OnstrCalificacionChanging(value)
					Me.SendPropertyChanging
					Me._strCalificacion = value
					Me.SendPropertyChanged("strCalificacion")
					Me.OnstrCalificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCalificacion", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strTipoCalificacion() As String
			Get
				Return Me._strTipoCalificacion
			End Get
			Set
				If (String.Equals(Me._strTipoCalificacion, value) = false) Then
					Me.OnstrTipoCalificacionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoCalificacion = value
					Me.SendPropertyChanged("strTipoCalificacion")
					Me.OnstrTipoCalificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescTipoCalificacion", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strDescTipoCalificacion() As String
			Get
				Return Me._strDescTipoCalificacion
			End Get
			Set
				If (String.Equals(Me._strDescTipoCalificacion, value) = false) Then
					Me.OnstrDescTipoCalificacionChanging(value)
					Me.SendPropertyChanging
					Me._strDescTipoCalificacion = value
					Me.SendPropertyChanged("strDescTipoCalificacion")
					Me.OnstrDescTipoCalificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCalificacionInversion", DbType:="VARCHAR(500) NOT NULL")>  _
		Public Property strCalificacionInversion() As String
			Get
				Return Me._strCalificacionInversion
			End Get
			Set
				If (String.Equals(Me._strCalificacionInversion, value) = false) Then
					Me.OnstrCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._strCalificacionInversion = value
					Me.SendPropertyChanged("strCalificacionInversion")
					Me.OnstrCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property dtmActualizacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Me._dtmActualizacion.Equals(value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblCalificacionesCalificadora")>  _
	Partial Public Class CalificacionesCalificadora
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdCalificaCalificadora As Integer
		
		Private _intCodCalificadora As System.Nullable(Of Integer)
		
		Private _intIDCalificacion As System.Nullable(Of Integer)
		
		Private _intCodigoSuper As System.Nullable(Of Integer)
		
		Private _strTipoCalificacion As String
		
		Private _strTipoCalificacionInversion As String
		
		Private _strNombreCalificacionInversion As String
		
		Private _strNomCalificadora As String
		
		Private _dtmActualizacion As System.Nullable(Of Date)
		
		Private _strUsuario As String
		
		Private _InfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdCalificaCalificadoraChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdCalificaCalificadoraChanged()
    End Sub
    Partial Private Sub OnintCodCalificadoraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintCodCalificadoraChanged()
    End Sub
    Partial Private Sub OnintIDCalificacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDCalificacionChanged()
    End Sub
    Partial Private Sub OnintCodigoSuperChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintCodigoSuperChanged()
    End Sub
    Partial Private Sub OnstrTipoCalificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoCalificacionChanged()
    End Sub
    Partial Private Sub OnstrTipoCalificacionInversionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoCalificacionInversionChanged()
    End Sub
    Partial Private Sub OnstrNombreCalificacionInversionChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreCalificacionInversionChanged()
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanging(value As String)
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificaCalificadora", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdCalificaCalificadora() As Integer
			Get
				Return Me._intIdCalificaCalificadora
			End Get
			Set
				If ((Me._intIdCalificaCalificadora = value)  _
							= false) Then
					Me.OnintIdCalificaCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificaCalificadora = value
					Me.SendPropertyChanged("intIdCalificaCalificadora")
					Me.OnintIdCalificaCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCodCalificadora", DbType:="Int NOT NULL")>  _
		Public Property intCodCalificadora() As System.Nullable(Of Integer)
			Get
				Return Me._intCodCalificadora
			End Get
			Set
				If (Me._intCodCalificadora.Equals(value) = false) Then
					Me.OnintCodCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._intCodCalificadora = value
					Me.SendPropertyChanged("intCodCalificadora")
					Me.OnintCodCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCalificacion", DbType:="Int NOT NULL")>  _
		Public Property intIDCalificacion() As System.Nullable(Of Integer)
			Get
				Return Me._intIDCalificacion
			End Get
			Set
				If (Me._intIDCalificacion.Equals(value) = false) Then
					Me.OnintIDCalificacionChanging(value)
					Me.SendPropertyChanging
					Me._intIDCalificacion = value
					Me.SendPropertyChanged("intIDCalificacion")
					Me.OnintIDCalificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCodigoSuper", DbType:="Int NOT NULL")>  _
		Public Property intCodigoSuper() As System.Nullable(Of Integer)
			Get
				Return Me._intCodigoSuper
			End Get
			Set
				If (Me._intCodigoSuper.Equals(value) = false) Then
					Me.OnintCodigoSuperChanging(value)
					Me.SendPropertyChanging
					Me._intCodigoSuper = value
					Me.SendPropertyChanged("intCodigoSuper")
					Me.OnintCodigoSuperChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCalificacion", DbType:="Varchar(10) NOT NULL")>  _
		Public Property strTipoCalificacion() As String
			Get
				Return Me._strTipoCalificacion
			End Get
			Set
				If (String.Equals(Me._strTipoCalificacion, value) = false) Then
					Me.OnstrTipoCalificacionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoCalificacion = value
					Me.SendPropertyChanged("strTipoCalificacion")
					Me.OnstrTipoCalificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCalificacionInversion", DbType:="Varchar(80)NOT NULL")>  _
		Public Property strTipoCalificacionInversion() As String
			Get
				Return Me._strTipoCalificacionInversion
			End Get
			Set
				If (String.Equals(Me._strTipoCalificacionInversion, value) = false) Then
					Me.OnstrTipoCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoCalificacionInversion = value
					Me.SendPropertyChanged("strTipoCalificacionInversion")
					Me.OnstrTipoCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreCalificacionInversion", DbType:="VARCHAR(500) NOT NULL")>  _
		Public Property strNombreCalificacionInversion() As String
			Get
				Return Me._strNombreCalificacionInversion
			End Get
			Set
				If (String.Equals(Me._strNombreCalificacionInversion, value) = false) Then
					Me.OnstrNombreCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._strNombreCalificacionInversion = value
					Me.SendPropertyChanged("strNombreCalificacionInversion")
					Me.OnstrNombreCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNomCalificadora", DbType:="VARCHAR(100) NOT NULL")>  _
		Public Property strNomCalificadora() As String
			Get
				Return Me._strNomCalificadora
			End Get
			Set
				If (String.Equals(Me._strNomCalificadora, value) = false) Then
					Me.OnstrNomCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._strNomCalificadora = value
					Me.SendPropertyChanged("strNomCalificadora")
					Me.OnstrNomCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NULL")>  _
		Public Property dtmActualizacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Me._dtmActualizacion.Equals(value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblChoquesTasasInteres")>  _
	Partial Public Class ChoquesTasasInteres
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDChoquesTasasInteres As Integer
		
		Private _intZona As System.Nullable(Of Integer)
		
		Private _strDescripcionZona As String
		
		Private _intBanda As System.Nullable(Of Integer)
		
		Private _dblLimiteInferior As System.Nullable(Of Double)
		
		Private _dblLimiteSuperior As System.Nullable(of System.Double)
		
		Private _strTipoMoneda As String
		
		Private _strDescripcionTipoMoneda As String
		
		Private _intPBS As System.Nullable(Of Integer)
		
		Private _dtmActualizacion As System.Nullable(Of Date)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDChoquesTasasInteresChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChoquesTasasInteresChanged()
    End Sub
    Partial Private Sub OnintZonaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintZonaChanged()
    End Sub
    Partial Private Sub OnstrDescripcionZonaChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionZonaChanged()
    End Sub
    Partial Private Sub OnintBandaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintBandaChanged()
    End Sub
    Partial Private Sub OndblLimiteInferiorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblLimiteInferiorChanged()
    End Sub
    Partial Private Sub OndblLimiteSuperiorChanging(value As System.Nullable(of System.Double))
    End Sub
    Partial Private Sub OndblLimiteSuperiorChanged()
    End Sub
    Partial Private Sub OnstrTipoMonedaChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoMonedaChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoMonedaChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoMonedaChanged()
    End Sub
    Partial Private Sub OnintPBSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintPBSChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDChoquesTasasInteres", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDChoquesTasasInteres() As Integer
			Get
				Return Me._intIDChoquesTasasInteres
			End Get
			Set
				If ((Me._intIDChoquesTasasInteres = value)  _
							= false) Then
					Me.OnintIDChoquesTasasInteresChanging(value)
					Me.SendPropertyChanging
					Me._intIDChoquesTasasInteres = value
					Me.SendPropertyChanged("intIDChoquesTasasInteres")
					Me.OnintIDChoquesTasasInteresChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intZona", DbType:="Int NOT NULL")>  _
		Public Property intZona() As System.Nullable(Of Integer)
			Get
				Return Me._intZona
			End Get
			Set
				If (Me._intZona.Equals(value) = false) Then
					Me.OnintZonaChanging(value)
					Me.SendPropertyChanging
					Me._intZona = value
					Me.SendPropertyChanged("intZona")
					Me.OnintZonaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionZona", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionZona() As String
			Get
				Return Me._strDescripcionZona
			End Get
			Set
				If (String.Equals(Me._strDescripcionZona, value) = false) Then
					Me.OnstrDescripcionZonaChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionZona = value
					Me.SendPropertyChanged("strDescripcionZona")
					Me.OnstrDescripcionZonaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intBanda", DbType:="Int NOT NULL")>  _
		Public Property intBanda() As System.Nullable(Of Integer)
			Get
				Return Me._intBanda
			End Get
			Set
				If (Me._intBanda.Equals(value) = false) Then
					Me.OnintBandaChanging(value)
					Me.SendPropertyChanging
					Me._intBanda = value
					Me.SendPropertyChanged("intBanda")
					Me.OnintBandaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblLimiteInferior", DbType:="Float NOT NULL")>  _
		Public Property dblLimiteInferior() As System.Nullable(Of Double)
			Get
				Return Me._dblLimiteInferior
			End Get
			Set
				If (Me._dblLimiteInferior.Equals(value) = false) Then
					Me.OndblLimiteInferiorChanging(value)
					Me.SendPropertyChanging
					Me._dblLimiteInferior = value
					Me.SendPropertyChanged("dblLimiteInferior")
					Me.OndblLimiteInferiorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblLimiteSuperior", DbType:="Float NOT NULL", CanBeNull:=true)>  _
		Public Property dblLimiteSuperior() As System.Nullable(of System.Double)
			Get
				Return Me._dblLimiteSuperior
			End Get
			Set
				If (Object.Equals(Me._dblLimiteSuperior, value) = false) Then
					Me.OndblLimiteSuperiorChanging(value)
					Me.SendPropertyChanging
					Me._dblLimiteSuperior = value
					Me.SendPropertyChanged("dblLimiteSuperior")
					Me.OndblLimiteSuperiorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoMoneda", DbType:="Varchar(1) NOT NULL")>  _
		Public Property strTipoMoneda() As String
			Get
				Return Me._strTipoMoneda
			End Get
			Set
				If (String.Equals(Me._strTipoMoneda, value) = false) Then
					Me.OnstrTipoMonedaChanging(value)
					Me.SendPropertyChanging
					Me._strTipoMoneda = value
					Me.SendPropertyChanged("strTipoMoneda")
					Me.OnstrTipoMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoMoneda", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionTipoMoneda() As String
			Get
				Return Me._strDescripcionTipoMoneda
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoMoneda, value) = false) Then
					Me.OnstrDescripcionTipoMonedaChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoMoneda = value
					Me.SendPropertyChanged("strDescripcionTipoMoneda")
					Me.OnstrDescripcionTipoMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intPBS", DbType:="Int NOT NULL")>  _
		Public Property intPBS() As System.Nullable(Of Integer)
			Get
				Return Me._intPBS
			End Get
			Set
				If (Me._intPBS.Equals(value) = false) Then
					Me.OnintPBSChanging(value)
					Me.SendPropertyChanging
					Me._intPBS = value
					Me.SendPropertyChanged("intPBS")
					Me.OnintPBSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property dtmActualizacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Me._dtmActualizacion.Equals(value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblEntidades")>  _
	Partial Public Class Entidades
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDEntidad As Integer
		
		Private _strTipoIdentificacion As String
		
		Private _strDescripcionTipoIdentificacion As String
		
		Private _strNroDocumento As String
		
		Private _strNombre As String
		
		Private _intIDTipoEntidad As System.Nullable(Of Integer)
		
		Private _strDescripcionTipoEntidad As String
		
		Private _intIDCodigoCIIU As System.Nullable(Of Integer)
		
		Private _strDescripcionCodigoCIIU As String
		
		Private _strTelefono As String
		
		Private _strDireccion As String
		
		Private _intIDCalificacionInversionLarga As System.Nullable(Of Integer)
		
		Private _intIDCalificacionInversionCorta As System.Nullable(Of Integer)
		
		Private _strNombreCalificacionInversionLarga As String
		
		Private _strNombreCalificacionInversionCorta As String
		
		Private _logActivo As System.Nullable(of System.Boolean)
		
		Private _intIDCalificadora As System.Nullable(Of Integer)
		
		Private _strNomCalificadora As String
		
		Private _dblValorCupo As System.Nullable(Of Double)
		
		Private _dblValorCupoConsumido As System.Nullable(Of Double)
		
		Private _lngIDPoblacion As System.Nullable(Of Integer)
		
		Private _strDescripcionPoblacion As String
		
		Private _lngIDDepartamento As System.Nullable(Of Integer)
		
		Private _strDescripcionDepartamento As String
		
		Private _lngIDPais As System.Nullable(Of Integer)
		
		Private _strDescripcionPais As String
		
		Private _logReplicarAEmisores As System.Nullable(of System.Boolean)
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _logEsComisionista As System.Nullable(of System.Boolean)
		
		Private _strEMail As String
		
		Private _logAplicaEnrutamiento As System.Nullable(of System.Boolean)
		
		Private _strCodigoEmisor As String
		
		Private _logVigiladoSuper As System.Nullable(of System.Boolean)
		
		Private _lngIDGrupo As System.Nullable(Of Integer)
		
		Private _lngIDSubGrupo As System.Nullable(Of Integer)
		
		Private _strIDComisionista As String
		
		Private _strIDEmisor As String
		
		Private _logCarteraColectiva As System.Nullable(of System.Boolean)
		
		Private _intCodigoEntidadAdmin As System.Nullable(Of Integer)
		
		Private _strClaseInversion As String
		
		Private _strDescripcionClaseInversion As String
		
		Private _intDigitoVerificacion As System.Nullable(Of Integer)
		
		Private _intCodigoNaturaleza As System.Nullable(Of Integer)
		
		Private _intIDComisionista As System.Nullable(Of Integer)
		
		Private _logAdecuadoGobierno As System.Nullable(of System.Boolean)
		
		Private _strTipoFondo As String
		
		Private _strCalidadTributaria As String
		
		Private _strClasificacionAfiliado As String
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDEntidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEntidadChanged()
    End Sub
    Partial Private Sub OnstrTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnstrNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnstrNroDocumentoChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnintIDTipoEntidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDTipoEntidadChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoEntidadChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoEntidadChanged()
    End Sub
    Partial Private Sub OnintIDCodigoCIIUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDCodigoCIIUChanged()
    End Sub
    Partial Private Sub OnstrDescripcionCodigoCIIUChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionCodigoCIIUChanged()
    End Sub
    Partial Private Sub OnstrTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTelefonoChanged()
    End Sub
    Partial Private Sub OnstrDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDireccionChanged()
    End Sub
    Partial Private Sub OnintIDCalificacionInversionLargaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDCalificacionInversionLargaChanged()
    End Sub
    Partial Private Sub OnintIDCalificacionInversionCortaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDCalificacionInversionCortaChanged()
    End Sub
    Partial Private Sub OnstrNombreCalificacionInversionLargaChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreCalificacionInversionLargaChanged()
    End Sub
    Partial Private Sub OnstrNombreCalificacionInversionCortaChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreCalificacionInversionCortaChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnintIDCalificadoraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDCalificadoraChanged()
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanging(value As String)
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanged()
    End Sub
    Partial Private Sub OndblValorCupoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblValorCupoChanged()
    End Sub
    Partial Private Sub OndblValorCupoConsumidoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblValorCupoConsumidoChanged()
    End Sub
    Partial Private Sub OnlngIDPoblacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDPoblacionChanged()
    End Sub
    Partial Private Sub OnstrDescripcionPoblacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionPoblacionChanged()
    End Sub
    Partial Private Sub OnlngIDDepartamentoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionDepartamentoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionDepartamentoChanged()
    End Sub
    Partial Private Sub OnlngIDPaisChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDPaisChanged()
    End Sub
    Partial Private Sub OnstrDescripcionPaisChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionPaisChanged()
    End Sub
    Partial Private Sub OnlogReplicarAEmisoresChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogReplicarAEmisoresChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnlogEsComisionistaChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogEsComisionistaChanged()
    End Sub
    Partial Private Sub OnstrEMailChanging(value As String)
    End Sub
    Partial Private Sub OnstrEMailChanged()
    End Sub
    Partial Private Sub OnlogAplicaEnrutamientoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogAplicaEnrutamientoChanged()
    End Sub
    Partial Private Sub OnstrCodigoEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnstrCodigoEmisorChanged()
    End Sub
    Partial Private Sub OnlogVigiladoSuperChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogVigiladoSuperChanged()
    End Sub
    Partial Private Sub OnlngIDGrupoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDGrupoChanged()
    End Sub
    Partial Private Sub OnlngIDSubGrupoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDSubGrupoChanged()
    End Sub
    Partial Private Sub OnstrIDComisionistaChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDComisionistaChanged()
    End Sub
    Partial Private Sub OnstrIDEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEmisorChanged()
    End Sub
    Partial Private Sub OnlogCarteraColectivaChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogCarteraColectivaChanged()
    End Sub
    Partial Private Sub OnintCodigoEntidadAdminChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintCodigoEntidadAdminChanged()
    End Sub
    Partial Private Sub OnstrClaseInversionChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseInversionChanged()
    End Sub
    Partial Private Sub OnstrDescripcionClaseInversionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionClaseInversionChanged()
    End Sub
    Partial Private Sub OnintDigitoVerificacionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintDigitoVerificacionChanged()
    End Sub
    Partial Private Sub OnintCodigoNaturalezaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintCodigoNaturalezaChanged()
    End Sub
    Partial Private Sub OnintIDComisionistaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDComisionistaChanged()
    End Sub
    Partial Private Sub OnlogAdecuadoGobiernoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogAdecuadoGobiernoChanged()
    End Sub
    Partial Private Sub OnstrTipoFondoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoFondoChanged()
    End Sub
    Partial Private Sub OnstrCalidadTributariaChanging(value As String)
    End Sub
    Partial Private Sub OnstrCalidadTributariaChanged()
    End Sub
    Partial Private Sub OnstrClasificacionAfiliadoChanging(value As String)
    End Sub
    Partial Private Sub OnstrClasificacionAfiliadoChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEntidad", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDEntidad() As Integer
			Get
				Return Me._intIDEntidad
			End Get
			Set
				If ((Me._intIDEntidad = value)  _
							= false) Then
					Me.OnintIDEntidadChanging(value)
					Me.SendPropertyChanging
					Me._intIDEntidad = value
					Me.SendPropertyChanged("intIDEntidad")
					Me.OnintIDEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoIdentificacion", DbType:="Char(1) NOT NULL")>  _
		Public Property strTipoIdentificacion() As String
			Get
				Return Me._strTipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._strTipoIdentificacion, value) = false) Then
					Me.OnstrTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoIdentificacion = value
					Me.SendPropertyChanged("strTipoIdentificacion")
					Me.OnstrTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoIdentificacion", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionTipoIdentificacion() As String
			Get
				Return Me._strDescripcionTipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoIdentificacion, value) = false) Then
					Me.OnstrDescripcionTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoIdentificacion = value
					Me.SendPropertyChanged("strDescripcionTipoIdentificacion")
					Me.OnstrDescripcionTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroDocumento", DbType:="Varchar(15) NOT NULL")>  _
		Public Property strNroDocumento() As String
			Get
				Return Me._strNroDocumento
			End Get
			Set
				If (String.Equals(Me._strNroDocumento, value) = false) Then
					Me.OnstrNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._strNroDocumento = value
					Me.SendPropertyChanged("strNroDocumento")
					Me.OnstrNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strNombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnstrNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("strNombre")
					Me.OnstrNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDTipoEntidad", DbType:="int NOT NULL")>  _
		Public Property intIDTipoEntidad() As System.Nullable(Of Integer)
			Get
				Return Me._intIDTipoEntidad
			End Get
			Set
				If (Me._intIDTipoEntidad.Equals(value) = false) Then
					Me.OnintIDTipoEntidadChanging(value)
					Me.SendPropertyChanging
					Me._intIDTipoEntidad = value
					Me.SendPropertyChanged("intIDTipoEntidad")
					Me.OnintIDTipoEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoEntidad", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionTipoEntidad() As String
			Get
				Return Me._strDescripcionTipoEntidad
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoEntidad, value) = false) Then
					Me.OnstrDescripcionTipoEntidadChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoEntidad = value
					Me.SendPropertyChanged("strDescripcionTipoEntidad")
					Me.OnstrDescripcionTipoEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCodigoCIIU", DbType:="int NULL")>  _
		Public Property intIDCodigoCIIU() As System.Nullable(Of Integer)
			Get
				Return Me._intIDCodigoCIIU
			End Get
			Set
				If (Me._intIDCodigoCIIU.Equals(value) = false) Then
					Me.OnintIDCodigoCIIUChanging(value)
					Me.SendPropertyChanging
					Me._intIDCodigoCIIU = value
					Me.SendPropertyChanged("intIDCodigoCIIU")
					Me.OnintIDCodigoCIIUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionCodigoCIIU", DbType:="Varchar(255) NOT NULL")>  _
		Public Property strDescripcionCodigoCIIU() As String
			Get
				Return Me._strDescripcionCodigoCIIU
			End Get
			Set
				If (String.Equals(Me._strDescripcionCodigoCIIU, value) = false) Then
					Me.OnstrDescripcionCodigoCIIUChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionCodigoCIIU = value
					Me.SendPropertyChanged("strDescripcionCodigoCIIU")
					Me.OnstrDescripcionCodigoCIIUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTelefono", DbType:="Varchar(25) NULL")>  _
		Public Property strTelefono() As String
			Get
				Return Me._strTelefono
			End Get
			Set
				If (String.Equals(Me._strTelefono, value) = false) Then
					Me.OnstrTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._strTelefono = value
					Me.SendPropertyChanged("strTelefono")
					Me.OnstrTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDireccion", DbType:="Varchar(50) NULL")>  _
		Public Property strDireccion() As String
			Get
				Return Me._strDireccion
			End Get
			Set
				If (String.Equals(Me._strDireccion, value) = false) Then
					Me.OnstrDireccionChanging(value)
					Me.SendPropertyChanging
					Me._strDireccion = value
					Me.SendPropertyChanged("strDireccion")
					Me.OnstrDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCalificacionInversionLarga", DbType:="int NULL")>  _
		Public Property intIDCalificacionInversionLarga() As System.Nullable(Of Integer)
			Get
				Return Me._intIDCalificacionInversionLarga
			End Get
			Set
				If (Me._intIDCalificacionInversionLarga.Equals(value) = false) Then
					Me.OnintIDCalificacionInversionLargaChanging(value)
					Me.SendPropertyChanging
					Me._intIDCalificacionInversionLarga = value
					Me.SendPropertyChanged("intIDCalificacionInversionLarga")
					Me.OnintIDCalificacionInversionLargaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCalificacionInversionCorta", DbType:="int NULL")>  _
		Public Property intIDCalificacionInversionCorta() As System.Nullable(Of Integer)
			Get
				Return Me._intIDCalificacionInversionCorta
			End Get
			Set
				If (Me._intIDCalificacionInversionCorta.Equals(value) = false) Then
					Me.OnintIDCalificacionInversionCortaChanging(value)
					Me.SendPropertyChanging
					Me._intIDCalificacionInversionCorta = value
					Me.SendPropertyChanged("intIDCalificacionInversionCorta")
					Me.OnintIDCalificacionInversionCortaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreCalificacionInversionLarga", DbType:="Varchar(500) NOT NULL")>  _
		Public Property strNombreCalificacionInversionLarga() As String
			Get
				Return Me._strNombreCalificacionInversionLarga
			End Get
			Set
				If (String.Equals(Me._strNombreCalificacionInversionLarga, value) = false) Then
					Me.OnstrNombreCalificacionInversionLargaChanging(value)
					Me.SendPropertyChanging
					Me._strNombreCalificacionInversionLarga = value
					Me.SendPropertyChanged("strNombreCalificacionInversionLarga")
					Me.OnstrNombreCalificacionInversionLargaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombreCalificacionInversionCorta", DbType:="Varchar(500) NOT NULL")>  _
		Public Property strNombreCalificacionInversionCorta() As String
			Get
				Return Me._strNombreCalificacionInversionCorta
			End Get
			Set
				If (String.Equals(Me._strNombreCalificacionInversionCorta, value) = false) Then
					Me.OnstrNombreCalificacionInversionCortaChanging(value)
					Me.SendPropertyChanging
					Me._strNombreCalificacionInversionCorta = value
					Me.SendPropertyChanged("strNombreCalificacionInversionCorta")
					Me.OnstrNombreCalificacionInversionCortaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logActivo() As System.Nullable(of System.Boolean)
			Get
				Return Me._logActivo
			End Get
			Set
				If (Object.Equals(Me._logActivo, value) = false) Then
					Me.OnlogActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("logActivo")
					Me.OnlogActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCalificadora", DbType:="int NULL")>  _
		Public Property intIDCalificadora() As System.Nullable(Of Integer)
			Get
				Return Me._intIDCalificadora
			End Get
			Set
				If (Me._intIDCalificadora.Equals(value) = false) Then
					Me.OnintIDCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._intIDCalificadora = value
					Me.SendPropertyChanged("intIDCalificadora")
					Me.OnintIDCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNomCalificadora", DbType:="Varchar(100) NOT NULL")>  _
		Public Property strNomCalificadora() As String
			Get
				Return Me._strNomCalificadora
			End Get
			Set
				If (String.Equals(Me._strNomCalificadora, value) = false) Then
					Me.OnstrNomCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._strNomCalificadora = value
					Me.SendPropertyChanged("strNomCalificadora")
					Me.OnstrNomCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorCupo", DbType:="Float NULL")>  _
		Public Property dblValorCupo() As System.Nullable(Of Double)
			Get
				Return Me._dblValorCupo
			End Get
			Set
				If (Me._dblValorCupo.Equals(value) = false) Then
					Me.OndblValorCupoChanging(value)
					Me.SendPropertyChanging
					Me._dblValorCupo = value
					Me.SendPropertyChanged("dblValorCupo")
					Me.OndblValorCupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorCupoConsumido", DbType:="Float NULL")>  _
		Public Property dblValorCupoConsumido() As System.Nullable(Of Double)
			Get
				Return Me._dblValorCupoConsumido
			End Get
			Set
				If (Me._dblValorCupoConsumido.Equals(value) = false) Then
					Me.OndblValorCupoConsumidoChanging(value)
					Me.SendPropertyChanging
					Me._dblValorCupoConsumido = value
					Me.SendPropertyChanged("dblValorCupoConsumido")
					Me.OndblValorCupoConsumidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDPoblacion", DbType:="int NULL")>  _
		Public Property lngIDPoblacion() As System.Nullable(Of Integer)
			Get
				Return Me._lngIDPoblacion
			End Get
			Set
				If (Me._lngIDPoblacion.Equals(value) = false) Then
					Me.OnlngIDPoblacionChanging(value)
					Me.SendPropertyChanging
					Me._lngIDPoblacion = value
					Me.SendPropertyChanged("lngIDPoblacion")
					Me.OnlngIDPoblacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionPoblacion", DbType:="Varchar(40) NOT NULL")>  _
		Public Property strDescripcionPoblacion() As String
			Get
				Return Me._strDescripcionPoblacion
			End Get
			Set
				If (String.Equals(Me._strDescripcionPoblacion, value) = false) Then
					Me.OnstrDescripcionPoblacionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionPoblacion = value
					Me.SendPropertyChanged("strDescripcionPoblacion")
					Me.OnstrDescripcionPoblacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDDepartamento", DbType:="int NULL")>  _
		Public Property lngIDDepartamento() As System.Nullable(Of Integer)
			Get
				Return Me._lngIDDepartamento
			End Get
			Set
				If (Me._lngIDDepartamento.Equals(value) = false) Then
					Me.OnlngIDDepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._lngIDDepartamento = value
					Me.SendPropertyChanged("lngIDDepartamento")
					Me.OnlngIDDepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionDepartamento", DbType:="Varchar(40) NOT NULL")>  _
		Public Property strDescripcionDepartamento() As String
			Get
				Return Me._strDescripcionDepartamento
			End Get
			Set
				If (String.Equals(Me._strDescripcionDepartamento, value) = false) Then
					Me.OnstrDescripcionDepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionDepartamento = value
					Me.SendPropertyChanged("strDescripcionDepartamento")
					Me.OnstrDescripcionDepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDPais", DbType:="int NULL")>  _
		Public Property lngIDPais() As System.Nullable(Of Integer)
			Get
				Return Me._lngIDPais
			End Get
			Set
				If (Me._lngIDPais.Equals(value) = false) Then
					Me.OnlngIDPaisChanging(value)
					Me.SendPropertyChanging
					Me._lngIDPais = value
					Me.SendPropertyChanged("lngIDPais")
					Me.OnlngIDPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionPais", DbType:="Varchar(40) NOT NULL")>  _
		Public Property strDescripcionPais() As String
			Get
				Return Me._strDescripcionPais
			End Get
			Set
				If (String.Equals(Me._strDescripcionPais, value) = false) Then
					Me.OnstrDescripcionPaisChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionPais = value
					Me.SendPropertyChanged("strDescripcionPais")
					Me.OnstrDescripcionPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logReplicarAEmisores", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logReplicarAEmisores() As System.Nullable(of System.Boolean)
			Get
				Return Me._logReplicarAEmisores
			End Get
			Set
				If (Object.Equals(Me._logReplicarAEmisores, value) = false) Then
					Me.OnlogReplicarAEmisoresChanging(value)
					Me.SendPropertyChanging
					Me._logReplicarAEmisores = value
					Me.SendPropertyChanged("logReplicarAEmisores")
					Me.OnlogReplicarAEmisoresChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEsComisionista", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logEsComisionista() As System.Nullable(of System.Boolean)
			Get
				Return Me._logEsComisionista
			End Get
			Set
				If (Object.Equals(Me._logEsComisionista, value) = false) Then
					Me.OnlogEsComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._logEsComisionista = value
					Me.SendPropertyChanged("logEsComisionista")
					Me.OnlogEsComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEMail", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strEMail() As String
			Get
				Return Me._strEMail
			End Get
			Set
				If (String.Equals(Me._strEMail, value) = false) Then
					Me.OnstrEMailChanging(value)
					Me.SendPropertyChanging
					Me._strEMail = value
					Me.SendPropertyChanged("strEMail")
					Me.OnstrEMailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logAplicaEnrutamiento", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logAplicaEnrutamiento() As System.Nullable(of System.Boolean)
			Get
				Return Me._logAplicaEnrutamiento
			End Get
			Set
				If (Object.Equals(Me._logAplicaEnrutamiento, value) = false) Then
					Me.OnlogAplicaEnrutamientoChanging(value)
					Me.SendPropertyChanging
					Me._logAplicaEnrutamiento = value
					Me.SendPropertyChanged("logAplicaEnrutamiento")
					Me.OnlogAplicaEnrutamientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodigoEmisor", DbType:="Varchar(5) NULL")>  _
		Public Property strCodigoEmisor() As String
			Get
				Return Me._strCodigoEmisor
			End Get
			Set
				If (String.Equals(Me._strCodigoEmisor, value) = false) Then
					Me.OnstrCodigoEmisorChanging(value)
					Me.SendPropertyChanging
					Me._strCodigoEmisor = value
					Me.SendPropertyChanged("strCodigoEmisor")
					Me.OnstrCodigoEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logVigiladoSuper", DbType:="Bit NULL", CanBeNull:=true)>  _
		Public Property logVigiladoSuper() As System.Nullable(of System.Boolean)
			Get
				Return Me._logVigiladoSuper
			End Get
			Set
				If (Object.Equals(Me._logVigiladoSuper, value) = false) Then
					Me.OnlogVigiladoSuperChanging(value)
					Me.SendPropertyChanging
					Me._logVigiladoSuper = value
					Me.SendPropertyChanged("logVigiladoSuper")
					Me.OnlogVigiladoSuperChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDGrupo", DbType:="int NULL")>  _
		Public Property lngIDGrupo() As System.Nullable(Of Integer)
			Get
				Return Me._lngIDGrupo
			End Get
			Set
				If (Me._lngIDGrupo.Equals(value) = false) Then
					Me.OnlngIDGrupoChanging(value)
					Me.SendPropertyChanging
					Me._lngIDGrupo = value
					Me.SendPropertyChanged("lngIDGrupo")
					Me.OnlngIDGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDSubGrupo", DbType:="int NULL")>  _
		Public Property lngIDSubGrupo() As System.Nullable(Of Integer)
			Get
				Return Me._lngIDSubGrupo
			End Get
			Set
				If (Me._lngIDSubGrupo.Equals(value) = false) Then
					Me.OnlngIDSubGrupoChanging(value)
					Me.SendPropertyChanging
					Me._lngIDSubGrupo = value
					Me.SendPropertyChanged("lngIDSubGrupo")
					Me.OnlngIDSubGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDComisionista", DbType:="Varchar(15) NULL")>  _
		Public Property strIDComisionista() As String
			Get
				Return Me._strIDComisionista
			End Get
			Set
				If (String.Equals(Me._strIDComisionista, value) = false) Then
					Me.OnstrIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._strIDComisionista = value
					Me.SendPropertyChanged("strIDComisionista")
					Me.OnstrIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEmisor", DbType:="Varchar(15) NULL")>  _
		Public Property strIDEmisor() As String
			Get
				Return Me._strIDEmisor
			End Get
			Set
				If (String.Equals(Me._strIDEmisor, value) = false) Then
					Me.OnstrIDEmisorChanging(value)
					Me.SendPropertyChanging
					Me._strIDEmisor = value
					Me.SendPropertyChanged("strIDEmisor")
					Me.OnstrIDEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logCarteraColectiva", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logCarteraColectiva() As System.Nullable(of System.Boolean)
			Get
				Return Me._logCarteraColectiva
			End Get
			Set
				If (Object.Equals(Me._logCarteraColectiva, value) = false) Then
					Me.OnlogCarteraColectivaChanging(value)
					Me.SendPropertyChanging
					Me._logCarteraColectiva = value
					Me.SendPropertyChanged("logCarteraColectiva")
					Me.OnlogCarteraColectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCodigoEntidadAdmin", DbType:="int NULL")>  _
		Public Property intCodigoEntidadAdmin() As System.Nullable(Of Integer)
			Get
				Return Me._intCodigoEntidadAdmin
			End Get
			Set
				If (Me._intCodigoEntidadAdmin.Equals(value) = false) Then
					Me.OnintCodigoEntidadAdminChanging(value)
					Me.SendPropertyChanging
					Me._intCodigoEntidadAdmin = value
					Me.SendPropertyChanged("intCodigoEntidadAdmin")
					Me.OnintCodigoEntidadAdminChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseInversion", DbType:="Varchar(10) NULL")>  _
		Public Property strClaseInversion() As String
			Get
				Return Me._strClaseInversion
			End Get
			Set
				If (String.Equals(Me._strClaseInversion, value) = false) Then
					Me.OnstrClaseInversionChanging(value)
					Me.SendPropertyChanging
					Me._strClaseInversion = value
					Me.SendPropertyChanged("strClaseInversion")
					Me.OnstrClaseInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionClaseInversion", DbType:="Varchar(600) NOT NULL")>  _
		Public Property strDescripcionClaseInversion() As String
			Get
				Return Me._strDescripcionClaseInversion
			End Get
			Set
				If (String.Equals(Me._strDescripcionClaseInversion, value) = false) Then
					Me.OnstrDescripcionClaseInversionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionClaseInversion = value
					Me.SendPropertyChanged("strDescripcionClaseInversion")
					Me.OnstrDescripcionClaseInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intDigitoVerificacion", DbType:="int NULL")>  _
		Public Property intDigitoVerificacion() As System.Nullable(Of Integer)
			Get
				Return Me._intDigitoVerificacion
			End Get
			Set
				If (Me._intDigitoVerificacion.Equals(value) = false) Then
					Me.OnintDigitoVerificacionChanging(value)
					Me.SendPropertyChanging
					Me._intDigitoVerificacion = value
					Me.SendPropertyChanged("intDigitoVerificacion")
					Me.OnintDigitoVerificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCodigoNaturaleza", DbType:="int NULL")>  _
		Public Property intCodigoNaturaleza() As System.Nullable(Of Integer)
			Get
				Return Me._intCodigoNaturaleza
			End Get
			Set
				If (Me._intCodigoNaturaleza.Equals(value) = false) Then
					Me.OnintCodigoNaturalezaChanging(value)
					Me.SendPropertyChanging
					Me._intCodigoNaturaleza = value
					Me.SendPropertyChanged("intCodigoNaturaleza")
					Me.OnintCodigoNaturalezaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDComisionista", DbType:="int NULL")>  _
		Public Property intIDComisionista() As System.Nullable(Of Integer)
			Get
				Return Me._intIDComisionista
			End Get
			Set
				If (Me._intIDComisionista.Equals(value) = false) Then
					Me.OnintIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._intIDComisionista = value
					Me.SendPropertyChanged("intIDComisionista")
					Me.OnintIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logAdecuadoGobierno", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logAdecuadoGobierno() As System.Nullable(of System.Boolean)
			Get
				Return Me._logAdecuadoGobierno
			End Get
			Set
				If (Object.Equals(Me._logAdecuadoGobierno, value) = false) Then
					Me.OnlogAdecuadoGobiernoChanging(value)
					Me.SendPropertyChanging
					Me._logAdecuadoGobierno = value
					Me.SendPropertyChanged("logAdecuadoGobierno")
					Me.OnlogAdecuadoGobiernoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoFondo", DbType:="Varchar(80) NULL")>  _
		Public Property strTipoFondo() As String
			Get
				Return Me._strTipoFondo
			End Get
			Set
				If (String.Equals(Me._strTipoFondo, value) = false) Then
					Me.OnstrTipoFondoChanging(value)
					Me.SendPropertyChanging
					Me._strTipoFondo = value
					Me.SendPropertyChanged("strTipoFondo")
					Me.OnstrTipoFondoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCalidadTributaria", DbType:="Varchar(50) NULL")>  _
		Public Property strCalidadTributaria() As String
			Get
				Return Me._strCalidadTributaria
			End Get
			Set
				If (String.Equals(Me._strCalidadTributaria, value) = false) Then
					Me.OnstrCalidadTributariaChanging(value)
					Me.SendPropertyChanging
					Me._strCalidadTributaria = value
					Me.SendPropertyChanged("strCalidadTributaria")
					Me.OnstrCalidadTributariaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClasificacionAfiliado", DbType:="Varchar(50) NULL")>  _
		Public Property strClasificacionAfiliado() As String
			Get
				Return Me._strClasificacionAfiliado
			End Get
			Set
				If (String.Equals(Me._strClasificacionAfiliado, value) = false) Then
					Me.OnstrClasificacionAfiliadoChanging(value)
					Me.SendPropertyChanging
					Me._strClasificacionAfiliado = value
					Me.SendPropertyChanged("strClasificacionAfiliado")
					Me.OnstrClasificacionAfiliadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblSubGrupos")>  _
	Partial Public Class SubGrupo
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Descripcion As String
		
		Private _Categoria As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Varchar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="Varchar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="Varchar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property Categoria() As String
			Get
				Return Me._Categoria
			End Get
			Set
				If (String.Equals(Me._Categoria, value) = false) Then
					Me.OnCategoriaChanging(value)
					Me.SendPropertyChanging
					Me._Categoria = value
					Me.SendPropertyChanged("Categoria")
					Me.OnCategoriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblCalificacionesEmisor")>  _
	Partial Public Class CalificacionesEmisor
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdCalificacionEmisor As Integer
		
		Private _intIdEmisor As Integer
		
		Private _intIdCalificacionInversion As Integer
		
		Private _logTransmitirASuper As Boolean
		
		Private _DescripcionEmisor As String
		
		Private _DescripcionCalificacionInversion As String
		
		Private _dtmFechaCalificacionEmisor As Date
		
		Private _dtmActualizacion As Date
		
		Private _strUsuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdCalificacionEmisorChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdCalificacionEmisorChanged()
    End Sub
    Partial Private Sub OnintIdEmisorChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdEmisorChanged()
    End Sub
    Partial Private Sub OnintIdCalificacionInversionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdCalificacionInversionChanged()
    End Sub
    Partial Private Sub OnlogTransmitirASuperChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogTransmitirASuperChanged()
    End Sub
    Partial Private Sub OnDescripcionEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionEmisorChanged()
    End Sub
    Partial Private Sub OnDescripcionCalificacionInversionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionCalificacionInversionChanged()
    End Sub
    Partial Private Sub OndtmFechaCalificacionEmisorChanging(value As Date)
    End Sub
    Partial Private Sub OndtmFechaCalificacionEmisorChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificacionEmisor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdCalificacionEmisor() As Integer
			Get
				Return Me._intIdCalificacionEmisor
			End Get
			Set
				If ((Me._intIdCalificacionEmisor = value)  _
							= false) Then
					Me.OnintIdCalificacionEmisorChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificacionEmisor = value
					Me.SendPropertyChanged("intIdCalificacionEmisor")
					Me.OnintIdCalificacionEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdEmisor", DbType:="int not NULL")>  _
		Public Property intIdEmisor() As Integer
			Get
				Return Me._intIdEmisor
			End Get
			Set
				If ((Me._intIdEmisor = value)  _
							= false) Then
					Me.OnintIdEmisorChanging(value)
					Me.SendPropertyChanging
					Me._intIdEmisor = value
					Me.SendPropertyChanged("intIdEmisor")
					Me.OnintIdEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificacionInversion", DbType:="int not NULL")>  _
		Public Property intIdCalificacionInversion() As Integer
			Get
				Return Me._intIdCalificacionInversion
			End Get
			Set
				If ((Me._intIdCalificacionInversion = value)  _
							= false) Then
					Me.OnintIdCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificacionInversion = value
					Me.SendPropertyChanged("intIdCalificacionInversion")
					Me.OnintIdCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logTransmitirASuper", DbType:="BIT NOT NULL")>  _
		Public Property logTransmitirASuper() As Boolean
			Get
				Return Me._logTransmitirASuper
			End Get
			Set
				If ((Me._logTransmitirASuper = value)  _
							= false) Then
					Me.OnlogTransmitirASuperChanging(value)
					Me.SendPropertyChanging
					Me._logTransmitirASuper = value
					Me.SendPropertyChanged("logTransmitirASuper")
					Me.OnlogTransmitirASuperChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionEmisor", DbType:="Varchar(60)NULL")>  _
		Public Property DescripcionEmisor() As String
			Get
				Return Me._DescripcionEmisor
			End Get
			Set
				If (String.Equals(Me._DescripcionEmisor, value) = false) Then
					Me.OnDescripcionEmisorChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionEmisor = value
					Me.SendPropertyChanged("DescripcionEmisor")
					Me.OnDescripcionEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionCalificacionInversion", DbType:="Varchar(60)NULL")>  _
		Public Property DescripcionCalificacionInversion() As String
			Get
				Return Me._DescripcionCalificacionInversion
			End Get
			Set
				If (String.Equals(Me._DescripcionCalificacionInversion, value) = false) Then
					Me.OnDescripcionCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionCalificacionInversion = value
					Me.SendPropertyChanged("DescripcionCalificacionInversion")
					Me.OnDescripcionCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaCalificacionEmisor", DbType:="datetime", CanBeNull:=true)>  _
		Public Property dtmFechaCalificacionEmisor() As Date
			Get
				Return Me._dtmFechaCalificacionEmisor
			End Get
			Set
				If (Object.Equals(Me._dtmFechaCalificacionEmisor, value) = false) Then
					Me.OndtmFechaCalificacionEmisorChanging(value)
					Me.SendPropertyChanging
					Me._dtmFechaCalificacionEmisor = value
					Me.SendPropertyChanged("dtmFechaCalificacionEmisor")
					Me.OndtmFechaCalificacionEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="datetime", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As Date
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60)NOT NULL", CanBeNull:=false)>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblValidacionEliminarRegistro")>  _
	Partial Public Class ValidacionEliminarRegistro
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _PermitirRealizarAccion As Boolean
		
		Private _Mensaje As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPermitirRealizarAccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPermitirRealizarAccionChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logPermitirRealizarAccion", Storage:="_PermitirRealizarAccion", DbType:="BIT NOT NULL")>  _
		Public Property PermitirRealizarAccion() As Boolean
			Get
				Return Me._PermitirRealizarAccion
			End Get
			Set
				If ((Me._PermitirRealizarAccion = value)  _
							= false) Then
					Me.OnPermitirRealizarAccionChanging(value)
					Me.SendPropertyChanging
					Me._PermitirRealizarAccion = value
					Me.SendPropertyChanged("PermitirRealizarAccion")
					Me.OnPermitirRealizarAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(500) NULL")>  _
		Public Property Mensaje() As String
			Get
				Return Me._Mensaje
			End Get
			Set
				If (String.Equals(Me._Mensaje, value) = false) Then
					Me.OnMensajeChanging(value)
					Me.SendPropertyChanging
					Me._Mensaje = value
					Me.SendPropertyChanged("Mensaje")
					Me.OnMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTiposEntidad")>  _
	Partial Public Class TiposEntida
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _IDTipoEntidad As Integer
		
		Private _Nombre As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IdTipoEntidadI As Short
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDTipoEntidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTipoEntidadChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdTipoEntidadIChanging(value As Short)
    End Sub
    Partial Private Sub OnIdTipoEntidadIChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDTipoEntidad", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDTipoEntidad() As Integer
			Get
				Return Me._IDTipoEntidad
			End Get
			Set
				If (Object.Equals(Me._IDTipoEntidad, value) = false) Then
					Me.OnIDTipoEntidadChanging(value)
					Me.SendPropertyChanging
					Me._IDTipoEntidad = value
					Me.SendPropertyChanged("IDTipoEntidad")
					Me.OnIDTipoEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoEntidad", Storage:="_IdTipoEntidadI", AutoSync:=AutoSync.OnInsert, DbType:="Smallint NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IdTipoEntidadI() As Short
			Get
				Return Me._IdTipoEntidadI
			End Get
			Set
				If ((Me._IdTipoEntidadI = value)  _
							= false) Then
					Me.OnIdTipoEntidadIChanging(value)
					Me.SendPropertyChanging
					Me._IdTipoEntidadI = value
					Me.SendPropertyChanged("IdTipoEntidadI")
					Me.OnIdTipoEntidadIChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCodigos_CIIU")>  _
	Partial Public Class Codigos_CII
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codigo As String
		
		Private _Descripcion As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDCodigoCIIU As Integer
		
		Private _ClasificacionCIIU As System.Nullable(Of Integer)
		
		Private _TasaRteCREE As System.Nullable(Of Decimal)
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDCodigoCIIUChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCodigoCIIUChanged()
    End Sub
    Partial Private Sub OnClasificacionCIIUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClasificacionCIIUChanged()
    End Sub
    Partial Private Sub OnTasaRteCREEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTasaRteCREEChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo", Storage:="_Codigo", DbType:="Varchar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60)")>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDCodigoCIIU", Storage:="_IDCodigoCIIU", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDCodigoCIIU() As Integer
			Get
				Return Me._IDCodigoCIIU
			End Get
			Set
				If (Object.Equals(Me._IDCodigoCIIU, value) = false) Then
					Me.OnIDCodigoCIIUChanging(value)
					Me.SendPropertyChanging
					Me._IDCodigoCIIU = value
					Me.SendPropertyChanged("IDCodigoCIIU")
					Me.OnIDCodigoCIIUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngClasificacionCIIU", Storage:="_ClasificacionCIIU", DbType:="Int")>  _
		Public Property ClasificacionCIIU() As System.Nullable(Of Integer)
			Get
				Return Me._ClasificacionCIIU
			End Get
			Set
				If (Me._ClasificacionCIIU.Equals(value) = false) Then
					Me.OnClasificacionCIIUChanging(value)
					Me.SendPropertyChanging
					Me._ClasificacionCIIU = value
					Me.SendPropertyChanged("ClasificacionCIIU")
					Me.OnClasificacionCIIUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaRteCREE", Storage:="_TasaRteCREE", DbType:="Numeric(9,6) NULL")>  _
		Public Property TasaRteCREE() As System.Nullable(Of Decimal)
			Get
				Return Me._TasaRteCREE
			End Get
			Set
				If (Me._TasaRteCREE.Equals(value) = false) Then
					Me.OnTasaRteCREEChanging(value)
					Me.SendPropertyChanging
					Me._TasaRteCREE = value
					Me.SendPropertyChanged("TasaRteCREE")
					Me.OnTasaRteCREEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClasificaciones")>  _
	Partial Public Class Clasificacion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _Código As Integer
		
		Private _Nombre As String
		
		Private _EsGrupo As Boolean
		
		Private _EsSector As Boolean
		
		Private _IDPerteneceA As Integer
		
		Private _NombrePerteneceA As String
		
		Private _AplicaA As String
		
		Private _Nemo As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IDClasificacion As Integer
		
		Private _Msg As String
		
		Private _InfoSesion As String
		
		Private _EsSubgrupo As Boolean
		
		Private _EsSubsector As Boolean
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnCódigoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCódigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnEsGrupoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsGrupoChanged()
    End Sub
    Partial Private Sub OnEsSectorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsSectorChanged()
    End Sub
    Partial Private Sub OnIDPerteneceAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPerteneceAChanged()
    End Sub
    Partial Private Sub OnNombrePerteneceAChanging(value As String)
    End Sub
    Partial Private Sub OnNombrePerteneceAChanged()
    End Sub
    Partial Private Sub OnAplicaAChanging(value As String)
    End Sub
    Partial Private Sub OnAplicaAChanged()
    End Sub
    Partial Private Sub OnNemoChanging(value As String)
    End Sub
    Partial Private Sub OnNemoChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDClasificacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClasificacionChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnEsSubgrupoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsSubgrupoChanged()
    End Sub
    Partial Private Sub OnEsSubsectorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsSubsectorChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_Código", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property Código() As Integer
			Get
				Return Me._Código
			End Get
			Set
				If (Object.Equals(Me._Código, value) = false) Then
					Me.OnCódigoChanging(value)
					Me.SendPropertyChanging
					Me._Código = value
					Me.SendPropertyChanged("Código")
					Me.OnCódigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsGrupo", Storage:="_EsGrupo", DbType:="Bit NOT NULL")>  _
		Public Property EsGrupo() As Boolean
			Get
				Return Me._EsGrupo
			End Get
			Set
				If ((Me._EsGrupo = value)  _
							= false) Then
					Me.OnEsGrupoChanging(value)
					Me.SendPropertyChanging
					Me._EsGrupo = value
					Me.SendPropertyChanged("EsGrupo")
					Me.OnEsGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsSector", Storage:="_EsSector", DbType:="Bit NOT NULL")>  _
		Public Property EsSector() As Boolean
			Get
				Return Me._EsSector
			End Get
			Set
				If ((Me._EsSector = value)  _
							= false) Then
					Me.OnEsSectorChanging(value)
					Me.SendPropertyChanging
					Me._EsSector = value
					Me.SendPropertyChanged("EsSector")
					Me.OnEsSectorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPerteneceA", Storage:="_IDPerteneceA", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDPerteneceA() As Integer
			Get
				Return Me._IDPerteneceA
			End Get
			Set
				If (Object.Equals(Me._IDPerteneceA, value) = false) Then
					Me.OnIDPerteneceAChanging(value)
					Me.SendPropertyChanging
					Me._IDPerteneceA = value
					Me.SendPropertyChanged("IDPerteneceA")
					Me.OnIDPerteneceAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombrePerteneceA", DbType:="Varchar(50)")>  _
		Public Property NombrePerteneceA() As String
			Get
				Return Me._NombrePerteneceA
			End Get
			Set
				If (String.Equals(Me._NombrePerteneceA, value) = false) Then
					Me.OnNombrePerteneceAChanging(value)
					Me.SendPropertyChanging
					Me._NombrePerteneceA = value
					Me.SendPropertyChanged("NombrePerteneceA")
					Me.OnNombrePerteneceAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAplicaA", Storage:="_AplicaA", DbType:="Varchar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property AplicaA() As String
			Get
				Return Me._AplicaA
			End Get
			Set
				If (String.Equals(Me._AplicaA, value) = false) Then
					Me.OnAplicaAChanging(value)
					Me.SendPropertyChanging
					Me._AplicaA = value
					Me.SendPropertyChanged("AplicaA")
					Me.OnAplicaAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNemo", Storage:="_Nemo", DbType:="Varchar(2)")>  _
		Public Property Nemo() As String
			Get
				Return Me._Nemo
			End Get
			Set
				If (String.Equals(Me._Nemo, value) = false) Then
					Me.OnNemoChanging(value)
					Me.SendPropertyChanging
					Me._Nemo = value
					Me.SendPropertyChanged("Nemo")
					Me.OnNemoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClasificacion", Storage:="_IDClasificacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDClasificacion() As Integer
			Get
				Return Me._IDClasificacion
			End Get
			Set
				If (Object.Equals(Me._IDClasificacion, value) = false) Then
					Me.OnIDClasificacionChanging(value)
					Me.SendPropertyChanging
					Me._IDClasificacion = value
					Me.SendPropertyChanged("IDClasificacion")
					Me.OnIDClasificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
		Public Property Msg() As String
			Get
				Return Me._Msg
			End Get
			Set
				If (String.Equals(Me._Msg, value) = false) Then
					Me.OnMsgChanging(value)
					Me.SendPropertyChanging
					Me._Msg = value
					Me.SendPropertyChanged("Msg")
					Me.OnMsgChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsSubgrupo", DbType:="Bit NOT NULL")>  _
		Public Property EsSubgrupo() As Boolean
			Get
				Return Me._EsSubgrupo
			End Get
			Set
				If ((Me._EsSubgrupo = value)  _
							= false) Then
					Me.OnEsSubgrupoChanging(value)
					Me.SendPropertyChanging
					Me._EsSubgrupo = value
					Me.SendPropertyChanged("EsSubgrupo")
					Me.OnEsSubgrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsSubsector", DbType:="Bit NOT NULL")>  _
		Public Property EsSubsector() As Boolean
			Get
				Return Me._EsSubsector
			End Get
			Set
				If ((Me._EsSubsector = value)  _
							= false) Then
					Me.OnEsSubsectorChanging(value)
					Me.SendPropertyChanging
					Me._EsSubsector = value
					Me.SendPropertyChanged("EsSubsector")
					Me.OnEsSubsectorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEstadosConceptoTitulos")>  _
	Partial Public Class EstadosConceptoTitulos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDEstadosConceptoTitulos As Integer
		
		Private _strConceptoTitulo As String
		
		Private _strDescripcionConceptoTitulo As String
		
		Private _strEstadoEntrada As String
		
		Private _strDescripcionEstadoEntrada As String
		
		Private _strEstadoSalida As String
		
		Private _strDescripcionEstadoSalida As String
		
		Private _strID As String
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDEstadosConceptoTitulosChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEstadosConceptoTitulosChanged()
    End Sub
    Partial Private Sub OnstrConceptoTituloChanging(value As String)
    End Sub
    Partial Private Sub OnstrConceptoTituloChanged()
    End Sub
    Partial Private Sub OnstrDescripcionConceptoTituloChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionConceptoTituloChanged()
    End Sub
    Partial Private Sub OnstrEstadoEntradaChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoEntradaChanged()
    End Sub
    Partial Private Sub OnstrDescripcionEstadoEntradaChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionEstadoEntradaChanged()
    End Sub
    Partial Private Sub OnstrEstadoSalidaChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoSalidaChanged()
    End Sub
    Partial Private Sub OnstrDescripcionEstadoSalidaChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionEstadoSalidaChanged()
    End Sub
    Partial Private Sub OnstrIDChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEstadosConceptoTitulos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDEstadosConceptoTitulos() As Integer
			Get
				Return Me._intIDEstadosConceptoTitulos
			End Get
			Set
				If ((Me._intIDEstadosConceptoTitulos = value)  _
							= false) Then
					Me.OnintIDEstadosConceptoTitulosChanging(value)
					Me.SendPropertyChanging
					Me._intIDEstadosConceptoTitulos = value
					Me.SendPropertyChanged("intIDEstadosConceptoTitulos")
					Me.OnintIDEstadosConceptoTitulosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strConceptoTitulo", DbType:="Varchar(7) NOT NULL")>  _
		Public Property strConceptoTitulo() As String
			Get
				Return Me._strConceptoTitulo
			End Get
			Set
				If (String.Equals(Me._strConceptoTitulo, value) = false) Then
					Me.OnstrConceptoTituloChanging(value)
					Me.SendPropertyChanging
					Me._strConceptoTitulo = value
					Me.SendPropertyChanged("strConceptoTitulo")
					Me.OnstrConceptoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionConceptoTitulo", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionConceptoTitulo() As String
			Get
				Return Me._strDescripcionConceptoTitulo
			End Get
			Set
				If (String.Equals(Me._strDescripcionConceptoTitulo, value) = false) Then
					Me.OnstrDescripcionConceptoTituloChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionConceptoTitulo = value
					Me.SendPropertyChanged("strDescripcionConceptoTitulo")
					Me.OnstrDescripcionConceptoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoEntrada", DbType:="Varchar(7) NOT NULL")>  _
		Public Property strEstadoEntrada() As String
			Get
				Return Me._strEstadoEntrada
			End Get
			Set
				If (String.Equals(Me._strEstadoEntrada, value) = false) Then
					Me.OnstrEstadoEntradaChanging(value)
					Me.SendPropertyChanging
					Me._strEstadoEntrada = value
					Me.SendPropertyChanged("strEstadoEntrada")
					Me.OnstrEstadoEntradaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionEstadoEntrada", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionEstadoEntrada() As String
			Get
				Return Me._strDescripcionEstadoEntrada
			End Get
			Set
				If (String.Equals(Me._strDescripcionEstadoEntrada, value) = false) Then
					Me.OnstrDescripcionEstadoEntradaChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionEstadoEntrada = value
					Me.SendPropertyChanged("strDescripcionEstadoEntrada")
					Me.OnstrDescripcionEstadoEntradaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoSalida", DbType:="Varchar(7) NOT NULL")>  _
		Public Property strEstadoSalida() As String
			Get
				Return Me._strEstadoSalida
			End Get
			Set
				If (String.Equals(Me._strEstadoSalida, value) = false) Then
					Me.OnstrEstadoSalidaChanging(value)
					Me.SendPropertyChanging
					Me._strEstadoSalida = value
					Me.SendPropertyChanged("strEstadoSalida")
					Me.OnstrEstadoSalidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionEstadoSalida", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionEstadoSalida() As String
			Get
				Return Me._strDescripcionEstadoSalida
			End Get
			Set
				If (String.Equals(Me._strDescripcionEstadoSalida, value) = false) Then
					Me.OnstrDescripcionEstadoSalidaChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionEstadoSalida = value
					Me.SendPropertyChanged("strDescripcionEstadoSalida")
					Me.OnstrDescripcionEstadoSalidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strID", DbType:="Varchar(7) NULL")>  _
		Public Property strID() As String
			Get
				Return Me._strID
			End Get
			Set
				If (String.Equals(Me._strID, value) = false) Then
					Me.OnstrIDChanging(value)
					Me.SendPropertyChanging
					Me._strID = value
					Me.SendPropertyChanged("strID")
					Me.OnstrIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NULL", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblEntidades_CuentasDeposito")>  _
	Partial Public Class EntidadesCuentasDeposito
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intID As Integer
		
		Private _intIDEntidad As Integer
		
		Private _strDeposito As String
		
		Private _strCuentaDeposito As String
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strUsuarioWindows As String
		
		Private _strMaquina As String
		
		Private _strEntidad As String
		
		Private _strDepositoDescripcion As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnintIDEntidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEntidadChanged()
    End Sub
    Partial Private Sub OnstrDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDepositoChanged()
    End Sub
    Partial Private Sub OnstrCuentaDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnstrCuentaDepositoChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrUsuarioWindowsChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioWindowsChanged()
    End Sub
    Partial Private Sub OnstrMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnstrMaquinaChanged()
    End Sub
    Partial Private Sub OnstrEntidadChanging(value As String)
    End Sub
    Partial Private Sub OnstrEntidadChanged()
    End Sub
    Partial Private Sub OnstrDepositoDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDepositoDescripcionChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intID() As Integer
			Get
				Return Me._intID
			End Get
			Set
				If ((Me._intID = value)  _
							= false) Then
					Me.OnintIDChanging(value)
					Me.SendPropertyChanging
					Me._intID = value
					Me.SendPropertyChanged("intID")
					Me.OnintIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEntidad", DbType:="Int NOT NULL")>  _
		Public Property intIDEntidad() As Integer
			Get
				Return Me._intIDEntidad
			End Get
			Set
				If ((Me._intIDEntidad = value)  _
							= false) Then
					Me.OnintIDEntidadChanging(value)
					Me.SendPropertyChanging
					Me._intIDEntidad = value
					Me.SendPropertyChanged("intIDEntidad")
					Me.OnintIDEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDeposito", DbType:="Varchar(4) NOT NULL")>  _
		Public Property strDeposito() As String
			Get
				Return Me._strDeposito
			End Get
			Set
				If (String.Equals(Me._strDeposito, value) = false) Then
					Me.OnstrDepositoChanging(value)
					Me.SendPropertyChanging
					Me._strDeposito = value
					Me.SendPropertyChanged("strDeposito")
					Me.OnstrDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaDeposito", DbType:="Varchar(25) NOT NULL")>  _
		Public Property strCuentaDeposito() As String
			Get
				Return Me._strCuentaDeposito
			End Get
			Set
				If (String.Equals(Me._strCuentaDeposito, value) = false) Then
					Me.OnstrCuentaDepositoChanging(value)
					Me.SendPropertyChanging
					Me._strCuentaDeposito = value
					Me.SendPropertyChanged("strCuentaDeposito")
					Me.OnstrCuentaDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuarioWindows", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuarioWindows() As String
			Get
				Return Me._strUsuarioWindows
			End Get
			Set
				If (String.Equals(Me._strUsuarioWindows, value) = false) Then
					Me.OnstrUsuarioWindowsChanging(value)
					Me.SendPropertyChanging
					Me._strUsuarioWindows = value
					Me.SendPropertyChanged("strUsuarioWindows")
					Me.OnstrUsuarioWindowsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMaquina", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strMaquina() As String
			Get
				Return Me._strMaquina
			End Get
			Set
				If (String.Equals(Me._strMaquina, value) = false) Then
					Me.OnstrMaquinaChanging(value)
					Me.SendPropertyChanging
					Me._strMaquina = value
					Me.SendPropertyChanged("strMaquina")
					Me.OnstrMaquinaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEntidad", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strEntidad() As String
			Get
				Return Me._strEntidad
			End Get
			Set
				If (String.Equals(Me._strEntidad, value) = false) Then
					Me.OnstrEntidadChanging(value)
					Me.SendPropertyChanging
					Me._strEntidad = value
					Me.SendPropertyChanged("strEntidad")
					Me.OnstrEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDepositoDescripcion", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strDepositoDescripcion() As String
			Get
				Return Me._strDepositoDescripcion
			End Get
			Set
				If (String.Equals(Me._strDepositoDescripcion, value) = false) Then
					Me.OnstrDepositoDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strDepositoDescripcion = value
					Me.SendPropertyChanged("strDepositoDescripcion")
					Me.OnstrDepositoDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblEstadosBloqueoTitulos")>  _
	Partial Public Class EstadosBloqueoTitulos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intID As Integer
		
		Private _strEstadoBloqueo As String
		
		Private _strEstadoDesBloqueo As String
		
		Private _strDescripcionDesBloqueo As String
		
		Private _strMecanismo As String
		
		Private _strDescripcionMecanismo As String
		
		Private _strMotivoBloqueo As String
		
		Private _strDescripcionBloqueo As String
		
		Private _strDescripcionMotivo As String
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _logEstado As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnstrEstadoBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoBloqueoChanged()
    End Sub
    Partial Private Sub OnstrEstadoDesBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoDesBloqueoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionDesBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionDesBloqueoChanged()
    End Sub
    Partial Private Sub OnstrMecanismoChanging(value As String)
    End Sub
    Partial Private Sub OnstrMecanismoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionMecanismoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionMecanismoChanged()
    End Sub
    Partial Private Sub OnstrMotivoBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrMotivoBloqueoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionBloqueoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionMotivoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionMotivoChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnlogEstadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogEstadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intID() As Integer
			Get
				Return Me._intID
			End Get
			Set
				If ((Me._intID = value)  _
							= false) Then
					Me.OnintIDChanging(value)
					Me.SendPropertyChanging
					Me._intID = value
					Me.SendPropertyChanged("intID")
					Me.OnintIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoBloqueo", DbType:="Varchar(5) NOT NULL")>  _
		Public Property strEstadoBloqueo() As String
			Get
				Return Me._strEstadoBloqueo
			End Get
			Set
				If (String.Equals(Me._strEstadoBloqueo, value) = false) Then
					Me.OnstrEstadoBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strEstadoBloqueo = value
					Me.SendPropertyChanged("strEstadoBloqueo")
					Me.OnstrEstadoBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoDesBloqueo", DbType:="Varchar(5) NOT NULL")>  _
		Public Property strEstadoDesBloqueo() As String
			Get
				Return Me._strEstadoDesBloqueo
			End Get
			Set
				If (String.Equals(Me._strEstadoDesBloqueo, value) = false) Then
					Me.OnstrEstadoDesBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strEstadoDesBloqueo = value
					Me.SendPropertyChanged("strEstadoDesBloqueo")
					Me.OnstrEstadoDesBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionDesBloqueo", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strDescripcionDesBloqueo() As String
			Get
				Return Me._strDescripcionDesBloqueo
			End Get
			Set
				If (String.Equals(Me._strDescripcionDesBloqueo, value) = false) Then
					Me.OnstrDescripcionDesBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionDesBloqueo = value
					Me.SendPropertyChanged("strDescripcionDesBloqueo")
					Me.OnstrDescripcionDesBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMecanismo", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strMecanismo() As String
			Get
				Return Me._strMecanismo
			End Get
			Set
				If (String.Equals(Me._strMecanismo, value) = false) Then
					Me.OnstrMecanismoChanging(value)
					Me.SendPropertyChanging
					Me._strMecanismo = value
					Me.SendPropertyChanged("strMecanismo")
					Me.OnstrMecanismoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionMecanismo", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strDescripcionMecanismo() As String
			Get
				Return Me._strDescripcionMecanismo
			End Get
			Set
				If (String.Equals(Me._strDescripcionMecanismo, value) = false) Then
					Me.OnstrDescripcionMecanismoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionMecanismo = value
					Me.SendPropertyChanged("strDescripcionMecanismo")
					Me.OnstrDescripcionMecanismoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMotivoBloqueo", DbType:="Varchar(5) NOT NULL")>  _
		Public Property strMotivoBloqueo() As String
			Get
				Return Me._strMotivoBloqueo
			End Get
			Set
				If (String.Equals(Me._strMotivoBloqueo, value) = false) Then
					Me.OnstrMotivoBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strMotivoBloqueo = value
					Me.SendPropertyChanged("strMotivoBloqueo")
					Me.OnstrMotivoBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionBloqueo", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strDescripcionBloqueo() As String
			Get
				Return Me._strDescripcionBloqueo
			End Get
			Set
				If (String.Equals(Me._strDescripcionBloqueo, value) = false) Then
					Me.OnstrDescripcionBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionBloqueo = value
					Me.SendPropertyChanged("strDescripcionBloqueo")
					Me.OnstrDescripcionBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionMotivo", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strDescripcionMotivo() As String
			Get
				Return Me._strDescripcionMotivo
			End Get
			Set
				If (String.Equals(Me._strDescripcionMotivo, value) = false) Then
					Me.OnstrDescripcionMotivoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionMotivo = value
					Me.SendPropertyChanged("strDescripcionMotivo")
					Me.OnstrDescripcionMotivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEstado", DbType:="Bit")>  _
		Public Property logEstado() As System.Nullable(Of Boolean)
			Get
				Return Me._logEstado
			End Get
			Set
				If (Me._logEstado.Equals(value) = false) Then
					Me.OnlogEstadoChanging(value)
					Me.SendPropertyChanging
					Me._logEstado = value
					Me.SendPropertyChanged("logEstado")
					Me.OnlogEstadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tmpEspeciesExcluidasEncabezado")>  _
	Partial Public Class EspeciesExcluidasEncabezado
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intID As Integer
		
		Private _strFormato As String
		
		Private _strFormatoDescripcion As String
		
		Private _strIDEspecie As String
		
		Private _strExclusionFormatoDescripcion As String
		
		Private _dtmActualizacion As Date
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDChanged()
    End Sub
    Partial Private Sub OnstrFormatoChanging(value As String)
    End Sub
    Partial Private Sub OnstrFormatoChanged()
    End Sub
    Partial Private Sub OnstrFormatoDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrFormatoDescripcionChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieChanged()
    End Sub
    Partial Private Sub OnstrExclusionFormatoDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrExclusionFormatoDescripcionChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intID() As Integer
			Get
				Return Me._intID
			End Get
			Set
				If ((Me._intID = value)  _
							= false) Then
					Me.OnintIDChanging(value)
					Me.SendPropertyChanging
					Me._intID = value
					Me.SendPropertyChanged("intID")
					Me.OnintIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFormato", DbType:="Varchar(80)NOT NULL")>  _
		Public Property strFormato() As String
			Get
				Return Me._strFormato
			End Get
			Set
				If (String.Equals(Me._strFormato, value) = false) Then
					Me.OnstrFormatoChanging(value)
					Me.SendPropertyChanging
					Me._strFormato = value
					Me.SendPropertyChanged("strFormato")
					Me.OnstrFormatoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFormatoDescripcion", DbType:="Varchar(50)NOT NULL")>  _
		Public Property strFormatoDescripcion() As String
			Get
				Return Me._strFormatoDescripcion
			End Get
			Set
				If (String.Equals(Me._strFormatoDescripcion, value) = false) Then
					Me.OnstrFormatoDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strFormatoDescripcion = value
					Me.SendPropertyChanged("strFormatoDescripcion")
					Me.OnstrFormatoDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(25)NOT NULL")>  _
		Public Property strIDEspecie() As String
			Get
				Return Me._strIDEspecie
			End Get
			Set
				If (String.Equals(Me._strIDEspecie, value) = false) Then
					Me.OnstrIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strIDEspecie = value
					Me.SendPropertyChanged("strIDEspecie")
					Me.OnstrIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strExclusionFormatoDescripcion", DbType:="Varchar(80) NULL")>  _
		Public Property strExclusionFormatoDescripcion() As String
			Get
				Return Me._strExclusionFormatoDescripcion
			End Get
			Set
				If (String.Equals(Me._strExclusionFormatoDescripcion, value) = false) Then
					Me.OnstrExclusionFormatoDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strExclusionFormatoDescripcion = value
					Me.SendPropertyChanged("strExclusionFormatoDescripcion")
					Me.OnstrExclusionFormatoDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property dtmActualizacion() As Date
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If ((Me._dtmActualizacion = value)  _
							= false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60)NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblEspeciesExcluidas")>  _
	Partial Public Class EspeciesExcluidasDetalles
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDEspecieExcluida As Integer
		
		Private _strFormato As String
		
		Private _strIDEspecie As String
		
		Private _strExclusionFormato As String
		
		Private _strExclusionFormatoDescripcion As String
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDEspecieExcluidaChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEspecieExcluidaChanged()
    End Sub
    Partial Private Sub OnstrFormatoChanging(value As String)
    End Sub
    Partial Private Sub OnstrFormatoChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieChanged()
    End Sub
    Partial Private Sub OnstrExclusionFormatoChanging(value As String)
    End Sub
    Partial Private Sub OnstrExclusionFormatoChanged()
    End Sub
    Partial Private Sub OnstrExclusionFormatoDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrExclusionFormatoDescripcionChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEspecieExcluida", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDEspecieExcluida() As Integer
			Get
				Return Me._intIDEspecieExcluida
			End Get
			Set
				If ((Me._intIDEspecieExcluida = value)  _
							= false) Then
					Me.OnintIDEspecieExcluidaChanging(value)
					Me.SendPropertyChanging
					Me._intIDEspecieExcluida = value
					Me.SendPropertyChanged("intIDEspecieExcluida")
					Me.OnintIDEspecieExcluidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFormato", DbType:="Varchar(80) NOT NULL", CanBeNull:=false)>  _
		Public Property strFormato() As String
			Get
				Return Me._strFormato
			End Get
			Set
				If (String.Equals(Me._strFormato, value) = false) Then
					Me.OnstrFormatoChanging(value)
					Me.SendPropertyChanging
					Me._strFormato = value
					Me.SendPropertyChanged("strFormato")
					Me.OnstrFormatoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(25) NULL")>  _
		Public Property strIDEspecie() As String
			Get
				Return Me._strIDEspecie
			End Get
			Set
				If (String.Equals(Me._strIDEspecie, value) = false) Then
					Me.OnstrIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strIDEspecie = value
					Me.SendPropertyChanged("strIDEspecie")
					Me.OnstrIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strExclusionFormato", DbType:="Varchar(80) NULL")>  _
		Public Property strExclusionFormato() As String
			Get
				Return Me._strExclusionFormato
			End Get
			Set
				If (String.Equals(Me._strExclusionFormato, value) = false) Then
					Me.OnstrExclusionFormatoChanging(value)
					Me.SendPropertyChanging
					Me._strExclusionFormato = value
					Me.SendPropertyChanged("strExclusionFormato")
					Me.OnstrExclusionFormatoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strExclusionFormatoDescripcion", DbType:="Varchar(50) NULL")>  _
		Public Property strExclusionFormatoDescripcion() As String
			Get
				Return Me._strExclusionFormatoDescripcion
			End Get
			Set
				If (String.Equals(Me._strExclusionFormatoDescripcion, value) = false) Then
					Me.OnstrExclusionFormatoDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strExclusionFormatoDescripcion = value
					Me.SendPropertyChanged("strExclusionFormatoDescripcion")
					Me.OnstrExclusionFormatoDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL", CanBeNull:=false)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblClaseContableTitulo")>  _
	Partial Public Class tblClaseContableTitulo
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDClaseContableTitulo As Integer
		
		Private _strTipoTitulo As String
		
		Private _strTipoTituloDescripcion As String
		
		Private _strReferencia As String
		
		Private _strReferenciaDescripcion As String
		
		Private _logGravado As Boolean
		
		Private _logNCRNGO As Boolean
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _logMultimoneda As Boolean
		
		Private _xmlDetalleGrid As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDClaseContableTituloChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDClaseContableTituloChanged()
    End Sub
    Partial Private Sub OnstrTipoTituloChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoTituloChanged()
    End Sub
    Partial Private Sub OnstrTipoTituloDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoTituloDescripcionChanged()
    End Sub
    Partial Private Sub OnstrReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnstrReferenciaChanged()
    End Sub
    Partial Private Sub OnstrReferenciaDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrReferenciaDescripcionChanged()
    End Sub
    Partial Private Sub OnlogGravadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogGravadoChanged()
    End Sub
    Partial Private Sub OnlogNCRNGOChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogNCRNGOChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnlogMultimonedaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogMultimonedaChanged()
    End Sub
    Partial Private Sub OnxmlDetalleGridChanging(value As String)
    End Sub
    Partial Private Sub OnxmlDetalleGridChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDClaseContableTitulo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDClaseContableTitulo() As Integer
			Get
				Return Me._intIDClaseContableTitulo
			End Get
			Set
				If ((Me._intIDClaseContableTitulo = value)  _
							= false) Then
					Me.OnintIDClaseContableTituloChanging(value)
					Me.SendPropertyChanging
					Me._intIDClaseContableTitulo = value
					Me.SendPropertyChanged("intIDClaseContableTitulo")
					Me.OnintIDClaseContableTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTitulo", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strTipoTitulo() As String
			Get
				Return Me._strTipoTitulo
			End Get
			Set
				If (String.Equals(Me._strTipoTitulo, value) = false) Then
					Me.OnstrTipoTituloChanging(value)
					Me.SendPropertyChanging
					Me._strTipoTitulo = value
					Me.SendPropertyChanged("strTipoTitulo")
					Me.OnstrTipoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTituloDescripcion", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strTipoTituloDescripcion() As String
			Get
				Return Me._strTipoTituloDescripcion
			End Get
			Set
				If (String.Equals(Me._strTipoTituloDescripcion, value) = false) Then
					Me.OnstrTipoTituloDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoTituloDescripcion = value
					Me.SendPropertyChanged("strTipoTituloDescripcion")
					Me.OnstrTipoTituloDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strReferencia", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strReferencia() As String
			Get
				Return Me._strReferencia
			End Get
			Set
				If (String.Equals(Me._strReferencia, value) = false) Then
					Me.OnstrReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._strReferencia = value
					Me.SendPropertyChanged("strReferencia")
					Me.OnstrReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strReferenciaDescripcion", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strReferenciaDescripcion() As String
			Get
				Return Me._strReferenciaDescripcion
			End Get
			Set
				If (String.Equals(Me._strReferenciaDescripcion, value) = false) Then
					Me.OnstrReferenciaDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strReferenciaDescripcion = value
					Me.SendPropertyChanged("strReferenciaDescripcion")
					Me.OnstrReferenciaDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logGravado", DbType:="BIT NOT NULL")>  _
		Public Property logGravado() As Boolean
			Get
				Return Me._logGravado
			End Get
			Set
				If ((Me._logGravado = value)  _
							= false) Then
					Me.OnlogGravadoChanging(value)
					Me.SendPropertyChanging
					Me._logGravado = value
					Me.SendPropertyChanged("logGravado")
					Me.OnlogGravadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logNCRNGO", DbType:="BIT NOT NULL")>  _
		Public Property logNCRNGO() As Boolean
			Get
				Return Me._logNCRNGO
			End Get
			Set
				If ((Me._logNCRNGO = value)  _
							= false) Then
					Me.OnlogNCRNGOChanging(value)
					Me.SendPropertyChanging
					Me._logNCRNGO = value
					Me.SendPropertyChanged("logNCRNGO")
					Me.OnlogNCRNGOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL", CanBeNull:=false)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logMultimoneda", DbType:="BIT NOT NULL")>  _
		Public Property logMultimoneda() As Boolean
			Get
				Return Me._logMultimoneda
			End Get
			Set
				If ((Me._logMultimoneda = value)  _
							= false) Then
					Me.OnlogMultimonedaChanging(value)
					Me.SendPropertyChanging
					Me._logMultimoneda = value
					Me.SendPropertyChanged("logMultimoneda")
					Me.OnlogMultimonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xmlDetalleGrid", DbType:="Text NOT NULL")>  _
		Public Property xmlDetalleGrid() As String
			Get
				Return Me._xmlDetalleGrid
			End Get
			Set
				If (String.Equals(Me._xmlDetalleGrid, value) = false) Then
					Me.OnxmlDetalleGridChanging(value)
					Me.SendPropertyChanging
					Me._xmlDetalleGrid = value
					Me.SendPropertyChanged("xmlDetalleGrid")
					Me.OnxmlDetalleGridChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblConfiguracionContableMultimoneda")>  _
	Partial Public Class ConfiguracionContableMultimoneda
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDContableMultimoneda As Integer
		
		Private _intIDClaseContableTitulo As System.Nullable(Of Integer)
		
		Private _intIDContableListas As System.Nullable(Of Integer)
		
		Private _strDescripcionConcepto As String
		
		Private _strIDMoneda As String
		
		Private _strCuentaContable As String
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDContableMultimonedaChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDContableMultimonedaChanged()
    End Sub
    Partial Private Sub OnintIDClaseContableTituloChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDClaseContableTituloChanged()
    End Sub
    Partial Private Sub OnintIDContableListasChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDContableListasChanged()
    End Sub
    Partial Private Sub OnstrDescripcionConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionConceptoChanged()
    End Sub
    Partial Private Sub OnstrIDMonedaChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDMonedaChanged()
    End Sub
    Partial Private Sub OnstrCuentaContableChanging(value As String)
    End Sub
    Partial Private Sub OnstrCuentaContableChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDContableMultimoneda", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDContableMultimoneda() As Integer
			Get
				Return Me._intIDContableMultimoneda
			End Get
			Set
				If ((Me._intIDContableMultimoneda = value)  _
							= false) Then
					Me.OnintIDContableMultimonedaChanging(value)
					Me.SendPropertyChanging
					Me._intIDContableMultimoneda = value
					Me.SendPropertyChanged("intIDContableMultimoneda")
					Me.OnintIDContableMultimonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDClaseContableTitulo", DbType:="Int NOT NULL")>  _
		Public Property intIDClaseContableTitulo() As System.Nullable(Of Integer)
			Get
				Return Me._intIDClaseContableTitulo
			End Get
			Set
				If (Me._intIDClaseContableTitulo.Equals(value) = false) Then
					Me.OnintIDClaseContableTituloChanging(value)
					Me.SendPropertyChanging
					Me._intIDClaseContableTitulo = value
					Me.SendPropertyChanged("intIDClaseContableTitulo")
					Me.OnintIDClaseContableTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDContableListas", DbType:="Int NOT NULL")>  _
		Public Property intIDContableListas() As System.Nullable(Of Integer)
			Get
				Return Me._intIDContableListas
			End Get
			Set
				If (Me._intIDContableListas.Equals(value) = false) Then
					Me.OnintIDContableListasChanging(value)
					Me.SendPropertyChanging
					Me._intIDContableListas = value
					Me.SendPropertyChanged("intIDContableListas")
					Me.OnintIDContableListasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionConcepto", DbType:="Varchar(75) NOT NUL")>  _
		Public Property strDescripcionConcepto() As String
			Get
				Return Me._strDescripcionConcepto
			End Get
			Set
				If (String.Equals(Me._strDescripcionConcepto, value) = false) Then
					Me.OnstrDescripcionConceptoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionConcepto = value
					Me.SendPropertyChanged("strDescripcionConcepto")
					Me.OnstrDescripcionConceptoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDMoneda", DbType:="Varchar(5) NOT NUL")>  _
		Public Property strIDMoneda() As String
			Get
				Return Me._strIDMoneda
			End Get
			Set
				If (String.Equals(Me._strIDMoneda, value) = false) Then
					Me.OnstrIDMonedaChanging(value)
					Me.SendPropertyChanging
					Me._strIDMoneda = value
					Me.SendPropertyChanged("strIDMoneda")
					Me.OnstrIDMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContable", DbType:="Varchar(max) NULL")>  _
		Public Property strCuentaContable() As String
			Get
				Return Me._strCuentaContable
			End Get
			Set
				If (String.Equals(Me._strCuentaContable, value) = false) Then
					Me.OnstrCuentaContableChanging(value)
					Me.SendPropertyChanging
					Me._strCuentaContable = value
					Me.SendPropertyChanged("strCuentaContable")
					Me.OnstrCuentaContableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL", CanBeNull:=false)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCuentasDecevalPorAgrupador")>  _
	Partial Public Class CuentasFondos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDCuentasDeceval As Integer
		
		Private _strDeposito As String
		
		Private _strDescripcionDeposito As String
		
		Private _lngidCuentaDeceval As System.Nullable(Of Integer)
		
		Private _strTipoIdComitente As String
		
		Private _strDescripcionTipoIdentificacion As String
		
		Private _strNroDocumento As String
		
		Private _strNombre As String
		
		Private _strPrefijo As String
		
		Private _logActivo As System.Nullable(of System.Boolean)
		
		Private _strConector1 As String
		
		Private _strTipoIdBenef1 As String
		
		Private _lngNroDocBenef1 As String
		
		Private _strPrimerBeneficiario As String
		
		Private _strConector2 As String
		
		Private _strTipoIdBenef2 As String
		
		Private _lngNroDocBenef2 As String
		
		Private _strSegundoBeneficiario As String
		
		Private _lngidComitenteLider As String
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _strCuentaPrincipalDCV As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDCuentasDecevalChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDCuentasDecevalChanged()
    End Sub
    Partial Private Sub OnstrDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDepositoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionDepositoChanged()
    End Sub
    Partial Private Sub OnlngidCuentaDecevalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngidCuentaDecevalChanged()
    End Sub
    Partial Private Sub OnstrTipoIdComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoIdComitenteChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnstrNroDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnstrNroDocumentoChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnstrPrefijoChanging(value As String)
    End Sub
    Partial Private Sub OnstrPrefijoChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnstrConector1Changing(value As String)
    End Sub
    Partial Private Sub OnstrConector1Changed()
    End Sub
    Partial Private Sub OnstrTipoIdBenef1Changing(value As String)
    End Sub
    Partial Private Sub OnstrTipoIdBenef1Changed()
    End Sub
    Partial Private Sub OnlngNroDocBenef1Changing(value As String)
    End Sub
    Partial Private Sub OnlngNroDocBenef1Changed()
    End Sub
    Partial Private Sub OnstrPrimerBeneficiarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrPrimerBeneficiarioChanged()
    End Sub
    Partial Private Sub OnstrConector2Changing(value As String)
    End Sub
    Partial Private Sub OnstrConector2Changed()
    End Sub
    Partial Private Sub OnstrTipoIdBenef2Changing(value As String)
    End Sub
    Partial Private Sub OnstrTipoIdBenef2Changed()
    End Sub
    Partial Private Sub OnlngNroDocBenef2Changing(value As String)
    End Sub
    Partial Private Sub OnlngNroDocBenef2Changed()
    End Sub
    Partial Private Sub OnstrSegundoBeneficiarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrSegundoBeneficiarioChanged()
    End Sub
    Partial Private Sub OnlngidComitenteLiderChanging(value As String)
    End Sub
    Partial Private Sub OnlngidComitenteLiderChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnstrCuentaPrincipalDCVChanging(value As String)
    End Sub
    Partial Private Sub OnstrCuentaPrincipalDCVChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCuentasDeceval", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDCuentasDeceval() As Integer
			Get
				Return Me._intIDCuentasDeceval
			End Get
			Set
				If ((Me._intIDCuentasDeceval = value)  _
							= false) Then
					Me.OnintIDCuentasDecevalChanging(value)
					Me.SendPropertyChanging
					Me._intIDCuentasDeceval = value
					Me.SendPropertyChanged("intIDCuentasDeceval")
					Me.OnintIDCuentasDecevalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDeposito", DbType:="Varchar(10) NULL")>  _
		Public Property strDeposito() As String
			Get
				Return Me._strDeposito
			End Get
			Set
				If (String.Equals(Me._strDeposito, value) = false) Then
					Me.OnstrDepositoChanging(value)
					Me.SendPropertyChanging
					Me._strDeposito = value
					Me.SendPropertyChanged("strDeposito")
					Me.OnstrDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionDeposito", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionDeposito() As String
			Get
				Return Me._strDescripcionDeposito
			End Get
			Set
				If (String.Equals(Me._strDescripcionDeposito, value) = false) Then
					Me.OnstrDescripcionDepositoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionDeposito = value
					Me.SendPropertyChanged("strDescripcionDeposito")
					Me.OnstrDescripcionDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngidCuentaDeceval", DbType:="Int NULL")>  _
		Public Property lngidCuentaDeceval() As System.Nullable(Of Integer)
			Get
				Return Me._lngidCuentaDeceval
			End Get
			Set
				If (Me._lngidCuentaDeceval.Equals(value) = false) Then
					Me.OnlngidCuentaDecevalChanging(value)
					Me.SendPropertyChanging
					Me._lngidCuentaDeceval = value
					Me.SendPropertyChanged("lngidCuentaDeceval")
					Me.OnlngidCuentaDecevalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoIdComitente", DbType:="Varchar(1) NULL")>  _
		Public Property strTipoIdComitente() As String
			Get
				Return Me._strTipoIdComitente
			End Get
			Set
				If (String.Equals(Me._strTipoIdComitente, value) = false) Then
					Me.OnstrTipoIdComitenteChanging(value)
					Me.SendPropertyChanging
					Me._strTipoIdComitente = value
					Me.SendPropertyChanged("strTipoIdComitente")
					Me.OnstrTipoIdComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoIdentificacion", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionTipoIdentificacion() As String
			Get
				Return Me._strDescripcionTipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoIdentificacion, value) = false) Then
					Me.OnstrDescripcionTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoIdentificacion = value
					Me.SendPropertyChanged("strDescripcionTipoIdentificacion")
					Me.OnstrDescripcionTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroDocumento", DbType:="Varchar(15) NULL")>  _
		Public Property strNroDocumento() As String
			Get
				Return Me._strNroDocumento
			End Get
			Set
				If (String.Equals(Me._strNroDocumento, value) = false) Then
					Me.OnstrNroDocumentoChanging(value)
					Me.SendPropertyChanging
					Me._strNroDocumento = value
					Me.SendPropertyChanged("strNroDocumento")
					Me.OnstrNroDocumentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(50) NULL")>  _
		Public Property strNombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnstrNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("strNombre")
					Me.OnstrNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPrefijo", DbType:="Varchar(10) NULL")>  _
		Public Property strPrefijo() As String
			Get
				Return Me._strPrefijo
			End Get
			Set
				If (String.Equals(Me._strPrefijo, value) = false) Then
					Me.OnstrPrefijoChanging(value)
					Me.SendPropertyChanging
					Me._strPrefijo = value
					Me.SendPropertyChanged("strPrefijo")
					Me.OnstrPrefijoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logActivo() As System.Nullable(of System.Boolean)
			Get
				Return Me._logActivo
			End Get
			Set
				If (Object.Equals(Me._logActivo, value) = false) Then
					Me.OnlogActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("logActivo")
					Me.OnlogActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strConector1", DbType:="Varchar(3) NULL")>  _
		Public Property strConector1() As String
			Get
				Return Me._strConector1
			End Get
			Set
				If (String.Equals(Me._strConector1, value) = false) Then
					Me.OnstrConector1Changing(value)
					Me.SendPropertyChanging
					Me._strConector1 = value
					Me.SendPropertyChanged("strConector1")
					Me.OnstrConector1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoIdBenef1", DbType:="Varchar(1) NULL")>  _
		Public Property strTipoIdBenef1() As String
			Get
				Return Me._strTipoIdBenef1
			End Get
			Set
				If (String.Equals(Me._strTipoIdBenef1, value) = false) Then
					Me.OnstrTipoIdBenef1Changing(value)
					Me.SendPropertyChanging
					Me._strTipoIdBenef1 = value
					Me.SendPropertyChanged("strTipoIdBenef1")
					Me.OnstrTipoIdBenef1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngNroDocBenef1", DbType:="Varchar(15) NULL")>  _
		Public Property lngNroDocBenef1() As String
			Get
				Return Me._lngNroDocBenef1
			End Get
			Set
				If (String.Equals(Me._lngNroDocBenef1, value) = false) Then
					Me.OnlngNroDocBenef1Changing(value)
					Me.SendPropertyChanging
					Me._lngNroDocBenef1 = value
					Me.SendPropertyChanged("lngNroDocBenef1")
					Me.OnlngNroDocBenef1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPrimerBeneficiario", DbType:="Varchar(200) NULL")>  _
		Public Property strPrimerBeneficiario() As String
			Get
				Return Me._strPrimerBeneficiario
			End Get
			Set
				If (String.Equals(Me._strPrimerBeneficiario, value) = false) Then
					Me.OnstrPrimerBeneficiarioChanging(value)
					Me.SendPropertyChanging
					Me._strPrimerBeneficiario = value
					Me.SendPropertyChanged("strPrimerBeneficiario")
					Me.OnstrPrimerBeneficiarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strConector2", DbType:="Varchar(3) NULL")>  _
		Public Property strConector2() As String
			Get
				Return Me._strConector2
			End Get
			Set
				If (String.Equals(Me._strConector2, value) = false) Then
					Me.OnstrConector2Changing(value)
					Me.SendPropertyChanging
					Me._strConector2 = value
					Me.SendPropertyChanged("strConector2")
					Me.OnstrConector2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoIdBenef2", DbType:="Varchar(1) NULL")>  _
		Public Property strTipoIdBenef2() As String
			Get
				Return Me._strTipoIdBenef2
			End Get
			Set
				If (String.Equals(Me._strTipoIdBenef2, value) = false) Then
					Me.OnstrTipoIdBenef2Changing(value)
					Me.SendPropertyChanging
					Me._strTipoIdBenef2 = value
					Me.SendPropertyChanged("strTipoIdBenef2")
					Me.OnstrTipoIdBenef2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngNroDocBenef2", DbType:="Varchar(15) NULL")>  _
		Public Property lngNroDocBenef2() As String
			Get
				Return Me._lngNroDocBenef2
			End Get
			Set
				If (String.Equals(Me._lngNroDocBenef2, value) = false) Then
					Me.OnlngNroDocBenef2Changing(value)
					Me.SendPropertyChanging
					Me._lngNroDocBenef2 = value
					Me.SendPropertyChanged("lngNroDocBenef2")
					Me.OnlngNroDocBenef2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strSegundoBeneficiario", DbType:="Varchar(200) NULL")>  _
		Public Property strSegundoBeneficiario() As String
			Get
				Return Me._strSegundoBeneficiario
			End Get
			Set
				If (String.Equals(Me._strSegundoBeneficiario, value) = false) Then
					Me.OnstrSegundoBeneficiarioChanging(value)
					Me.SendPropertyChanging
					Me._strSegundoBeneficiario = value
					Me.SendPropertyChanged("strSegundoBeneficiario")
					Me.OnstrSegundoBeneficiarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngidComitenteLider", DbType:="Varchar(17) NULL")>  _
		Public Property lngidComitenteLider() As String
			Get
				Return Me._lngidComitenteLider
			End Get
			Set
				If (String.Equals(Me._lngidComitenteLider, value) = false) Then
					Me.OnlngidComitenteLiderChanging(value)
					Me.SendPropertyChanging
					Me._lngidComitenteLider = value
					Me.SendPropertyChanged("lngidComitenteLider")
					Me.OnlngidComitenteLiderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaPrincipalDCV", DbType:="Varchar(25)")>  _
		Public Property strCuentaPrincipalDCV() As String
			Get
				Return Me._strCuentaPrincipalDCV
			End Get
			Set
				If (String.Equals(Me._strCuentaPrincipalDCV, value) = false) Then
					Me.OnstrCuentaPrincipalDCVChanging(value)
					Me.SendPropertyChanging
					Me._strCuentaPrincipalDCV = value
					Me.SendPropertyChanged("strCuentaPrincipalDCV")
					Me.OnstrCuentaPrincipalDCVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCuentasDecevalPorAgrupadorDetalle")>  _
	Partial Public Class CuentasFondosDetalle
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDCuentasDecevalDetalle As Integer
		
		Private _lngIDComitente As String
		
		Private _strTipoIdentificacion As String
		
		Private _strNombre As String
		
		Private _strTipoProducto As String
		
		Private _strDescripcionTipoProducto As String
		
		Private _logAplica As System.Nullable(of System.Boolean)
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDCuentasDecevalDetalleChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDCuentasDecevalDetalleChanged()
    End Sub
    Partial Private Sub OnlngIDComitenteChanging(value As String)
    End Sub
    Partial Private Sub OnlngIDComitenteChanged()
    End Sub
    Partial Private Sub OnstrTipoIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoIdentificacionChanged()
    End Sub
    Partial Private Sub OnstrNombreChanging(value As String)
    End Sub
    Partial Private Sub OnstrNombreChanged()
    End Sub
    Partial Private Sub OnstrTipoProductoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoProductoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoProductoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoProductoChanged()
    End Sub
    Partial Private Sub OnlogAplicaChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogAplicaChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCuentasDecevalDetalle", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDCuentasDecevalDetalle() As Integer
			Get
				Return Me._intIDCuentasDecevalDetalle
			End Get
			Set
				If ((Me._intIDCuentasDecevalDetalle = value)  _
							= false) Then
					Me.OnintIDCuentasDecevalDetalleChanging(value)
					Me.SendPropertyChanging
					Me._intIDCuentasDecevalDetalle = value
					Me.SendPropertyChanged("intIDCuentasDecevalDetalle")
					Me.OnintIDCuentasDecevalDetalleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Varchar(17) NULL")>  _
		Public Property lngIDComitente() As String
			Get
				Return Me._lngIDComitente
			End Get
			Set
				If (String.Equals(Me._lngIDComitente, value) = false) Then
					Me.OnlngIDComitenteChanging(value)
					Me.SendPropertyChanging
					Me._lngIDComitente = value
					Me.SendPropertyChanged("lngIDComitente")
					Me.OnlngIDComitenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoIdentificacion", DbType:="Varchar(1) NULL")>  _
		Public Property strTipoIdentificacion() As String
			Get
				Return Me._strTipoIdentificacion
			End Get
			Set
				If (String.Equals(Me._strTipoIdentificacion, value) = false) Then
					Me.OnstrTipoIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._strTipoIdentificacion = value
					Me.SendPropertyChanged("strTipoIdentificacion")
					Me.OnstrTipoIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(50) NULL")>  _
		Public Property strNombre() As String
			Get
				Return Me._strNombre
			End Get
			Set
				If (String.Equals(Me._strNombre, value) = false) Then
					Me.OnstrNombreChanging(value)
					Me.SendPropertyChanging
					Me._strNombre = value
					Me.SendPropertyChanged("strNombre")
					Me.OnstrNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoProducto", DbType:="Varchar(3) NULL")>  _
		Public Property strTipoProducto() As String
			Get
				Return Me._strTipoProducto
			End Get
			Set
				If (String.Equals(Me._strTipoProducto, value) = false) Then
					Me.OnstrTipoProductoChanging(value)
					Me.SendPropertyChanging
					Me._strTipoProducto = value
					Me.SendPropertyChanged("strTipoProducto")
					Me.OnstrTipoProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoProducto", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionTipoProducto() As String
			Get
				Return Me._strDescripcionTipoProducto
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoProducto, value) = false) Then
					Me.OnstrDescripcionTipoProductoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoProducto = value
					Me.SendPropertyChanged("strDescripcionTipoProducto")
					Me.OnstrDescripcionTipoProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logAplica", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logAplica() As System.Nullable(of System.Boolean)
			Get
				Return Me._logAplica
			End Get
			Set
				If (Object.Equals(Me._logAplica, value) = false) Then
					Me.OnlogAplicaChanging(value)
					Me.SendPropertyChanging
					Me._logAplica = value
					Me.SendPropertyChanged("logAplica")
					Me.OnlogAplicaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NULL", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblEstadosEntradaSalidaTitulos")>  _
	Partial Public Class EstadosEntradaSalidaTitulos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDEstadosEntradaSalidaTitulos As Integer
		
		Private _strRetorno As String
		
		Private _strDescripcion As String
		
		Private _strTopico As String
		
		Private _strMecanismo As String
		
		Private _strDescripcionMecanismo As String
		
		Private _strMotivoBloqueo As String
		
		Private _strDescripcionMotivoBloqueo As String
		
		Private _strEstadoActual As String
		
		Private _strDescripcionEstadoActual As String
		
		Private _logActivo As System.Nullable(of System.Boolean)
		
		Private _strDescripcionActivo As String
		
		Private _dtmActualizacion As System.Nullable(of System.DateTime)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDEstadosEntradaSalidaTitulosChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEstadosEntradaSalidaTitulosChanged()
    End Sub
    Partial Private Sub OnstrRetornoChanging(value As String)
    End Sub
    Partial Private Sub OnstrRetornoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionChanged()
    End Sub
    Partial Private Sub OnstrTopicoChanging(value As String)
    End Sub
    Partial Private Sub OnstrTopicoChanged()
    End Sub
    Partial Private Sub OnstrMecanismoChanging(value As String)
    End Sub
    Partial Private Sub OnstrMecanismoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionMecanismoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionMecanismoChanged()
    End Sub
    Partial Private Sub OnstrMotivoBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrMotivoBloqueoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionMotivoBloqueoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionMotivoBloqueoChanged()
    End Sub
    Partial Private Sub OnstrEstadoActualChanging(value As String)
    End Sub
    Partial Private Sub OnstrEstadoActualChanged()
    End Sub
    Partial Private Sub OnstrDescripcionEstadoActualChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionEstadoActualChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionActivoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionActivoChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEstadosEntradaSalidaTitulos", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDEstadosEntradaSalidaTitulos() As Integer
			Get
				Return Me._intIDEstadosEntradaSalidaTitulos
			End Get
			Set
				If ((Me._intIDEstadosEntradaSalidaTitulos = value)  _
							= false) Then
					Me.OnintIDEstadosEntradaSalidaTitulosChanging(value)
					Me.SendPropertyChanging
					Me._intIDEstadosEntradaSalidaTitulos = value
					Me.SendPropertyChanged("intIDEstadosEntradaSalidaTitulos")
					Me.OnintIDEstadosEntradaSalidaTitulosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strRetorno", DbType:="Varchar(80) NULL")>  _
		Public Property strRetorno() As String
			Get
				Return Me._strRetorno
			End Get
			Set
				If (String.Equals(Me._strRetorno, value) = false) Then
					Me.OnstrRetornoChanging(value)
					Me.SendPropertyChanging
					Me._strRetorno = value
					Me.SendPropertyChanged("strRetorno")
					Me.OnstrRetornoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcion() As String
			Get
				Return Me._strDescripcion
			End Get
			Set
				If (String.Equals(Me._strDescripcion, value) = false) Then
					Me.OnstrDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcion = value
					Me.SendPropertyChanged("strDescripcion")
					Me.OnstrDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTopico", DbType:="Varchar(20) NULL")>  _
		Public Property strTopico() As String
			Get
				Return Me._strTopico
			End Get
			Set
				If (String.Equals(Me._strTopico, value) = false) Then
					Me.OnstrTopicoChanging(value)
					Me.SendPropertyChanging
					Me._strTopico = value
					Me.SendPropertyChanged("strTopico")
					Me.OnstrTopicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMecanismo", DbType:="Varchar(50) NULL")>  _
		Public Property strMecanismo() As String
			Get
				Return Me._strMecanismo
			End Get
			Set
				If (String.Equals(Me._strMecanismo, value) = false) Then
					Me.OnstrMecanismoChanging(value)
					Me.SendPropertyChanging
					Me._strMecanismo = value
					Me.SendPropertyChanged("strMecanismo")
					Me.OnstrMecanismoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionMecanismo", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionMecanismo() As String
			Get
				Return Me._strDescripcionMecanismo
			End Get
			Set
				If (String.Equals(Me._strDescripcionMecanismo, value) = false) Then
					Me.OnstrDescripcionMecanismoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionMecanismo = value
					Me.SendPropertyChanged("strDescripcionMecanismo")
					Me.OnstrDescripcionMecanismoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMotivoBloqueo", DbType:="Varchar(1) NULL")>  _
		Public Property strMotivoBloqueo() As String
			Get
				Return Me._strMotivoBloqueo
			End Get
			Set
				If (String.Equals(Me._strMotivoBloqueo, value) = false) Then
					Me.OnstrMotivoBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strMotivoBloqueo = value
					Me.SendPropertyChanged("strMotivoBloqueo")
					Me.OnstrMotivoBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionMotivoBloqueo", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionMotivoBloqueo() As String
			Get
				Return Me._strDescripcionMotivoBloqueo
			End Get
			Set
				If (String.Equals(Me._strDescripcionMotivoBloqueo, value) = false) Then
					Me.OnstrDescripcionMotivoBloqueoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionMotivoBloqueo = value
					Me.SendPropertyChanged("strDescripcionMotivoBloqueo")
					Me.OnstrDescripcionMotivoBloqueoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoActual", DbType:="Varchar(1) NULL")>  _
		Public Property strEstadoActual() As String
			Get
				Return Me._strEstadoActual
			End Get
			Set
				If (String.Equals(Me._strEstadoActual, value) = false) Then
					Me.OnstrEstadoActualChanging(value)
					Me.SendPropertyChanging
					Me._strEstadoActual = value
					Me.SendPropertyChanged("strEstadoActual")
					Me.OnstrEstadoActualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionEstadoActual", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionEstadoActual() As String
			Get
				Return Me._strDescripcionEstadoActual
			End Get
			Set
				If (String.Equals(Me._strDescripcionEstadoActual, value) = false) Then
					Me.OnstrDescripcionEstadoActualChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionEstadoActual = value
					Me.SendPropertyChanged("strDescripcionEstadoActual")
					Me.OnstrDescripcionEstadoActualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="Bit NOT NULL", CanBeNull:=true)>  _
		Public Property logActivo() As System.Nullable(of System.Boolean)
			Get
				Return Me._logActivo
			End Get
			Set
				If (Object.Equals(Me._logActivo, value) = false) Then
					Me.OnlogActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("logActivo")
					Me.OnlogActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionActivo", DbType:="Varchar(200) NULL")>  _
		Public Property strDescripcionActivo() As String
			Get
				Return Me._strDescripcionActivo
			End Get
			Set
				If (String.Equals(Me._strDescripcionActivo, value) = false) Then
					Me.OnstrDescripcionActivoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionActivo = value
					Me.SendPropertyChanged("strDescripcionActivo")
					Me.OnstrDescripcionActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace

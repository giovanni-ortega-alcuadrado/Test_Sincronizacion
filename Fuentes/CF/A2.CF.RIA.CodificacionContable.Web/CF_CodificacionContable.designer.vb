'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class CodificacionContableDBML
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertDinamicaContable(instance As CFCodificacionContable.DinamicaContable)
    End Sub
    Partial Private Sub UpdateDinamicaContable(instance As CFCodificacionContable.DinamicaContable)
    End Sub
    Partial Private Sub DeleteDinamicaContable(instance As CFCodificacionContable.DinamicaContable)
    End Sub
    Partial Private Sub InsertDinamicaContableConfig(instance As CFCodificacionContable.DinamicaContableConfig)
    End Sub
    Partial Private Sub UpdateDinamicaContableConfig(instance As CFCodificacionContable.DinamicaContableConfig)
    End Sub
    Partial Private Sub DeleteDinamicaContableConfig(instance As CFCodificacionContable.DinamicaContableConfig)
    End Sub
    Partial Private Sub InsertDinamicaContableConfigDinamica(instance As CFCodificacionContable.DinamicaContableConfigDinamica)
    End Sub
    Partial Private Sub UpdateDinamicaContableConfigDinamica(instance As CFCodificacionContable.DinamicaContableConfigDinamica)
    End Sub
    Partial Private Sub DeleteDinamicaContableConfigDinamica(instance As CFCodificacionContable.DinamicaContableConfigDinamica)
    End Sub
    Partial Private Sub InsertDinamicaContableConfigConceptosComunes(instance As CFCodificacionContable.DinamicaContableConfigConceptosComunes)
    End Sub
    Partial Private Sub UpdateDinamicaContableConfigConceptosComunes(instance As CFCodificacionContable.DinamicaContableConfigConceptosComunes)
    End Sub
    Partial Private Sub DeleteDinamicaContableConfigConceptosComunes(instance As CFCodificacionContable.DinamicaContableConfigConceptosComunes)
    End Sub
    Partial Private Sub InsertDinamicaContableConfigConceptosEspecificos(instance As CFCodificacionContable.DinamicaContableConfigConceptosEspecificos)
    End Sub
    Partial Private Sub UpdateDinamicaContableConfigConceptosEspecificos(instance As CFCodificacionContable.DinamicaContableConfigConceptosEspecificos)
    End Sub
    Partial Private Sub DeleteDinamicaContableConfigConceptosEspecificos(instance As CFCodificacionContable.DinamicaContableConfigConceptosEspecificos)
    End Sub
    Partial Private Sub InsertDinamicaContableListas(instance As CFCodificacionContable.DinamicaContableListas)
    End Sub
    Partial Private Sub UpdateDinamicaContableListas(instance As CFCodificacionContable.DinamicaContableListas)
    End Sub
    Partial Private Sub DeleteDinamicaContableListas(instance As CFCodificacionContable.DinamicaContableListas)
    End Sub
    Partial Private Sub InsertOperacionesCumplidas(instance As CFCodificacionContable.OperacionesCumplidas)
    End Sub
    Partial Private Sub DeleteOperacionesCumplidas(instance As CFCodificacionContable.OperacionesCumplidas)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property DinamicaContable() As System.Data.Linq.Table(Of CFCodificacionContable.DinamicaContable)
        Get
            Return Me.GetTable(Of CFCodificacionContable.DinamicaContable)
        End Get
    End Property

    Public ReadOnly Property DinamicaContableConfig() As System.Data.Linq.Table(Of CFCodificacionContable.DinamicaContableConfig)
        Get
            Return Me.GetTable(Of CFCodificacionContable.DinamicaContableConfig)
        End Get
    End Property

    Public ReadOnly Property DinamicaContableConfigDinamica() As System.Data.Linq.Table(Of CFCodificacionContable.DinamicaContableConfigDinamica)
        Get
            Return Me.GetTable(Of CFCodificacionContable.DinamicaContableConfigDinamica)
        End Get
    End Property

    Public ReadOnly Property DinamicaContableConfigConceptosComunes() As System.Data.Linq.Table(Of CFCodificacionContable.DinamicaContableConfigConceptosComunes)
        Get
            Return Me.GetTable(Of CFCodificacionContable.DinamicaContableConfigConceptosComunes)
        End Get
    End Property

    Public ReadOnly Property DinamicaContableConfigConceptosEspecificos() As System.Data.Linq.Table(Of CFCodificacionContable.DinamicaContableConfigConceptosEspecificos)
        Get
            Return Me.GetTable(Of CFCodificacionContable.DinamicaContableConfigConceptosEspecificos)
        End Get
    End Property

    Public ReadOnly Property DinamicaContableListas() As System.Data.Linq.Table(Of CFCodificacionContable.DinamicaContableListas)
        Get
            Return Me.GetTable(Of CFCodificacionContable.DinamicaContableListas)
        End Get
    End Property

    Public ReadOnly Property ConfiguracionContableXModulo() As System.Data.Linq.Table(Of CFCodificacionContable.ConfiguracionContableXModulo)
        Get
            Return Me.GetTable(Of CFCodificacionContable.ConfiguracionContableXModulo)
        End Get
    End Property

    Public ReadOnly Property CodificacionContable() As System.Data.Linq.Table(Of CFCodificacionContable.CodificacionContable)
        Get
            Return Me.GetTable(Of CFCodificacionContable.CodificacionContable)
        End Get
    End Property

    Public ReadOnly Property CodificacionContableDetalle() As System.Data.Linq.Table(Of CFCodificacionContable.CodificacionContableDetalle)
        Get
            Return Me.GetTable(Of CFCodificacionContable.CodificacionContableDetalle)
        End Get
    End Property

    Public ReadOnly Property ConfiguracionContableXValor() As System.Data.Linq.Table(Of CFCodificacionContable.ConfiguracionContableXValor)
        Get
            Return Me.GetTable(Of CFCodificacionContable.ConfiguracionContableXValor)
        End Get
    End Property

    Public ReadOnly Property ConfiguracionContableConcepto() As System.Data.Linq.Table(Of CFCodificacionContable.ConfiguracionContableConcepto)
        Get
            Return Me.GetTable(Of CFCodificacionContable.ConfiguracionContableConcepto)
        End Get
    End Property

    Public ReadOnly Property OperacionesCumplidas() As System.Data.Linq.Table(Of CFCodificacionContable.OperacionesCumplidas)
        Get
            Return Me.GetTable(Of CFCodificacionContable.OperacionesCumplidas)
        End Get
    End Property

    Private Sub InsertConfiguracionContableXModulo(ByVal obj As CFCodificacionContable.ConfiguracionContableXModulo)
        Me.PorDefinir1()
    End Sub

    Private Sub UpdateConfiguracionContableXModulo(ByVal obj As CFCodificacionContable.ConfiguracionContableXModulo)
        Me.PorDefinir1()
    End Sub

    Private Sub DeleteConfiguracionContableXModulo(ByVal obj As CFCodificacionContable.ConfiguracionContableXModulo)
        Me.PorDefinir2()
    End Sub

    Private Sub InsertCodificacionContable(ByVal obj As CFCodificacionContable.CodificacionContable)
        Me.PorDefinir3()
    End Sub

    Private Sub UpdateCodificacionContable(ByVal obj As CFCodificacionContable.CodificacionContable)
        Me.PorDefinir3()
    End Sub

    Private Sub InsertCodificacionContableDetalle(ByVal obj As CFCodificacionContable.CodificacionContableDetalle)
        Me.PorDefinir5()
    End Sub

    Private Sub UpdateCodificacionContableDetalle(ByVal obj As CFCodificacionContable.CodificacionContableDetalle)
        Me.PorDefinir5()
    End Sub

    Private Sub DeleteCodificacionContableDetalle(ByVal obj As CFCodificacionContable.CodificacionContableDetalle)
        Me.PorDefinir6()
    End Sub

    Private Sub InsertConfiguracionContableXValor(ByVal obj As CFCodificacionContable.ConfiguracionContableXValor)
        Me.PorDefinir7()
    End Sub

    Private Sub UpdateConfiguracionContableXValor(ByVal obj As CFCodificacionContable.ConfiguracionContableXValor)
        Me.PorDefinir7()
    End Sub

    Private Sub DeleteConfiguracionContableXValor(ByVal obj As CFCodificacionContable.ConfiguracionContableXValor)
        Me.PorDefinir8()
    End Sub

    Private Overloads Sub UpdateOperacionesCumplidas(ByVal obj As CFCodificacionContable.OperacionesCumplidas)
        Me.UpdateOperacionesCumplidas()
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir1() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir2() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_CodificacionContable_LlenarCombosConfiguracion(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintPadre As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NULL")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.ConfiguracionContableXModulo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintPadre, pstrTopico, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.ConfiguracionContableXModulo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir3() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContable_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(4), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContable_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.CodificacionContable)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.CodificacionContable))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContable_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngModulo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngNegocio As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngOperacion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngDuracion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngTipoFecha As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT NOT NULL")> ByVal pintTipoProducto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NOT NULL")> ByVal pstrTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.CodificacionContable)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, plngID, plngModulo, plngNegocio, plngOperacion, plngDuracion, plngTipoFecha, pintTipoProducto, pstrTipoInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.CodificacionContable))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir5() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir6() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContableDetalle_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.CodificacionContableDetalle)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, plngID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.CodificacionContableDetalle))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir7() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir8() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspConfiguracionContableXValor_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogTotalizado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.ConfiguracionContableXValor)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plogTotalizado, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.ConfiguracionContableXValor))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContableConcepto_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrNormaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrConcepto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrCuentaContableDBPositiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrCuentaContableDBNegativa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrCuentaContableCRPositiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrCuentaContableCRNegativa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrTipoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT")> ByVal pintTipoProducto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80)")> ByVal pstrTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pstrNormaContable, pstrConcepto, pstrCuentaContableDBPositiva, pstrCuentaContableDBNegativa, pstrCuentaContableCRPositiva, pstrCuentaContableCRNegativa, pstrTipoTitulo, pintTipoProducto, pstrTipoInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        plngID = CType(result.GetParameterValue(0), System.Nullable(Of Integer))
        pstrMsgValidacion = CType(result.GetParameterValue(13), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContableConcepto_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngID, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(4), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContableConcepto_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.ConfiguracionContableConcepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.ConfiguracionContableConcepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function uspOyDNet_Maestros_CodificacionContableConcepto_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrConcepto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrNormaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCuentaContableDBPositiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCuentaContableDBNegativa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCuentaContableCRPositiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20)")> ByVal pstrCuentaContableCRNegativa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrTipoTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT")> ByVal pintTipoProducto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(80)")> ByVal pstrTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.ConfiguracionContableConcepto)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, pstrConcepto, pstrNormaContable, pstrCuentaContableDBPositiva, pstrCuentaContableDBNegativa, pstrCuentaContableCRPositiva, pstrCuentaContableCRNegativa, pstrTipoTitulo, pintTipoProducto, pstrTipoInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.ConfiguracionContableConcepto))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_OperacionesCumplidasConsultar")>
    Public Function uspCalculosFinancieros_OperacionesCumplidasConsultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000) NULL")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.OperacionesCumplidas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.OperacionesCumplidas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Overloads Function UpdateOperacionesCumplidas() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_OperacionesCumplidasActualizar")>
    Public Function uspCalculosFinancieros_OperacionesCumplidasActualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlOperacionesCumplidas As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pxmlOperacionesCumplidas, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(4), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContable_Filtrar")>
    Public Function uspCF_Maestros_DinamicaContable_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar (50)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContable)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContable))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContable_Consultar")>
    Public Function uspCF_Maestros_DinamicaContable_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar (20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContable As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar (2)")> ByVal pstrCodNormaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar (50)")> ByVal pstrCodDinamicaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar (50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar (50)")> ByVal pstrFechaAplicacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogActiva As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContable)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, pintIdDinamicaContable, pstrCodNormaContable, pstrCodDinamicaContable, pstrDescripcion, pstrFechaAplicacion, plogActiva, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContable))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_Filtrar")>
    Public Function uspCF_Maestros_DinamicaContableConfig_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContableConfig)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContableConfig))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_Consultar")>
    Public Function uspCF_Maestros_DinamicaContableConfig_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContableConfig As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrTipoCompania As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNombreConfig As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrActiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContableConfig)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, pintIdDinamicaContableConfig, pstrTipoCompania, pstrNombreConfig, pstrDescripcion, pstrActiva, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContableConfig))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_ConsultarDinamica")>
    Public Function uspCF_Maestros_DinamicaContableConfig_ConsultarDinamica(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContableConfigNorma As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContableConfigDinamica)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdDinamicaContableConfigNorma, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContableConfigDinamica))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_ConsultarConceptosComunes")>
    Public Function uspCF_Maestros_DinamicaContableConfig_ConsultarConceptosComunes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContableConfig As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodNormaContableTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContableConfigConceptosComunes)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdDinamicaContableConfig, pstrCodNormaContableTipoInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContableConfigConceptosComunes))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_ConsultarConceptosClaseContable")>
    Public Function uspCF_Maestros_DinamicaContableConfig_ConsultarConceptosClaseContable(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContableConfig As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodNormaContableTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrIdClaseContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContableConfigConceptosEspecificos)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdDinamicaContableConfig, pstrCodNormaContableTipoInversion, pstrIdClaseContable, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContableConfigConceptosEspecificos))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_Combos")>
    Public Function uspCF_Maestros_DinamicaContableConfig_Combos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrTopico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContableConfig As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFCodificacionContable.DinamicaContableListas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTopico, pintIdDinamicaContableConfig, pstrCodigo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFCodificacionContable.DinamicaContableListas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCF_Maestros_DinamicaContableConfig_Actualizar")>
    Public Function uspCF_Maestros_DinamicaContableConfig_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdDinamicaContableConfig As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrNombreConfig As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal pstrActiva As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(250)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodNormaContableTipoInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(max)")> ByVal pstrDinamicaContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(max)")> ByVal pstrConceptosComunes As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(max)")> ByVal pstrConceptosEspecificos As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdCompaniaBasePUC As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(25)")> ByVal pstrTipoCompania As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIdDinamicaContableConfig, pstrNombreConfig, pstrActiva, pstrDescripcion, pstrCodNormaContableTipoInversion, pstrDinamicaContable, pstrConceptosComunes, pstrConceptosEspecificos, pstrUsuario, pstrInfoSesion, pintIdCompaniaBasePUC, pstrTipoCompania, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(13), String)
        Return CType(result.ReturnValue, Integer)
    End Function
End Class

Namespace CFCodificacionContable

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblDinamicaContable")>
    Partial Public Class DinamicaContable
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IdDinamicaContable As Integer

        Private _CodEventoContable As String

        Private _EventoContable As String

        Private _IdFechaGeneracion As System.Nullable(Of Integer)

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _FechaGeneracion As String

        Private _InfoSesion As String

        Private _MsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdDinamicaContableChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdDinamicaContableChanged()
        End Sub
        Partial Private Sub OnCodEventoContableChanging(value As String)
        End Sub
        Partial Private Sub OnCodEventoContableChanged()
        End Sub
        Partial Private Sub OnEventoContableChanging(value As String)
        End Sub
        Partial Private Sub OnEventoContableChanged()
        End Sub
        Partial Private Sub OnIdFechaGeneracionChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdFechaGeneracionChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnFechaGeneracionChanging(value As String)
        End Sub
        Partial Private Sub OnFechaGeneracionChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDinamicaContable", Storage:="_IdDinamicaContable", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IdDinamicaContable() As Integer
            Get
                Return Me._IdDinamicaContable
            End Get
            Set
                If ((Me._IdDinamicaContable = Value) _
                            = False) Then
                    Me.OnIdDinamicaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDinamicaContable = Value
                    Me.SendPropertyChanged("IdDinamicaContable")
                    Me.OnIdDinamicaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodEventoContable", Storage:="_CodEventoContable", DbType:="Varchar(50) NULL")>
        Public Property CodEventoContable() As String
            Get
                Return Me._CodEventoContable
            End Get
            Set
                If (String.Equals(Me._CodEventoContable, Value) = False) Then
                    Me.OnCodEventoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodEventoContable = Value
                    Me.SendPropertyChanged("CodEventoContable")
                    Me.OnCodEventoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEventoContable", Storage:="_EventoContable", DbType:="Varchar(250) NULL")>
        Public Property EventoContable() As String
            Get
                Return Me._EventoContable
            End Get
            Set
                If (String.Equals(Me._EventoContable, Value) = False) Then
                    Me.OnEventoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EventoContable = Value
                    Me.SendPropertyChanged("EventoContable")
                    Me.OnEventoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdFechaGeneracion", Storage:="_IdFechaGeneracion", DbType:="Int NULL")>
        Public Property IdFechaGeneracion() As System.Nullable(Of Integer)
            Get
                Return Me._IdFechaGeneracion
            End Get
            Set
                If (Me._IdFechaGeneracion.Equals(Value) = False) Then
                    Me.OnIdFechaGeneracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdFechaGeneracion = Value
                    Me.SendPropertyChanged("IdFechaGeneracion")
                    Me.OnIdFechaGeneracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFechaGeneracion", Storage:="_FechaGeneracion", DbType:="Varchar(50) NULL")>
        Public Property FechaGeneracion() As String
            Get
                Return Me._FechaGeneracion
            End Get
            Set
                If (String.Equals(Me._FechaGeneracion, Value) = False) Then
                    Me.OnFechaGeneracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaGeneracion = Value
                    Me.SendPropertyChanged("FechaGeneracion")
                    Me.OnFechaGeneracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoSesion", Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsgValidacion", Storage:="_MsgValidacion", DbType:="Varchar(8000)")>
        Public Property MsgValidacion() As String
            Get
                Return Me._MsgValidacion
            End Get
            Set
                If (String.Equals(Me._MsgValidacion, Value) = False) Then
                    Me.OnMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MsgValidacion = Value
                    Me.SendPropertyChanged("MsgValidacion")
                    Me.OnMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblDinamicaContableConfig")>
    Partial Public Class DinamicaContableConfig
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IdDinamicaContableConfig As Integer

        Private _NombreConfiguracion As String

        Private _CodTipoCompania As String

        Private _TipoCompania As String

        Private _Descripcion As String

        Private _IdCompaniaBasePUC As System.Nullable(Of Integer)

        Private _EstaActiva As System.Nullable(Of Boolean)

        Private _ConfiguracionBase As System.Nullable(Of Boolean)

        Private _FechaInactivacion As System.Nullable(Of Date)

        Private _Activa As String

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdDinamicaContableConfigChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdDinamicaContableConfigChanged()
        End Sub
        Partial Private Sub OnNombreConfiguracionChanging(value As String)
        End Sub
        Partial Private Sub OnNombreConfiguracionChanged()
        End Sub
        Partial Private Sub OnCodTipoCompaniaChanging(value As String)
        End Sub
        Partial Private Sub OnCodTipoCompaniaChanged()
        End Sub
        Partial Private Sub OnTipoCompaniaChanging(value As String)
        End Sub
        Partial Private Sub OnTipoCompaniaChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnIdCompaniaBasePUCChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdCompaniaBasePUCChanged()
        End Sub
        Partial Private Sub OnEstaActivaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEstaActivaChanged()
        End Sub
        Partial Private Sub OnConfiguracionBaseChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnConfiguracionBaseChanged()
        End Sub
        Partial Private Sub OnFechaInactivacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaInactivacionChanged()
        End Sub
        Partial Private Sub OnActivaChanging(value As String)
        End Sub
        Partial Private Sub OnActivaChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDinamicaContableConfig", Storage:="_IdDinamicaContableConfig", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IdDinamicaContableConfig() As Integer
            Get
                Return Me._IdDinamicaContableConfig
            End Get
            Set
                If ((Me._IdDinamicaContableConfig = Value) _
                            = False) Then
                    Me.OnIdDinamicaContableConfigChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDinamicaContableConfig = Value
                    Me.SendPropertyChanged("IdDinamicaContableConfig")
                    Me.OnIdDinamicaContableConfigChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreConfig", Storage:="_NombreConfiguracion", DbType:="Varchar(50) NOT NULL")>
        Public Property NombreConfiguracion() As String
            Get
                Return Me._NombreConfiguracion
            End Get
            Set
                If (String.Equals(Me._NombreConfiguracion, Value) = False) Then
                    Me.OnNombreConfiguracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreConfiguracion = Value
                    Me.SendPropertyChanged("NombreConfiguracion")
                    Me.OnNombreConfiguracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodTipoCompania", Storage:="_CodTipoCompania", DbType:="Varchar(50) NULL")>
        Public Property CodTipoCompania() As String
            Get
                Return Me._CodTipoCompania
            End Get
            Set
                If (String.Equals(Me._CodTipoCompania, Value) = False) Then
                    Me.OnCodTipoCompaniaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodTipoCompania = Value
                    Me.SendPropertyChanged("CodTipoCompania")
                    Me.OnCodTipoCompaniaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCompania", Storage:="_TipoCompania", DbType:="Varchar(50) NULL")>
        Public Property TipoCompania() As String
            Get
                Return Me._TipoCompania
            End Get
            Set
                If (String.Equals(Me._TipoCompania, Value) = False) Then
                    Me.OnTipoCompaniaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoCompania = Value
                    Me.SendPropertyChanged("TipoCompania")
                    Me.OnTipoCompaniaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(250) NOT NULL")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdCompaniaBasePUC", Storage:="_IdCompaniaBasePUC", DbType:="Int NULL")>
        Public Property IdCompaniaBasePUC() As System.Nullable(Of Integer)
            Get
                Return Me._IdCompaniaBasePUC
            End Get
            Set
                If (Me._IdCompaniaBasePUC.Equals(Value) = False) Then
                    Me.OnIdCompaniaBasePUCChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdCompaniaBasePUC = Value
                    Me.SendPropertyChanged("IdCompaniaBasePUC")
                    Me.OnIdCompaniaBasePUCChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActiva", Storage:="_EstaActiva", DbType:="Bit NULL")>
        Public Property EstaActiva() As System.Nullable(Of Boolean)
            Get
                Return Me._EstaActiva
            End Get
            Set
                If (Me._EstaActiva.Equals(Value) = False) Then
                    Me.OnEstaActivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstaActiva = Value
                    Me.SendPropertyChanged("EstaActiva")
                    Me.OnEstaActivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logConfiguracionBase", Storage:="_ConfiguracionBase", DbType:="Bit NULL")>
        Public Property ConfiguracionBase() As System.Nullable(Of Boolean)
            Get
                Return Me._ConfiguracionBase
            End Get
            Set
                If (Me._ConfiguracionBase.Equals(Value) = False) Then
                    Me.OnConfiguracionBaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ConfiguracionBase = Value
                    Me.SendPropertyChanged("ConfiguracionBase")
                    Me.OnConfiguracionBaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInactivacion", Storage:="_FechaInactivacion", DbType:="DateTime NULL")>
        Public Property FechaInactivacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaInactivacion
            End Get
            Set
                If (Me._FechaInactivacion.Equals(Value) = False) Then
                    Me.OnFechaInactivacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInactivacion = Value
                    Me.SendPropertyChanged("FechaInactivacion")
                    Me.OnFechaInactivacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strActiva", Storage:="_Activa", DbType:="Varchar(25) NOT NULL")>
        Public Property Activa() As String
            Get
                Return Me._Activa
            End Get
            Set
                If (String.Equals(Me._Activa, Value) = False) Then
                    Me.OnActivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Activa = Value
                    Me.SendPropertyChanged("Activa")
                    Me.OnActivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblDinamicaContableConfigDinamica")>
    Partial Public Class DinamicaContableConfigDinamica
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IdDinamicaContableDetalle As Integer

        Private _IdDinamicaContableConfigNorma As System.Nullable(Of Integer)

        Private _IdDinamicaContable As System.Nullable(Of Integer)

        Private _CodConceptoContable As String

        Private _ConceptoContable As String

        Private _strCodNaturaleza As String

        Private _Naturaleza As String

        Private _CodTipoValor As String

        Private _TipoValor As String

        Private _CuentaContable As String

        Private _EstaActiva As System.Nullable(Of Boolean)

        Private _FechaInactivacion As System.Nullable(Of Date)

        Private _Activa As String

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdDinamicaContableDetalleChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdDinamicaContableDetalleChanged()
        End Sub
        Partial Private Sub OnIdDinamicaContableConfigNormaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdDinamicaContableConfigNormaChanged()
        End Sub
        Partial Private Sub OnIdDinamicaContableChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdDinamicaContableChanged()
        End Sub
        Partial Private Sub OnCodConceptoContableChanging(value As String)
        End Sub
        Partial Private Sub OnCodConceptoContableChanged()
        End Sub
        Partial Private Sub OnConceptoContableChanging(value As String)
        End Sub
        Partial Private Sub OnConceptoContableChanged()
        End Sub
        Partial Private Sub OnstrCodNaturalezaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCodNaturalezaChanged()
        End Sub
        Partial Private Sub OnNaturalezaChanging(value As String)
        End Sub
        Partial Private Sub OnNaturalezaChanged()
        End Sub
        Partial Private Sub OnCodTipoValorChanging(value As String)
        End Sub
        Partial Private Sub OnCodTipoValorChanged()
        End Sub
        Partial Private Sub OnTipoValorChanging(value As String)
        End Sub
        Partial Private Sub OnTipoValorChanged()
        End Sub
        Partial Private Sub OnCuentaContableChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaContableChanged()
        End Sub
        Partial Private Sub OnEstaActivaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEstaActivaChanged()
        End Sub
        Partial Private Sub OnFechaInactivacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaInactivacionChanged()
        End Sub
        Partial Private Sub OnActivaChanging(value As String)
        End Sub
        Partial Private Sub OnActivaChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDinamicaContableDetalle", Storage:="_IdDinamicaContableDetalle", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IdDinamicaContableDetalle() As Integer
            Get
                Return Me._IdDinamicaContableDetalle
            End Get
            Set
                If ((Me._IdDinamicaContableDetalle = Value) _
                            = False) Then
                    Me.OnIdDinamicaContableDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDinamicaContableDetalle = Value
                    Me.SendPropertyChanged("IdDinamicaContableDetalle")
                    Me.OnIdDinamicaContableDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDinamicaContableConfigNorma", Storage:="_IdDinamicaContableConfigNorma", DbType:="Int NOT NULL")>
        Public Property IdDinamicaContableConfigNorma() As System.Nullable(Of Integer)
            Get
                Return Me._IdDinamicaContableConfigNorma
            End Get
            Set
                If (Me._IdDinamicaContableConfigNorma.Equals(Value) = False) Then
                    Me.OnIdDinamicaContableConfigNormaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDinamicaContableConfigNorma = Value
                    Me.SendPropertyChanged("IdDinamicaContableConfigNorma")
                    Me.OnIdDinamicaContableConfigNormaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDinamicaContable", Storage:="_IdDinamicaContable", DbType:="Int NOT NULL")>
        Public Property IdDinamicaContable() As System.Nullable(Of Integer)
            Get
                Return Me._IdDinamicaContable
            End Get
            Set
                If (Me._IdDinamicaContable.Equals(Value) = False) Then
                    Me.OnIdDinamicaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDinamicaContable = Value
                    Me.SendPropertyChanged("IdDinamicaContable")
                    Me.OnIdDinamicaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodConceptoContable", Storage:="_CodConceptoContable", DbType:="Varchar(50) NOT NULL")>
        Public Property CodConceptoContable() As String
            Get
                Return Me._CodConceptoContable
            End Get
            Set
                If (String.Equals(Me._CodConceptoContable, Value) = False) Then
                    Me.OnCodConceptoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodConceptoContable = Value
                    Me.SendPropertyChanged("CodConceptoContable")
                    Me.OnCodConceptoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConceptoContable", Storage:="_ConceptoContable", DbType:="Varchar(250) NULL")>
        Public Property ConceptoContable() As String
            Get
                Return Me._ConceptoContable
            End Get
            Set
                If (String.Equals(Me._ConceptoContable, Value) = False) Then
                    Me.OnConceptoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ConceptoContable = Value
                    Me.SendPropertyChanged("ConceptoContable")
                    Me.OnConceptoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodNaturaleza", DbType:="Varchar(50) NULL")>
        Public Property strCodNaturaleza() As String
            Get
                Return Me._strCodNaturaleza
            End Get
            Set
                If (String.Equals(Me._strCodNaturaleza, Value) = False) Then
                    Me.OnstrCodNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCodNaturaleza = Value
                    Me.SendPropertyChanged("strCodNaturaleza")
                    Me.OnstrCodNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNaturaleza", Storage:="_Naturaleza", DbType:="Varchar(50) NOT NULL")>
        Public Property Naturaleza() As String
            Get
                Return Me._Naturaleza
            End Get
            Set
                If (String.Equals(Me._Naturaleza, Value) = False) Then
                    Me.OnNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Naturaleza = Value
                    Me.SendPropertyChanged("Naturaleza")
                    Me.OnNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodTipoValor", Storage:="_CodTipoValor", DbType:="Varchar(50) NOT NULL")>
        Public Property CodTipoValor() As String
            Get
                Return Me._CodTipoValor
            End Get
            Set
                If (String.Equals(Me._CodTipoValor, Value) = False) Then
                    Me.OnCodTipoValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CodTipoValor = Value
                    Me.SendPropertyChanged("CodTipoValor")
                    Me.OnCodTipoValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoValor", Storage:="_TipoValor", DbType:="Varchar(250) NOT NULL")>
        Public Property TipoValor() As String
            Get
                Return Me._TipoValor
            End Get
            Set
                If (String.Equals(Me._TipoValor, Value) = False) Then
                    Me.OnTipoValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoValor = Value
                    Me.SendPropertyChanged("TipoValor")
                    Me.OnTipoValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(25) NOT NULL")>
        Public Property CuentaContable() As String
            Get
                Return Me._CuentaContable
            End Get
            Set
                If (String.Equals(Me._CuentaContable, Value) = False) Then
                    Me.OnCuentaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaContable = Value
                    Me.SendPropertyChanged("CuentaContable")
                    Me.OnCuentaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActiva", Storage:="_EstaActiva", DbType:="Bit NULL")>
        Public Property EstaActiva() As System.Nullable(Of Boolean)
            Get
                Return Me._EstaActiva
            End Get
            Set
                If (Me._EstaActiva.Equals(Value) = False) Then
                    Me.OnEstaActivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EstaActiva = Value
                    Me.SendPropertyChanged("EstaActiva")
                    Me.OnEstaActivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInactivacion", Storage:="_FechaInactivacion", DbType:="DateTime NULL")>
        Public Property FechaInactivacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaInactivacion
            End Get
            Set
                If (Me._FechaInactivacion.Equals(Value) = False) Then
                    Me.OnFechaInactivacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInactivacion = Value
                    Me.SendPropertyChanged("FechaInactivacion")
                    Me.OnFechaInactivacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strActiva", Storage:="_Activa", DbType:="Varchar(25) NOT NULL")>
        Public Property Activa() As String
            Get
                Return Me._Activa
            End Get
            Set
                If (String.Equals(Me._Activa, Value) = False) Then
                    Me.OnActivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Activa = Value
                    Me.SendPropertyChanged("Activa")
                    Me.OnActivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblDinamicaContableConfigConceptosComunes")>
    Partial Public Class DinamicaContableConfigConceptosComunes
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _IdNormaContable As String

        Private _IdTipoInversion As String

        Private _IdDinamicaContableConfigNorma As System.Nullable(Of Integer)

        Private _IdConceptoContable As System.Nullable(Of Integer)

        Private _ConceptoContable As String

        Private _IdNaturaleza As System.Nullable(Of Integer)

        Private _Naturaleza As String

        Private _IdTipoCCosto As System.Nullable(Of Integer)

        Private _TipoCCosto As String

        Private _IdTipoTercero As System.Nullable(Of Integer)

        Private _TipoTercero As String

        Private _TipoValor As String

        Private _CuentaContable As String

        Private _FechaInactivacion As System.Nullable(Of Date)

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnIdNormaContableChanging(value As String)
        End Sub
        Partial Private Sub OnIdNormaContableChanged()
        End Sub
        Partial Private Sub OnIdTipoInversionChanging(value As String)
        End Sub
        Partial Private Sub OnIdTipoInversionChanged()
        End Sub
        Partial Private Sub OnIdDinamicaContableConfigNormaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdDinamicaContableConfigNormaChanged()
        End Sub
        Partial Private Sub OnIdConceptoContableChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdConceptoContableChanged()
        End Sub
        Partial Private Sub OnConceptoContableChanging(value As String)
        End Sub
        Partial Private Sub OnConceptoContableChanged()
        End Sub
        Partial Private Sub OnIdNaturalezaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdNaturalezaChanged()
        End Sub
        Partial Private Sub OnNaturalezaChanging(value As String)
        End Sub
        Partial Private Sub OnNaturalezaChanged()
        End Sub
        Partial Private Sub OnIdTipoCCostoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdTipoCCostoChanged()
        End Sub
        Partial Private Sub OnTipoCCostoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoCCostoChanged()
        End Sub
        Partial Private Sub OnIdTipoTerceroChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdTipoTerceroChanged()
        End Sub
        Partial Private Sub OnTipoTerceroChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTerceroChanged()
        End Sub
        Partial Private Sub OnTipoValorChanging(value As String)
        End Sub
        Partial Private Sub OnTipoValorChanged()
        End Sub
        Partial Private Sub OnCuentaContableChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaContableChanged()
        End Sub
        Partial Private Sub OnFechaInactivacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaInactivacionChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intId", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdNormaContable", Storage:="_IdNormaContable", DbType:="Varchar(25) NOT NULL")>
        Public Property IdNormaContable() As String
            Get
                Return Me._IdNormaContable
            End Get
            Set
                If (String.Equals(Me._IdNormaContable, Value) = False) Then
                    Me.OnIdNormaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdNormaContable = Value
                    Me.SendPropertyChanged("IdNormaContable")
                    Me.OnIdNormaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdTipoInversion", Storage:="_IdTipoInversion", DbType:="Varchar(25) NOT NULL")>
        Public Property IdTipoInversion() As String
            Get
                Return Me._IdTipoInversion
            End Get
            Set
                If (String.Equals(Me._IdTipoInversion, Value) = False) Then
                    Me.OnIdTipoInversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdTipoInversion = Value
                    Me.SendPropertyChanged("IdTipoInversion")
                    Me.OnIdTipoInversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDinamicaContableConfig", Storage:="_IdDinamicaContableConfigNorma", DbType:="Int NOT NULL")>
        Public Property IdDinamicaContableConfigNorma() As System.Nullable(Of Integer)
            Get
                Return Me._IdDinamicaContableConfigNorma
            End Get
            Set
                If (Me._IdDinamicaContableConfigNorma.Equals(Value) = False) Then
                    Me.OnIdDinamicaContableConfigNormaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDinamicaContableConfigNorma = Value
                    Me.SendPropertyChanged("IdDinamicaContableConfigNorma")
                    Me.OnIdDinamicaContableConfigNormaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdConceptoContable", Storage:="_IdConceptoContable", DbType:="Int NOT NULL")>
        Public Property IdConceptoContable() As System.Nullable(Of Integer)
            Get
                Return Me._IdConceptoContable
            End Get
            Set
                If (Me._IdConceptoContable.Equals(Value) = False) Then
                    Me.OnIdConceptoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdConceptoContable = Value
                    Me.SendPropertyChanged("IdConceptoContable")
                    Me.OnIdConceptoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConceptoContable", Storage:="_ConceptoContable", DbType:="Varchar(250) NULL")>
        Public Property ConceptoContable() As String
            Get
                Return Me._ConceptoContable
            End Get
            Set
                If (String.Equals(Me._ConceptoContable, Value) = False) Then
                    Me.OnConceptoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ConceptoContable = Value
                    Me.SendPropertyChanged("ConceptoContable")
                    Me.OnConceptoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdNaturaleza", Storage:="_IdNaturaleza", DbType:="Int NOT NULL")>
        Public Property IdNaturaleza() As System.Nullable(Of Integer)
            Get
                Return Me._IdNaturaleza
            End Get
            Set
                If (Me._IdNaturaleza.Equals(Value) = False) Then
                    Me.OnIdNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdNaturaleza = Value
                    Me.SendPropertyChanged("IdNaturaleza")
                    Me.OnIdNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNaturaleza", Storage:="_Naturaleza", DbType:="Varchar(50) NOT NULL")>
        Public Property Naturaleza() As String
            Get
                Return Me._Naturaleza
            End Get
            Set
                If (String.Equals(Me._Naturaleza, Value) = False) Then
                    Me.OnNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Naturaleza = Value
                    Me.SendPropertyChanged("Naturaleza")
                    Me.OnNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoCCosto", Storage:="_IdTipoCCosto", DbType:="Int NOT NULL")>
        Public Property IdTipoCCosto() As System.Nullable(Of Integer)
            Get
                Return Me._IdTipoCCosto
            End Get
            Set
                If (Me._IdTipoCCosto.Equals(Value) = False) Then
                    Me.OnIdTipoCCostoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdTipoCCosto = Value
                    Me.SendPropertyChanged("IdTipoCCosto")
                    Me.OnIdTipoCCostoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCCosto", Storage:="_TipoCCosto", DbType:="Varchar(250) NOT NULL")>
        Public Property TipoCCosto() As String
            Get
                Return Me._TipoCCosto
            End Get
            Set
                If (String.Equals(Me._TipoCCosto, Value) = False) Then
                    Me.OnTipoCCostoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoCCosto = Value
                    Me.SendPropertyChanged("TipoCCosto")
                    Me.OnTipoCCostoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoTercero", Storage:="_IdTipoTercero", DbType:="Int NOT NULL")>
        Public Property IdTipoTercero() As System.Nullable(Of Integer)
            Get
                Return Me._IdTipoTercero
            End Get
            Set
                If (Me._IdTipoTercero.Equals(Value) = False) Then
                    Me.OnIdTipoTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdTipoTercero = Value
                    Me.SendPropertyChanged("IdTipoTercero")
                    Me.OnIdTipoTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTercero", Storage:="_TipoTercero", DbType:="Varchar(250) NOT NULL")>
        Public Property TipoTercero() As String
            Get
                Return Me._TipoTercero
            End Get
            Set
                If (String.Equals(Me._TipoTercero, Value) = False) Then
                    Me.OnTipoTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTercero = Value
                    Me.SendPropertyChanged("TipoTercero")
                    Me.OnTipoTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoValor", Storage:="_TipoValor", DbType:="Varchar(250) NOT NULL")>
        Public Property TipoValor() As String
            Get
                Return Me._TipoValor
            End Get
            Set
                If (String.Equals(Me._TipoValor, Value) = False) Then
                    Me.OnTipoValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoValor = Value
                    Me.SendPropertyChanged("TipoValor")
                    Me.OnTipoValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(25) NOT NULL")>
        Public Property CuentaContable() As String
            Get
                Return Me._CuentaContable
            End Get
            Set
                If (String.Equals(Me._CuentaContable, Value) = False) Then
                    Me.OnCuentaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaContable = Value
                    Me.SendPropertyChanged("CuentaContable")
                    Me.OnCuentaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaInactivacion", Storage:="_FechaInactivacion", DbType:="DateTime NULL")>
        Public Property FechaInactivacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaInactivacion
            End Get
            Set
                If (Me._FechaInactivacion.Equals(Value) = False) Then
                    Me.OnFechaInactivacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaInactivacion = Value
                    Me.SendPropertyChanged("FechaInactivacion")
                    Me.OnFechaInactivacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblDinamicaContableConfigConceptosEspecificos")>
    Partial Public Class DinamicaContableConfigConceptosEspecificos
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IdConceptoContable As Integer

        Private _IdClaseContable As String

        Private _ConceptoContable As String

        Private _IdNaturaleza As System.Nullable(Of Integer)

        Private _Naturaleza As String

        Private _IdTipoCCosto As System.Nullable(Of Integer)

        Private _TipoCCosto As String

        Private _IdTipoTercero As System.Nullable(Of Integer)

        Private _TipoTercero As String

        Private _CuentaContable As String

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdConceptoContableChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdConceptoContableChanged()
        End Sub
        Partial Private Sub OnIdClaseContableChanging(value As String)
        End Sub
        Partial Private Sub OnIdClaseContableChanged()
        End Sub
        Partial Private Sub OnConceptoContableChanging(value As String)
        End Sub
        Partial Private Sub OnConceptoContableChanged()
        End Sub
        Partial Private Sub OnIdNaturalezaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdNaturalezaChanged()
        End Sub
        Partial Private Sub OnNaturalezaChanging(value As String)
        End Sub
        Partial Private Sub OnNaturalezaChanged()
        End Sub
        Partial Private Sub OnIdTipoCCostoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdTipoCCostoChanged()
        End Sub
        Partial Private Sub OnTipoCCostoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoCCostoChanged()
        End Sub
        Partial Private Sub OnIdTipoTerceroChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdTipoTerceroChanged()
        End Sub
        Partial Private Sub OnTipoTerceroChanging(value As String)
        End Sub
        Partial Private Sub OnTipoTerceroChanged()
        End Sub
        Partial Private Sub OnCuentaContableChanging(value As String)
        End Sub
        Partial Private Sub OnCuentaContableChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdConceptoContable", Storage:="_IdConceptoContable", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IdConceptoContable() As Integer
            Get
                Return Me._IdConceptoContable
            End Get
            Set
                If ((Me._IdConceptoContable = Value) _
                            = False) Then
                    Me.OnIdConceptoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdConceptoContable = Value
                    Me.SendPropertyChanged("IdConceptoContable")
                    Me.OnIdConceptoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdClaseContable", Storage:="_IdClaseContable", DbType:="Varchar(50) NOT NULL")>
        Public Property IdClaseContable() As String
            Get
                Return Me._IdClaseContable
            End Get
            Set
                If (String.Equals(Me._IdClaseContable, Value) = False) Then
                    Me.OnIdClaseContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdClaseContable = Value
                    Me.SendPropertyChanged("IdClaseContable")
                    Me.OnIdClaseContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strConceptoContable", Storage:="_ConceptoContable", DbType:="Varchar(250) NULL")>
        Public Property ConceptoContable() As String
            Get
                Return Me._ConceptoContable
            End Get
            Set
                If (String.Equals(Me._ConceptoContable, Value) = False) Then
                    Me.OnConceptoContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ConceptoContable = Value
                    Me.SendPropertyChanged("ConceptoContable")
                    Me.OnConceptoContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdNaturaleza", Storage:="_IdNaturaleza", DbType:="Int NOT NULL")>
        Public Property IdNaturaleza() As System.Nullable(Of Integer)
            Get
                Return Me._IdNaturaleza
            End Get
            Set
                If (Me._IdNaturaleza.Equals(Value) = False) Then
                    Me.OnIdNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdNaturaleza = Value
                    Me.SendPropertyChanged("IdNaturaleza")
                    Me.OnIdNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNaturaleza", Storage:="_Naturaleza", DbType:="Varchar(50) NOT NULL")>
        Public Property Naturaleza() As String
            Get
                Return Me._Naturaleza
            End Get
            Set
                If (String.Equals(Me._Naturaleza, Value) = False) Then
                    Me.OnNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Naturaleza = Value
                    Me.SendPropertyChanged("Naturaleza")
                    Me.OnNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoCCosto", Storage:="_IdTipoCCosto", DbType:="Int NOT NULL")>
        Public Property IdTipoCCosto() As System.Nullable(Of Integer)
            Get
                Return Me._IdTipoCCosto
            End Get
            Set
                If (Me._IdTipoCCosto.Equals(Value) = False) Then
                    Me.OnIdTipoCCostoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdTipoCCosto = Value
                    Me.SendPropertyChanged("IdTipoCCosto")
                    Me.OnIdTipoCCostoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCCosto", Storage:="_TipoCCosto", DbType:="Varchar(250) NOT NULL")>
        Public Property TipoCCosto() As String
            Get
                Return Me._TipoCCosto
            End Get
            Set
                If (String.Equals(Me._TipoCCosto, Value) = False) Then
                    Me.OnTipoCCostoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoCCosto = Value
                    Me.SendPropertyChanged("TipoCCosto")
                    Me.OnTipoCCostoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdTipoTercero", Storage:="_IdTipoTercero", DbType:="Int NOT NULL")>
        Public Property IdTipoTercero() As System.Nullable(Of Integer)
            Get
                Return Me._IdTipoTercero
            End Get
            Set
                If (Me._IdTipoTercero.Equals(Value) = False) Then
                    Me.OnIdTipoTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdTipoTercero = Value
                    Me.SendPropertyChanged("IdTipoTercero")
                    Me.OnIdTipoTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTercero", Storage:="_TipoTercero", DbType:="Varchar(250) NOT NULL")>
        Public Property TipoTercero() As String
            Get
                Return Me._TipoTercero
            End Get
            Set
                If (String.Equals(Me._TipoTercero, Value) = False) Then
                    Me.OnTipoTerceroChanging(Value)
                    Me.SendPropertyChanging()
                    Me._TipoTercero = Value
                    Me.SendPropertyChanged("TipoTercero")
                    Me.OnTipoTerceroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCuentaContable", Storage:="_CuentaContable", DbType:="Varchar(25) NOT NULL")>
        Public Property CuentaContable() As String
            Get
                Return Me._CuentaContable
            End Get
            Set
                If (String.Equals(Me._CuentaContable, Value) = False) Then
                    Me.OnCuentaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._CuentaContable = Value
                    Me.SendPropertyChanged("CuentaContable")
                    Me.OnCuentaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblDinamicaContableListas")>
    Partial Public Class DinamicaContableListas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IdLista As Integer

        Private _IdDependeDe As System.Nullable(Of Integer)

        Private _Codigo As String

        Private _Descripcion As String

        Private _Topico As String

        Private _FechaActualizacion As System.Nullable(Of Date)

        Private _Usuario As String

        Private _InfoSesion As String

        Private _MsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIdListaChanging(value As Integer)
        End Sub
        Partial Private Sub OnIdListaChanged()
        End Sub
        Partial Private Sub OnIdDependeDeChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIdDependeDeChanged()
        End Sub
        Partial Private Sub OnCodigoChanging(value As String)
        End Sub
        Partial Private Sub OnCodigoChanged()
        End Sub
        Partial Private Sub OnDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnDescripcionChanged()
        End Sub
        Partial Private Sub OnTopicoChanging(value As String)
        End Sub
        Partial Private Sub OnTopicoChanged()
        End Sub
        Partial Private Sub OnFechaActualizacionChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnFechaActualizacionChanged()
        End Sub
        Partial Private Sub OnUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdLista", Storage:="_IdLista", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IdLista() As Integer
            Get
                Return Me._IdLista
            End Get
            Set
                If ((Me._IdLista = Value) _
                            = False) Then
                    Me.OnIdListaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdLista = Value
                    Me.SendPropertyChanged("IdLista")
                    Me.OnIdListaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdDependeDe", Storage:="_IdDependeDe", DbType:="Int NULL")>
        Public Property IdDependeDe() As System.Nullable(Of Integer)
            Get
                Return Me._IdDependeDe
            End Get
            Set
                If (Me._IdDependeDe.Equals(Value) = False) Then
                    Me.OnIdDependeDeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IdDependeDe = Value
                    Me.SendPropertyChanged("IdDependeDe")
                    Me.OnIdDependeDeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigo", Storage:="_Codigo", DbType:="Varchar(50) NULL")>
        Public Property Codigo() As String
            Get
                Return Me._Codigo
            End Get
            Set
                If (String.Equals(Me._Codigo, Value) = False) Then
                    Me.OnCodigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Codigo = Value
                    Me.SendPropertyChanged("Codigo")
                    Me.OnCodigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(250) NULL")>
        Public Property Descripcion() As String
            Get
                Return Me._Descripcion
            End Get
            Set
                If (String.Equals(Me._Descripcion, Value) = False) Then
                    Me.OnDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Descripcion = Value
                    Me.SendPropertyChanged("Descripcion")
                    Me.OnDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTopico", Storage:="_Topico", DbType:="Varchar(50) NULL")>
        Public Property Topico() As String
            Get
                Return Me._Topico
            End Get
            Set
                If (String.Equals(Me._Topico, Value) = False) Then
                    Me.OnTopicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Topico = Value
                    Me.SendPropertyChanged("Topico")
                    Me.OnTopicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_FechaActualizacion", DbType:="DateTime NULL")>
        Public Property FechaActualizacion() As System.Nullable(Of Date)
            Get
                Return Me._FechaActualizacion
            End Get
            Set
                If (Me._FechaActualizacion.Equals(Value) = False) Then
                    Me.OnFechaActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._FechaActualizacion = Value
                    Me.SendPropertyChanged("FechaActualizacion")
                    Me.OnFechaActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL")>
        Public Property Usuario() As String
            Get
                Return Me._Usuario
            End Get
            Set
                If (String.Equals(Me._Usuario, Value) = False) Then
                    Me.OnUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Usuario = Value
                    Me.SendPropertyChanged("Usuario")
                    Me.OnUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInfoSesion", Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsgValidacion", Storage:="_MsgValidacion", DbType:="Varchar(8000)")>
        Public Property MsgValidacion() As String
            Get
                Return Me._MsgValidacion
            End Get
            Set
                If (String.Equals(Me._MsgValidacion, Value) = False) Then
                    Me.OnMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._MsgValidacion = Value
                    Me.SendPropertyChanged("MsgValidacion")
                    Me.OnMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblConfiguracionContableXModulo")>
    Partial Public Class ConfiguracionContableXModulo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _IntId As Integer

        Private _intPadre As System.Nullable(Of Integer)

        Private _strRetorno As String

        Private _strTopico As String

        Private _strUsuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIntIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnIntIdChanged()
        End Sub
        Partial Private Sub OnintPadreChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintPadreChanged()
        End Sub
        Partial Private Sub OnstrRetornoChanging(value As String)
        End Sub
        Partial Private Sub OnstrRetornoChanged()
        End Sub
        Partial Private Sub OnstrTopicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTopicoChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property IntId() As Integer
            Get
                Return Me._IntId
            End Get
            Set
                If ((Me._IntId = Value) _
                            = False) Then
                    Me.OnIntIdChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IntId = Value
                    Me.SendPropertyChanged("IntId")
                    Me.OnIntIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intPadre", DbType:="Int NULL")>
        Public Property intPadre() As System.Nullable(Of Integer)
            Get
                Return Me._intPadre
            End Get
            Set
                If (Me._intPadre.Equals(Value) = False) Then
                    Me.OnintPadreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intPadre = Value
                    Me.SendPropertyChanged("intPadre")
                    Me.OnintPadreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strRetorno", DbType:="Varchar(80) NOT NULL")>
        Public Property strRetorno() As String
            Get
                Return Me._strRetorno
            End Get
            Set
                If (String.Equals(Me._strRetorno, Value) = False) Then
                    Me.OnstrRetornoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strRetorno = Value
                    Me.SendPropertyChanged("strRetorno")
                    Me.OnstrRetornoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTopico", DbType:="Varchar(50) NULL")>
        Public Property strTopico() As String
            Get
                Return Me._strTopico
            End Get
            Set
                If (String.Equals(Me._strTopico, Value) = False) Then
                    Me.OnstrTopicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTopico = Value
                    Me.SendPropertyChanged("strTopico")
                    Me.OnstrTopicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblConfiguracionContable")>
    Partial Public Class CodificacionContable
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intID As Integer

        Private _strDescripcionNormaContable As String

        Private _strNormaContable As String

        Private _strModulo As String

        Private _intModulo As System.Nullable(Of Integer)

        Private _srtNegocio As String

        Private _intNegocio As System.Nullable(Of Integer)

        Private _strOperacion As String

        Private _intOperacion As System.Nullable(Of Integer)

        Private _strDuracion As String

        Private _intDuracion As System.Nullable(Of Integer)

        Private _strTipoFecha As String

        Private _intTipoFecha As System.Nullable(Of Integer)

        Private _strDescripcionTipoProducto As String

        Private _intTipoProducto As System.Nullable(Of Integer)

        Private _strDescripcionTipoInversion As String

        Private _strTipoInversion As String

        Private _strIdMoneda As String

        Private _lngIdMoneda As System.Nullable(Of Integer)

        Private _dtmFechaInicio As System.Nullable(Of Date)

        Private _logActivo As System.Nullable(Of Integer)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OnstrDescripcionNormaContableChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionNormaContableChanged()
        End Sub
        Partial Private Sub OnstrNormaContableChanging(value As String)
        End Sub
        Partial Private Sub OnstrNormaContableChanged()
        End Sub
        Partial Private Sub OnstrModuloChanging(value As String)
        End Sub
        Partial Private Sub OnstrModuloChanged()
        End Sub
        Partial Private Sub OnintModuloChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintModuloChanged()
        End Sub
        Partial Private Sub OnsrtNegocioChanging(value As String)
        End Sub
        Partial Private Sub OnsrtNegocioChanged()
        End Sub
        Partial Private Sub OnintNegocioChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintNegocioChanged()
        End Sub
        Partial Private Sub OnstrOperacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrOperacionChanged()
        End Sub
        Partial Private Sub OnintOperacionChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintOperacionChanged()
        End Sub
        Partial Private Sub OnstrDuracionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDuracionChanged()
        End Sub
        Partial Private Sub OnintDuracionChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintDuracionChanged()
        End Sub
        Partial Private Sub OnstrTipoFechaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoFechaChanged()
        End Sub
        Partial Private Sub OnintTipoFechaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintTipoFechaChanged()
        End Sub
        Partial Private Sub OnstrDescripcionTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionTipoProductoChanged()
        End Sub
        Partial Private Sub OnintTipoProductoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintTipoProductoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionTipoInversionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionTipoInversionChanged()
        End Sub
        Partial Private Sub OnstrTipoInversionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoInversionChanged()
        End Sub
        Partial Private Sub OnstrIdMonedaChanging(value As String)
        End Sub
        Partial Private Sub OnstrIdMonedaChanged()
        End Sub
        Partial Private Sub OnlngIdMonedaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIdMonedaChanged()
        End Sub
        Partial Private Sub OndtmFechaInicioChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OndtmFechaInicioChanged()
        End Sub
        Partial Private Sub OnlogActivoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlogActivoChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intID() As Integer
            Get
                Return Me._intID
            End Get
            Set
                If ((Me._intID = Value) _
                            = False) Then
                    Me.OnintIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intID = Value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionNormaContable", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionNormaContable() As String
            Get
                Return Me._strDescripcionNormaContable
            End Get
            Set
                If (String.Equals(Me._strDescripcionNormaContable, Value) = False) Then
                    Me.OnstrDescripcionNormaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionNormaContable = Value
                    Me.SendPropertyChanged("strDescripcionNormaContable")
                    Me.OnstrDescripcionNormaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNormaContable", DbType:="Varchar(2) NOT NULL")>
        Public Property strNormaContable() As String
            Get
                Return Me._strNormaContable
            End Get
            Set
                If (String.Equals(Me._strNormaContable, Value) = False) Then
                    Me.OnstrNormaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNormaContable = Value
                    Me.SendPropertyChanged("strNormaContable")
                    Me.OnstrNormaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModulo", DbType:="Varchar(80) NOT NULL")>
        Public Property strModulo() As String
            Get
                Return Me._strModulo
            End Get
            Set
                If (String.Equals(Me._strModulo, Value) = False) Then
                    Me.OnstrModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModulo = Value
                    Me.SendPropertyChanged("strModulo")
                    Me.OnstrModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intModulo", DbType:="Int NOT NULL")>
        Public Property intModulo() As System.Nullable(Of Integer)
            Get
                Return Me._intModulo
            End Get
            Set
                If (Me._intModulo.Equals(Value) = False) Then
                    Me.OnintModuloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intModulo = Value
                    Me.SendPropertyChanged("intModulo")
                    Me.OnintModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_srtNegocio", DbType:="Varchar(80) NOT NULL")>
        Public Property srtNegocio() As String
            Get
                Return Me._srtNegocio
            End Get
            Set
                If (String.Equals(Me._srtNegocio, Value) = False) Then
                    Me.OnsrtNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._srtNegocio = Value
                    Me.SendPropertyChanged("srtNegocio")
                    Me.OnsrtNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intNegocio", DbType:="Int NOT NULL")>
        Public Property intNegocio() As System.Nullable(Of Integer)
            Get
                Return Me._intNegocio
            End Get
            Set
                If (Me._intNegocio.Equals(Value) = False) Then
                    Me.OnintNegocioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intNegocio = Value
                    Me.SendPropertyChanged("intNegocio")
                    Me.OnintNegocioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOperacion", DbType:="Varchar(80) NOT NULL")>
        Public Property strOperacion() As String
            Get
                Return Me._strOperacion
            End Get
            Set
                If (String.Equals(Me._strOperacion, Value) = False) Then
                    Me.OnstrOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strOperacion = Value
                    Me.SendPropertyChanged("strOperacion")
                    Me.OnstrOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intOperacion", DbType:="Int NOT NULL")>
        Public Property intOperacion() As System.Nullable(Of Integer)
            Get
                Return Me._intOperacion
            End Get
            Set
                If (Me._intOperacion.Equals(Value) = False) Then
                    Me.OnintOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intOperacion = Value
                    Me.SendPropertyChanged("intOperacion")
                    Me.OnintOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDuracion", DbType:="Varchar(80) NOT NULL")>
        Public Property strDuracion() As String
            Get
                Return Me._strDuracion
            End Get
            Set
                If (String.Equals(Me._strDuracion, Value) = False) Then
                    Me.OnstrDuracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDuracion = Value
                    Me.SendPropertyChanged("strDuracion")
                    Me.OnstrDuracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intDuracion", DbType:="Int NOT NULL")>
        Public Property intDuracion() As System.Nullable(Of Integer)
            Get
                Return Me._intDuracion
            End Get
            Set
                If (Me._intDuracion.Equals(Value) = False) Then
                    Me.OnintDuracionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intDuracion = Value
                    Me.SendPropertyChanged("intDuracion")
                    Me.OnintDuracionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoFecha", DbType:="Varchar(80) NOT NULL")>
        Public Property strTipoFecha() As String
            Get
                Return Me._strTipoFecha
            End Get
            Set
                If (String.Equals(Me._strTipoFecha, Value) = False) Then
                    Me.OnstrTipoFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoFecha = Value
                    Me.SendPropertyChanged("strTipoFecha")
                    Me.OnstrTipoFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intTipoFecha", DbType:="Int NOT NULL")>
        Public Property intTipoFecha() As System.Nullable(Of Integer)
            Get
                Return Me._intTipoFecha
            End Get
            Set
                If (Me._intTipoFecha.Equals(Value) = False) Then
                    Me.OnintTipoFechaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intTipoFecha = Value
                    Me.SendPropertyChanged("intTipoFecha")
                    Me.OnintTipoFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoProducto", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionTipoProducto() As String
            Get
                Return Me._strDescripcionTipoProducto
            End Get
            Set
                If (String.Equals(Me._strDescripcionTipoProducto, Value) = False) Then
                    Me.OnstrDescripcionTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionTipoProducto = Value
                    Me.SendPropertyChanged("strDescripcionTipoProducto")
                    Me.OnstrDescripcionTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intTipoProducto", DbType:="INT NOT NULL")>
        Public Property intTipoProducto() As System.Nullable(Of Integer)
            Get
                Return Me._intTipoProducto
            End Get
            Set
                If (Me._intTipoProducto.Equals(Value) = False) Then
                    Me.OnintTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intTipoProducto = Value
                    Me.SendPropertyChanged("intTipoProducto")
                    Me.OnintTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoInversion", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionTipoInversion() As String
            Get
                Return Me._strDescripcionTipoInversion
            End Get
            Set
                If (String.Equals(Me._strDescripcionTipoInversion, Value) = False) Then
                    Me.OnstrDescripcionTipoInversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionTipoInversion = Value
                    Me.SendPropertyChanged("strDescripcionTipoInversion")
                    Me.OnstrDescripcionTipoInversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoInversion", DbType:="Varchar(80) NOT NULL")>
        Public Property strTipoInversion() As String
            Get
                Return Me._strTipoInversion
            End Get
            Set
                If (String.Equals(Me._strTipoInversion, Value) = False) Then
                    Me.OnstrTipoInversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoInversion = Value
                    Me.SendPropertyChanged("strTipoInversion")
                    Me.OnstrTipoInversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIdMoneda", DbType:="Varchar(5) NOT NULL")>
        Public Property strIdMoneda() As String
            Get
                Return Me._strIdMoneda
            End Get
            Set
                If (String.Equals(Me._strIdMoneda, Value) = False) Then
                    Me.OnstrIdMonedaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIdMoneda = Value
                    Me.SendPropertyChanged("strIdMoneda")
                    Me.OnstrIdMonedaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdMoneda", DbType:="Int NOT NULL")>
        Public Property lngIdMoneda() As System.Nullable(Of Integer)
            Get
                Return Me._lngIdMoneda
            End Get
            Set
                If (Me._lngIdMoneda.Equals(Value) = False) Then
                    Me.OnlngIdMonedaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdMoneda = Value
                    Me.SendPropertyChanged("lngIdMoneda")
                    Me.OnlngIdMonedaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaInicio", DbType:="Datetime NOT NULL")>
        Public Property dtmFechaInicio() As System.Nullable(Of Date)
            Get
                Return Me._dtmFechaInicio
            End Get
            Set
                If (Me._dtmFechaInicio.Equals(Value) = False) Then
                    Me.OndtmFechaInicioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaInicio = Value
                    Me.SendPropertyChanged("dtmFechaInicio")
                    Me.OndtmFechaInicioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="Int NOT NULL")>
        Public Property logActivo() As System.Nullable(Of Integer)
            Get
                Return Me._logActivo
            End Get
            Set
                If (Me._logActivo.Equals(Value) = False) Then
                    Me.OnlogActivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logActivo = Value
                    Me.SendPropertyChanged("logActivo")
                    Me.OnlogActivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblConfiguracionContableDetalle")>
    Partial Public Class CodificacionContableDetalle
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intID As Integer

        Private _strDescripcionNormaContable As String

        Private _intContableConcepto As System.Nullable(Of Integer)

        Private _strDescripcionValor As String

        Private _strValor As String

        Private _strDescripcionNIT As String

        Private _strNIT As String

        Private _strCtaContable As String

        Private _strDescripcionCentroCostos As String

        Private _strCentroCostos As String

        Private _strComprobante As String

        Private _strDescripcionNaturaleza As String

        Private _strNaturaleza As String

        Private _strDetalle As String

        Private _strDocReferencia As String

        Private _strDescripcionNitExterno As String

        Private _strNitExterno As String

        Private _strCamposTotalizados As String

        Private _strCentroCostosFijo As String

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OnstrDescripcionNormaContableChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionNormaContableChanged()
        End Sub
        Partial Private Sub OnintContableConceptoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintContableConceptoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionValorChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionValorChanged()
        End Sub
        Partial Private Sub OnstrValorChanging(value As String)
        End Sub
        Partial Private Sub OnstrValorChanged()
        End Sub
        Partial Private Sub OnstrDescripcionNITChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionNITChanged()
        End Sub
        Partial Private Sub OnstrNITChanging(value As String)
        End Sub
        Partial Private Sub OnstrNITChanged()
        End Sub
        Partial Private Sub OnstrCtaContableChanging(value As String)
        End Sub
        Partial Private Sub OnstrCtaContableChanged()
        End Sub
        Partial Private Sub OnstrDescripcionCentroCostosChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionCentroCostosChanged()
        End Sub
        Partial Private Sub OnstrCentroCostosChanging(value As String)
        End Sub
        Partial Private Sub OnstrCentroCostosChanged()
        End Sub
        Partial Private Sub OnstrComprobanteChanging(value As String)
        End Sub
        Partial Private Sub OnstrComprobanteChanged()
        End Sub
        Partial Private Sub OnstrDescripcionNaturalezaChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionNaturalezaChanged()
        End Sub
        Partial Private Sub OnstrNaturalezaChanging(value As String)
        End Sub
        Partial Private Sub OnstrNaturalezaChanged()
        End Sub
        Partial Private Sub OnstrDetalleChanging(value As String)
        End Sub
        Partial Private Sub OnstrDetalleChanged()
        End Sub
        Partial Private Sub OnstrDocReferenciaChanging(value As String)
        End Sub
        Partial Private Sub OnstrDocReferenciaChanged()
        End Sub
        Partial Private Sub OnstrDescripcionNitExternoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionNitExternoChanged()
        End Sub
        Partial Private Sub OnstrNitExternoChanging(value As String)
        End Sub
        Partial Private Sub OnstrNitExternoChanged()
        End Sub
        Partial Private Sub OnstrCamposTotalizadosChanging(value As String)
        End Sub
        Partial Private Sub OnstrCamposTotalizadosChanged()
        End Sub
        Partial Private Sub OnstrCentroCostosFijoChanging(value As String)
        End Sub
        Partial Private Sub OnstrCentroCostosFijoChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intID() As Integer
            Get
                Return Me._intID
            End Get
            Set
                If ((Me._intID = Value) _
                            = False) Then
                    Me.OnintIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intID = Value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionNormaContable", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionNormaContable() As String
            Get
                Return Me._strDescripcionNormaContable
            End Get
            Set
                If (String.Equals(Me._strDescripcionNormaContable, Value) = False) Then
                    Me.OnstrDescripcionNormaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionNormaContable = Value
                    Me.SendPropertyChanged("strDescripcionNormaContable")
                    Me.OnstrDescripcionNormaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intContableConcepto", DbType:="Int NOT NULL")>
        Public Property intContableConcepto() As System.Nullable(Of Integer)
            Get
                Return Me._intContableConcepto
            End Get
            Set
                If (Me._intContableConcepto.Equals(Value) = False) Then
                    Me.OnintContableConceptoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intContableConcepto = Value
                    Me.SendPropertyChanged("intContableConcepto")
                    Me.OnintContableConceptoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionValor", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionValor() As String
            Get
                Return Me._strDescripcionValor
            End Get
            Set
                If (String.Equals(Me._strDescripcionValor, Value) = False) Then
                    Me.OnstrDescripcionValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionValor = Value
                    Me.SendPropertyChanged("strDescripcionValor")
                    Me.OnstrDescripcionValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strValor", DbType:="Varchar(80) NOT NULL")>
        Public Property strValor() As String
            Get
                Return Me._strValor
            End Get
            Set
                If (String.Equals(Me._strValor, Value) = False) Then
                    Me.OnstrValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strValor = Value
                    Me.SendPropertyChanged("strValor")
                    Me.OnstrValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionNIT", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionNIT() As String
            Get
                Return Me._strDescripcionNIT
            End Get
            Set
                If (String.Equals(Me._strDescripcionNIT, Value) = False) Then
                    Me.OnstrDescripcionNITChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionNIT = Value
                    Me.SendPropertyChanged("strDescripcionNIT")
                    Me.OnstrDescripcionNITChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNIT", DbType:="Varchar(80) NOT NULL")>
        Public Property strNIT() As String
            Get
                Return Me._strNIT
            End Get
            Set
                If (String.Equals(Me._strNIT, Value) = False) Then
                    Me.OnstrNITChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNIT = Value
                    Me.SendPropertyChanged("strNIT")
                    Me.OnstrNITChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCtaContable", DbType:="Varchar(80) NOT NULL")>
        Public Property strCtaContable() As String
            Get
                Return Me._strCtaContable
            End Get
            Set
                If (String.Equals(Me._strCtaContable, Value) = False) Then
                    Me.OnstrCtaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCtaContable = Value
                    Me.SendPropertyChanged("strCtaContable")
                    Me.OnstrCtaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionCentroCostos", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionCentroCostos() As String
            Get
                Return Me._strDescripcionCentroCostos
            End Get
            Set
                If (String.Equals(Me._strDescripcionCentroCostos, Value) = False) Then
                    Me.OnstrDescripcionCentroCostosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionCentroCostos = Value
                    Me.SendPropertyChanged("strDescripcionCentroCostos")
                    Me.OnstrDescripcionCentroCostosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCentroCostos", DbType:="Varchar(80) NOT NULL")>
        Public Property strCentroCostos() As String
            Get
                Return Me._strCentroCostos
            End Get
            Set
                If (String.Equals(Me._strCentroCostos, Value) = False) Then
                    Me.OnstrCentroCostosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCentroCostos = Value
                    Me.SendPropertyChanged("strCentroCostos")
                    Me.OnstrCentroCostosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strComprobante", DbType:="Varchar(50) NOT NULL")>
        Public Property strComprobante() As String
            Get
                Return Me._strComprobante
            End Get
            Set
                If (String.Equals(Me._strComprobante, Value) = False) Then
                    Me.OnstrComprobanteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strComprobante = Value
                    Me.SendPropertyChanged("strComprobante")
                    Me.OnstrComprobanteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionNaturaleza", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionNaturaleza() As String
            Get
                Return Me._strDescripcionNaturaleza
            End Get
            Set
                If (String.Equals(Me._strDescripcionNaturaleza, Value) = False) Then
                    Me.OnstrDescripcionNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionNaturaleza = Value
                    Me.SendPropertyChanged("strDescripcionNaturaleza")
                    Me.OnstrDescripcionNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNaturaleza", DbType:="Varchar(80) NOT NULL")>
        Public Property strNaturaleza() As String
            Get
                Return Me._strNaturaleza
            End Get
            Set
                If (String.Equals(Me._strNaturaleza, Value) = False) Then
                    Me.OnstrNaturalezaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNaturaleza = Value
                    Me.SendPropertyChanged("strNaturaleza")
                    Me.OnstrNaturalezaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDetalle", DbType:="Varchar(100) NOT NULL")>
        Public Property strDetalle() As String
            Get
                Return Me._strDetalle
            End Get
            Set
                If (String.Equals(Me._strDetalle, Value) = False) Then
                    Me.OnstrDetalleChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDetalle = Value
                    Me.SendPropertyChanged("strDetalle")
                    Me.OnstrDetalleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDocReferencia", DbType:="Varchar(80) NOT NULL")>
        Public Property strDocReferencia() As String
            Get
                Return Me._strDocReferencia
            End Get
            Set
                If (String.Equals(Me._strDocReferencia, Value) = False) Then
                    Me.OnstrDocReferenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDocReferencia = Value
                    Me.SendPropertyChanged("strDocReferencia")
                    Me.OnstrDocReferenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionNitExterno", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionNitExterno() As String
            Get
                Return Me._strDescripcionNitExterno
            End Get
            Set
                If (String.Equals(Me._strDescripcionNitExterno, Value) = False) Then
                    Me.OnstrDescripcionNitExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionNitExterno = Value
                    Me.SendPropertyChanged("strDescripcionNitExterno")
                    Me.OnstrDescripcionNitExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNitExterno", DbType:="Varchar(80) NOT NULL")>
        Public Property strNitExterno() As String
            Get
                Return Me._strNitExterno
            End Get
            Set
                If (String.Equals(Me._strNitExterno, Value) = False) Then
                    Me.OnstrNitExternoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNitExterno = Value
                    Me.SendPropertyChanged("strNitExterno")
                    Me.OnstrNitExternoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCamposTotalizados", DbType:="Varchar(50) NULL")>
        Public Property strCamposTotalizados() As String
            Get
                Return Me._strCamposTotalizados
            End Get
            Set
                If (String.Equals(Me._strCamposTotalizados, Value) = False) Then
                    Me.OnstrCamposTotalizadosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCamposTotalizados = Value
                    Me.SendPropertyChanged("strCamposTotalizados")
                    Me.OnstrCamposTotalizadosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCentroCostosFijo", DbType:="Varchar(20) NULL")>
        Public Property strCentroCostosFijo() As String
            Get
                Return Me._strCentroCostosFijo
            End Get
            Set
                If (String.Equals(Me._strCentroCostosFijo, Value) = False) Then
                    Me.OnstrCentroCostosFijoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCentroCostosFijo = Value
                    Me.SendPropertyChanged("strCentroCostosFijo")
                    Me.OnstrCentroCostosFijoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblConfiguracionContableXValor")>
    Partial Public Class ConfiguracionContableXValor
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDConfiguracionContableXValor As Integer

        Private _strTopico As String

        Private _strDescripcion As String

        Private _strRetorno As String

        Private _logTotalizado As System.Nullable(Of Boolean)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDConfiguracionContableXValorChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDConfiguracionContableXValorChanged()
        End Sub
        Partial Private Sub OnstrTopicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTopicoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionChanged()
        End Sub
        Partial Private Sub OnstrRetornoChanging(value As String)
        End Sub
        Partial Private Sub OnstrRetornoChanged()
        End Sub
        Partial Private Sub OnlogTotalizadoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogTotalizadoChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConfiguracionContableXValor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDConfiguracionContableXValor() As Integer
            Get
                Return Me._intIDConfiguracionContableXValor
            End Get
            Set
                If ((Me._intIDConfiguracionContableXValor = Value) _
                            = False) Then
                    Me.OnintIDConfiguracionContableXValorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDConfiguracionContableXValor = Value
                    Me.SendPropertyChanged("intIDConfiguracionContableXValor")
                    Me.OnintIDConfiguracionContableXValorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTopico", DbType:="Varchar(20) NOT NULL")>
        Public Property strTopico() As String
            Get
                Return Me._strTopico
            End Get
            Set
                If (String.Equals(Me._strTopico, Value) = False) Then
                    Me.OnstrTopicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTopico = Value
                    Me.SendPropertyChanged("strTopico")
                    Me.OnstrTopicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcion() As String
            Get
                Return Me._strDescripcion
            End Get
            Set
                If (String.Equals(Me._strDescripcion, Value) = False) Then
                    Me.OnstrDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcion = Value
                    Me.SendPropertyChanged("strDescripcion")
                    Me.OnstrDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strRetorno", DbType:="Varchar(80) NOT NULL")>
        Public Property strRetorno() As String
            Get
                Return Me._strRetorno
            End Get
            Set
                If (String.Equals(Me._strRetorno, Value) = False) Then
                    Me.OnstrRetornoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strRetorno = Value
                    Me.SendPropertyChanged("strRetorno")
                    Me.OnstrRetornoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logTotalizado", DbType:="Bit NOT NULL")>
        Public Property logTotalizado() As System.Nullable(Of Boolean)
            Get
                Return Me._logTotalizado
            End Get
            Set
                If (Me._logTotalizado.Equals(Value) = False) Then
                    Me.OnlogTotalizadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logTotalizado = Value
                    Me.SendPropertyChanged("logTotalizado")
                    Me.OnlogTotalizadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="TblConfiguracionContableConcepto")>
    Partial Public Class ConfiguracionContableConcepto
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intID As Integer

        Private _strConcepto As String

        Private _strDescripcionConcepto As String

        Private _strCuentaContableDBPositiva As String

        Private _strCuentaContableDBNegativa As String

        Private _strCuentaContableCRPositiva As String

        Private _strCuentaContableCRNegativa As String

        Private _strCuentaContableDBCompleta As String

        Private _strCuentaContableCRCompleta As String

        Private _strDetalleTipoTitulos As String

        Private _strTipoTitulos As String

        Private _intTipoProducto As System.Nullable(Of Integer)

        Private _strDetalleTipoProducto As String

        Private _strNormaContable As String

        Private _strNormaContableDescripcion As String

        Private _strTipoInversion As String

        Private _strDescripcionTipoInversion As String

        Private _dtmActualizacion As Date

        Private _strUsuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OnstrConceptoChanging(value As String)
        End Sub
        Partial Private Sub OnstrConceptoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionConceptoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionConceptoChanged()
        End Sub
        Partial Private Sub OnstrCuentaContableDBPositivaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCuentaContableDBPositivaChanged()
        End Sub
        Partial Private Sub OnstrCuentaContableDBNegativaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCuentaContableDBNegativaChanged()
        End Sub
        Partial Private Sub OnstrCuentaContableCRPositivaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCuentaContableCRPositivaChanged()
        End Sub
        Partial Private Sub OnstrCuentaContableCRNegativaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCuentaContableCRNegativaChanged()
        End Sub
        Partial Private Sub OnstrCuentaContableDBCompletaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCuentaContableDBCompletaChanged()
        End Sub
        Partial Private Sub OnstrCuentaContableCRCompletaChanging(value As String)
        End Sub
        Partial Private Sub OnstrCuentaContableCRCompletaChanged()
        End Sub
        Partial Private Sub OnstrDetalleTipoTitulosChanging(value As String)
        End Sub
        Partial Private Sub OnstrDetalleTipoTitulosChanged()
        End Sub
        Partial Private Sub OnstrTipoTitulosChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoTitulosChanged()
        End Sub
        Partial Private Sub OnintTipoProductoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintTipoProductoChanged()
        End Sub
        Partial Private Sub OnstrDetalleTipoProductoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDetalleTipoProductoChanged()
        End Sub
        Partial Private Sub OnstrNormaContableChanging(value As String)
        End Sub
        Partial Private Sub OnstrNormaContableChanged()
        End Sub
        Partial Private Sub OnstrNormaContableDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrNormaContableDescripcionChanged()
        End Sub
        Partial Private Sub OnstrTipoInversionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoInversionChanged()
        End Sub
        Partial Private Sub OnstrDescripcionTipoInversionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionTipoInversionChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As Date)
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intID() As Integer
            Get
                Return Me._intID
            End Get
            Set
                If ((Me._intID = Value) _
                            = False) Then
                    Me.OnintIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intID = Value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strConcepto", DbType:="Varchar(100) NOT NULL")>
        Public Property strConcepto() As String
            Get
                Return Me._strConcepto
            End Get
            Set
                If (String.Equals(Me._strConcepto, Value) = False) Then
                    Me.OnstrConceptoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strConcepto = Value
                    Me.SendPropertyChanged("strConcepto")
                    Me.OnstrConceptoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionConcepto", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionConcepto() As String
            Get
                Return Me._strDescripcionConcepto
            End Get
            Set
                If (String.Equals(Me._strDescripcionConcepto, Value) = False) Then
                    Me.OnstrDescripcionConceptoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionConcepto = Value
                    Me.SendPropertyChanged("strDescripcionConcepto")
                    Me.OnstrDescripcionConceptoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContableDBPositiva", DbType:="Varchar(20) NOT NULL")>
        Public Property strCuentaContableDBPositiva() As String
            Get
                Return Me._strCuentaContableDBPositiva
            End Get
            Set
                If (String.Equals(Me._strCuentaContableDBPositiva, Value) = False) Then
                    Me.OnstrCuentaContableDBPositivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCuentaContableDBPositiva = Value
                    Me.SendPropertyChanged("strCuentaContableDBPositiva")
                    Me.OnstrCuentaContableDBPositivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContableDBNegativa", DbType:="Varchar(20) NOT NULL")>
        Public Property strCuentaContableDBNegativa() As String
            Get
                Return Me._strCuentaContableDBNegativa
            End Get
            Set
                If (String.Equals(Me._strCuentaContableDBNegativa, Value) = False) Then
                    Me.OnstrCuentaContableDBNegativaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCuentaContableDBNegativa = Value
                    Me.SendPropertyChanged("strCuentaContableDBNegativa")
                    Me.OnstrCuentaContableDBNegativaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContableCRPositiva", DbType:="Varchar(20) NOT NULL")>
        Public Property strCuentaContableCRPositiva() As String
            Get
                Return Me._strCuentaContableCRPositiva
            End Get
            Set
                If (String.Equals(Me._strCuentaContableCRPositiva, Value) = False) Then
                    Me.OnstrCuentaContableCRPositivaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCuentaContableCRPositiva = Value
                    Me.SendPropertyChanged("strCuentaContableCRPositiva")
                    Me.OnstrCuentaContableCRPositivaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContableCRNegativa", DbType:="Varchar(20) NOT NULL")>
        Public Property strCuentaContableCRNegativa() As String
            Get
                Return Me._strCuentaContableCRNegativa
            End Get
            Set
                If (String.Equals(Me._strCuentaContableCRNegativa, Value) = False) Then
                    Me.OnstrCuentaContableCRNegativaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCuentaContableCRNegativa = Value
                    Me.SendPropertyChanged("strCuentaContableCRNegativa")
                    Me.OnstrCuentaContableCRNegativaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContableDBCompleta", DbType:="Varchar(41) NOT NULL")>
        Public Property strCuentaContableDBCompleta() As String
            Get
                Return Me._strCuentaContableDBCompleta
            End Get
            Set
                If (String.Equals(Me._strCuentaContableDBCompleta, Value) = False) Then
                    Me.OnstrCuentaContableDBCompletaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCuentaContableDBCompleta = Value
                    Me.SendPropertyChanged("strCuentaContableDBCompleta")
                    Me.OnstrCuentaContableDBCompletaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCuentaContableCRCompleta", DbType:="Varchar(41) NOT NULL")>
        Public Property strCuentaContableCRCompleta() As String
            Get
                Return Me._strCuentaContableCRCompleta
            End Get
            Set
                If (String.Equals(Me._strCuentaContableCRCompleta, Value) = False) Then
                    Me.OnstrCuentaContableCRCompletaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCuentaContableCRCompleta = Value
                    Me.SendPropertyChanged("strCuentaContableCRCompleta")
                    Me.OnstrCuentaContableCRCompletaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDetalleTipoTitulos", DbType:="Varchar(50) NOT NULL")>
        Public Property strDetalleTipoTitulos() As String
            Get
                Return Me._strDetalleTipoTitulos
            End Get
            Set
                If (String.Equals(Me._strDetalleTipoTitulos, Value) = False) Then
                    Me.OnstrDetalleTipoTitulosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDetalleTipoTitulos = Value
                    Me.SendPropertyChanged("strDetalleTipoTitulos")
                    Me.OnstrDetalleTipoTitulosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTitulos", DbType:="Varchar(80) NOT NULL")>
        Public Property strTipoTitulos() As String
            Get
                Return Me._strTipoTitulos
            End Get
            Set
                If (String.Equals(Me._strTipoTitulos, Value) = False) Then
                    Me.OnstrTipoTitulosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoTitulos = Value
                    Me.SendPropertyChanged("strTipoTitulos")
                    Me.OnstrTipoTitulosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intTipoProducto", DbType:="INT NOT NULL")>
        Public Property intTipoProducto() As System.Nullable(Of Integer)
            Get
                Return Me._intTipoProducto
            End Get
            Set
                If (Me._intTipoProducto.Equals(Value) = False) Then
                    Me.OnintTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intTipoProducto = Value
                    Me.SendPropertyChanged("intTipoProducto")
                    Me.OnintTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDetalleTipoProducto", DbType:="Varchar(50) NOT NULL")>
        Public Property strDetalleTipoProducto() As String
            Get
                Return Me._strDetalleTipoProducto
            End Get
            Set
                If (String.Equals(Me._strDetalleTipoProducto, Value) = False) Then
                    Me.OnstrDetalleTipoProductoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDetalleTipoProducto = Value
                    Me.SendPropertyChanged("strDetalleTipoProducto")
                    Me.OnstrDetalleTipoProductoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNormaContable", DbType:="Varchar(2) NOT NULL")>
        Public Property strNormaContable() As String
            Get
                Return Me._strNormaContable
            End Get
            Set
                If (String.Equals(Me._strNormaContable, Value) = False) Then
                    Me.OnstrNormaContableChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNormaContable = Value
                    Me.SendPropertyChanged("strNormaContable")
                    Me.OnstrNormaContableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNormaContableDescripcion", DbType:="Varchar(50) NOT NULL")>
        Public Property strNormaContableDescripcion() As String
            Get
                Return Me._strNormaContableDescripcion
            End Get
            Set
                If (String.Equals(Me._strNormaContableDescripcion, Value) = False) Then
                    Me.OnstrNormaContableDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNormaContableDescripcion = Value
                    Me.SendPropertyChanged("strNormaContableDescripcion")
                    Me.OnstrNormaContableDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoInversion", DbType:="Varchar(80) NOT NULL")>
        Public Property strTipoInversion() As String
            Get
                Return Me._strTipoInversion
            End Get
            Set
                If (String.Equals(Me._strTipoInversion, Value) = False) Then
                    Me.OnstrTipoInversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoInversion = Value
                    Me.SendPropertyChanged("strTipoInversion")
                    Me.OnstrTipoInversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoInversion", DbType:="Varchar(50) NOT NULL")>
        Public Property strDescripcionTipoInversion() As String
            Get
                Return Me._strDescripcionTipoInversion
            End Get
            Set
                If (String.Equals(Me._strDescripcionTipoInversion, Value) = False) Then
                    Me.OnstrDescripcionTipoInversionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionTipoInversion = Value
                    Me.SendPropertyChanged("strDescripcionTipoInversion")
                    Me.OnstrDescripcionTipoInversionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>
        Public Property dtmActualizacion() As Date
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If ((Me._dtmActualizacion = Value) _
                            = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class OperacionesCumplidas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _lngID As Integer

        Private _lngParcial As Integer

        Private _dtmLiquidacion As System.Nullable(Of System.DateTime)

        Private _strTipo As String

        Private _strClaseOrden As String

        Private _strCambios As String

        Private _logActualizar As Boolean

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnlngIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIDChanged()
        End Sub
        Partial Private Sub OnlngParcialChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngParcialChanged()
        End Sub
        Partial Private Sub OndtmLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmLiquidacionChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnstrClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnstrClaseOrdenChanged()
        End Sub
        Partial Private Sub OnstrCambiosChanging(value As String)
        End Sub
        Partial Private Sub OnstrCambiosChanged()
        End Sub
        Partial Private Sub OnlogActualizarChanging(value As Boolean)
        End Sub
        Partial Private Sub OnlogActualizarChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngID", IsPrimaryKey:=True)>
        Public Property lngID() As Integer
            Get
                Return Me._lngID
            End Get
            Set
                If ((Me._lngID = Value) _
                            = False) Then
                    Me.OnlngIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngID = Value
                    Me.SendPropertyChanged("lngID")
                    Me.OnlngIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngParcial", IsPrimaryKey:=True)>
        Public Property lngParcial() As Integer
            Get
                Return Me._lngParcial
            End Get
            Set
                If ((Me._lngParcial = Value) _
                            = False) Then
                    Me.OnlngParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngParcial = Value
                    Me.SendPropertyChanged("lngParcial")
                    Me.OnlngParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmLiquidacion", DbType:="Datetime NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property dtmLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmLiquidacion
            End Get
            Set
                If (Object.Equals(Me._dtmLiquidacion, Value) = False) Then
                    Me.OndtmLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmLiquidacion = Value
                    Me.SendPropertyChanged("dtmLiquidacion")
                    Me.OndtmLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set
                If (String.Equals(Me._strTipo, Value) = False) Then
                    Me.OnstrTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipo = Value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseOrden", DbType:="VarChar(1) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
        Public Property strClaseOrden() As String
            Get
                Return Me._strClaseOrden
            End Get
            Set
                If (String.Equals(Me._strClaseOrden, Value) = False) Then
                    Me.OnstrClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClaseOrden = Value
                    Me.SendPropertyChanged("strClaseOrden")
                    Me.OnstrClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCambios", DbType:="VarChar(500) NOT NULL", CanBeNull:=False)>
        Public Property strCambios() As String
            Get
                Return Me._strCambios
            End Get
            Set
                If (String.Equals(Me._strCambios, Value) = False) Then
                    Me.OnstrCambiosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCambios = Value
                    Me.SendPropertyChanged("strCambios")
                    Me.OnstrCambiosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActualizar", DbType:="bit NOT NULL")>
        Public Property logActualizar() As Boolean
            Get
                Return Me._logActualizar
            End Get
            Set
                If ((Me._logActualizar = Value) _
                            = False) Then
                    Me.OnlogActualizarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logActualizar = Value
                    Me.SendPropertyChanged("logActualizar")
                    Me.OnlogActualizarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

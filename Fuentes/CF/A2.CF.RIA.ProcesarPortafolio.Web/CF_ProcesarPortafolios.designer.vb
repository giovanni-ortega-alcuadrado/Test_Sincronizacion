'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class ProcesarPortafoliosDBML
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertProcesarPortafolio(instance As CFProcesarPortafolios.ProcesarPortafolio)
    End Sub
    Partial Private Sub UpdateProcesarPortafolio(instance As CFProcesarPortafolios.ProcesarPortafolio)
    End Sub
    Partial Private Sub DeleteProcesarPortafolio(instance As CFProcesarPortafolios.ProcesarPortafolio)
    End Sub
    Partial Private Sub InsertProcesarUtilidadesCustodias(instance As CFProcesarPortafolios.ProcesarUtilidadesCustodias)
    End Sub
    Partial Private Sub DeleteProcesarUtilidadesCustodias(instance As CFProcesarPortafolios.ProcesarUtilidadesCustodias)
    End Sub
    Partial Private Sub InsertDatosPortafolios(instance As CFProcesarPortafolios.DatosPortafolios)
    End Sub
    Partial Private Sub UpdateDatosPortafolios(instance As CFProcesarPortafolios.DatosPortafolios)
    End Sub
    Partial Private Sub DeleteDatosPortafolios(instance As CFProcesarPortafolios.DatosPortafolios)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property ProcesarPortafolio() As System.Data.Linq.Table(Of CFProcesarPortafolios.ProcesarPortafolio)
        Get
            Return Me.GetTable(Of CFProcesarPortafolios.ProcesarPortafolio)()
        End Get
    End Property

    Public ReadOnly Property ProcesarUtilidadesCustodias() As System.Data.Linq.Table(Of CFProcesarPortafolios.ProcesarUtilidadesCustodias)
        Get
            Return Me.GetTable(Of CFProcesarPortafolios.ProcesarUtilidadesCustodias)()
        End Get
    End Property

    Public ReadOnly Property DatosPortafolios() As System.Data.Linq.Table(Of CFProcesarPortafolios.DatosPortafolios)
        Get
            Return Me.GetTable(Of CFProcesarPortafolios.DatosPortafolios)()
        End Get
    End Property

    Private Overloads Sub UpdateProcesarUtilidadesCustodias(ByVal obj As CFProcesarPortafolios.ProcesarUtilidadesCustodias)
        Me.UpdateProcesarUtilidadesCustodias()
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_AvanceProcesamiento")> _
    Public Function uspCalculosFinancieros_AvanceProcesamiento(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaProcesoInicial As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaProcesoFinal As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NULL")> ByVal pstrModulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaProcesoInicial, pdtmFechaProcesoFinal, pstrModulo, pstrTipoPortafolio, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_UtilidadesCustodiasConsultar")> _
    Public Function uspCalculosFinancieros_UtilidadesCustodiasConsultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NULL")> ByVal pstrTipoCompania As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrEstado As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000) NULL")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFProcesarPortafolios.ProcesarUtilidadesCustodias)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoCompania, pstrEstado, pstrUsuario, pstrInfosesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFProcesarPortafolios.ProcesarUtilidadesCustodias))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()> _
    Public Overloads Function UpdateProcesarUtilidadesCustodias() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_EliminarCalculos")> _
    Public Function uspCalculosFinancieros_EliminarCalculos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogEliminarCierreTodosLosPortafolios As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, plogEliminarCierreTodosLosPortafolios, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ValidarOperacionesPendientes")> _
    Public Function uspCalculosFinancieros_ValidarOperacionesPendientes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2) NULL")> ByVal pstrReconstruir As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, pstrReconstruir, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ValidarFechaCierrePortafolio")> _
    Public Function uspCalculosFinancieros_ValidarFechaCierrePortafolio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogCerrarPortafolios As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, plogCerrarPortafolios, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(9), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CerrarFechaCierrePortafolio")> _
    Public Function uspCalculosFinancieros_CerrarFechaCierrePortafolio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogConfirmarCerrarPortafolio As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogCerrarPortafolios As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrTipoPortafolio, plngIDComitente, plogConfirmarCerrarPortafolio, plogCerrarPortafolios, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFProcesarPortafolios.ProcesarPortafolio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ValidarParametro_EliminarCierreTodosLosPortafolios")> _
    Public Function uspCalculosFinancieros_ValidarParametro_EliminarCierreTodosLosPortafolios(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogEliminarCierreTodosLosPortafolios As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, plogEliminarCierreTodosLosPortafolios, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(9), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ValidarFechaValoracionInferior")> _
    Public Function uspCalculosFinancieros_ValidarFechaValoracionInferior(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(8), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_UtilidadesCustodiasActualizar")> _
    Public Function uspCalculosFinancieros_UtilidadesCustodiasActualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlCobroUtilidades As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pxmlCobroUtilidades, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(9), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ValoracionPortafolio")> _
    Public Function uspCalculosFinancieros_ValoracionPortafolio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoPortafolio As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(10) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogContabilizar As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogIniciarJobValoracion As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogEliminarDatosResultadoMotor As System.Nullable(Of System.Boolean)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrTipoPortafolio, pstrTipoProceso, plogContabilizar, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion, plogIniciarJobValoracion, plogEliminarDatosResultadoMotor)
        pstrMsgValidacion = CType(result.GetParameterValue(9), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ValidarCobrosPendientes")> _
    Public Function uspCalculosFinancieros_ValidarCobrosPendientes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaValoracion As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000) NULL")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NULL")> ByRef plogUtilidad As System.Nullable(Of Boolean)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaValoracion, pstrIdEspecie, plngIDComitente, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, plogUtilidad)
        plogUtilidad = CType(result.GetParameterValue(6), System.Nullable(Of Boolean))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_DatosPortafolio_Consultar")> _
    Public Function uspCalculosFinancieros_DatosPortafolio_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17)")> ByVal plngIDComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFProcesarPortafolios.DatosPortafolios)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngIDComitente, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFProcesarPortafolios.DatosPortafolios))
    End Function
End Class

Namespace CFProcesarPortafolios

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblAvanceProceso")> _
    Partial Public Class ProcesarPortafolio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDAvanceProceso As Integer

        Private _strDescripcion As String

        Private _strTipo As String

        Private _strModulo As String

        Private _dtmAvance As System.Nullable(Of System.DateTime)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _dblCantidad As System.Nullable(Of Double)

        Private _dtmFechaProceso As System.Nullable(Of System.DateTime)

        Private _strClave As String

        Private _lngIDComitente As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDAvanceProcesoChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDAvanceProcesoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnstrModuloChanging(value As String)
        End Sub
        Partial Private Sub OnstrModuloChanged()
        End Sub
        Partial Private Sub OndtmAvanceChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmAvanceChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblCantidadChanged()
        End Sub
        Partial Private Sub OndtmFechaProcesoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmFechaProcesoChanged()
        End Sub
        Partial Private Sub OnstrClaveChanging(value As String)
        End Sub
        Partial Private Sub OnstrClaveChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDAvanceProceso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property intIDAvanceProceso() As Integer
            Get
                Return Me._intIDAvanceProceso
            End Get
            Set(value As Integer)
                If ((Me._intIDAvanceProceso = value) _
                            = False) Then
                    Me.OnintIDAvanceProcesoChanging(value)
                    Me.SendPropertyChanging()
                    Me._intIDAvanceProceso = value
                    Me.SendPropertyChanged("intIDAvanceProceso")
                    Me.OnintIDAvanceProcesoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="Text NULL")> _
        Public Property strDescripcion() As String
            Get
                Return Me._strDescripcion
            End Get
            Set(value As String)
                If (String.Equals(Me._strDescripcion, value) = False) Then
                    Me.OnstrDescripcionChanging(value)
                    Me.SendPropertyChanging()
                    Me._strDescripcion = value
                    Me.SendPropertyChanged("strDescripcion")
                    Me.OnstrDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="Varchar(50) NULL")> _
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set(value As String)
                If (String.Equals(Me._strTipo, value) = False) Then
                    Me.OnstrTipoChanging(value)
                    Me.SendPropertyChanging()
                    Me._strTipo = value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModulo", DbType:="Varchar(50) NULL")> _
        Public Property strModulo() As String
            Get
                Return Me._strModulo
            End Get
            Set(value As String)
                If (String.Equals(Me._strModulo, value) = False) Then
                    Me.OnstrModuloChanging(value)
                    Me.SendPropertyChanging()
                    Me._strModulo = value
                    Me.SendPropertyChanged("strModulo")
                    Me.OnstrModuloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmAvance", DbType:="Datetime NULL", CanBeNull:=True)> _
        Public Property dtmAvance() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmAvance
            End Get
            Set(value As System.Nullable(Of System.DateTime))
                If (Object.Equals(Me._dtmAvance, value) = False) Then
                    Me.OndtmAvanceChanging(value)
                    Me.SendPropertyChanging()
                    Me._dtmAvance = value
                    Me.SendPropertyChanged("dtmAvance")
                    Me.OndtmAvanceChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")> _
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set(value As String)
                If (String.Equals(Me._strUsuario, value) = False) Then
                    Me.OnstrUsuarioChanging(value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")> _
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set(value As String)
                If (String.Equals(Me._InfoSesion, value) = False) Then
                    Me.OnInfoSesionChanging(value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")> _
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set(value As String)
                If (String.Equals(Me._strMsgValidacion, value) = False) Then
                    Me.OnstrMsgValidacionChanging(value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float NULL")> _
        Public Property dblCantidad() As System.Nullable(Of Double)
            Get
                Return Me._dblCantidad
            End Get
            Set(value As System.Nullable(Of Double))
                If (Me._dblCantidad.Equals(value) = False) Then
                    Me.OndblCantidadChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblCantidad = value
                    Me.SendPropertyChanged("dblCantidad")
                    Me.OndblCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaProceso", DbType:="Datetime NULL", CanBeNull:=True)> _
        Public Property dtmFechaProceso() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmFechaProceso
            End Get
            Set(value As System.Nullable(Of System.DateTime))
                If (Object.Equals(Me._dtmFechaProceso, value) = False) Then
                    Me.OndtmFechaProcesoChanging(value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaProceso = value
                    Me.SendPropertyChanged("dtmFechaProceso")
                    Me.OndtmFechaProcesoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClave", DbType:="Varchar(50) NULL")> _
        Public Property strClave() As String
            Get
                Return Me._strClave
            End Get
            Set(value As String)
                If (String.Equals(Me._strClave, value) = False) Then
                    Me.OnstrClaveChanging(value)
                    Me.SendPropertyChanging()
                    Me._strClave = value
                    Me.SendPropertyChanged("strClave")
                    Me.OnstrClaveChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Varchar(17) NULL")> _
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set(value As String)
                If (String.Equals(Me._lngIDComitente, value) = False) Then
                    Me.OnlngIDComitenteChanging(value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")> _
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set(value As String)
                If (String.Equals(Me._pstrUsuarioConexion, value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")> _
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set(value As String)
                If (String.Equals(Me._pstrInfoConexion, value) = False) Then
                    Me.OnpstrInfoConexionChanging(value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")> _
    Partial Public Class ProcesarUtilidadesCustodias
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intID As Integer

        Private _dtmFecha As System.Nullable(Of System.DateTime)

        Private _lngIdRecibo As Integer

        Private _lngSecuencia As Integer

        Private _strNroTitulo As String

        Private _strIdEspecie As String

        Private _strTipo As String

        Private _strDescripcionTipo As String

        Private _dtmEmision As System.Nullable(Of System.DateTime)

        Private _dtmVencimiento As System.Nullable(Of System.DateTime)

        Private _dblValorCalculado As Double

        Private _dblValorCobrado As Double

        Private _strEstado As String

        Private _logCobro As Boolean

        Private _logAnulado As Boolean

        Private _dblIVA As Double

        Private _dblPorcentajeRetencion As Double

        Private _dblRetencion As Double

        Private _dblReteica As Double

        Private _dblOtrosImpuestos As Double

        Private _strTipoCompania As String

        Private _lngIDComitente As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDChanged()
        End Sub
        Partial Private Sub OndtmFechaChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmFechaChanged()
        End Sub
        Partial Private Sub OnlngIdReciboChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngIdReciboChanged()
        End Sub
        Partial Private Sub OnlngSecuenciaChanging(value As Integer)
        End Sub
        Partial Private Sub OnlngSecuenciaChanged()
        End Sub
        Partial Private Sub OnstrNroTituloChanging(value As String)
        End Sub
        Partial Private Sub OnstrNroTituloChanged()
        End Sub
        Partial Private Sub OnstrIdEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIdEspecieChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionTipoChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OndblValorCalculadoChanging(value As Double)
        End Sub
        Partial Private Sub OndblValorCalculadoChanged()
        End Sub
        Partial Private Sub OndblValorCobradoChanging(value As Double)
        End Sub
        Partial Private Sub OndblValorCobradoChanged()
        End Sub
        Partial Private Sub OnstrEstadoChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoChanged()
        End Sub
        Partial Private Sub OnlogCobroChanging(value As Boolean)
        End Sub
        Partial Private Sub OnlogCobroChanged()
        End Sub
        Partial Private Sub OnlogAnuladoChanging(value As Boolean)
        End Sub
        Partial Private Sub OnlogAnuladoChanged()
        End Sub
        Partial Private Sub OndblIVAChanging(value As Double)
        End Sub
        Partial Private Sub OndblIVAChanged()
        End Sub
        Partial Private Sub OndblPorcentajeRetencionChanging(value As Double)
        End Sub
        Partial Private Sub OndblPorcentajeRetencionChanged()
        End Sub
        Partial Private Sub OndblRetencionChanging(value As Double)
        End Sub
        Partial Private Sub OndblRetencionChanged()
        End Sub
        Partial Private Sub OndblReteicaChanging(value As Double)
        End Sub
        Partial Private Sub OndblReteicaChanged()
        End Sub
        Partial Private Sub OndblOtrosImpuestosChanging(value As Double)
        End Sub
        Partial Private Sub OndblOtrosImpuestosChanged()
        End Sub
        Partial Private Sub OnstrTipoCompaniaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoCompaniaChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property intID() As Integer
            Get
                Return Me._intID
            End Get
            Set(value As Integer)
                If ((Me._intID = value) _
                            = False) Then
                    Me.OnintIDChanging(value)
                    Me.SendPropertyChanging()
                    Me._intID = value
                    Me.SendPropertyChanged("intID")
                    Me.OnintIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFecha", DbType:="Datetime NOT NULL", CanBeNull:=False)> _
        Public Property dtmFecha() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmFecha
            End Get
            Set(value As System.Nullable(Of System.DateTime))
                If (Object.Equals(Me._dtmFecha, value) = False) Then
                    Me.OndtmFechaChanging(value)
                    Me.SendPropertyChanging()
                    Me._dtmFecha = value
                    Me.SendPropertyChanged("dtmFecha")
                    Me.OndtmFechaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdRecibo", DbType:="Int")> _
        Public Property lngIdRecibo() As Integer
            Get
                Return Me._lngIdRecibo
            End Get
            Set(value As Integer)
                If ((Me._lngIdRecibo = value) _
                            = False) Then
                    Me.OnlngIdReciboChanging(value)
                    Me.SendPropertyChanging()
                    Me._lngIdRecibo = value
                    Me.SendPropertyChanged("lngIdRecibo")
                    Me.OnlngIdReciboChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngSecuencia", DbType:="Int")> _
        Public Property lngSecuencia() As Integer
            Get
                Return Me._lngSecuencia
            End Get
            Set(value As Integer)
                If ((Me._lngSecuencia = value) _
                            = False) Then
                    Me.OnlngSecuenciaChanging(value)
                    Me.SendPropertyChanging()
                    Me._lngSecuencia = value
                    Me.SendPropertyChanged("lngSecuencia")
                    Me.OnlngSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroTitulo", DbType:="VarChar(25)", CanBeNull:=False)> _
        Public Property strNroTitulo() As String
            Get
                Return Me._strNroTitulo
            End Get
            Set(value As String)
                If (String.Equals(Me._strNroTitulo, value) = False) Then
                    Me.OnstrNroTituloChanging(value)
                    Me.SendPropertyChanging()
                    Me._strNroTitulo = value
                    Me.SendPropertyChanged("strNroTitulo")
                    Me.OnstrNroTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIdEspecie", DbType:="VarChar(15)", CanBeNull:=False)> _
        Public Property strIdEspecie() As String
            Get
                Return Me._strIdEspecie
            End Get
            Set(value As String)
                If (String.Equals(Me._strIdEspecie, value) = False) Then
                    Me.OnstrIdEspecieChanging(value)
                    Me.SendPropertyChanging()
                    Me._strIdEspecie = value
                    Me.SendPropertyChanged("strIdEspecie")
                    Me.OnstrIdEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="VarChar(2)", CanBeNull:=False)> _
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set(value As String)
                If (String.Equals(Me._strTipo, value) = False) Then
                    Me.OnstrTipoChanging(value)
                    Me.SendPropertyChanging()
                    Me._strTipo = value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipo", DbType:="VarChar(50)", CanBeNull:=False)> _
        Public Property strDescripcionTipo() As String
            Get
                Return Me._strDescripcionTipo
            End Get
            Set(value As String)
                If (String.Equals(Me._strDescripcionTipo, value) = False) Then
                    Me.OnstrDescripcionTipoChanging(value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionTipo = value
                    Me.SendPropertyChanged("strDescripcionTipo")
                    Me.OnstrDescripcionTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="Datetime", CanBeNull:=False)> _
        Public Property dtmEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmEmision
            End Get
            Set(value As System.Nullable(Of System.DateTime))
                If (Object.Equals(Me._dtmEmision, value) = False) Then
                    Me.OndtmEmisionChanging(value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="Datetime", CanBeNull:=False)> _
        Public Property dtmVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmVencimiento
            End Get
            Set(value As System.Nullable(Of System.DateTime))
                If (Object.Equals(Me._dtmVencimiento, value) = False) Then
                    Me.OndtmVencimientoChanging(value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorCalculado", DbType:="Float NOT NULL")> _
        Public Property dblValorCalculado() As Double
            Get
                Return Me._dblValorCalculado
            End Get
            Set(value As Double)
                If ((Me._dblValorCalculado = value) _
                            = False) Then
                    Me.OndblValorCalculadoChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblValorCalculado = value
                    Me.SendPropertyChanged("dblValorCalculado")
                    Me.OndblValorCalculadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValorCobrado", DbType:="Float NOT NULL")> _
        Public Property dblValorCobrado() As Double
            Get
                Return Me._dblValorCobrado
            End Get
            Set(value As Double)
                If ((Me._dblValorCobrado = value) _
                            = False) Then
                    Me.OndblValorCobradoChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblValorCobrado = value
                    Me.SendPropertyChanged("dblValorCobrado")
                    Me.OndblValorCobradoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstado", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)> _
        Public Property strEstado() As String
            Get
                Return Me._strEstado
            End Get
            Set(value As String)
                If (String.Equals(Me._strEstado, value) = False) Then
                    Me.OnstrEstadoChanging(value)
                    Me.SendPropertyChanging()
                    Me._strEstado = value
                    Me.SendPropertyChanged("strEstado")
                    Me.OnstrEstadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logCobro", DbType:="bit NOT NULL")> _
        Public Property logCobro() As Boolean
            Get
                Return Me._logCobro
            End Get
            Set(value As Boolean)
                If ((Me._logCobro = value) _
                            = False) Then
                    Me.OnlogCobroChanging(value)
                    Me.SendPropertyChanging()
                    Me._logCobro = value
                    Me.SendPropertyChanged("logCobro")
                    Me.OnlogCobroChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logAnulado", DbType:="bit NOT NULL")> _
        Public Property logAnulado() As Boolean
            Get
                Return Me._logAnulado
            End Get
            Set(value As Boolean)
                If ((Me._logAnulado = value) _
                            = False) Then
                    Me.OnlogAnuladoChanging(value)
                    Me.SendPropertyChanging()
                    Me._logAnulado = value
                    Me.SendPropertyChanged("logAnulado")
                    Me.OnlogAnuladoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblIVA", DbType:="Float NOT NULL")> _
        Public Property dblIVA() As Double
            Get
                Return Me._dblIVA
            End Get
            Set(value As Double)
                If ((Me._dblIVA = value) _
                            = False) Then
                    Me.OndblIVAChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblIVA = value
                    Me.SendPropertyChanged("dblIVA")
                    Me.OndblIVAChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeRetencion", DbType:="Float NOT NULL")> _
        Public Property dblPorcentajeRetencion() As Double
            Get
                Return Me._dblPorcentajeRetencion
            End Get
            Set(value As Double)
                If ((Me._dblPorcentajeRetencion = value) _
                            = False) Then
                    Me.OndblPorcentajeRetencionChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblPorcentajeRetencion = value
                    Me.SendPropertyChanged("dblPorcentajeRetencion")
                    Me.OndblPorcentajeRetencionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblRetencion", DbType:="Float NOT NULL")> _
        Public Property dblRetencion() As Double
            Get
                Return Me._dblRetencion
            End Get
            Set(value As Double)
                If ((Me._dblRetencion = value) _
                            = False) Then
                    Me.OndblRetencionChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblRetencion = value
                    Me.SendPropertyChanged("dblRetencion")
                    Me.OndblRetencionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblReteica", DbType:="Float NOT NULL")> _
        Public Property dblReteica() As Double
            Get
                Return Me._dblReteica
            End Get
            Set(value As Double)
                If ((Me._dblReteica = value) _
                            = False) Then
                    Me.OndblReteicaChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblReteica = value
                    Me.SendPropertyChanged("dblReteica")
                    Me.OndblReteicaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblOtrosImpuestos", DbType:="Float NOT NULL")> _
        Public Property dblOtrosImpuestos() As Double
            Get
                Return Me._dblOtrosImpuestos
            End Get
            Set(value As Double)
                If ((Me._dblOtrosImpuestos = value) _
                            = False) Then
                    Me.OndblOtrosImpuestosChanging(value)
                    Me.SendPropertyChanging()
                    Me._dblOtrosImpuestos = value
                    Me.SendPropertyChanged("dblOtrosImpuestos")
                    Me.OndblOtrosImpuestosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoCompania", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)> _
        Public Property strTipoCompania() As String
            Get
                Return Me._strTipoCompania
            End Get
            Set(value As String)
                If (String.Equals(Me._strTipoCompania, value) = False) Then
                    Me.OnstrTipoCompaniaChanging(value)
                    Me.SendPropertyChanging()
                    Me._strTipoCompania = value
                    Me.SendPropertyChanged("strTipoCompania")
                    Me.OnstrTipoCompaniaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Char(17) NOT NULL")> _
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set(value As String)
                If (String.Equals(Me._lngIDComitente, value) = False) Then
                    Me.OnlngIDComitenteChanging(value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")> _
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set(value As String)
                If (String.Equals(Me._pstrUsuarioConexion, value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")> _
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set(value As String)
                If (String.Equals(Me._pstrInfoConexion, value) = False) Then
                    Me.OnpstrInfoConexionChanging(value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblClientes")> _
    Partial Public Class DatosPortafolios
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDClientes As Integer

        Private _strNombre As String

        Private _dtmFechaCierrePortafolio As System.Nullable(Of System.DateTime)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDClientesChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDClientesChanged()
        End Sub
        Partial Private Sub OnstrNombreChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreChanged()
        End Sub
        Partial Private Sub OndtmFechaCierrePortafolioChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmFechaCierrePortafolioChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDClientes", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property intIDClientes() As Integer
            Get
                Return Me._intIDClientes
            End Get
            Set(value As Integer)
                If ((Me._intIDClientes = value) _
                            = False) Then
                    Me.OnintIDClientesChanging(value)
                    Me.SendPropertyChanging()
                    Me._intIDClientes = value
                    Me.SendPropertyChanged("intIDClientes")
                    Me.OnintIDClientesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(200) NOT NULL")> _
        Public Property strNombre() As String
            Get
                Return Me._strNombre
            End Get
            Set(value As String)
                If (String.Equals(Me._strNombre, value) = False) Then
                    Me.OnstrNombreChanging(value)
                    Me.SendPropertyChanging()
                    Me._strNombre = value
                    Me.SendPropertyChanged("strNombre")
                    Me.OnstrNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmFechaCierrePortafolio", DbType:="Datetime NOT NULL", CanBeNull:=True)> _
        Public Property dtmFechaCierrePortafolio() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmFechaCierrePortafolio
            End Get
            Set(value As System.Nullable(Of System.DateTime))
                If (Object.Equals(Me._dtmFechaCierrePortafolio, value) = False) Then
                    Me.OndtmFechaCierrePortafolioChanging(value)
                    Me.SendPropertyChanging()
                    Me._dtmFechaCierrePortafolio = value
                    Me.SendPropertyChanged("dtmFechaCierrePortafolio")
                    Me.OndtmFechaCierrePortafolioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")> _
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set(value As String)
                If (String.Equals(Me._strUsuario, value) = False) Then
                    Me.OnstrUsuarioChanging(value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")> _
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set(value As String)
                If (String.Equals(Me._InfoSesion, value) = False) Then
                    Me.OnInfoSesionChanging(value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")> _
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set(value As String)
                If (String.Equals(Me._strMsgValidacion, value) = False) Then
                    Me.OnstrMsgValidacionChanging(value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")> _
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set(value As String)
                If (String.Equals(Me._pstrUsuarioConexion, value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")> _
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set(value As String)
                If (String.Equals(Me._pstrInfoConexion, value) = False) Then
                    Me.OnpstrInfoConexionChanging(value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

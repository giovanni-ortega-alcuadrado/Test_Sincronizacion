'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class CF_EspeciesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub InsertAmortizacionesEspeci(instance As CFEspecies.AmortizacionesEspeci)
    End Sub
    Partial Private Sub UpdateAmortizacionesEspeci(instance As CFEspecies.AmortizacionesEspeci)
    End Sub
    Partial Private Sub DeleteAmortizacionesEspeci(instance As CFEspecies.AmortizacionesEspeci)
    End Sub
    Partial Private Sub InsertFlujosDiariosValoracion(instance As CFEspecies.FlujosDiariosValoracion)
    End Sub
    Partial Private Sub UpdateFlujosDiariosValoracion(instance As CFEspecies.FlujosDiariosValoracion)
    End Sub
    Partial Private Sub DeleteFlujosDiariosValoracion(instance As CFEspecies.FlujosDiariosValoracion)
    End Sub
    Partial Private Sub InsertEspecie(instance As CFEspecies.Especie)
    End Sub
    Partial Private Sub UpdateEspecie(instance As CFEspecies.Especie)
    End Sub
    Partial Private Sub DeleteEspecie(instance As CFEspecies.Especie)
    End Sub
    Partial Private Sub InsertEspeciesTotales(instance As CFEspecies.EspeciesTotales)
    End Sub
    Partial Private Sub UpdateEspeciesTotales(instance As CFEspecies.EspeciesTotales)
    End Sub
    Partial Private Sub DeleteEspeciesTotales(instance As CFEspecies.EspeciesTotales)
    End Sub
    Partial Private Sub UpdateConsultaNombreEspecie(instance As CFEspecies.ConsultaNombreEspecie)
    End Sub
    Partial Private Sub DeleteConsultaNombreEspecie(instance As CFEspecies.ConsultaNombreEspecie)
    End Sub
    Partial Private Sub DeleteEspeciesDeposito(instance As CFEspecies.EspeciesDeposito)
    End Sub
    Partial Private Sub InsertOperaciones_CalculosTasaFacial_Calcular(instance As CFEspecies.Operaciones_CalculosTasaFacial_Calcular)
    End Sub
    Partial Private Sub UpdateOperaciones_CalculosTasaFacial_Calcular(instance As CFEspecies.Operaciones_CalculosTasaFacial_Calcular)
    End Sub
    Partial Private Sub DeleteOperaciones_CalculosTasaFacial_Calcular(instance As CFEspecies.Operaciones_CalculosTasaFacial_Calcular)
    End Sub
    Partial Private Sub InsertConceptoRetencion(instance As CFEspecies.ConceptoRetencion)
    End Sub
    Partial Private Sub UpdateConceptoRetencion(instance As CFEspecies.ConceptoRetencion)
    End Sub
    Partial Private Sub DeleteConceptoRetencion(instance As CFEspecies.ConceptoRetencion)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Especi() As System.Data.Linq.Table(Of CFEspecies.Especi)
		Get
			Return Me.GetTable(Of CFEspecies.Especi)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesISIN() As System.Data.Linq.Table(Of CFEspecies.EspeciesISIN)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesISIN)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesISINFungible() As System.Data.Linq.Table(Of CFEspecies.EspeciesISINFungible)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesISINFungible)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesClaseInversion() As System.Data.Linq.Table(Of CFEspecies.EspeciesClaseInversion)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesClaseInversion)
		End Get
	End Property
	
	Public ReadOnly Property Emisores() As System.Data.Linq.Table(Of CFEspecies.Emisore)
		Get
			Return Me.GetTable(Of CFEspecies.Emisore)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesDividendos() As System.Data.Linq.Table(Of CFEspecies.EspeciesDividendos)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesDividendos)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesPrecios() As System.Data.Linq.Table(Of CFEspecies.EspeciesPrecios)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesPrecios)
		End Get
	End Property
	
	Public ReadOnly Property AmortizacionesEspecis() As System.Data.Linq.Table(Of CFEspecies.AmortizacionesEspeci)
		Get
			Return Me.GetTable(Of CFEspecies.AmortizacionesEspeci)
		End Get
	End Property
	
	Public ReadOnly Property FlujosDiariosValoracions() As System.Data.Linq.Table(Of CFEspecies.FlujosDiariosValoracion)
		Get
			Return Me.GetTable(Of CFEspecies.FlujosDiariosValoracion)
		End Get
	End Property
	
	Public ReadOnly Property Especies() As System.Data.Linq.Table(Of CFEspecies.Especie)
		Get
			Return Me.GetTable(Of CFEspecies.Especie)
		End Get
	End Property
	
	Public ReadOnly Property ClasesEspecies() As System.Data.Linq.Table(Of CFEspecies.ClasesEspecie)
		Get
			Return Me.GetTable(Of CFEspecies.ClasesEspecie)
		End Get
	End Property
	
	Public ReadOnly Property TiposEmisores() As System.Data.Linq.Table(Of CFEspecies.TiposEmisores)
		Get
			Return Me.GetTable(Of CFEspecies.TiposEmisores)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesTotales() As System.Data.Linq.Table(Of CFEspecies.EspeciesTotales)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesTotales)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesNemotecnicos() As System.Data.Linq.Table(Of CFEspecies.EspeciesNemotecnicos)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesNemotecnicos)
		End Get
	End Property
	
	Public ReadOnly Property ConsultaNombreEspecie() As System.Data.Linq.Table(Of CFEspecies.ConsultaNombreEspecie)
		Get
			Return Me.GetTable(Of CFEspecies.ConsultaNombreEspecie)
		End Get
	End Property
	
	Public ReadOnly Property PreEspecies() As System.Data.Linq.Table(Of CFEspecies.PreEspecies)
		Get
			Return Me.GetTable(Of CFEspecies.PreEspecies)
		End Get
	End Property
	
	Public ReadOnly Property EspeciesDeposito() As System.Data.Linq.Table(Of CFEspecies.EspeciesDeposito)
		Get
			Return Me.GetTable(Of CFEspecies.EspeciesDeposito)
		End Get
	End Property
	
	Public ReadOnly Property Operaciones_CalculosTasaFacial_Calcular() As System.Data.Linq.Table(Of CFEspecies.Operaciones_CalculosTasaFacial_Calcular)
		Get
			Return Me.GetTable(Of CFEspecies.Operaciones_CalculosTasaFacial_Calcular)
		End Get
	End Property
	
	Public ReadOnly Property ConfiguracionBursatilidad() As System.Data.Linq.Table(Of CFEspecies.ConfiguracionBursatilidad)
		Get
			Return Me.GetTable(Of CFEspecies.ConfiguracionBursatilidad)
		End Get
	End Property
	
	Public ReadOnly Property ConceptoRetencion() As System.Data.Linq.Table(Of CFEspecies.ConceptoRetencion)
		Get
			Return Me.GetTable(Of CFEspecies.ConceptoRetencion)
		End Get
	End Property
	
	Public ReadOnly Property ArbitrajeADR() As System.Data.Linq.Table(Of CFEspecies.ArbitrajeADR)
		Get
			Return Me.GetTable(Of CFEspecies.ArbitrajeADR)
		End Get
	End Property

    Private Sub DeleteEspeci(ByVal obj As CFEspecies.Especi)
		Me.uspOyDNet_Maestros_Especies_Eliminar(obj.Id, CType(obj.Activo,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub InsertEspeciesISIN(ByVal obj As CFEspecies.EspeciesISIN)
		Dim p1 As System.Nullable(Of Integer) = obj.IDEspeciesISIN
		Me.uspOyDNet_Maestros_ISIN_Actualizar(obj.ISIN, obj.Descripcion, obj.IDEspecie, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDEspeciesISIN = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdateEspeciesISIN(ByVal obj As CFEspecies.EspeciesISIN)
		Dim p1 As System.Nullable(Of Integer) = obj.IDEspeciesISIN
		Me.uspOyDNet_Maestros_ISIN_Actualizar(obj.ISIN, obj.Descripcion, obj.IDEspecie, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDEspeciesISIN = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeleteEspeciesISIN(ByVal obj As CFEspecies.EspeciesISIN)
		Me.uspOyDNet_Maestros_ISIN_Eliminar(obj.IDEspecie, CType(obj.IDEspeciesISIN,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub

    Private Sub DeleteEspeciesISINFungible(ByVal obj As CFEspecies.EspeciesISINFungible)
		Me.uspOyDNet_Maestros_ISINFungible_Eliminar(CType(obj.IDIsinFungible,System.Nullable(Of Integer)), obj.IDEspecie, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(Nothing, String))
	End Sub
	
	Private Sub InsertEspeciesClaseInversion(ByVal obj As CFEspecies.EspeciesClaseInversion)
		Dim p1 As System.Nullable(Of Short) = obj.intIdTipoEspecieClaseInversion
		Dim p2 As String = obj.strMsgValidacion
		Me.uspOyDNet_Maestros_EspeciesClaseInversion_Actualizar(p1, obj.strDescripcion, obj.strCodigo, obj.strUsuario, obj.strMetodoValoracion, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), p2, CType(obj.intTipoTitulo,System.Nullable(Of Integer)), obj.strFactorRiesgo)
		obj.intIdTipoEspecieClaseInversion = p1.GetValueOrDefault
		obj.strMsgValidacion = p2
	End Sub
	
	Private Sub UpdateEspeciesClaseInversion(ByVal obj As CFEspecies.EspeciesClaseInversion)
		Dim p1 As System.Nullable(Of Short) = obj.intIdTipoEspecieClaseInversion
		Dim p2 As String = obj.strMsgValidacion
		Me.uspOyDNet_Maestros_EspeciesClaseInversion_Actualizar(p1, obj.strDescripcion, obj.strCodigo, obj.strUsuario, obj.strMetodoValoracion, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), p2, CType(obj.intTipoTitulo,System.Nullable(Of Integer)), obj.strFactorRiesgo)
		obj.intIdTipoEspecieClaseInversion = p1.GetValueOrDefault
		obj.strMsgValidacion = p2
	End Sub
	
	Private Sub DeleteEspeciesClaseInversion(ByVal obj As CFEspecies.EspeciesClaseInversion)
		Dim p1 As String = obj.strMsgValidacion
		Me.uspOyDNet_Maestros_EspeciesClaseInversion_Eliminar(CType(obj.intIdTipoEspecieClaseInversion,System.Nullable(Of Short)), obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), p1)
		obj.strMsgValidacion = p1
	End Sub
	
	Private Sub InsertEmisore(ByVal obj As CFEspecies.Emisore)
		Dim p1 As System.Nullable(of System.Int32) = obj.ID
		Dim p2 As System.Nullable(Of Integer) = obj.IdEmisor
		Me.uspOyDNet_Maestros_Emisores_Actualizar(p1, obj.Nombre, CType(obj.NIT,System.Nullable(Of Decimal)), obj.Telefono1, obj.Telefono2, obj.Fax1, obj.Fax2, obj.Direccion, obj.Internet, obj.EMail, obj.IDGrupo, obj.IDSubGrupo, obj.IDPoblacion, obj.IDDepartamento, obj.IDPais, obj.Usuario, obj.Contacto, p2, obj.CodigoEmisor, obj.VigiladoSuper, obj.intIdTipoEntidad, obj.logEsPatrimonioAutonomo, CType(obj.logActivo,System.Nullable(Of Boolean)), obj.intIdCodigoCIIU, obj.intIdCalificadora, CType(obj.FuenteExtranjero,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IdEmisor = p2.GetValueOrDefault
	End Sub
	
	Private Sub UpdateEmisore(ByVal obj As CFEspecies.Emisore)
		Dim p1 As System.Nullable(of System.Int32) = obj.ID
		Dim p2 As System.Nullable(Of Integer) = obj.IdEmisor
		Me.uspOyDNet_Maestros_Emisores_Actualizar(p1, obj.Nombre, CType(obj.NIT,System.Nullable(Of Decimal)), obj.Telefono1, obj.Telefono2, obj.Fax1, obj.Fax2, obj.Direccion, obj.Internet, obj.EMail, obj.IDGrupo, obj.IDSubGrupo, obj.IDPoblacion, obj.IDDepartamento, obj.IDPais, obj.Usuario, obj.Contacto, p2, obj.CodigoEmisor, obj.VigiladoSuper, obj.intIdTipoEntidad, obj.logEsPatrimonioAutonomo, CType(obj.logActivo,System.Nullable(Of Boolean)), obj.intIdCodigoCIIU, obj.intIdCalificadora, CType(obj.FuenteExtranjero,System.Nullable(Of Boolean)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.ID = p1
		obj.IdEmisor = p2.GetValueOrDefault
	End Sub
	
	Private Sub DeleteEmisore(ByVal obj As CFEspecies.Emisore)
		Me.uspOyDNet_Maestros_Emisores_Eliminar(CType(obj.IdEmisor,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertEspeciesDividendos(ByVal obj As CFEspecies.EspeciesDividendos)
		Dim p1 As System.Nullable(Of Integer) = obj.IDDividendos
		Me.uspOyDNet_Maestros_Dividendos_Actualizar(obj.IDEspecie, CType(obj.InicioVigencia,System.Nullable(Of Date)), CType(obj.FinVigencia,System.Nullable(Of Date)), CType(obj.Causacion,System.Nullable(Of Double)), CType(obj.InicioPago,System.Nullable(Of Date)), CType(obj.FinPago,System.Nullable(Of Date)), obj.IDCtrlDividendo, CType(obj.CantidadAcciones,System.Nullable(Of Double)), CType(obj.CantidadPesos,System.Nullable(Of Decimal)), p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.PorcentajeRteFteDeclarante,System.Nullable(Of Double)), CType(obj.PorcentajeRteFteNODeclarante,System.Nullable(Of Double)), CType(obj.Gravado,System.Nullable(Of Double)), CType(obj.intIDConceptoRetencionGravados,System.Nullable(Of Integer)), CType(obj.intIDConceptoRetencionNoGravados,System.Nullable(Of Integer)))
		obj.IDDividendos = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdateEspeciesDividendos(ByVal obj As CFEspecies.EspeciesDividendos)
		Dim p1 As System.Nullable(Of Integer) = obj.IDDividendos
		Me.uspOyDNet_Maestros_Dividendos_Actualizar(obj.IDEspecie, CType(obj.InicioVigencia,System.Nullable(Of Date)), CType(obj.FinVigencia,System.Nullable(Of Date)), CType(obj.Causacion,System.Nullable(Of Double)), CType(obj.InicioPago,System.Nullable(Of Date)), CType(obj.FinPago,System.Nullable(Of Date)), obj.IDCtrlDividendo, CType(obj.CantidadAcciones,System.Nullable(Of Double)), CType(obj.CantidadPesos,System.Nullable(Of Decimal)), p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.PorcentajeRteFteDeclarante,System.Nullable(Of Double)), CType(obj.PorcentajeRteFteNODeclarante,System.Nullable(Of Double)), CType(obj.Gravado,System.Nullable(Of Double)), CType(obj.intIDConceptoRetencionGravados,System.Nullable(Of Integer)), CType(obj.intIDConceptoRetencionNoGravados,System.Nullable(Of Integer)))
		obj.IDDividendos = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeleteEspeciesDividendos(ByVal obj As CFEspecies.EspeciesDividendos)
		Me.uspOyDNet_Maestros_Dividendos_Eliminar(obj.IDEspecie, CType(obj.IDDividendos,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertEspeciesPrecios(ByVal obj As CFEspecies.EspeciesPrecios)
		Dim p1 As System.Nullable(Of Integer) = obj.IDPreciosEspecie
		Me.uspOyDNet_Maestros_Precios_Actualizar(CType(obj.IdBolsa,System.Nullable(Of Integer)), obj.IdEspecie, CType(obj.Cierre,System.Nullable(Of Date)), CType(obj.Precio,System.Nullable(Of Decimal)), p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDPreciosEspecie = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdateEspeciesPrecios(ByVal obj As CFEspecies.EspeciesPrecios)
		Dim p1 As System.Nullable(Of Integer) = obj.IDPreciosEspecie
		Me.uspOyDNet_Maestros_Precios_Actualizar(CType(obj.IdBolsa,System.Nullable(Of Integer)), obj.IdEspecie, CType(obj.Cierre,System.Nullable(Of Date)), CType(obj.Precio,System.Nullable(Of Decimal)), p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDPreciosEspecie = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeleteEspeciesPrecios(ByVal obj As CFEspecies.EspeciesPrecios)
		Me.uspOyDNet_Maestros_Precios_Eliminar(CType(obj.IDPreciosEspecie,System.Nullable(Of Integer)), obj.IdEspecie, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertClasesEspecie(ByVal obj As CFEspecies.ClasesEspecie)
		Dim p1 As Integer = obj.IDClasesEspecies
		Me.uspOyDNet_Maestros_ClasesEspecies_Actualizar(p1, obj.IDClaseEspecie, CType(obj.AplicaAccion,System.Nullable(Of Boolean)), obj.Nombre, obj.strCodInversionSuper, obj.Usuario, obj.IdProducto, obj.ClaseContableTitulo, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.TituloCarteraColectiva,System.Nullable(Of Boolean)), obj.CodigoClaseDeceval)
		obj.IDClasesEspecies = p1
	End Sub
	
	Private Sub UpdateClasesEspecie(ByVal obj As CFEspecies.ClasesEspecie)
		Dim p1 As Integer = obj.IDClasesEspecies
		Me.uspOyDNet_Maestros_ClasesEspecies_Actualizar(p1, obj.IDClaseEspecie, CType(obj.AplicaAccion,System.Nullable(Of Boolean)), obj.Nombre, obj.strCodInversionSuper, obj.Usuario, obj.IdProducto, obj.ClaseContableTitulo, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)), CType(obj.TituloCarteraColectiva,System.Nullable(Of Boolean)), obj.CodigoClaseDeceval)
		obj.IDClasesEspecies = p1
	End Sub
	
	Private Sub DeleteClasesEspecie(ByVal obj As CFEspecies.ClasesEspecie)
		Dim p1 As String = obj.Msg
		Me.uspOyDNet_Maestros_ClasesEspecies_Eliminar(obj.IDClasesEspecies, CType(Nothing, String), p1, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.Msg = p1
	End Sub
	
	Private Sub InsertTiposEmisores(ByVal obj As CFEspecies.TiposEmisores)
		Me.uspCalculosFinancieros_TiposEmisores_Actualizar(CType(obj.intIdTipoEmisor,System.Nullable(Of Integer)), obj.intCodTipoEmisor, obj.intIdEmisor, obj.strDescripcionTipoEmisor, obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateTiposEmisores(ByVal obj As CFEspecies.TiposEmisores)
		Me.uspCalculosFinancieros_TiposEmisores_Actualizar(CType(obj.intIdTipoEmisor,System.Nullable(Of Integer)), obj.intCodTipoEmisor, obj.intIdEmisor, obj.strDescripcionTipoEmisor, obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub DeleteTiposEmisores(ByVal obj As CFEspecies.TiposEmisores)
		Me.uspCalculosFinancieros_TiposEmisores_Eliminar(CType(obj.intIdTipoEmisor,System.Nullable(Of Integer)), CType(Nothing, String), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertEspeciesNemotecnicos(ByVal obj As CFEspecies.EspeciesNemotecnicos)
		Dim p1 As System.Nullable(Of Integer) = obj.IDEspeciesBolsa
		Me.uspOyDNet_Maestros_Nemotecnicos_Actualizar(obj.IDBolsa, obj.IDEspecie, obj.Nemotecnico, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDEspeciesBolsa = p1.GetValueOrDefault
	End Sub
	
	Private Sub UpdateEspeciesNemotecnicos(ByVal obj As CFEspecies.EspeciesNemotecnicos)
		Dim p1 As System.Nullable(Of Integer) = obj.IDEspeciesBolsa
		Me.uspOyDNet_Maestros_Nemotecnicos_Actualizar(obj.IDBolsa, obj.IDEspecie, obj.Nemotecnico, p1, obj.Usuario, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
		obj.IDEspeciesBolsa = p1.GetValueOrDefault
	End Sub
	
	Private Sub DeleteEspeciesNemotecnicos(ByVal obj As CFEspecies.EspeciesNemotecnicos)
		Me.uspOyDNet_Maestros_Nemotecnicos_Eliminar(obj.IDEspecie, CType(obj.IDEspeciesBolsa,System.Nullable(Of Integer)), obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConsultaNombreEspecie(ByVal obj As CFEspecies.ConsultaNombreEspecie)
		Me.uspOyDNet_Maestros_Especies_Unificar(obj.IDRetira, CType(obj.Accion,System.Nullable(Of Char)), obj.IDUnifica, obj.InfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertPreEspecies(ByVal obj As CFEspecies.PreEspecies)
		Dim p1 As System.Nullable(Of Integer) = obj.intIDPreEspecies
		Dim p2 As String = obj.strMsgValidacion
		Me.uspCalculosFinancieros_PreEspecies_Actualizar(p1, obj.strIDEspecie, CType(obj.logEsAccion,System.Nullable(Of Boolean)), CType(obj.lngIDClase,System.Nullable(Of Integer)), CType(obj.lngIdEmisor,System.Nullable(Of Integer)), obj.strUsuario, obj.strInfoSesion, CType(Nothing, System.Nullable(Of Byte)), p2)
		obj.intIDPreEspecies = p1.GetValueOrDefault
		obj.strMsgValidacion = p2
	End Sub
	
	Private Sub UpdatePreEspecies(ByVal obj As CFEspecies.PreEspecies)
		Dim p1 As System.Nullable(Of Integer) = obj.intIDPreEspecies
		Dim p2 As String = obj.strMsgValidacion
		Me.uspCalculosFinancieros_PreEspecies_Actualizar(p1, obj.strIDEspecie, CType(obj.logEsAccion,System.Nullable(Of Boolean)), CType(obj.lngIDClase,System.Nullable(Of Integer)), CType(obj.lngIdEmisor,System.Nullable(Of Integer)), obj.strUsuario, obj.strInfoSesion, CType(Nothing, System.Nullable(Of Byte)), p2)
		obj.intIDPreEspecies = p1.GetValueOrDefault
		obj.strMsgValidacion = p2
	End Sub
	
	Private Sub DeletePreEspecies(ByVal obj As CFEspecies.PreEspecies)
		Dim p1 As String = obj.strMsgValidacion
		Me.uspCalculosFinancieros_PreEspecies_Eliminar(CType(obj.intIDPreEspecies,System.Nullable(Of Integer)), obj.strUsuario, obj.strInfoSesion, CType(Nothing, System.Nullable(Of Byte)), p1)
		obj.strMsgValidacion = p1
	End Sub
	
	Private Sub InsertEspeciesDeposito(ByVal obj As CFEspecies.EspeciesDeposito)
		Me.uspOyDNet_Maestros_Depositos_Actualizar(obj.strIDEspecie, obj.strDeposito, CType(obj.logSeleccionado,System.Nullable(Of Boolean)), obj.strUsuario, obj.strInfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub UpdateEspeciesDeposito(ByVal obj As CFEspecies.EspeciesDeposito)
		Me.uspOyDNet_Maestros_Depositos_Actualizar(obj.strIDEspecie, obj.strDeposito, CType(obj.logSeleccionado,System.Nullable(Of Boolean)), obj.strUsuario, obj.strInfoSesion, CType(Nothing, System.Nullable(Of Byte)))
	End Sub
	
	Private Sub InsertConfiguracionBursatilidad(ByVal obj As CFEspecies.ConfiguracionBursatilidad)
		Me.uspCalculosFinancieros_ConfiguracionBursatilidad_Actualizar(CType(obj.intIdConfiguracionBursatilidad,System.Nullable(Of Integer)), obj.strBursatilidad, CType(obj.logEntidadVigilada,System.Nullable(Of Boolean)), obj.strClaseInversion, obj.strClaseContable, obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), obj.strMsgValidacion)
	End Sub
	
	Private Sub UpdateConfiguracionBursatilidad(ByVal obj As CFEspecies.ConfiguracionBursatilidad)
		Me.uspCalculosFinancieros_ConfiguracionBursatilidad_Actualizar(CType(obj.intIdConfiguracionBursatilidad,System.Nullable(Of Integer)), obj.strBursatilidad, CType(obj.logEntidadVigilada,System.Nullable(Of Boolean)), obj.strClaseInversion, obj.strClaseContable, obj.strUsuario, CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), obj.strMsgValidacion)
	End Sub
	
	Private Sub DeleteConfiguracionBursatilidad(ByVal obj As CFEspecies.ConfiguracionBursatilidad)
		Me.uspCalculosFinancieros_ConfiguracionBursatilidad_Eliminar(CType(obj.intIdConfiguracionBursatilidad,System.Nullable(Of Integer)), CType(Nothing, String), CType(Nothing, System.Nullable(Of Byte)), obj.strUsuario, obj.strMsgValidacion)
	End Sub
	
	Private Sub InsertArbitrajeADR(ByVal obj As CFEspecies.ArbitrajeADR)
		Me.FuncionPorDefinir
	End Sub
	
	Private Sub UpdateArbitrajeADR(ByVal obj As CFEspecies.ArbitrajeADR)
		Me.FuncionPorDefinir
	End Sub
	
	Private Sub DeleteArbitrajeADR(ByVal obj As CFEspecies.ArbitrajeADR)
		Me.FuncionPorDefinir
	End Sub
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Especies_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrId As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEsAccion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDClase As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDTarifa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDGrupo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSubGrupo As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurVlrNominal As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNotas As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdEmisor As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDAdmonEmision As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrLeyCirculacion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmEmision As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmVencimiento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="char(2)")> ByVal pstrModalidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblnominal As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblefectiva As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngPeriodoPago As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiaDesde As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngDiaHasta As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrMercado As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogDeclaraDividendos As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogTituloMaterializado As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrSector As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(200)")> ByVal pStrEmisora As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrTipoTasaFija As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogBusIntegracion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmSuscripcion As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCaracteristicasRF As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrBursatilidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(10)")> ByVal pstrClaseInversion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrCorresponde As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrBaseCalculoInteres As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrRefTasaVble As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrAmortiza As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(1)")> ByVal pstrClaseAcciones As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrClasificacionRiesgo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogLiquidez As System.Nullable(Of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogNegociable As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As Integer,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BigInt")> ByVal pNroAcciones As Long,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDEspecies As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdMoneda As System.Nullable(Of System.Int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintCurvaEspecie As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogCodigoAvalado As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNitAvalista As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNitAdministradorAutonomo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdCalificacionInversion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal pstrISINesInsertar As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="decimal(5,2)")> ByVal pnumAdmisionGarantia As System.Nullable(Of decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrTipoEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime")> ByVal pdtmBurstalidad As System.Nullable(Of System.DateTime),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrPrefijoFactorRiesgo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50)")> ByVal pstrFactorRiesgo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1)")> ByVal pstrTipoCalculo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrClaseContableTitulo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrMacroActivo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5)")> ByVal pstrIndicador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDConceptoRetencion As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plogTituloCarteraColectiva As System.Nullable(Of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NULL")> ByVal plogDemocratizacion As System.Nullable(Of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NULL")> ByVal pxmlDetalleADR As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrId, pstrNombre, plogEsAccion, plngIDClase, plngIDTarifa, plngIDGrupo, plngIDSubGrupo, pcurVlrNominal, pstrNotas, plngIdEmisor, plngIDAdmonEmision, pstrLeyCirculacion, pdtmEmision, pdtmVencimiento, pstrModalidad, pdblnominal, pdblefectiva, plngPeriodoPago, plngDiaDesde, plngDiaHasta, pstrMercado, plogDeclaraDividendos, plogTituloMaterializado, pstrSector, plogActivo, pStrEmisora, pstrTipoTasaFija, pstrUsuario, plogBusIntegracion, pdtmSuscripcion, plogCaracteristicasRF, pstrBursatilidad, pstrClaseInversion, pstrCorresponde, pstrBaseCalculoInteres, pstrRefTasaVble, pstrAmortiza, pstrClaseAcciones, pstrClasificacionRiesgo, plogLiquidez, plogNegociable, plngIDBolsa, pNroAcciones, pintIDEspecies, pintIdMoneda, pintCurvaEspecie, plogCodigoAvalado, pstrNitAvalista, pstrNitAdministradorAutonomo, pintIdCalificacionInversion, pstrISINesInsertar, infosesion, pintErrorPersonalizado, pnumAdmisionGarantia, pstrTipoEspecie, pdtmBurstalidad, pstrPrefijoFactorRiesgo, pstrFactorRiesgo, pstrTipoCalculo, pstrClaseContableTitulo, pstrMacroActivo, pstrIndicador, pintIDConceptoRetencion, plogTituloCarteraColectiva, plogDemocratizacion, pxmlDetalleADR)
		pintIDEspecies = CType(result.GetParameterValue(43),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Especies_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByVal pstrId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrId, plogActivo, infosesion, pintErrorPersonalizado, pstrUsuario)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_Consultar")>  _
	Public Function uspOyDNet_Maestros_Especies_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrId", DbType:="varchar(15)")> ByVal strId As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdEmisor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDClase As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.Especi)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strId, strNombre, plngIdEmisor, plngIDClase, plogActivo, pdtmEmision, pdtmVencimiento, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.Especi))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Especies_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.Especi)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.Especi))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_ExisteNemo")>  _
	Public Function uspOyDNet_Maestros_Especies_ExisteNemo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15)")> ByRef pstrNemo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIdBolsa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrNemo, plngIdBolsa, infosesion, pintErrorPersonalizado)
		pstrNemo = CType(result.GetParameterValue(0),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISINFungible_Calificacion_Validar")>  _
	Public Function uspOyDNet_Maestros_ISINFungible_Calificacion_Validar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDCalificacionInversion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pdtmEmision, pdtmVencimiento, pintIDCalificacionInversion, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(3),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesISIN_Amortizaciones_Consultar")>  _
	Public Function uspOyDNet_Maestros_EspeciesISIN_Amortizaciones_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDIsinFungible As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.AmortizacionesEspeci)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDIsinFungible, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.AmortizacionesEspeci))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesISIN_Flujos_Diarios_Consultar")>  _
	Public Function uspOyDNet_Maestros_EspeciesISIN_Flujos_Diarios_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDIsinFungible As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.FlujosDiariosValoracion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDIsinFungible, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.FlujosDiariosValoracion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesEmisore_Consultar")>  _
	Public Function uspOyDNet_Maestros_EspeciesEmisore_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdEmisor As int32, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.Especie)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdEmisor, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.Especie))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISIN_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ISIN_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrISIN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDEspeciesISIN As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrISIN, pstrDescripcion, pstrIDEspecie, pintIDEspeciesISIN, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDEspeciesISIN = CType(result.GetParameterValue(3),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISIN_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ISIN_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEspeciesISIN As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, pintIDEspeciesISIN, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISIN_Consultar")>  _
	Public Function uspOyDNet_Maestros_ISIN_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesISIN)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesISIN))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISIN_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ISIN_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesISIN)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesISIN))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISINFungible_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ISINFungible_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(12)")> ByVal pstrISIN As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDescripcion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDFungible As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngEmisionDCV As System.Nullable(Of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngIDConsecutivo As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmEmision As System.Nullable(Of System.DateTime),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmVencimiento As System.Nullable(Of System.DateTime),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblTasaFacial As System.Nullable(Of System.Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrModalidad As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(5)")> ByVal plngIndicador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal plngTasaBase As System.Nullable(Of System.Int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal plngPuntosIndicador As System.Nullable(Of System.Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef pintIDIsinFungible As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAmortizada As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogPoseeRetencion As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="float")> ByVal pdblPorcentajeRetencion As System.Nullable(Of System.Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogFlujosIrregulares As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogSectorFinanciero As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogConEspecie As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlAmortizaciones As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(Max)")> ByRef pstrMsgAmortizaciones As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDCalificacionInversion As System.Nullable(Of System.Int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblTasaEfectiva As System.Nullable(Of System.Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblMinimo As System.Nullable(Of System.Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblMultiplo As System.Nullable(Of System.Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaIrregular As System.Nullable(Of System.DateTime),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDConceptoRetencion As System.Nullable(Of System.Int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrTipoEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEsAccion As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrISIN, pstrDescripcion, pstrIDEspecie, plngIDFungible, plngEmisionDCV, plngIDConsecutivo, pdtmEmision, pdtmVencimiento, pdblTasaFacial, pstrModalidad, plngIndicador, plngTasaBase, plngPuntosIndicador, pintIDIsinFungible, plogAmortizada, plogPoseeRetencion, pdblPorcentajeRetencion, plogFlujosIrregulares, plogActivo, plogSectorFinanciero, plogConEspecie, pxmlAmortizaciones, pstrMsgAmortizaciones, pstrUsuario, infosesion, pintErrorPersonalizado, pintIDCalificacionInversion, pdblTasaEfectiva, pdblMinimo, pdblMultiplo, pdtmFechaIrregular, pintIDConceptoRetencion, pstrTipoEspecie, plogEsAccion)
		pintIDIsinFungible = CType(result.GetParameterValue(13),System.Nullable(Of Integer))
		pstrMsgAmortizaciones = CType(result.GetParameterValue(22),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISINFungible_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ISINFungible_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDIsinFungible As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(Max)")> ByRef pstrMsgError As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDIsinFungible, pstrIDEspecie, infosesion, pintErrorPersonalizado, pstrMsgError)
		pstrMsgError = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISINFungible_Consultar")>  _
	Public Function uspOyDNet_Maestros_ISINFungible_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(12)")> ByVal pstrISIN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1)")> ByVal pstrTipoTasaFija As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesISINFungible)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, pstrISIN, pstrTipoTasaFija, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesISINFungible))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ISINFungible_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ISINFungible_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesISINFungible)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesISINFungible))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function uspOyDNet_Maestros_EspeciesClaseInversion_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="SMALLINT NOT NULL")> ByRef pintIdTipoEspecieClaseInversion As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(600) NOT NULL")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10) NOT NULL")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5) NULL")> ByVal pstrMetodoValoracion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintTipoTitulo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50) NULL")> ByVal pstrFactorRiesgo As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdTipoEspecieClaseInversion, pstrDescripcion, pstrCodigo, pstrUsuario, pstrMetodoValoracion, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion, pintTipoTitulo, pstrFactorRiesgo)
		pintIdTipoEspecieClaseInversion = CType(result.GetParameterValue(0),System.Nullable(Of Short))
		pstrMsgValidacion = CType(result.GetParameterValue(7),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function uspOyDNet_Maestros_EspeciesClaseInversion_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="SMALLINT NOT NULL")> ByVal pintIdTipoEspecieClaseInversion As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdTipoEspecieClaseInversion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function uspOyDNet_Maestros_EspeciesClaseInversion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesClaseInversion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesClaseInversion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function uspOyDNet_Maestros_EspeciesClaseInversion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="SMALLINT NOT NULL")> ByVal pintIdTipoEspecieClaseInversion As System.Nullable(Of Short), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(600) NOT NULL")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10) NOT NULL")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5) NULL")> ByVal pstrMetodoValoracion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int NULL")> ByVal pintTipoTitulo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50) NULL")> ByVal pstrFactorRiesgo As String) As ISingleResult(Of CFEspecies.EspeciesClaseInversion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pintIdTipoEspecieClaseInversion, pstrDescripcion, pstrCodigo, pstrMetodoValoracion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pintTipoTitulo, pstrFactorRiesgo)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesClaseInversion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Emisores_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Emisores_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef plngID As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal plngNIT As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrTelefono2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrFax1 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(25)")> ByVal pstrFax2 As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrDireccion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrInternet As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrEMail As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDGrupo As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDSubGrupo As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPoblacion As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDDepartamento As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDPais As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrContacto As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIdEmisor As System.Nullable(of System.int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(5)")> ByVal plngCodigoEmisor As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogVigiladoSuper As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdTipoEntidad As System.Nullable(Of int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEsPatrimonioAutonomo As System.Nullable(of System.Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogActivo As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdCodigoCIIU As System.Nullable(Of int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdCalificadora As System.Nullable(Of int32),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal plogFuenteExtranjero As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngID, pstrNombre, plngNIT, pstrTelefono1, pstrTelefono2, pstrFax1, pstrFax2, pstrDireccion, pstrInternet, pstrEMail, plngIDGrupo, plngIDSubGrupo, plngIDPoblacion, plngIDDepartamento, plngIDPais, pstrUsuario, pstrContacto, pintIdEmisor, plngCodigoEmisor, plogVigiladoSuper, pintIdTipoEntidad, plogEsPatrimonioAutonomo, plogActivo, pintIdCodigoCIIU, pintIdCalificadora, plogFuenteExtranjero, infosesion, pintErrorPersonalizado)
		plngID = CType(result.GetParameterValue(0),System.Nullable(of System.int32))
		pintIdEmisor = CType(result.GetParameterValue(17),System.Nullable(of System.int32))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Emisores_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Emisores_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIdEmisor As System.Nullable(of System.int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdEmisor, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Emisores_Consultar")>  _
	Public Function uspOyDNet_Maestros_Emisores_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.Emisore)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.Emisore))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Emisores_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Emisores_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.Emisore)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.Emisore))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Dividendos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Dividendos_Actualizar( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmInicioVigencia As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFinVigencia As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal plngCausacion As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmInicioPago As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmFinPago As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrIDCtrlDividendo As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal plngCantidadAcciones As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="numeric")> ByVal pcurCantidadPesos As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDDividendos As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPorcentajeRteFteDeclarante As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPorcentajeRteFteNODeclarante As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblGravado As System.Nullable(Of Double),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDConceptoRetencionGravados As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDConceptoRetencionNoGravados As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdEspecie, pdtmInicioVigencia, pdtmFinVigencia, plngCausacion, pdtmInicioPago, pdtmFinPago, pstrIDCtrlDividendo, plngCantidadAcciones, pcurCantidadPesos, pintIDDividendos, pstrUsuario, infosesion, pintErrorPersonalizado, pdblPorcentajeRteFteDeclarante, pdblPorcentajeRteFteNODeclarante, pdblGravado, pintIDConceptoRetencionGravados, pintIDConceptoRetencionNoGravados)
		pintIDDividendos = CType(result.GetParameterValue(9),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Dividendos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Dividendos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDDividendos As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, pintIDDividendos, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Dividendos_Consultar")>  _
	Public Function uspOyDNet_Maestros_Dividendos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIdEspecie", DbType:="varchar(15)")> ByVal strIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesDividendos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strIdEspecie, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesDividendos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Dividendos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Dividendos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesDividendos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesDividendos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Precios_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Precios_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="datetime")> ByVal pdtmCierre As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="money")> ByVal pcurPrecio As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDPreciosEspecie As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDBolsa, pstrIdEspecie, pdtmCierre, pcurPrecio, pintIDPreciosEspecie, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDPreciosEspecie = CType(result.GetParameterValue(4),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Precios_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Precios_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDPreciosEspecie As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPreciosEspecie, pstrIdEspecie, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Precios_Consultar")>  _
	Public Function uspOyDNet_Maestros_Precios_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIdEspecie", DbType:="varchar(15)")> ByVal strIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesPrecios)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strIdEspecie, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesPrecios))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Precios_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Precios_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesPrecios)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesPrecios))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasesEspecies_Actualizar")>  _
	Public Function uspOyDNet_Maestros_ClasesEspecies_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDClasesEspecies As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogAplicaAccion As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(50)")> ByVal pstrNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrCodInversionSuper As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIdProducto As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2)")> ByVal pstrClaseContableTitulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogTituloCarteraColectiva As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrCodigoClaseDeceval As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClasesEspecies, plngID, plogAplicaAccion, pstrNombre, pstrCodInversionSuper, pstrUsuario, plngIdProducto, pstrClaseContableTitulo, infosesion, pintErrorPersonalizado, plogTituloCarteraColectiva, pstrCodigoClaseDeceval)
		pintIDClasesEspecies = CType(result.GetParameterValue(0),Integer)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasesEspecies_Eliminar")>  _
	Public Function uspOyDNet_Maestros_ClasesEspecies_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDClasesEspecies As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(2000)")> ByRef strMsg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDClasesEspecies, pstrUsuario, strMsg, infosesion, pintErrorPersonalizado)
		strMsg = CType(result.GetParameterValue(2),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasesEspecies_Consultar")>  _
	Public Function uspOyDNet_Maestros_ClasesEspecies_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="plngID", DbType:="int")> ByVal lngID As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrNombre", DbType:="varchar(50)")> ByVal strNombre As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrCodInversionSuper As String) As ISingleResult(Of CFEspecies.ClasesEspecie)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), lngID, strNombre, infosesion, pintErrorPersonalizado, pstrCodInversionSuper)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ClasesEspecie))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_ClasesEspecies_Filtrar")>  _
	Public Function uspOyDNet_Maestros_ClasesEspecies_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.ClasesEspecie)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ClasesEspecie))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_TiposEmisores_Actualizar")>  _
	Public Function uspCalculosFinancieros_TiposEmisores_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdTipoEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCodTipoEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal pstrDescripcionTipoEmisor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdTipoEmisor, pintCodTipoEmisor, pintIdEmisor, pstrDescripcionTipoEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_TiposEmisores_Filtrar")>  _
	Public Function uspCalculosFinancieros_TiposEmisores_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.TiposEmisores)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.TiposEmisores))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_TiposEmisores_Eliminar")>  _
	Public Function uspCalculosFinancieros_TiposEmisores_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdTipoEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdTipoEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_TiposEmisores_Consultar")>  _
	Public Function uspCalculosFinancieros_TiposEmisores_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdTipoEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCodTipoEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.TiposEmisores)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdTipoEmisor, pintCodTipoEmisor, pintIdEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.TiposEmisores))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Totales_Consultar")>  _
	Public Function uspOyDNet_Maestros_Totales_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesTotales)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesTotales))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Nemotecnicos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Nemotecnicos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal plngIDBolsa As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrNemotecnico As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByRef pintIDEspeciesBolsa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), plngIDBolsa, pstrIdEspecie, pstrNemotecnico, pintIDEspeciesBolsa, pstrUsuario, infosesion, pintErrorPersonalizado)
		pintIDEspeciesBolsa = CType(result.GetParameterValue(3),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Nemotecnicos_Eliminar")>  _
	Public Function uspOyDNet_Maestros_Nemotecnicos_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintIDEspeciesBolsa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdEspecie, pintIDEspeciesBolsa, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Nemotecnicos_Consultar")>  _
	Public Function uspOyDNet_Maestros_Nemotecnicos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIdEspecie", DbType:="varchar(15)")> ByVal strIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesNemotecnicos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strIdEspecie, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesNemotecnicos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Nemotecnicos_Filtrar")>  _
	Public Function uspOyDNet_Maestros_Nemotecnicos_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal infosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesNemotecnicos)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, infosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesNemotecnicos))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_Unificar")>  _
	Public Function uspOyDNet_Maestros_Especies_Unificar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdRetira As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdUnifica As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdRetira, pstrAccion, pstrIdUnifica, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_Consultar_Unificar")>  _
	Public Function uspOyDNet_Maestros_Especies_Consultar_Unificar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdRetira As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.ConsultaNombreEspecie)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdRetira, pstrAccion, infoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ConsultaNombreEspecie))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_EspeciesISIN_Unificar")>  _
	Public Function uspOyDNet_Maestros_EspeciesISIN_Unificar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdIsinRetira As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pstrAccion As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdisinUnifica As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByRef pstrDescIsin As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="InfoSesion", DbType:="VarChar(1000)")> ByVal infoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIdIsinRetira, pstrAccion, pstrIdisinUnifica, pstrIdEspecie, pstrDescIsin, infoSesion, pintErrorPersonalizado)
		pstrDescIsin = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_PreEspecies_Actualizar")>  _
	Public Function uspCalculosFinancieros_PreEspecies_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByRef pintIDPreEspecies As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NOT NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogEsAccion As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngIDClase As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngIdEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(max) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPreEspecies, pstrIDEspecie, plogEsAccion, plngIDClase, plngIdEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pintIDPreEspecies = CType(result.GetParameterValue(0),System.Nullable(Of Integer))
		pstrMsgValidacion = CType(result.GetParameterValue(8),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_PreEspecies_Eliminar")>  _
	Public Function uspCalculosFinancieros_PreEspecies_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDPreEspecies As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDPreEspecies, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		pstrMsgValidacion = CType(result.GetParameterValue(4),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_PreEspecies_Filtrar")>  _
	Public Function uspCalculosFinancieros_PreEspecies_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.PreEspecies)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.PreEspecies))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_PreEspecies_Consultar")>  _
	Public Function uspCalculosFinancieros_PreEspecies_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15) NOT NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogEsAccion As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngIDClase As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal plngIdEmisor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.PreEspecies)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrIDEspecie, plogEsAccion, plngIDClase, plngIdEmisor, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.PreEspecies))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Depositos_Actualizar")>  _
	Public Function uspOyDNet_Maestros_Depositos_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NOT NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NOT NULL")> ByVal pstrDeposito As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogSeleccionado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, pstrDeposito, plogSeleccionado, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Depositos_Consultar")>  _
	Public Function uspOyDNet_Maestros_Depositos_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15) NOT NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.EspeciesDeposito)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrIDEspecie, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.EspeciesDeposito))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinanciero_ConceptoRetencion_Consultar")>  _
	Public Function uspCalculosFinanciero_ConceptoRetencion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDConceptoRetencion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef pdblPorcentajeRetencion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIDConceptoRetencion, pdblPorcentajeRetencion, pstrInfosesion, pintErrorPersonalizado)
		pdblPorcentajeRetencion = CType(result.GetParameterValue(1),System.Nullable(Of Double))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_CalculosTasaFacial_Calcular")>  _
	Public Function uspCalculosFinancieros_CalculosTasaFacial_Calcular(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrTipoCalculo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorNominal As System.Nullable(Of System.Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblValorEfectiva As System.Nullable(Of System.Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(2)")> ByVal pstrModalidad As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintBaseCupon As System.Nullable(Of System.Int32), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuarioWindows As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrMaquina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.Operaciones_CalculosTasaFacial_Calcular)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrTipoCalculo, pdblValorNominal, pdblValorEfectiva, pstrModalidad, pdtmFechaEmision, pdtmFechaVencimiento, pintBaseCupon, pstrUsuario, pstrUsuarioWindows, pstrMaquina, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.Operaciones_CalculosTasaFacial_Calcular))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConfiguracionBursatilidad_Actualizar")>  _
	Public Function uspCalculosFinancieros_ConfiguracionBursatilidad_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdConfiguracionBursatilidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrBursatilidad As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEntidadVigilada As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(15)")> ByVal pstrClaseInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrClaseContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByVal pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdConfiguracionBursatilidad, pstrBursatilidad, plogEntidadVigilada, pstrClaseInversion, pstrClaseContable, pstrUsuario, pstrInfosesion, pintErrorPersonalizado, pstrMsgValidacion)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConfiguracionBursatilidad_Eliminar")>  _
	Public Function uspCalculosFinancieros_ConfiguracionBursatilidad_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIdConfiguracionBursatilidad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByVal pstrMsgValidacion As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pintIdConfiguracionBursatilidad, pstrInfosesion, pintErrorPersonalizado, pstrUsuario, pstrMsgValidacion)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConfiguracionBursatilidad_Consultar")>  _
	Public Function uspCalculosFinancieros_ConfiguracionBursatilidad_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrBursatilidad As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="bit")> ByVal plogEntidadVigilada As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal pstrClaseInversion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(80)")> ByVal pstrClaseContable As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByVal pstrMsgValidacion As String) As ISingleResult(Of CFEspecies.ConfiguracionBursatilidad)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrAccion, pstrBursatilidad, plogEntidadVigilada, pstrClaseInversion, pstrClaseContable, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ConfiguracionBursatilidad))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConfiguracionBursatilidad_Filtrar")>  _
	Public Function uspCalculosFinancieros_ConfiguracionBursatilidad_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrfiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.ConfiguracionBursatilidad)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrfiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ConfiguracionBursatilidad))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConsultarValoresDefectoBursatilidad")>  _
	Public Function uspCalculosFinancieros_ConsultarValoresDefectoBursatilidad(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(10)")> ByVal pstrBursatilidad As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="int")> ByVal pintEmisor As Integer, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar(8000)")> ByRef pstrValoresPorDefecto As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrBursatilidad, pintEmisor, pstrValoresPorDefecto)
		pstrValoresPorDefecto = CType(result.GetParameterValue(2),String)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspOyDNet_Maestros_Especies_ConceptoRetencion_Consultar")>  _
	Public Function uspOyDNet_Maestros_Especies_ConceptoRetencion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.ConceptoRetencion)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ConceptoRetencion))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Maestros_Especies_ADR_Consultar")>  _
	Public Function uspOyDNet_Maestros_Especies_ADR_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="pstrIdEspecie", DbType:="varchar(15)")> ByVal strIdEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfosesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFEspecies.ArbitrajeADR)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), strIdEspecie, pstrInfosesion, pintErrorPersonalizado)
		Return CType(result.ReturnValue,ISingleResult(Of CFEspecies.ArbitrajeADR))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute()>  _
	Public Function FuncionPorDefinir() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

Namespace CFEspecies
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspecies")>  _
	Partial Public Class Especi
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _Id As String
		
		Private _Nombre As String
		
		Private _EsAccion As Boolean
		
		Private _IDClase As Integer
		
		Private _IDTarifa As Integer
		
		Private _IDGrupo As Integer
		
		Private _IDSubGrupo As Integer
		
		Private _VlrNominal As System.Nullable(Of Decimal)
		
		Private _Notas As String
		
		Private _IdEmisor As Integer
		
		Private _IDAdmonEmision As Integer
		
		Private _NombreAdmonEmision As String
		
		Private _LeyCirculacion As String
		
		Private _Emision As System.Nullable(Of Date)
		
		Private _Vencimiento As System.Nullable(Of Date)
		
		Private _Plazo As String
		
		Private _Modalidad As String
		
		Private _TasaInicial As System.Nullable(Of Double)
		
		Private _TasaNominal As System.Nullable(Of Double)
		
		Private _PeriodoPago As Integer
		
		Private _DiaDesde As Integer
		
		Private _DiaHasta As Integer
		
		Private _Mercado As String
		
		Private _DeclaraDividendos As Boolean
		
		Private _TituloMaterializado As Boolean
		
		Private _Sector As String
		
		Private _Activo As Boolean
		
		Private _Emisora As String
		
		Private _TipoTasaFija As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _BusIntegracion As Boolean
		
		Private _Suscripcion As System.Nullable(Of Date)
		
		Private _CaracteristicasRF As Boolean
		
		Private _Bursatilidad As String
		
		Private _ClaseInversion As String
		
		Private _Corresponde As String
		
		Private _BaseCalculoInteres As String
		
		Private _RefTasaVble As String
		
		Private _Amortiza As String
		
		Private _ClaseAcciones As String
		
		Private _Liquidez As System.Nullable(Of System.Boolean)
		
		Private _Negociable As System.Nullable(Of Boolean)
		
		Private _IDBolsa As Integer
		
		Private _NroAcciones As Long
		
		Private _IDEspecies As Integer
		
		Private _Nombre_Emisor As String
		
		Private _ClasificacionRiesgo As String
		
		Private _Valor As String
		
		Private _strAccion As String
		
		Private _strEmisor As String
		
		Private _strClase As String
		
		Private _IDMoneda As System.Nullable(Of System.int32)
		
		Private _CurvaEspecie As System.Nullable(Of System.int32)
		
		Private _CodigoAvalado As System.Nullable(Of System.Boolean)
		
		Private _NitAvalista As String
		
		Private _NitAdministradorAutonomo As String
		
		Private _IDCalificacionInversion As System.Nullable(Of System.int32)
		
		Private _ISINesInsertar As String
		
		Private _strPrecreada As String
		
		Private _InfoSesion As String
		
		Private _AdmisionGarantia As System.Nullable(Of decimal)
		
		Private _TipoEspecie As String
		
		Private _FechaBursatilidad As System.Nullable(Of Date)
		
		Private _PrefijoFactorRiesgo As String
		
		Private _FactorRiesgo As String
		
		Private _TipoCalculo As String
		
		Private _ClaseContableTitulo As String
		
		Private _MacroActivo As String
		
		Private _Indicador As String
		
		Private _ConceptoRetencion As System.Nullable(Of System.int32)
		
		Private _TituloParticipativo As System.Nullable(Of Boolean)
		
		Private _logDemocratizacion As System.Nullable (of System.Boolean)
		
		Private _xmlDetalleADR As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIdChanging(value As String)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnEsAccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsAccionChanged()
    End Sub
    Partial Private Sub OnIDClaseChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClaseChanged()
    End Sub
    Partial Private Sub OnIDTarifaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDTarifaChanged()
    End Sub
    Partial Private Sub OnIDGrupoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGrupoChanged()
    End Sub
    Partial Private Sub OnIDSubGrupoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSubGrupoChanged()
    End Sub
    Partial Private Sub OnVlrNominalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVlrNominalChanged()
    End Sub
    Partial Private Sub OnNotasChanging(value As String)
    End Sub
    Partial Private Sub OnNotasChanged()
    End Sub
    Partial Private Sub OnIdEmisorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEmisorChanged()
    End Sub
    Partial Private Sub OnIDAdmonEmisionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAdmonEmisionChanged()
    End Sub
    Partial Private Sub OnNombreAdmonEmisionChanging(value As String)
    End Sub
    Partial Private Sub OnNombreAdmonEmisionChanged()
    End Sub
    Partial Private Sub OnLeyCirculacionChanging(value As String)
    End Sub
    Partial Private Sub OnLeyCirculacionChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnPlazoChanging(value As String)
    End Sub
    Partial Private Sub OnPlazoChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnTasaInicialChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaInicialChanged()
    End Sub
    Partial Private Sub OnTasaNominalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTasaNominalChanged()
    End Sub
    Partial Private Sub OnPeriodoPagoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPeriodoPagoChanged()
    End Sub
    Partial Private Sub OnDiaDesdeChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiaDesdeChanged()
    End Sub
    Partial Private Sub OnDiaHastaChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiaHastaChanged()
    End Sub
    Partial Private Sub OnMercadoChanging(value As String)
    End Sub
    Partial Private Sub OnMercadoChanged()
    End Sub
    Partial Private Sub OnDeclaraDividendosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDeclaraDividendosChanged()
    End Sub
    Partial Private Sub OnTituloMaterializadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTituloMaterializadoChanged()
    End Sub
    Partial Private Sub OnSectorChanging(value As String)
    End Sub
    Partial Private Sub OnSectorChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnEmisoraChanging(value As String)
    End Sub
    Partial Private Sub OnEmisoraChanged()
    End Sub
    Partial Private Sub OnTipoTasaFijaChanging(value As String)
    End Sub
    Partial Private Sub OnTipoTasaFijaChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnBusIntegracionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBusIntegracionChanged()
    End Sub
    Partial Private Sub OnSuscripcionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSuscripcionChanged()
    End Sub
    Partial Private Sub OnCaracteristicasRFChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCaracteristicasRFChanged()
    End Sub
    Partial Private Sub OnBursatilidadChanging(value As String)
    End Sub
    Partial Private Sub OnBursatilidadChanged()
    End Sub
    Partial Private Sub OnClaseInversionChanging(value As String)
    End Sub
    Partial Private Sub OnClaseInversionChanged()
    End Sub
    Partial Private Sub OnCorrespondeChanging(value As String)
    End Sub
    Partial Private Sub OnCorrespondeChanged()
    End Sub
    Partial Private Sub OnBaseCalculoInteresChanging(value As String)
    End Sub
    Partial Private Sub OnBaseCalculoInteresChanged()
    End Sub
    Partial Private Sub OnRefTasaVbleChanging(value As String)
    End Sub
    Partial Private Sub OnRefTasaVbleChanged()
    End Sub
    Partial Private Sub OnAmortizaChanging(value As String)
    End Sub
    Partial Private Sub OnAmortizaChanged()
    End Sub
    Partial Private Sub OnClaseAccionesChanging(value As String)
    End Sub
    Partial Private Sub OnClaseAccionesChanged()
    End Sub
    Partial Private Sub OnLiquidezChanging(value As System.Nullable(Of System.Boolean))
    End Sub
    Partial Private Sub OnLiquidezChanged()
    End Sub
    Partial Private Sub OnNegociableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnNegociableChanged()
    End Sub
    Partial Private Sub OnIDBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBolsaChanged()
    End Sub
    Partial Private Sub OnNroAccionesChanging(value As Long)
    End Sub
    Partial Private Sub OnNroAccionesChanged()
    End Sub
    Partial Private Sub OnIDEspeciesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEspeciesChanged()
    End Sub
    Partial Private Sub OnNombre_EmisorChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_EmisorChanged()
    End Sub
    Partial Private Sub OnClasificacionRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnClasificacionRiesgoChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnstrAccionChanging(value As String)
    End Sub
    Partial Private Sub OnstrAccionChanged()
    End Sub
    Partial Private Sub OnstrEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnstrEmisorChanged()
    End Sub
    Partial Private Sub OnstrClaseChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseChanged()
    End Sub
    Partial Private Sub OnIDMonedaChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIDMonedaChanged()
    End Sub
    Partial Private Sub OnCurvaEspecieChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnCurvaEspecieChanged()
    End Sub
    Partial Private Sub OnCodigoAvaladoChanging(value As System.Nullable(Of System.Boolean))
    End Sub
    Partial Private Sub OnCodigoAvaladoChanged()
    End Sub
    Partial Private Sub OnNitAvalistaChanging(value As String)
    End Sub
    Partial Private Sub OnNitAvalistaChanged()
    End Sub
    Partial Private Sub OnNitAdministradorAutonomoChanging(value As String)
    End Sub
    Partial Private Sub OnNitAdministradorAutonomoChanged()
    End Sub
    Partial Private Sub OnIDCalificacionInversionChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnIDCalificacionInversionChanged()
    End Sub
    Partial Private Sub OnISINesInsertarChanging(value As String)
    End Sub
    Partial Private Sub OnISINesInsertarChanged()
    End Sub
    Partial Private Sub OnstrPrecreadaChanging(value As String)
    End Sub
    Partial Private Sub OnstrPrecreadaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnAdmisionGarantiaChanging(value As System.Nullable(Of decimal))
    End Sub
    Partial Private Sub OnAdmisionGarantiaChanged()
    End Sub
    Partial Private Sub OnTipoEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEspecieChanged()
    End Sub
    Partial Private Sub OnFechaBursatilidadChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaBursatilidadChanged()
    End Sub
    Partial Private Sub OnPrefijoFactorRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnPrefijoFactorRiesgoChanged()
    End Sub
    Partial Private Sub OnFactorRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnFactorRiesgoChanged()
    End Sub
    Partial Private Sub OnTipoCalculoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoCalculoChanged()
    End Sub
    Partial Private Sub OnClaseContableTituloChanging(value As String)
    End Sub
    Partial Private Sub OnClaseContableTituloChanged()
    End Sub
    Partial Private Sub OnMacroActivoChanging(value As String)
    End Sub
    Partial Private Sub OnMacroActivoChanged()
    End Sub
    Partial Private Sub OnIndicadorChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorChanged()
    End Sub
    Partial Private Sub OnConceptoRetencionChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnConceptoRetencionChanged()
    End Sub
    Partial Private Sub OnTituloParticipativoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTituloParticipativoChanged()
    End Sub
    Partial Private Sub OnlogDemocratizacionChanging(value As System.Nullable (of System.Boolean))
    End Sub
    Partial Private Sub OnlogDemocratizacionChanged()
    End Sub
    Partial Private Sub OnxmlDetalleADRChanging(value As String)
    End Sub
    Partial Private Sub OnxmlDetalleADRChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strId", Storage:="_Id", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property Id() As String
			Get
				Return Me._Id
			End Get
			Set
				If (String.Equals(Me._Id, value) = false) Then
					Me.OnIdChanging(value)
					Me.SendPropertyChanging
					Me._Id = value
					Me.SendPropertyChanged("Id")
					Me.OnIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL")>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEsAccion", Storage:="_EsAccion", DbType:="Bit NOT NULL")>  _
		Public Property EsAccion() As Boolean
			Get
				Return Me._EsAccion
			End Get
			Set
				If ((Me._EsAccion = value)  _
							= false) Then
					Me.OnEsAccionChanging(value)
					Me.SendPropertyChanging
					Me._EsAccion = value
					Me.SendPropertyChanged("EsAccion")
					Me.OnEsAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDClase", Storage:="_IDClase", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDClase() As Integer
			Get
				Return Me._IDClase
			End Get
			Set
				If (Object.Equals(Me._IDClase, value) = false) Then
					Me.OnIDClaseChanging(value)
					Me.SendPropertyChanging
					Me._IDClase = value
					Me.SendPropertyChanged("IDClase")
					Me.OnIDClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDTarifa", Storage:="_IDTarifa", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDTarifa() As Integer
			Get
				Return Me._IDTarifa
			End Get
			Set
				If (Object.Equals(Me._IDTarifa, value) = false) Then
					Me.OnIDTarifaChanging(value)
					Me.SendPropertyChanging
					Me._IDTarifa = value
					Me.SendPropertyChanged("IDTarifa")
					Me.OnIDTarifaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDGrupo", Storage:="_IDGrupo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDGrupo() As Integer
			Get
				Return Me._IDGrupo
			End Get
			Set
				If (Object.Equals(Me._IDGrupo, value) = false) Then
					Me.OnIDGrupoChanging(value)
					Me.SendPropertyChanging
					Me._IDGrupo = value
					Me.SendPropertyChanged("IDGrupo")
					Me.OnIDGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSubGrupo", Storage:="_IDSubGrupo", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSubGrupo() As Integer
			Get
				Return Me._IDSubGrupo
			End Get
			Set
				If (Object.Equals(Me._IDSubGrupo, value) = false) Then
					Me.OnIDSubGrupoChanging(value)
					Me.SendPropertyChanging
					Me._IDSubGrupo = value
					Me.SendPropertyChanged("IDSubGrupo")
					Me.OnIDSubGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curVlrNominal", Storage:="_VlrNominal", DbType:="Money")>  _
		Public Property VlrNominal() As System.Nullable(Of Decimal)
			Get
				Return Me._VlrNominal
			End Get
			Set
				If (Me._VlrNominal.Equals(value) = false) Then
					Me.OnVlrNominalChanging(value)
					Me.SendPropertyChanging
					Me._VlrNominal = value
					Me.SendPropertyChanged("VlrNominal")
					Me.OnVlrNominalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNotas", Storage:="_Notas", DbType:="Varchar(50)")>  _
		Public Property Notas() As String
			Get
				Return Me._Notas
			End Get
			Set
				If (String.Equals(Me._Notas, value) = false) Then
					Me.OnNotasChanging(value)
					Me.SendPropertyChanging
					Me._Notas = value
					Me.SendPropertyChanged("Notas")
					Me.OnNotasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdEmisor", Storage:="_IdEmisor", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IdEmisor() As Integer
			Get
				Return Me._IdEmisor
			End Get
			Set
				If (Object.Equals(Me._IdEmisor, value) = false) Then
					Me.OnIdEmisorChanging(value)
					Me.SendPropertyChanging
					Me._IdEmisor = value
					Me.SendPropertyChanged("IdEmisor")
					Me.OnIdEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDAdmonEmision", Storage:="_IDAdmonEmision", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDAdmonEmision() As Integer
			Get
				Return Me._IDAdmonEmision
			End Get
			Set
				If (Object.Equals(Me._IDAdmonEmision, value) = false) Then
					Me.OnIDAdmonEmisionChanging(value)
					Me.SendPropertyChanging
					Me._IDAdmonEmision = value
					Me.SendPropertyChanged("IDAdmonEmision")
					Me.OnIDAdmonEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreAdmonEmision", Storage:="_NombreAdmonEmision", DbType:="Varchar(50) NOT NULL")>  _
		Public Property NombreAdmonEmision() As String
			Get
				Return Me._NombreAdmonEmision
			End Get
			Set
				If (String.Equals(Me._NombreAdmonEmision, value) = false) Then
					Me.OnNombreAdmonEmisionChanging(value)
					Me.SendPropertyChanging
					Me._NombreAdmonEmision = value
					Me.SendPropertyChanged("NombreAdmonEmision")
					Me.OnNombreAdmonEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strLeyCirculacion", Storage:="_LeyCirculacion", DbType:="Varchar(1)")>  _
		Public Property LeyCirculacion() As String
			Get
				Return Me._LeyCirculacion
			End Get
			Set
				If (String.Equals(Me._LeyCirculacion, value) = false) Then
					Me.OnLeyCirculacionChanging(value)
					Me.SendPropertyChanging
					Me._LeyCirculacion = value
					Me.SendPropertyChanged("LeyCirculacion")
					Me.OnLeyCirculacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Emision", DbType:="Datetime")>  _
		Public Property Emision() As System.Nullable(Of Date)
			Get
				Return Me._Emision
			End Get
			Set
				If (Me._Emision.Equals(value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._Emision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Vencimiento", DbType:="Datetime")>  _
		Public Property Vencimiento() As System.Nullable(Of Date)
			Get
				Return Me._Vencimiento
			End Get
			Set
				If (Me._Vencimiento.Equals(value) = false) Then
					Me.OnVencimientoChanging(value)
					Me.SendPropertyChanging
					Me._Vencimiento = value
					Me.SendPropertyChanged("Vencimiento")
					Me.OnVencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPlazo", Storage:="_Plazo", DbType:="Varchar(10) NOT NULL")>  _
		Public Property Plazo() As String
			Get
				Return Me._Plazo
			End Get
			Set
				If (String.Equals(Me._Plazo, value) = false) Then
					Me.OnPlazoChanging(value)
					Me.SendPropertyChanging
					Me._Plazo = value
					Me.SendPropertyChanged("Plazo")
					Me.OnPlazoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Char(2)")>  _
		Public Property Modalidad() As String
			Get
				Return Me._Modalidad
			End Get
			Set
				If (String.Equals(Me._Modalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._Modalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaInicial", Storage:="_TasaInicial", DbType:="Float")>  _
		Public Property TasaInicial() As System.Nullable(Of Double)
			Get
				Return Me._TasaInicial
			End Get
			Set
				If (Me._TasaInicial.Equals(value) = false) Then
					Me.OnTasaInicialChanging(value)
					Me.SendPropertyChanging
					Me._TasaInicial = value
					Me.SendPropertyChanged("TasaInicial")
					Me.OnTasaInicialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaNominal", Storage:="_TasaNominal", DbType:="Float")>  _
		Public Property TasaNominal() As System.Nullable(Of Double)
			Get
				Return Me._TasaNominal
			End Get
			Set
				If (Me._TasaNominal.Equals(value) = false) Then
					Me.OnTasaNominalChanging(value)
					Me.SendPropertyChanging
					Me._TasaNominal = value
					Me.SendPropertyChanged("TasaNominal")
					Me.OnTasaNominalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPeriodoPago", Storage:="_PeriodoPago", DbType:="Int", CanBeNull:=true)>  _
		Public Property PeriodoPago() As Integer
			Get
				Return Me._PeriodoPago
			End Get
			Set
				If (Object.Equals(Me._PeriodoPago, value) = false) Then
					Me.OnPeriodoPagoChanging(value)
					Me.SendPropertyChanging
					Me._PeriodoPago = value
					Me.SendPropertyChanged("PeriodoPago")
					Me.OnPeriodoPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiaDesde", Storage:="_DiaDesde", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiaDesde() As Integer
			Get
				Return Me._DiaDesde
			End Get
			Set
				If (Object.Equals(Me._DiaDesde, value) = false) Then
					Me.OnDiaDesdeChanging(value)
					Me.SendPropertyChanging
					Me._DiaDesde = value
					Me.SendPropertyChanged("DiaDesde")
					Me.OnDiaDesdeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngDiaHasta", Storage:="_DiaHasta", DbType:="Int", CanBeNull:=true)>  _
		Public Property DiaHasta() As Integer
			Get
				Return Me._DiaHasta
			End Get
			Set
				If (Object.Equals(Me._DiaHasta, value) = false) Then
					Me.OnDiaHastaChanging(value)
					Me.SendPropertyChanging
					Me._DiaHasta = value
					Me.SendPropertyChanged("DiaHasta")
					Me.OnDiaHastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMercado", Storage:="_Mercado", DbType:="Varchar(1)")>  _
		Public Property Mercado() As String
			Get
				Return Me._Mercado
			End Get
			Set
				If (String.Equals(Me._Mercado, value) = false) Then
					Me.OnMercadoChanging(value)
					Me.SendPropertyChanging
					Me._Mercado = value
					Me.SendPropertyChanged("Mercado")
					Me.OnMercadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logDeclaraDividendos", Storage:="_DeclaraDividendos", DbType:="Bit NOT NULL")>  _
		Public Property DeclaraDividendos() As Boolean
			Get
				Return Me._DeclaraDividendos
			End Get
			Set
				If ((Me._DeclaraDividendos = value)  _
							= false) Then
					Me.OnDeclaraDividendosChanging(value)
					Me.SendPropertyChanging
					Me._DeclaraDividendos = value
					Me.SendPropertyChanged("DeclaraDividendos")
					Me.OnDeclaraDividendosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTituloMaterializado", Storage:="_TituloMaterializado", DbType:="Bit NOT NULL")>  _
		Public Property TituloMaterializado() As Boolean
			Get
				Return Me._TituloMaterializado
			End Get
			Set
				If ((Me._TituloMaterializado = value)  _
							= false) Then
					Me.OnTituloMaterializadoChanging(value)
					Me.SendPropertyChanging
					Me._TituloMaterializado = value
					Me.SendPropertyChanged("TituloMaterializado")
					Me.OnTituloMaterializadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strSector", Storage:="_Sector", DbType:="Varchar(2) NOT NULL")>  _
		Public Property Sector() As String
			Get
				Return Me._Sector
			End Get
			Set
				If (String.Equals(Me._Sector, value) = false) Then
					Me.OnSectorChanging(value)
					Me.SendPropertyChanging
					Me._Sector = value
					Me.SendPropertyChanged("Sector")
					Me.OnSectorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logActivo", Storage:="_Activo", DbType:="Bit NOT NULL")>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="StrEmisora", Storage:="_Emisora", DbType:="Varchar(200)")>  _
		Public Property Emisora() As String
			Get
				Return Me._Emisora
			End Get
			Set
				If (String.Equals(Me._Emisora, value) = false) Then
					Me.OnEmisoraChanging(value)
					Me.SendPropertyChanging
					Me._Emisora = value
					Me.SendPropertyChanged("Emisora")
					Me.OnEmisoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoTasaFija", Storage:="_TipoTasaFija", DbType:="Varchar(1)")>  _
		Public Property TipoTasaFija() As String
			Get
				Return Me._TipoTasaFija
			End Get
			Set
				If (String.Equals(Me._TipoTasaFija, value) = false) Then
					Me.OnTipoTasaFijaChanging(value)
					Me.SendPropertyChanging
					Me._TipoTasaFija = value
					Me.SendPropertyChanged("TipoTasaFija")
					Me.OnTipoTasaFijaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logBusIntegracion", Storage:="_BusIntegracion", DbType:="Bit NOT NULL")>  _
		Public Property BusIntegracion() As Boolean
			Get
				Return Me._BusIntegracion
			End Get
			Set
				If ((Me._BusIntegracion = value)  _
							= false) Then
					Me.OnBusIntegracionChanging(value)
					Me.SendPropertyChanging
					Me._BusIntegracion = value
					Me.SendPropertyChanged("BusIntegracion")
					Me.OnBusIntegracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmSuscripcion", Storage:="_Suscripcion", DbType:="Datetime")>  _
		Public Property Suscripcion() As System.Nullable(Of Date)
			Get
				Return Me._Suscripcion
			End Get
			Set
				If (Me._Suscripcion.Equals(value) = false) Then
					Me.OnSuscripcionChanging(value)
					Me.SendPropertyChanging
					Me._Suscripcion = value
					Me.SendPropertyChanged("Suscripcion")
					Me.OnSuscripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCaracteristicasRF", Storage:="_CaracteristicasRF", DbType:="Bit NOT NULL")>  _
		Public Property CaracteristicasRF() As Boolean
			Get
				Return Me._CaracteristicasRF
			End Get
			Set
				If ((Me._CaracteristicasRF = value)  _
							= false) Then
					Me.OnCaracteristicasRFChanging(value)
					Me.SendPropertyChanging
					Me._CaracteristicasRF = value
					Me.SendPropertyChanged("CaracteristicasRF")
					Me.OnCaracteristicasRFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strBursatilidad", Storage:="_Bursatilidad", DbType:="Varchar(1)")>  _
		Public Property Bursatilidad() As String
			Get
				Return Me._Bursatilidad
			End Get
			Set
				If (String.Equals(Me._Bursatilidad, value) = false) Then
					Me.OnBursatilidadChanging(value)
					Me.SendPropertyChanging
					Me._Bursatilidad = value
					Me.SendPropertyChanged("Bursatilidad")
					Me.OnBursatilidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseInversion", Storage:="_ClaseInversion", DbType:="Varchar(10)")>  _
		Public Property ClaseInversion() As String
			Get
				Return Me._ClaseInversion
			End Get
			Set
				If (String.Equals(Me._ClaseInversion, value) = false) Then
					Me.OnClaseInversionChanging(value)
					Me.SendPropertyChanging
					Me._ClaseInversion = value
					Me.SendPropertyChanged("ClaseInversion")
					Me.OnClaseInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCorresponde", Storage:="_Corresponde", DbType:="Varchar(1)")>  _
		Public Property Corresponde() As String
			Get
				Return Me._Corresponde
			End Get
			Set
				If (String.Equals(Me._Corresponde, value) = false) Then
					Me.OnCorrespondeChanging(value)
					Me.SendPropertyChanging
					Me._Corresponde = value
					Me.SendPropertyChanged("Corresponde")
					Me.OnCorrespondeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strBaseCalculoInteres", Storage:="_BaseCalculoInteres", DbType:="Varchar(1)")>  _
		Public Property BaseCalculoInteres() As String
			Get
				Return Me._BaseCalculoInteres
			End Get
			Set
				If (String.Equals(Me._BaseCalculoInteres, value) = false) Then
					Me.OnBaseCalculoInteresChanging(value)
					Me.SendPropertyChanging
					Me._BaseCalculoInteres = value
					Me.SendPropertyChanged("BaseCalculoInteres")
					Me.OnBaseCalculoInteresChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strRefTasaVble", Storage:="_RefTasaVble", DbType:="Varchar(1)")>  _
		Public Property RefTasaVble() As String
			Get
				Return Me._RefTasaVble
			End Get
			Set
				If (String.Equals(Me._RefTasaVble, value) = false) Then
					Me.OnRefTasaVbleChanging(value)
					Me.SendPropertyChanging
					Me._RefTasaVble = value
					Me.SendPropertyChanged("RefTasaVble")
					Me.OnRefTasaVbleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAmortiza", Storage:="_Amortiza", DbType:="Varchar(1)")>  _
		Public Property Amortiza() As String
			Get
				Return Me._Amortiza
			End Get
			Set
				If (String.Equals(Me._Amortiza, value) = false) Then
					Me.OnAmortizaChanging(value)
					Me.SendPropertyChanging
					Me._Amortiza = value
					Me.SendPropertyChanged("Amortiza")
					Me.OnAmortizaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseAcciones", Storage:="_ClaseAcciones", DbType:="Varchar(1)")>  _
		Public Property ClaseAcciones() As String
			Get
				Return Me._ClaseAcciones
			End Get
			Set
				If (String.Equals(Me._ClaseAcciones, value) = false) Then
					Me.OnClaseAccionesChanging(value)
					Me.SendPropertyChanging
					Me._ClaseAcciones = value
					Me.SendPropertyChanged("ClaseAcciones")
					Me.OnClaseAccionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logLiquidez", Storage:="_Liquidez", DbType:="Bit", CanBeNull:=true)>  _
		Public Property Liquidez() As System.Nullable(Of System.Boolean)
			Get
				Return Me._Liquidez
			End Get
			Set
				If (Object.Equals(Me._Liquidez, value) = false) Then
					Me.OnLiquidezChanging(value)
					Me.SendPropertyChanging
					Me._Liquidez = value
					Me.SendPropertyChanged("Liquidez")
					Me.OnLiquidezChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logNegociable", Storage:="_Negociable", DbType:="Bit")>  _
		Public Property Negociable() As System.Nullable(Of Boolean)
			Get
				Return Me._Negociable
			End Get
			Set
				If (Me._Negociable.Equals(value) = false) Then
					Me.OnNegociableChanging(value)
					Me.SendPropertyChanging
					Me._Negociable = value
					Me.SendPropertyChanged("Negociable")
					Me.OnNegociableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDBolsa", Storage:="_IDBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDBolsa() As Integer
			Get
				Return Me._IDBolsa
			End Get
			Set
				If (Object.Equals(Me._IDBolsa, value) = false) Then
					Me.OnIDBolsaChanging(value)
					Me.SendPropertyChanging
					Me._IDBolsa = value
					Me.SendPropertyChanged("IDBolsa")
					Me.OnIDBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intNroAccionesEmision", Storage:="_NroAcciones", DbType:="BigInt", CanBeNull:=true)>  _
		Public Property NroAcciones() As Long
			Get
				Return Me._NroAcciones
			End Get
			Set
				If (Object.Equals(Me._NroAcciones, value) = false) Then
					Me.OnNroAccionesChanging(value)
					Me.SendPropertyChanging
					Me._NroAcciones = value
					Me.SendPropertyChanged("NroAcciones")
					Me.OnNroAccionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEspecies", Storage:="_IDEspecies", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDEspecies() As Integer
			Get
				Return Me._IDEspecies
			End Get
			Set
				If (Object.Equals(Me._IDEspecies, value) = false) Then
					Me.OnIDEspeciesChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecies = value
					Me.SendPropertyChanged("IDEspecies")
					Me.OnIDEspeciesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre_Emisor", Storage:="_Nombre_Emisor", DbType:="Varchar(50)")>  _
		Public Property Nombre_Emisor() As String
			Get
				Return Me._Nombre_Emisor
			End Get
			Set
				If (String.Equals(Me._Nombre_Emisor, value) = false) Then
					Me.OnNombre_EmisorChanging(value)
					Me.SendPropertyChanging
					Me._Nombre_Emisor = value
					Me.SendPropertyChanged("Nombre_Emisor")
					Me.OnNombre_EmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClasificacionRiesgo", Storage:="_ClasificacionRiesgo", DbType:="Varchar(2)")>  _
		Public Property ClasificacionRiesgo() As String
			Get
				Return Me._ClasificacionRiesgo
			End Get
			Set
				If (String.Equals(Me._ClasificacionRiesgo, value) = false) Then
					Me.OnClasificacionRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._ClasificacionRiesgo = value
					Me.SendPropertyChanged("ClasificacionRiesgo")
					Me.OnClasificacionRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strValor", Storage:="_Valor", AutoSync:=AutoSync.Always, DbType:="Varchar(1000)", IsDbGenerated:=true)>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strAccion", DbType:="Varchar(15)")>  _
		Public Property strAccion() As String
			Get
				Return Me._strAccion
			End Get
			Set
				If (String.Equals(Me._strAccion, value) = false) Then
					Me.OnstrAccionChanging(value)
					Me.SendPropertyChanging
					Me._strAccion = value
					Me.SendPropertyChanged("strAccion")
					Me.OnstrAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEmisor", DbType:="Varchar(50)")>  _
		Public Property strEmisor() As String
			Get
				Return Me._strEmisor
			End Get
			Set
				If (String.Equals(Me._strEmisor, value) = false) Then
					Me.OnstrEmisorChanging(value)
					Me.SendPropertyChanging
					Me._strEmisor = value
					Me.SendPropertyChanged("strEmisor")
					Me.OnstrEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClase", DbType:="Varchar(50)")>  _
		Public Property strClase() As String
			Get
				Return Me._strClase
			End Get
			Set
				If (String.Equals(Me._strClase, value) = false) Then
					Me.OnstrClaseChanging(value)
					Me.SendPropertyChanging
					Me._strClase = value
					Me.SendPropertyChanged("strClase")
					Me.OnstrClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdMoneda", Storage:="_IDMoneda", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDMoneda() As System.Nullable(Of System.int32)
			Get
				Return Me._IDMoneda
			End Get
			Set
				If (Object.Equals(Me._IDMoneda, value) = false) Then
					Me.OnIDMonedaChanging(value)
					Me.SendPropertyChanging
					Me._IDMoneda = value
					Me.SendPropertyChanged("IDMoneda")
					Me.OnIDMonedaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCurvaEspecie", Storage:="_CurvaEspecie", DbType:="Int", CanBeNull:=true)>  _
		Public Property CurvaEspecie() As System.Nullable(Of System.int32)
			Get
				Return Me._CurvaEspecie
			End Get
			Set
				If (Object.Equals(Me._CurvaEspecie, value) = false) Then
					Me.OnCurvaEspecieChanging(value)
					Me.SendPropertyChanging
					Me._CurvaEspecie = value
					Me.SendPropertyChanged("CurvaEspecie")
					Me.OnCurvaEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logCodigoAvalado", Storage:="_CodigoAvalado", DbType:="Bit", CanBeNull:=true)>  _
		Public Property CodigoAvalado() As System.Nullable(Of System.Boolean)
			Get
				Return Me._CodigoAvalado
			End Get
			Set
				If (Object.Equals(Me._CodigoAvalado, value) = false) Then
					Me.OnCodigoAvaladoChanging(value)
					Me.SendPropertyChanging
					Me._CodigoAvalado = value
					Me.SendPropertyChanged("CodigoAvalado")
					Me.OnCodigoAvaladoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitAvalista", Storage:="_NitAvalista", DbType:="Varchar(15)")>  _
		Public Property NitAvalista() As String
			Get
				Return Me._NitAvalista
			End Get
			Set
				If (String.Equals(Me._NitAvalista, value) = false) Then
					Me.OnNitAvalistaChanging(value)
					Me.SendPropertyChanging
					Me._NitAvalista = value
					Me.SendPropertyChanged("NitAvalista")
					Me.OnNitAvalistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNitAdministradorAutonomo", Storage:="_NitAdministradorAutonomo", DbType:="Varchar(15)")>  _
		Public Property NitAdministradorAutonomo() As String
			Get
				Return Me._NitAdministradorAutonomo
			End Get
			Set
				If (String.Equals(Me._NitAdministradorAutonomo, value) = false) Then
					Me.OnNitAdministradorAutonomoChanging(value)
					Me.SendPropertyChanging
					Me._NitAdministradorAutonomo = value
					Me.SendPropertyChanged("NitAdministradorAutonomo")
					Me.OnNitAdministradorAutonomoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdCalificacionInversion", Storage:="_IDCalificacionInversion", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDCalificacionInversion() As System.Nullable(Of System.int32)
			Get
				Return Me._IDCalificacionInversion
			End Get
			Set
				If (Object.Equals(Me._IDCalificacionInversion, value) = false) Then
					Me.OnIDCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._IDCalificacionInversion = value
					Me.SendPropertyChanged("IDCalificacionInversion")
					Me.OnIDCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strISINesTemp", Storage:="_ISINesInsertar", DbType:="Varchar(MAX)")>  _
		Public Property ISINesInsertar() As String
			Get
				Return Me._ISINesInsertar
			End Get
			Set
				If (String.Equals(Me._ISINesInsertar, value) = false) Then
					Me.OnISINesInsertarChanging(value)
					Me.SendPropertyChanging
					Me._ISINesInsertar = value
					Me.SendPropertyChanged("ISINesInsertar")
					Me.OnISINesInsertarChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strPrecreada", DbType:="Varchar(2)")>  _
		Public Property strPrecreada() As String
			Get
				Return Me._strPrecreada
			End Get
			Set
				If (String.Equals(Me._strPrecreada, value) = false) Then
					Me.OnstrPrecreadaChanging(value)
					Me.SendPropertyChanging
					Me._strPrecreada = value
					Me.SendPropertyChanged("strPrecreada")
					Me.OnstrPrecreadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="numAdmisionGarantia", Storage:="_AdmisionGarantia", DbType:="decimal(5,2)", CanBeNull:=true)>  _
		Public Property AdmisionGarantia() As System.Nullable(Of decimal)
			Get
				Return Me._AdmisionGarantia
			End Get
			Set
				If (Object.Equals(Me._AdmisionGarantia, value) = false) Then
					Me.OnAdmisionGarantiaChanging(value)
					Me.SendPropertyChanging
					Me._AdmisionGarantia = value
					Me.SendPropertyChanged("AdmisionGarantia")
					Me.OnAdmisionGarantiaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoEspecie", Storage:="_TipoEspecie", DbType:="Varchar(1)")>  _
		Public Property TipoEspecie() As String
			Get
				Return Me._TipoEspecie
			End Get
			Set
				If (String.Equals(Me._TipoEspecie, value) = false) Then
					Me.OnTipoEspecieChanging(value)
					Me.SendPropertyChanging
					Me._TipoEspecie = value
					Me.SendPropertyChanged("TipoEspecie")
					Me.OnTipoEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmBurstalidad", Storage:="_FechaBursatilidad", DbType:="Datetime")>  _
		Public Property FechaBursatilidad() As System.Nullable(Of Date)
			Get
				Return Me._FechaBursatilidad
			End Get
			Set
				If (Me._FechaBursatilidad.Equals(value) = false) Then
					Me.OnFechaBursatilidadChanging(value)
					Me.SendPropertyChanging
					Me._FechaBursatilidad = value
					Me.SendPropertyChanged("FechaBursatilidad")
					Me.OnFechaBursatilidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strPrefijoFactorRiesgo", Storage:="_PrefijoFactorRiesgo", DbType:="Varchar(1)")>  _
		Public Property PrefijoFactorRiesgo() As String
			Get
				Return Me._PrefijoFactorRiesgo
			End Get
			Set
				If (String.Equals(Me._PrefijoFactorRiesgo, value) = false) Then
					Me.OnPrefijoFactorRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._PrefijoFactorRiesgo = value
					Me.SendPropertyChanged("PrefijoFactorRiesgo")
					Me.OnPrefijoFactorRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFactorRiesgo", Storage:="_FactorRiesgo", DbType:="Varchar(50)")>  _
		Public Property FactorRiesgo() As String
			Get
				Return Me._FactorRiesgo
			End Get
			Set
				If (String.Equals(Me._FactorRiesgo, value) = false) Then
					Me.OnFactorRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._FactorRiesgo = value
					Me.SendPropertyChanged("FactorRiesgo")
					Me.OnFactorRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoCalculo", Storage:="_TipoCalculo", DbType:="Varchar(1)")>  _
		Public Property TipoCalculo() As String
			Get
				Return Me._TipoCalculo
			End Get
			Set
				If (String.Equals(Me._TipoCalculo, value) = false) Then
					Me.OnTipoCalculoChanging(value)
					Me.SendPropertyChanging
					Me._TipoCalculo = value
					Me.SendPropertyChanged("TipoCalculo")
					Me.OnTipoCalculoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseContableTitulo", Storage:="_ClaseContableTitulo", DbType:="Varchar(2)")>  _
		Public Property ClaseContableTitulo() As String
			Get
				Return Me._ClaseContableTitulo
			End Get
			Set
				If (String.Equals(Me._ClaseContableTitulo, value) = false) Then
					Me.OnClaseContableTituloChanging(value)
					Me.SendPropertyChanging
					Me._ClaseContableTitulo = value
					Me.SendPropertyChanged("ClaseContableTitulo")
					Me.OnClaseContableTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMacroActivo", Storage:="_MacroActivo", DbType:="Varchar(2)")>  _
		Public Property MacroActivo() As String
			Get
				Return Me._MacroActivo
			End Get
			Set
				If (String.Equals(Me._MacroActivo, value) = false) Then
					Me.OnMacroActivoChanging(value)
					Me.SendPropertyChanging
					Me._MacroActivo = value
					Me.SendPropertyChanged("MacroActivo")
					Me.OnMacroActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIndicador", Storage:="_Indicador", DbType:="Varchar(5)")>  _
		Public Property Indicador() As String
			Get
				Return Me._Indicador
			End Get
			Set
				If (String.Equals(Me._Indicador, value) = false) Then
					Me.OnIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._Indicador = value
					Me.SendPropertyChanged("Indicador")
					Me.OnIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDConceptoRetencion", Storage:="_ConceptoRetencion", DbType:="Int", CanBeNull:=true)>  _
		Public Property ConceptoRetencion() As System.Nullable(Of System.int32)
			Get
				Return Me._ConceptoRetencion
			End Get
			Set
				If (Object.Equals(Me._ConceptoRetencion, value) = false) Then
					Me.OnConceptoRetencionChanging(value)
					Me.SendPropertyChanging
					Me._ConceptoRetencion = value
					Me.SendPropertyChanged("ConceptoRetencion")
					Me.OnConceptoRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTituloCarteraColectiva", Storage:="_TituloParticipativo", DbType:="Bit NULL")>  _
		Public Property TituloParticipativo() As System.Nullable(Of Boolean)
			Get
				Return Me._TituloParticipativo
			End Get
			Set
				If (Me._TituloParticipativo.Equals(value) = false) Then
					Me.OnTituloParticipativoChanging(value)
					Me.SendPropertyChanging
					Me._TituloParticipativo = value
					Me.SendPropertyChanged("TituloParticipativo")
					Me.OnTituloParticipativoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logDemocratizacion", DbType:="Bit NULL", CanBeNull:=true)>  _
		Public Property logDemocratizacion() As System.Nullable (of System.Boolean)
			Get
				Return Me._logDemocratizacion
			End Get
			Set
				If (Object.Equals(Me._logDemocratizacion, value) = false) Then
					Me.OnlogDemocratizacionChanging(value)
					Me.SendPropertyChanging
					Me._logDemocratizacion = value
					Me.SendPropertyChanged("logDemocratizacion")
					Me.OnlogDemocratizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xmlDetalleADR", DbType:="Text NULL")>  _
		Public Property xmlDetalleADR() As String
			Get
				Return Me._xmlDetalleADR
			End Get
			Set
				If (String.Equals(Me._xmlDetalleADR, value) = false) Then
					Me.OnxmlDetalleADRChanging(value)
					Me.SendPropertyChanging
					Me._xmlDetalleADR = value
					Me.SendPropertyChanged("xmlDetalleADR")
					Me.OnxmlDetalleADRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesISIN")>  _
	Partial Public Class EspeciesISIN
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ISIN As String
		
		Private _Descripcion As String
		
		Private _IDEspecie As String
		
		Private _Usuario As String
		
		Private _InfoSesion As String
		
		Private _IDEspeciesISIN As Integer
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnISINChanging(value As String)
    End Sub
    Partial Private Sub OnISINChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnIDEspeciesISINChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEspeciesISINChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strISIN", Storage:="_ISIN", DbType:="VARCHAR(12) NOT NULL", CanBeNull:=false)>  _
		Public Property ISIN() As String
			Get
				Return Me._ISIN
			End Get
			Set
				If (String.Equals(Me._ISIN, value) = false) Then
					Me.OnISINChanging(value)
					Me.SendPropertyChanging
					Me._ISIN = value
					Me.SendPropertyChanged("ISIN")
					Me.OnISINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="VARCHAR(50)")>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="VARCHAR(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEspeciesISIN", Storage:="_IDEspeciesISIN", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property IDEspeciesISIN() As Integer
			Get
				Return Me._IDEspeciesISIN
			End Get
			Set
				If ((Me._IDEspeciesISIN = value)  _
							= false) Then
					Me.OnIDEspeciesISINChanging(value)
					Me.SendPropertyChanging
					Me._IDEspeciesISIN = value
					Me.SendPropertyChanged("IDEspeciesISIN")
					Me.OnIDEspeciesISINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblISINFungible")>  _
	Partial Public Class EspeciesISINFungible
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ISIN As String
		
		Private _Descripcion As String
		
		Private _IDFungible As Integer
		
		Private _Emision As System.Nullable(Of System.int32)
		
		Private _Fecha_Emision As System.Nullable(Of System.DateTime)
		
		Private _Fecha_Vencimiento As System.Nullable(Of System.DateTime)
		
		Private _Tasa_Facial As System.Nullable(Of System.Decimal)
		
		Private _Modalidad As String
		
		Private _intIndicador As String
		
		Private _Indicador As String
		
		Private _Puntos_Indicador As System.Nullable(Of System.Decimal)
		
		Private _IDConsecutivo As Integer
		
		Private _TasaBase As System.Nullable(Of System.Int32)
		
		Private _IDIsinFungible As Integer
		
		Private _Usuario As String
		
		Private _IDEspecie As String
		
		Private _Amortizada As System.Nullable(Of Boolean)
		
		Private _logPoseeRetencion As System.Nullable(Of Boolean)
		
		Private _dblPorcentajeRetencion As System.Nullable(Of System.Decimal)
		
		Private _logFlujosIrregulares As System.Nullable(Of Boolean)
		
		Private _logActivo As System.Nullable(Of Boolean)
		
		Private _logSectorFinanciero As System.Nullable(Of Boolean)
		
		Private _ConEspecie As System.Nullable(Of Boolean)
		
		Private _Amortizaciones As String
		
		Private _MsjAmortizaciones As String
		
		Private _logEsAccion As System.Nullable(Of Boolean)
		
		Private _strTipoTasaFija As String
		
		Private _InfoSesion As String
		
		Private _intIDCalificacionInversion As System.Nullable(Of System.Int32)
		
		Private _intIdCalificacionInversionL As System.Nullable(Of System.Int32)
		
		Private _intIdCalificacionInversionC As System.Nullable(Of System.Int32)
		
		Private _dblTasaEfectiva As System.Nullable(Of System.Double)
		
		Private _Minimo As System.Nullable(Of System.Double)
		
		Private _Multiplo As System.Nullable(Of System.Double)
		
		Private _Fecha_Irregular As System.Nullable(Of System.DateTime)
		
		Private _intIDConceptoRetencion As System.Nullable(Of System.Int32)
		
		Private _logTituloCarteraColectiva As System.Nullable(Of Boolean)
		
		Private _strTipoEspecie As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnISINChanging(value As String)
    End Sub
    Partial Private Sub OnISINChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnIDFungibleChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFungibleChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As System.Nullable(Of System.int32))
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnFecha_EmisionChanging(value As System.Nullable(Of System.DateTime))
    End Sub
    Partial Private Sub OnFecha_EmisionChanged()
    End Sub
    Partial Private Sub OnFecha_VencimientoChanging(value As System.Nullable(Of System.DateTime))
    End Sub
    Partial Private Sub OnFecha_VencimientoChanged()
    End Sub
    Partial Private Sub OnTasa_FacialChanging(value As System.Nullable(Of System.Decimal))
    End Sub
    Partial Private Sub OnTasa_FacialChanged()
    End Sub
    Partial Private Sub OnModalidadChanging(value As String)
    End Sub
    Partial Private Sub OnModalidadChanged()
    End Sub
    Partial Private Sub OnintIndicadorChanging(value As String)
    End Sub
    Partial Private Sub OnintIndicadorChanged()
    End Sub
    Partial Private Sub OnIndicadorChanging(value As String)
    End Sub
    Partial Private Sub OnIndicadorChanged()
    End Sub
    Partial Private Sub OnPuntos_IndicadorChanging(value As System.Nullable(Of System.Decimal))
    End Sub
    Partial Private Sub OnPuntos_IndicadorChanged()
    End Sub
    Partial Private Sub OnIDConsecutivoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDConsecutivoChanged()
    End Sub
    Partial Private Sub OnTasaBaseChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnTasaBaseChanged()
    End Sub
    Partial Private Sub OnIDIsinFungibleChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDIsinFungibleChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnAmortizadaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAmortizadaChanged()
    End Sub
    Partial Private Sub OnlogPoseeRetencionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogPoseeRetencionChanged()
    End Sub
    Partial Private Sub OndblPorcentajeRetencionChanging(value As System.Nullable(Of System.Decimal))
    End Sub
    Partial Private Sub OndblPorcentajeRetencionChanged()
    End Sub
    Partial Private Sub OnlogFlujosIrregularesChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogFlujosIrregularesChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnlogSectorFinancieroChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogSectorFinancieroChanged()
    End Sub
    Partial Private Sub OnConEspecieChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnConEspecieChanged()
    End Sub
    Partial Private Sub OnAmortizacionesChanging(value As String)
    End Sub
    Partial Private Sub OnAmortizacionesChanged()
    End Sub
    Partial Private Sub OnMsjAmortizacionesChanging(value As String)
    End Sub
    Partial Private Sub OnMsjAmortizacionesChanged()
    End Sub
    Partial Private Sub OnlogEsAccionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogEsAccionChanged()
    End Sub
    Partial Private Sub OnstrTipoTasaFijaChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoTasaFijaChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnintIDCalificacionInversionChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDCalificacionInversionChanged()
    End Sub
    Partial Private Sub OnintIdCalificacionInversionLChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIdCalificacionInversionLChanged()
    End Sub
    Partial Private Sub OnintIdCalificacionInversionCChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIdCalificacionInversionCChanged()
    End Sub
    Partial Private Sub OndblTasaEfectivaChanging(value As System.Nullable(Of System.Double))
    End Sub
    Partial Private Sub OndblTasaEfectivaChanged()
    End Sub
    Partial Private Sub OnMinimoChanging(value As System.Nullable(Of System.Double))
    End Sub
    Partial Private Sub OnMinimoChanged()
    End Sub
    Partial Private Sub OnMultiploChanging(value As System.Nullable(Of System.Double))
    End Sub
    Partial Private Sub OnMultiploChanged()
    End Sub
    Partial Private Sub OnFecha_IrregularChanging(value As System.Nullable(Of System.DateTime))
    End Sub
    Partial Private Sub OnFecha_IrregularChanged()
    End Sub
    Partial Private Sub OnintIDConceptoRetencionChanging(value As System.Nullable(Of System.Int32))
    End Sub
    Partial Private Sub OnintIDConceptoRetencionChanged()
    End Sub
    Partial Private Sub OnlogTituloCarteraColectivaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogTituloCarteraColectivaChanged()
    End Sub
    Partial Private Sub OnstrTipoEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrTipoEspecieChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strISIN", Storage:="_ISIN", DbType:="VARCHAR(12) NOT NULL")>  _
		Public Property ISIN() As String
			Get
				Return Me._ISIN
			End Get
			Set
				If (String.Equals(Me._ISIN, value) = false) Then
					Me.OnISINChanging(value)
					Me.SendPropertyChanging
					Me._ISIN = value
					Me.SendPropertyChanged("ISIN")
					Me.OnISINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)")>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDFungible", Storage:="_IDFungible", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDFungible() As Integer
			Get
				Return Me._IDFungible
			End Get
			Set
				If (Object.Equals(Me._IDFungible, value) = false) Then
					Me.OnIDFungibleChanging(value)
					Me.SendPropertyChanging
					Me._IDFungible = value
					Me.SendPropertyChanged("IDFungible")
					Me.OnIDFungibleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngEmision", Storage:="_Emision", DbType:="Int", CanBeNull:=true)>  _
		Public Property Emision() As System.Nullable(Of System.int32)
			Get
				Return Me._Emision
			End Get
			Set
				If (Object.Equals(Me._Emision, value) = false) Then
					Me.OnEmisionChanging(value)
					Me.SendPropertyChanging
					Me._Emision = value
					Me.SendPropertyChanged("Emision")
					Me.OnEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmEmision", Storage:="_Fecha_Emision", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property Fecha_Emision() As System.Nullable(Of System.DateTime)
			Get
				Return Me._Fecha_Emision
			End Get
			Set
				If (Object.Equals(Me._Fecha_Emision, value) = false) Then
					Me.OnFecha_EmisionChanging(value)
					Me.SendPropertyChanging
					Me._Fecha_Emision = value
					Me.SendPropertyChanged("Fecha_Emision")
					Me.OnFecha_EmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmVencimiento", Storage:="_Fecha_Vencimiento", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property Fecha_Vencimiento() As System.Nullable(Of System.DateTime)
			Get
				Return Me._Fecha_Vencimiento
			End Get
			Set
				If (Object.Equals(Me._Fecha_Vencimiento, value) = false) Then
					Me.OnFecha_VencimientoChanging(value)
					Me.SendPropertyChanging
					Me._Fecha_Vencimiento = value
					Me.SendPropertyChanged("Fecha_Vencimiento")
					Me.OnFecha_VencimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblTasaFacial", Storage:="_Tasa_Facial", DbType:="Float", CanBeNull:=true)>  _
		Public Property Tasa_Facial() As System.Nullable(Of System.Decimal)
			Get
				Return Me._Tasa_Facial
			End Get
			Set
				If (Object.Equals(Me._Tasa_Facial, value) = false) Then
					Me.OnTasa_FacialChanging(value)
					Me.SendPropertyChanging
					Me._Tasa_Facial = value
					Me.SendPropertyChanged("Tasa_Facial")
					Me.OnTasa_FacialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strModalidad", Storage:="_Modalidad", DbType:="Varchar(2)")>  _
		Public Property Modalidad() As String
			Get
				Return Me._Modalidad
			End Get
			Set
				If (String.Equals(Me._Modalidad, value) = false) Then
					Me.OnModalidadChanging(value)
					Me.SendPropertyChanging
					Me._Modalidad = value
					Me.SendPropertyChanged("Modalidad")
					Me.OnModalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIndicador", Storage:="_intIndicador", DbType:="Varchar(5)")>  _
		Public Property intIndicador() As String
			Get
				Return Me._intIndicador
			End Get
			Set
				If (String.Equals(Me._intIndicador, value) = false) Then
					Me.OnintIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._intIndicador = value
					Me.SendPropertyChanged("intIndicador")
					Me.OnintIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Indicador", DbType:="Varchar(50)")>  _
		Public Property Indicador() As String
			Get
				Return Me._Indicador
			End Get
			Set
				If (String.Equals(Me._Indicador, value) = false) Then
					Me.OnIndicadorChanging(value)
					Me.SendPropertyChanging
					Me._Indicador = value
					Me.SendPropertyChanged("Indicador")
					Me.OnIndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngPuntosIndicador", Storage:="_Puntos_Indicador", DbType:="float", CanBeNull:=true)>  _
		Public Property Puntos_Indicador() As System.Nullable(Of System.Decimal)
			Get
				Return Me._Puntos_Indicador
			End Get
			Set
				If (Object.Equals(Me._Puntos_Indicador, value) = false) Then
					Me.OnPuntos_IndicadorChanging(value)
					Me.SendPropertyChanging
					Me._Puntos_Indicador = value
					Me.SendPropertyChanged("Puntos_Indicador")
					Me.OnPuntos_IndicadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDConsecutivo", Storage:="_IDConsecutivo", DbType:="Int")>  _
		Public Property IDConsecutivo() As Integer
			Get
				Return Me._IDConsecutivo
			End Get
			Set
				If ((Me._IDConsecutivo = value)  _
							= false) Then
					Me.OnIDConsecutivoChanging(value)
					Me.SendPropertyChanging
					Me._IDConsecutivo = value
					Me.SendPropertyChanged("IDConsecutivo")
					Me.OnIDConsecutivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngTasaBase", Storage:="_TasaBase", DbType:="Int", CanBeNull:=true)>  _
		Public Property TasaBase() As System.Nullable(Of System.Int32)
			Get
				Return Me._TasaBase
			End Get
			Set
				If (Object.Equals(Me._TasaBase, value) = false) Then
					Me.OnTasaBaseChanging(value)
					Me.SendPropertyChanging
					Me._TasaBase = value
					Me.SendPropertyChanged("TasaBase")
					Me.OnTasaBaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDIsinFungible", Storage:="_IDIsinFungible", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDIsinFungible() As Integer
			Get
				Return Me._IDIsinFungible
			End Get
			Set
				If ((Me._IDIsinFungible = value)  _
							= false) Then
					Me.OnIDIsinFungibleChanging(value)
					Me.SendPropertyChanging
					Me._IDIsinFungible = value
					Me.SendPropertyChanged("IDIsinFungible")
					Me.OnIDIsinFungibleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="VARCHAR(15) NOT NULL")>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAmortizada", Storage:="_Amortizada", DbType:="bit  NULL", CanBeNull:=false)>  _
		Public Property Amortizada() As System.Nullable(Of Boolean)
			Get
				Return Me._Amortizada
			End Get
			Set
				If (Object.Equals(Me._Amortizada, value) = false) Then
					Me.OnAmortizadaChanging(value)
					Me.SendPropertyChanging
					Me._Amortizada = value
					Me.SendPropertyChanged("Amortizada")
					Me.OnAmortizadaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logPoseeRetencion", DbType:="bit  NULL", CanBeNull:=false)>  _
		Public Property logPoseeRetencion() As System.Nullable(Of Boolean)
			Get
				Return Me._logPoseeRetencion
			End Get
			Set
				If (Object.Equals(Me._logPoseeRetencion, value) = false) Then
					Me.OnlogPoseeRetencionChanging(value)
					Me.SendPropertyChanging
					Me._logPoseeRetencion = value
					Me.SendPropertyChanged("logPoseeRetencion")
					Me.OnlogPoseeRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeRetencion", DbType:="float  NULL", CanBeNull:=true)>  _
		Public Property dblPorcentajeRetencion() As System.Nullable(Of System.Decimal)
			Get
				Return Me._dblPorcentajeRetencion
			End Get
			Set
				If (Object.Equals(Me._dblPorcentajeRetencion, value) = false) Then
					Me.OndblPorcentajeRetencionChanging(value)
					Me.SendPropertyChanging
					Me._dblPorcentajeRetencion = value
					Me.SendPropertyChanged("dblPorcentajeRetencion")
					Me.OndblPorcentajeRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logFlujosIrregulares", DbType:="bit  NULL", CanBeNull:=false)>  _
		Public Property logFlujosIrregulares() As System.Nullable(Of Boolean)
			Get
				Return Me._logFlujosIrregulares
			End Get
			Set
				If (Object.Equals(Me._logFlujosIrregulares, value) = false) Then
					Me.OnlogFlujosIrregularesChanging(value)
					Me.SendPropertyChanging
					Me._logFlujosIrregulares = value
					Me.SendPropertyChanged("logFlujosIrregulares")
					Me.OnlogFlujosIrregularesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="bit  NULL", CanBeNull:=false)>  _
		Public Property logActivo() As System.Nullable(Of Boolean)
			Get
				Return Me._logActivo
			End Get
			Set
				If (Object.Equals(Me._logActivo, value) = false) Then
					Me.OnlogActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("logActivo")
					Me.OnlogActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logSectorFinanciero", DbType:="bit  NULL", CanBeNull:=false)>  _
		Public Property logSectorFinanciero() As System.Nullable(Of Boolean)
			Get
				Return Me._logSectorFinanciero
			End Get
			Set
				If (Object.Equals(Me._logSectorFinanciero, value) = false) Then
					Me.OnlogSectorFinancieroChanging(value)
					Me.SendPropertyChanging
					Me._logSectorFinanciero = value
					Me.SendPropertyChanged("logSectorFinanciero")
					Me.OnlogSectorFinancieroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logConEspecie", Storage:="_ConEspecie", DbType:="bit  NULL", CanBeNull:=false)>  _
		Public Property ConEspecie() As System.Nullable(Of Boolean)
			Get
				Return Me._ConEspecie
			End Get
			Set
				If (Object.Equals(Me._ConEspecie, value) = false) Then
					Me.OnConEspecieChanging(value)
					Me.SendPropertyChanging
					Me._ConEspecie = value
					Me.SendPropertyChanged("ConEspecie")
					Me.OnConEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="pxmlAmortizaciones", Storage:="_Amortizaciones", DbType:="VarChar(MAX)")>  _
		Public Property Amortizaciones() As String
			Get
				Return Me._Amortizaciones
			End Get
			Set
				If (String.Equals(Me._Amortizaciones, value) = false) Then
					Me.OnAmortizacionesChanging(value)
					Me.SendPropertyChanging
					Me._Amortizaciones = value
					Me.SendPropertyChanged("Amortizaciones")
					Me.OnAmortizacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsjAmortizaciones", Storage:="_MsjAmortizaciones", DbType:="Varchar(MAX)")>  _
		Public Property MsjAmortizaciones() As String
			Get
				Return Me._MsjAmortizaciones
			End Get
			Set
				If (String.Equals(Me._MsjAmortizaciones, value) = false) Then
					Me.OnMsjAmortizacionesChanging(value)
					Me.SendPropertyChanging
					Me._MsjAmortizaciones = value
					Me.SendPropertyChanged("MsjAmortizaciones")
					Me.OnMsjAmortizacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEsAccion", DbType:="bit NULL", CanBeNull:=true)>  _
		Public Property logEsAccion() As System.Nullable(Of Boolean)
			Get
				Return Me._logEsAccion
			End Get
			Set
				If (Object.Equals(Me._logEsAccion, value) = false) Then
					Me.OnlogEsAccionChanging(value)
					Me.SendPropertyChanging
					Me._logEsAccion = value
					Me.SendPropertyChanged("logEsAccion")
					Me.OnlogEsAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTasaFija", DbType:="Varchar(1) NULL")>  _
		Public Property strTipoTasaFija() As String
			Get
				Return Me._strTipoTasaFija
			End Get
			Set
				If (String.Equals(Me._strTipoTasaFija, value) = false) Then
					Me.OnstrTipoTasaFijaChanging(value)
					Me.SendPropertyChanging
					Me._strTipoTasaFija = value
					Me.SendPropertyChanged("strTipoTasaFija")
					Me.OnstrTipoTasaFijaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCalificacionInversion", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property intIDCalificacionInversion() As System.Nullable(Of System.Int32)
			Get
				Return Me._intIDCalificacionInversion
			End Get
			Set
				If (Object.Equals(Me._intIDCalificacionInversion, value) = false) Then
					Me.OnintIDCalificacionInversionChanging(value)
					Me.SendPropertyChanging
					Me._intIDCalificacionInversion = value
					Me.SendPropertyChanged("intIDCalificacionInversion")
					Me.OnintIDCalificacionInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificacionInversionL", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property intIdCalificacionInversionL() As System.Nullable(Of System.Int32)
			Get
				Return Me._intIdCalificacionInversionL
			End Get
			Set
				If (Object.Equals(Me._intIdCalificacionInversionL, value) = false) Then
					Me.OnintIdCalificacionInversionLChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificacionInversionL = value
					Me.SendPropertyChanged("intIdCalificacionInversionL")
					Me.OnintIdCalificacionInversionLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificacionInversionC", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property intIdCalificacionInversionC() As System.Nullable(Of System.Int32)
			Get
				Return Me._intIdCalificacionInversionC
			End Get
			Set
				If (Object.Equals(Me._intIdCalificacionInversionC, value) = false) Then
					Me.OnintIdCalificacionInversionCChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificacionInversionC = value
					Me.SendPropertyChanged("intIdCalificacionInversionC")
					Me.OnintIdCalificacionInversionCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaEfectiva", DbType:="Float NULL", CanBeNull:=true)>  _
		Public Property dblTasaEfectiva() As System.Nullable(Of System.Double)
			Get
				Return Me._dblTasaEfectiva
			End Get
			Set
				If (Object.Equals(Me._dblTasaEfectiva, value) = false) Then
					Me.OndblTasaEfectivaChanging(value)
					Me.SendPropertyChanging
					Me._dblTasaEfectiva = value
					Me.SendPropertyChanged("dblTasaEfectiva")
					Me.OndblTasaEfectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblMinimo", Storage:="_Minimo", DbType:="Float NULL", CanBeNull:=true)>  _
		Public Property Minimo() As System.Nullable(Of System.Double)
			Get
				Return Me._Minimo
			End Get
			Set
				If (Object.Equals(Me._Minimo, value) = false) Then
					Me.OnMinimoChanging(value)
					Me.SendPropertyChanging
					Me._Minimo = value
					Me.SendPropertyChanged("Minimo")
					Me.OnMinimoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblMultiplo", Storage:="_Multiplo", DbType:="Float NULL", CanBeNull:=true)>  _
		Public Property Multiplo() As System.Nullable(Of System.Double)
			Get
				Return Me._Multiplo
			End Get
			Set
				If (Object.Equals(Me._Multiplo, value) = false) Then
					Me.OnMultiploChanging(value)
					Me.SendPropertyChanging
					Me._Multiplo = value
					Me.SendPropertyChanged("Multiplo")
					Me.OnMultiploChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaIrregular", Storage:="_Fecha_Irregular", DbType:="DateTime", CanBeNull:=true)>  _
		Public Property Fecha_Irregular() As System.Nullable(Of System.DateTime)
			Get
				Return Me._Fecha_Irregular
			End Get
			Set
				If (Object.Equals(Me._Fecha_Irregular, value) = false) Then
					Me.OnFecha_IrregularChanging(value)
					Me.SendPropertyChanging
					Me._Fecha_Irregular = value
					Me.SendPropertyChanged("Fecha_Irregular")
					Me.OnFecha_IrregularChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConceptoRetencion", DbType:="Int NULL", CanBeNull:=true)>  _
		Public Property intIDConceptoRetencion() As System.Nullable(Of System.Int32)
			Get
				Return Me._intIDConceptoRetencion
			End Get
			Set
				If (Object.Equals(Me._intIDConceptoRetencion, value) = false) Then
					Me.OnintIDConceptoRetencionChanging(value)
					Me.SendPropertyChanging
					Me._intIDConceptoRetencion = value
					Me.SendPropertyChanged("intIDConceptoRetencion")
					Me.OnintIDConceptoRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logTituloCarteraColectiva", DbType:="bit NULL", CanBeNull:=true)>  _
		Public Property logTituloCarteraColectiva() As System.Nullable(Of Boolean)
			Get
				Return Me._logTituloCarteraColectiva
			End Get
			Set
				If (Object.Equals(Me._logTituloCarteraColectiva, value) = false) Then
					Me.OnlogTituloCarteraColectivaChanging(value)
					Me.SendPropertyChanging
					Me._logTituloCarteraColectiva = value
					Me.SendPropertyChanged("logTituloCarteraColectiva")
					Me.OnlogTituloCarteraColectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoEspecie", DbType:="Varchar(2) NULL")>  _
		Public Property strTipoEspecie() As String
			Get
				Return Me._strTipoEspecie
			End Get
			Set
				If (String.Equals(Me._strTipoEspecie, value) = false) Then
					Me.OnstrTipoEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strTipoEspecie = value
					Me.SendPropertyChanged("strTipoEspecie")
					Me.OnstrTipoEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesClaseInversion")>  _
	Partial Public Class EspeciesClaseInversion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdTipoEspecieClaseInversion As Short
		
		Private _lngIDComisionista As Integer
		
		Private _lngIDSucComisionista As Integer
		
		Private _strDescripcion As String
		
		Private _strCodigo As String
		
		Private _dtmActualizacion As System.Nullable(Of Date)
		
		Private _strMetodoValoracion As String
		
		Private _strDescripcionMetodoValoracion As String
		
		Private _strUsuario As String
		
		Private _InfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _intTipoTitulo As System.Nullable(Of Integer)
		
		Private _strDescripcionTipoTitulo As String
		
		Private _strFactorRiesgo As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdTipoEspecieClaseInversionChanging(value As Short)
    End Sub
    Partial Private Sub OnintIdTipoEspecieClaseInversionChanged()
    End Sub
    Partial Private Sub OnlngIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDComisionistaChanged()
    End Sub
    Partial Private Sub OnlngIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnlngIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnstrDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionChanged()
    End Sub
    Partial Private Sub OnstrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnstrCodigoChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrMetodoValoracionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMetodoValoracionChanged()
    End Sub
    Partial Private Sub OnstrDescripcionMetodoValoracionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionMetodoValoracionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnintTipoTituloChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintTipoTituloChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoTituloChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoTituloChanged()
    End Sub
    Partial Private Sub OnstrFactorRiesgoChanging(value As String)
    End Sub
    Partial Private Sub OnstrFactorRiesgoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdTipoEspecieClaseInversion", AutoSync:=AutoSync.OnInsert, DbType:="SMALLINT NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdTipoEspecieClaseInversion() As Short
			Get
				Return Me._intIdTipoEspecieClaseInversion
			End Get
			Set
				If ((Me._intIdTipoEspecieClaseInversion = value)  _
							= false) Then
					Me.OnintIdTipoEspecieClaseInversionChanging(value)
					Me.SendPropertyChanging
					Me._intIdTipoEspecieClaseInversion = value
					Me.SendPropertyChanged("intIdTipoEspecieClaseInversion")
					Me.OnintIdTipoEspecieClaseInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComisionista", DbType:="int NOT NULL")>  _
		Public Property lngIDComisionista() As Integer
			Get
				Return Me._lngIDComisionista
			End Get
			Set
				If ((Me._lngIDComisionista = value)  _
							= false) Then
					Me.OnlngIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._lngIDComisionista = value
					Me.SendPropertyChanged("lngIDComisionista")
					Me.OnlngIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDSucComisionista", DbType:="int NOT NULL")>  _
		Public Property lngIDSucComisionista() As Integer
			Get
				Return Me._lngIDSucComisionista
			End Get
			Set
				If ((Me._lngIDSucComisionista = value)  _
							= false) Then
					Me.OnlngIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._lngIDSucComisionista = value
					Me.SendPropertyChanged("lngIDSucComisionista")
					Me.OnlngIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="Varchar(600) NOT NULL")>  _
		Public Property strDescripcion() As String
			Get
				Return Me._strDescripcion
			End Get
			Set
				If (String.Equals(Me._strDescripcion, value) = false) Then
					Me.OnstrDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcion = value
					Me.SendPropertyChanged("strDescripcion")
					Me.OnstrDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodigo", DbType:="Varchar(10) NOT NULL")>  _
		Public Property strCodigo() As String
			Get
				Return Me._strCodigo
			End Get
			Set
				If (String.Equals(Me._strCodigo, value) = false) Then
					Me.OnstrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._strCodigo = value
					Me.SendPropertyChanged("strCodigo")
					Me.OnstrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime")>  _
		Public Property dtmActualizacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Me._dtmActualizacion.Equals(value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMetodoValoracion", DbType:="Varchar(5) NULL")>  _
		Public Property strMetodoValoracion() As String
			Get
				Return Me._strMetodoValoracion
			End Get
			Set
				If (String.Equals(Me._strMetodoValoracion, value) = false) Then
					Me.OnstrMetodoValoracionChanging(value)
					Me.SendPropertyChanging
					Me._strMetodoValoracion = value
					Me.SendPropertyChanged("strMetodoValoracion")
					Me.OnstrMetodoValoracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionMetodoValoracion", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionMetodoValoracion() As String
			Get
				Return Me._strDescripcionMetodoValoracion
			End Get
			Set
				If (String.Equals(Me._strDescripcionMetodoValoracion, value) = false) Then
					Me.OnstrDescripcionMetodoValoracionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionMetodoValoracion = value
					Me.SendPropertyChanged("strDescripcionMetodoValoracion")
					Me.OnstrDescripcionMetodoValoracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intTipoTitulo", DbType:="int NULL")>  _
		Public Property intTipoTitulo() As System.Nullable(Of Integer)
			Get
				Return Me._intTipoTitulo
			End Get
			Set
				If (Me._intTipoTitulo.Equals(value) = false) Then
					Me.OnintTipoTituloChanging(value)
					Me.SendPropertyChanging
					Me._intTipoTitulo = value
					Me.SendPropertyChanged("intTipoTitulo")
					Me.OnintTipoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoTitulo", DbType:="Varchar(50) NULL")>  _
		Public Property strDescripcionTipoTitulo() As String
			Get
				Return Me._strDescripcionTipoTitulo
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoTitulo, value) = false) Then
					Me.OnstrDescripcionTipoTituloChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoTitulo = value
					Me.SendPropertyChanged("strDescripcionTipoTitulo")
					Me.OnstrDescripcionTipoTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFactorRiesgo", DbType:="Varchar (50)")>  _
		Public Property strFactorRiesgo() As String
			Get
				Return Me._strFactorRiesgo
			End Get
			Set
				If (String.Equals(Me._strFactorRiesgo, value) = false) Then
					Me.OnstrFactorRiesgoChanging(value)
					Me.SendPropertyChanging
					Me._strFactorRiesgo = value
					Me.SendPropertyChanged("strFactorRiesgo")
					Me.OnstrFactorRiesgoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEmisores")>  _
	Partial Public Class Emisore
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _ID As System.Nullable(of System.Int32)
		
		Private _Nombre As String
		
		Private _NIT As System.Nullable(Of Decimal)
		
		Private _Telefono1 As String
		
		Private _Telefono2 As String
		
		Private _Fax1 As String
		
		Private _Fax2 As String
		
		Private _Direccion As String
		
		Private _Internet As String
		
		Private _EMail As String
		
		Private _IDGrupo As System.Nullable(of System.Int32)
		
		Private _IDSubGrupo As System.Nullable(of System.Int32)
		
		Private _IDPoblacion As System.Nullable(of System.Int32)
		
		Private _IDDepartamento As System.Nullable(of System.Int32)
		
		Private _IDPais As System.Nullable(of System.Int32)
		
		Private _Actualizacion As System.Nullable(of System.DateTime)
		
		Private _Usuario As String
		
		Private _Contacto As String
		
		Private _Mostrar As String
		
		Private _Total As String
		
		Private _Responde As String
		
		Private _TipoComision As String
		
		Private _IdEmisor As Integer
		
		Private _CodigoEmisor As String
		
		Private _VigiladoSuper As System.Nullable(of System.Boolean)
		
		Private _Grupo As String
		
		Private _SubGrupo As String
		
		Private _Cuidad As String
		
		Private _Pais As String
		
		Private _Departamento As String
		
		Private _intIdTipoEntidad As System.Nullable(Of int16)
		
		Private _logEsPatrimonioAutonomo As System.Nullable(of System.Boolean)
		
		Private _logActivo As Boolean
		
		Private _intIdCodigoCIIU As System.Nullable(Of int32)
		
		Private _strDescripcionTipoEntidad As String
		
		Private _strDescripcionCodigoCiiu As String
		
		Private _intIdCalificadora As System.Nullable(Of int32)
		
		Private _strNomCalificadora As String
		
		Private _InfoSesion As String
		
		Private _FuenteExtranjero As System.Nullable(Of Boolean)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNITChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNITChanged()
    End Sub
    Partial Private Sub OnTelefono1Changing(value As String)
    End Sub
    Partial Private Sub OnTelefono1Changed()
    End Sub
    Partial Private Sub OnTelefono2Changing(value As String)
    End Sub
    Partial Private Sub OnTelefono2Changed()
    End Sub
    Partial Private Sub OnFax1Changing(value As String)
    End Sub
    Partial Private Sub OnFax1Changed()
    End Sub
    Partial Private Sub OnFax2Changing(value As String)
    End Sub
    Partial Private Sub OnFax2Changed()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnInternetChanging(value As String)
    End Sub
    Partial Private Sub OnInternetChanged()
    End Sub
    Partial Private Sub OnEMailChanging(value As String)
    End Sub
    Partial Private Sub OnEMailChanged()
    End Sub
    Partial Private Sub OnIDGrupoChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDGrupoChanged()
    End Sub
    Partial Private Sub OnIDSubGrupoChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDSubGrupoChanged()
    End Sub
    Partial Private Sub OnIDPoblacionChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDPoblacionChanged()
    End Sub
    Partial Private Sub OnIDDepartamentoChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDDepartamentoChanged()
    End Sub
    Partial Private Sub OnIDPaisChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnIDPaisChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnContactoChanging(value As String)
    End Sub
    Partial Private Sub OnContactoChanged()
    End Sub
    Partial Private Sub OnMostrarChanging(value As String)
    End Sub
    Partial Private Sub OnMostrarChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As String)
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnRespondeChanging(value As String)
    End Sub
    Partial Private Sub OnRespondeChanged()
    End Sub
    Partial Private Sub OnTipoComisionChanging(value As String)
    End Sub
    Partial Private Sub OnTipoComisionChanged()
    End Sub
    Partial Private Sub OnIdEmisorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEmisorChanged()
    End Sub
    Partial Private Sub OnCodigoEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoEmisorChanged()
    End Sub
    Partial Private Sub OnVigiladoSuperChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnVigiladoSuperChanged()
    End Sub
    Partial Private Sub OnGrupoChanging(value As String)
    End Sub
    Partial Private Sub OnGrupoChanged()
    End Sub
    Partial Private Sub OnSubGrupoChanging(value As String)
    End Sub
    Partial Private Sub OnSubGrupoChanged()
    End Sub
    Partial Private Sub OnCuidadChanging(value As String)
    End Sub
    Partial Private Sub OnCuidadChanged()
    End Sub
    Partial Private Sub OnPaisChanging(value As String)
    End Sub
    Partial Private Sub OnPaisChanged()
    End Sub
    Partial Private Sub OnDepartamentoChanging(value As String)
    End Sub
    Partial Private Sub OnDepartamentoChanged()
    End Sub
    Partial Private Sub OnintIdTipoEntidadChanging(value As System.Nullable(Of int16))
    End Sub
    Partial Private Sub OnintIdTipoEntidadChanged()
    End Sub
    Partial Private Sub OnlogEsPatrimonioAutonomoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogEsPatrimonioAutonomoChanged()
    End Sub
    Partial Private Sub OnlogActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnlogActivoChanged()
    End Sub
    Partial Private Sub OnintIdCodigoCIIUChanging(value As System.Nullable(Of int32))
    End Sub
    Partial Private Sub OnintIdCodigoCIIUChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoEntidadChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoEntidadChanged()
    End Sub
    Partial Private Sub OnstrDescripcionCodigoCiiuChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionCodigoCiiuChanged()
    End Sub
    Partial Private Sub OnintIdCalificadoraChanging(value As System.Nullable(Of int32))
    End Sub
    Partial Private Sub OnintIdCalificadoraChanged()
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanging(value As String)
    End Sub
    Partial Private Sub OnstrNomCalificadoraChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnFuenteExtranjeroChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFuenteExtranjeroChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_ID", DbType:="int NOT NULL", CanBeNull:=false)>  _
		Public Property ID() As System.Nullable(of System.Int32)
			Get
				Return Me._ID
			End Get
			Set
				If (Object.Equals(Me._ID, value) = false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL")>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngNIT", Storage:="_NIT", DbType:="Numeric")>  _
		Public Property NIT() As System.Nullable(Of Decimal)
			Get
				Return Me._NIT
			End Get
			Set
				If (Me._NIT.Equals(value) = false) Then
					Me.OnNITChanging(value)
					Me.SendPropertyChanging
					Me._NIT = value
					Me.SendPropertyChanged("NIT")
					Me.OnNITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono1", Storage:="_Telefono1", DbType:="Varchar(25)")>  _
		Public Property Telefono1() As String
			Get
				Return Me._Telefono1
			End Get
			Set
				If (String.Equals(Me._Telefono1, value) = false) Then
					Me.OnTelefono1Changing(value)
					Me.SendPropertyChanging
					Me._Telefono1 = value
					Me.SendPropertyChanged("Telefono1")
					Me.OnTelefono1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTelefono2", Storage:="_Telefono2", DbType:="Varchar(25)")>  _
		Public Property Telefono2() As String
			Get
				Return Me._Telefono2
			End Get
			Set
				If (String.Equals(Me._Telefono2, value) = false) Then
					Me.OnTelefono2Changing(value)
					Me.SendPropertyChanging
					Me._Telefono2 = value
					Me.SendPropertyChanged("Telefono2")
					Me.OnTelefono2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFax1", Storage:="_Fax1", DbType:="Varchar(25)")>  _
		Public Property Fax1() As String
			Get
				Return Me._Fax1
			End Get
			Set
				If (String.Equals(Me._Fax1, value) = false) Then
					Me.OnFax1Changing(value)
					Me.SendPropertyChanging
					Me._Fax1 = value
					Me.SendPropertyChanged("Fax1")
					Me.OnFax1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strFax2", Storage:="_Fax2", DbType:="Varchar(25)")>  _
		Public Property Fax2() As String
			Get
				Return Me._Fax2
			End Get
			Set
				If (String.Equals(Me._Fax2, value) = false) Then
					Me.OnFax2Changing(value)
					Me.SendPropertyChanging
					Me._Fax2 = value
					Me.SendPropertyChanged("Fax2")
					Me.OnFax2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDireccion", Storage:="_Direccion", DbType:="Varchar(50)")>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strInternet", Storage:="_Internet", DbType:="Varchar(50)")>  _
		Public Property Internet() As String
			Get
				Return Me._Internet
			End Get
			Set
				If (String.Equals(Me._Internet, value) = false) Then
					Me.OnInternetChanging(value)
					Me.SendPropertyChanging
					Me._Internet = value
					Me.SendPropertyChanged("Internet")
					Me.OnInternetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strEMail", Storage:="_EMail", DbType:="Varchar(50)")>  _
		Public Property EMail() As String
			Get
				Return Me._EMail
			End Get
			Set
				If (String.Equals(Me._EMail, value) = false) Then
					Me.OnEMailChanging(value)
					Me.SendPropertyChanging
					Me._EMail = value
					Me.SendPropertyChanged("EMail")
					Me.OnEMailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDGrupo", Storage:="_IDGrupo", DbType:="Int NOT NULL", CanBeNull:=true)>  _
		Public Property IDGrupo() As System.Nullable(of System.Int32)
			Get
				Return Me._IDGrupo
			End Get
			Set
				If (Object.Equals(Me._IDGrupo, value) = false) Then
					Me.OnIDGrupoChanging(value)
					Me.SendPropertyChanging
					Me._IDGrupo = value
					Me.SendPropertyChanged("IDGrupo")
					Me.OnIDGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSubGrupo", Storage:="_IDSubGrupo", DbType:="Int NOT NULL", CanBeNull:=true)>  _
		Public Property IDSubGrupo() As System.Nullable(of System.Int32)
			Get
				Return Me._IDSubGrupo
			End Get
			Set
				If (Object.Equals(Me._IDSubGrupo, value) = false) Then
					Me.OnIDSubGrupoChanging(value)
					Me.SendPropertyChanging
					Me._IDSubGrupo = value
					Me.SendPropertyChanged("IDSubGrupo")
					Me.OnIDSubGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPoblacion", Storage:="_IDPoblacion", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDPoblacion() As System.Nullable(of System.Int32)
			Get
				Return Me._IDPoblacion
			End Get
			Set
				If (Object.Equals(Me._IDPoblacion, value) = false) Then
					Me.OnIDPoblacionChanging(value)
					Me.SendPropertyChanging
					Me._IDPoblacion = value
					Me.SendPropertyChanged("IDPoblacion")
					Me.OnIDPoblacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDDepartamento", Storage:="_IDDepartamento", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDDepartamento() As System.Nullable(of System.Int32)
			Get
				Return Me._IDDepartamento
			End Get
			Set
				If (Object.Equals(Me._IDDepartamento, value) = false) Then
					Me.OnIDDepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._IDDepartamento = value
					Me.SendPropertyChanged("IDDepartamento")
					Me.OnIDDepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDPais", Storage:="_IDPais", DbType:="Int", CanBeNull:=true)>  _
		Public Property IDPais() As System.Nullable(of System.Int32)
			Get
				Return Me._IDPais
			End Get
			Set
				If (Object.Equals(Me._IDPais, value) = false) Then
					Me.OnIDPaisChanging(value)
					Me.SendPropertyChanging
					Me._IDPais = value
					Me.SendPropertyChanged("IDPais")
					Me.OnIDPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL", CanBeNull:=false)>  _
		Public Property Actualizacion() As System.Nullable(of System.DateTime)
			Get
				Return Me._Actualizacion
			End Get
			Set
				If (Object.Equals(Me._Actualizacion, value) = false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strContacto", Storage:="_Contacto", DbType:="Varchar(50)")>  _
		Public Property Contacto() As String
			Get
				Return Me._Contacto
			End Get
			Set
				If (String.Equals(Me._Contacto, value) = false) Then
					Me.OnContactoChanging(value)
					Me.SendPropertyChanging
					Me._Contacto = value
					Me.SendPropertyChanged("Contacto")
					Me.OnContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMostrar", Storage:="_Mostrar", DbType:="Varchar(5)")>  _
		Public Property Mostrar() As String
			Get
				Return Me._Mostrar
			End Get
			Set
				If (String.Equals(Me._Mostrar, value) = false) Then
					Me.OnMostrarChanging(value)
					Me.SendPropertyChanging
					Me._Mostrar = value
					Me.SendPropertyChanged("Mostrar")
					Me.OnMostrarChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTotal", Storage:="_Total", DbType:="Varchar(5)")>  _
		Public Property Total() As String
			Get
				Return Me._Total
			End Get
			Set
				If (String.Equals(Me._Total, value) = false) Then
					Me.OnTotalChanging(value)
					Me.SendPropertyChanging
					Me._Total = value
					Me.SendPropertyChanged("Total")
					Me.OnTotalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strResponde", Storage:="_Responde", DbType:="Varchar(5)")>  _
		Public Property Responde() As String
			Get
				Return Me._Responde
			End Get
			Set
				If (String.Equals(Me._Responde, value) = false) Then
					Me.OnRespondeChanging(value)
					Me.SendPropertyChanging
					Me._Responde = value
					Me.SendPropertyChanged("Responde")
					Me.OnRespondeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoComision", Storage:="_TipoComision", DbType:="Char(1) NOT NULL", CanBeNull:=false)>  _
		Public Property TipoComision() As String
			Get
				Return Me._TipoComision
			End Get
			Set
				If (String.Equals(Me._TipoComision, value) = false) Then
					Me.OnTipoComisionChanging(value)
					Me.SendPropertyChanging
					Me._TipoComision = value
					Me.SendPropertyChanged("TipoComision")
					Me.OnTipoComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdEmisor", Storage:="_IdEmisor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IdEmisor() As Integer
			Get
				Return Me._IdEmisor
			End Get
			Set
				If ((Me._IdEmisor = value)  _
							= false) Then
					Me.OnIdEmisorChanging(value)
					Me.SendPropertyChanging
					Me._IdEmisor = value
					Me.SendPropertyChanged("IdEmisor")
					Me.OnIdEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCodigoEmisor", Storage:="_CodigoEmisor", DbType:="Varchar(5)")>  _
		Public Property CodigoEmisor() As String
			Get
				Return Me._CodigoEmisor
			End Get
			Set
				If (String.Equals(Me._CodigoEmisor, value) = false) Then
					Me.OnCodigoEmisorChanging(value)
					Me.SendPropertyChanging
					Me._CodigoEmisor = value
					Me.SendPropertyChanged("CodigoEmisor")
					Me.OnCodigoEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logVigiladoSuper", Storage:="_VigiladoSuper", DbType:="Bit", CanBeNull:=false)>  _
		Public Property VigiladoSuper() As System.Nullable(of System.Boolean)
			Get
				Return Me._VigiladoSuper
			End Get
			Set
				If (Object.Equals(Me._VigiladoSuper, value) = false) Then
					Me.OnVigiladoSuperChanging(value)
					Me.SendPropertyChanging
					Me._VigiladoSuper = value
					Me.SendPropertyChanged("VigiladoSuper")
					Me.OnVigiladoSuperChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grupo", DbType:="Varchar(50)")>  _
		Public Property Grupo() As String
			Get
				Return Me._Grupo
			End Get
			Set
				If (String.Equals(Me._Grupo, value) = false) Then
					Me.OnGrupoChanging(value)
					Me.SendPropertyChanging
					Me._Grupo = value
					Me.SendPropertyChanged("Grupo")
					Me.OnGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubGrupo", DbType:="Varchar(50)")>  _
		Public Property SubGrupo() As String
			Get
				Return Me._SubGrupo
			End Get
			Set
				If (String.Equals(Me._SubGrupo, value) = false) Then
					Me.OnSubGrupoChanging(value)
					Me.SendPropertyChanging
					Me._SubGrupo = value
					Me.SendPropertyChanged("SubGrupo")
					Me.OnSubGrupoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cuidad", DbType:="Varchar(40)")>  _
		Public Property Cuidad() As String
			Get
				Return Me._Cuidad
			End Get
			Set
				If (String.Equals(Me._Cuidad, value) = false) Then
					Me.OnCuidadChanging(value)
					Me.SendPropertyChanging
					Me._Cuidad = value
					Me.SendPropertyChanged("Cuidad")
					Me.OnCuidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pais", DbType:="Varchar(40)")>  _
		Public Property Pais() As String
			Get
				Return Me._Pais
			End Get
			Set
				If (String.Equals(Me._Pais, value) = false) Then
					Me.OnPaisChanging(value)
					Me.SendPropertyChanging
					Me._Pais = value
					Me.SendPropertyChanged("Pais")
					Me.OnPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Departamento", DbType:="Varchar(40)")>  _
		Public Property Departamento() As String
			Get
				Return Me._Departamento
			End Get
			Set
				If (String.Equals(Me._Departamento, value) = false) Then
					Me.OnDepartamentoChanging(value)
					Me.SendPropertyChanging
					Me._Departamento = value
					Me.SendPropertyChanged("Departamento")
					Me.OnDepartamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdTipoEntidad", DbType:="Smallint NOT null", CanBeNull:=true)>  _
		Public Property intIdTipoEntidad() As System.Nullable(Of int16)
			Get
				Return Me._intIdTipoEntidad
			End Get
			Set
				If (Object.Equals(Me._intIdTipoEntidad, value) = false) Then
					Me.OnintIdTipoEntidadChanging(value)
					Me.SendPropertyChanging
					Me._intIdTipoEntidad = value
					Me.SendPropertyChanged("intIdTipoEntidad")
					Me.OnintIdTipoEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEsPatrimonioAutonomo", DbType:="bit", CanBeNull:=false)>  _
		Public Property logEsPatrimonioAutonomo() As System.Nullable(of System.Boolean)
			Get
				Return Me._logEsPatrimonioAutonomo
			End Get
			Set
				If (Object.Equals(Me._logEsPatrimonioAutonomo, value) = false) Then
					Me.OnlogEsPatrimonioAutonomoChanging(value)
					Me.SendPropertyChanging
					Me._logEsPatrimonioAutonomo = value
					Me.SendPropertyChanged("logEsPatrimonioAutonomo")
					Me.OnlogEsPatrimonioAutonomoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logActivo", DbType:="bit")>  _
		Public Property logActivo() As Boolean
			Get
				Return Me._logActivo
			End Get
			Set
				If ((Me._logActivo = value)  _
							= false) Then
					Me.OnlogActivoChanging(value)
					Me.SendPropertyChanging
					Me._logActivo = value
					Me.SendPropertyChanged("logActivo")
					Me.OnlogActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCodigoCIIU", DbType:="int", CanBeNull:=true)>  _
		Public Property intIdCodigoCIIU() As System.Nullable(Of int32)
			Get
				Return Me._intIdCodigoCIIU
			End Get
			Set
				If (Object.Equals(Me._intIdCodigoCIIU, value) = false) Then
					Me.OnintIdCodigoCIIUChanging(value)
					Me.SendPropertyChanging
					Me._intIdCodigoCIIU = value
					Me.SendPropertyChanged("intIdCodigoCIIU")
					Me.OnintIdCodigoCIIUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoEntidad", DbType:="Varchar(max)")>  _
		Public Property strDescripcionTipoEntidad() As String
			Get
				Return Me._strDescripcionTipoEntidad
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoEntidad, value) = false) Then
					Me.OnstrDescripcionTipoEntidadChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoEntidad = value
					Me.SendPropertyChanged("strDescripcionTipoEntidad")
					Me.OnstrDescripcionTipoEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionCodigoCiiu", DbType:="Varchar(max)")>  _
		Public Property strDescripcionCodigoCiiu() As String
			Get
				Return Me._strDescripcionCodigoCiiu
			End Get
			Set
				If (String.Equals(Me._strDescripcionCodigoCiiu, value) = false) Then
					Me.OnstrDescripcionCodigoCiiuChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionCodigoCiiu = value
					Me.SendPropertyChanged("strDescripcionCodigoCiiu")
					Me.OnstrDescripcionCodigoCiiuChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdCalificadora", DbType:="int", CanBeNull:=true)>  _
		Public Property intIdCalificadora() As System.Nullable(Of int32)
			Get
				Return Me._intIdCalificadora
			End Get
			Set
				If (Object.Equals(Me._intIdCalificadora, value) = false) Then
					Me.OnintIdCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._intIdCalificadora = value
					Me.SendPropertyChanged("intIdCalificadora")
					Me.OnintIdCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNomCalificadora", DbType:="Varchar(100)")>  _
		Public Property strNomCalificadora() As String
			Get
				Return Me._strNomCalificadora
			End Get
			Set
				If (String.Equals(Me._strNomCalificadora, value) = false) Then
					Me.OnstrNomCalificadoraChanging(value)
					Me.SendPropertyChanging
					Me._strNomCalificadora = value
					Me.SendPropertyChanged("strNomCalificadora")
					Me.OnstrNomCalificadoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logFuenteExtranjero", Storage:="_FuenteExtranjero", DbType:="Bit Null")>  _
		Public Property FuenteExtranjero() As System.Nullable(Of Boolean)
			Get
				Return Me._FuenteExtranjero
			End Get
			Set
				If (Me._FuenteExtranjero.Equals(value) = false) Then
					Me.OnFuenteExtranjeroChanging(value)
					Me.SendPropertyChanging
					Me._FuenteExtranjero = value
					Me.SendPropertyChanged("FuenteExtranjero")
					Me.OnFuenteExtranjeroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDividendos")>  _
	Partial Public Class EspeciesDividendos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _InicioVigencia As Date
		
		Private _FinVigencia As Date
		
		Private _Causacion As Double
		
		Private _InicioPago As Date
		
		Private _FinPago As Date
		
		Private _CantidadAcciones As System.Nullable(Of Double)
		
		Private _CantidadPesos As System.Nullable(Of Decimal)
		
		Private _IDCtrlDividendo As String
		
		Private _Usuario As String
		
		Private _IDEspecie As String
		
		Private _InfoSesion As String
		
		Private _IDDividendos As Integer
		
		Private _PorcentajeRteFteDeclarante As System.Nullable(Of Double)
		
		Private _PorcentajeRteFteNODeclarante As System.Nullable(Of Double)
		
		Private _Gravado As System.Nullable(Of Double)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
		Private _intIDConceptoRetencionGravados As System.Nullable(Of Integer)
		
		Private _dblPorcentajeRetencionGravados As System.Nullable(Of Double)
		
		Private _intIDConceptoRetencionNoGravados As System.Nullable(Of Integer)
		
		Private _dblPorcentajeRetencionNoGravados As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnInicioVigenciaChanging(value As Date)
    End Sub
    Partial Private Sub OnInicioVigenciaChanged()
    End Sub
    Partial Private Sub OnFinVigenciaChanging(value As Date)
    End Sub
    Partial Private Sub OnFinVigenciaChanged()
    End Sub
    Partial Private Sub OnCausacionChanging(value As Double)
    End Sub
    Partial Private Sub OnCausacionChanged()
    End Sub
    Partial Private Sub OnInicioPagoChanging(value As Date)
    End Sub
    Partial Private Sub OnInicioPagoChanged()
    End Sub
    Partial Private Sub OnFinPagoChanging(value As Date)
    End Sub
    Partial Private Sub OnFinPagoChanged()
    End Sub
    Partial Private Sub OnCantidadAccionesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadAccionesChanged()
    End Sub
    Partial Private Sub OnCantidadPesosChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadPesosChanged()
    End Sub
    Partial Private Sub OnIDCtrlDividendoChanging(value As String)
    End Sub
    Partial Private Sub OnIDCtrlDividendoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnIDDividendosChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDividendosChanged()
    End Sub
    Partial Private Sub OnPorcentajeRteFteDeclaranteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcentajeRteFteDeclaranteChanged()
    End Sub
    Partial Private Sub OnPorcentajeRteFteNODeclaranteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPorcentajeRteFteNODeclaranteChanged()
    End Sub
    Partial Private Sub OnGravadoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGravadoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    Partial Private Sub OnintIDConceptoRetencionGravadosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDConceptoRetencionGravadosChanged()
    End Sub
    Partial Private Sub OndblPorcentajeRetencionGravadosChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblPorcentajeRetencionGravadosChanged()
    End Sub
    Partial Private Sub OnintIDConceptoRetencionNoGravadosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDConceptoRetencionNoGravadosChanged()
    End Sub
    Partial Private Sub OndblPorcentajeRetencionNoGravadosChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblPorcentajeRetencionNoGravadosChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmInicioVigencia", Storage:="_InicioVigencia", DbType:="Datetime NOT NULL")>  _
		Public Property InicioVigencia() As Date
			Get
				Return Me._InicioVigencia
			End Get
			Set
				If ((Me._InicioVigencia = value)  _
							= false) Then
					Me.OnInicioVigenciaChanging(value)
					Me.SendPropertyChanging
					Me._InicioVigencia = value
					Me.SendPropertyChanged("InicioVigencia")
					Me.OnInicioVigenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFinVigencia", Storage:="_FinVigencia", DbType:="Datetime NOT NULL")>  _
		Public Property FinVigencia() As Date
			Get
				Return Me._FinVigencia
			End Get
			Set
				If ((Me._FinVigencia = value)  _
							= false) Then
					Me.OnFinVigenciaChanging(value)
					Me.SendPropertyChanging
					Me._FinVigencia = value
					Me.SendPropertyChanged("FinVigencia")
					Me.OnFinVigenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCausacion", Storage:="_Causacion", DbType:="Float NOT NULL")>  _
		Public Property Causacion() As Double
			Get
				Return Me._Causacion
			End Get
			Set
				If ((Me._Causacion = value)  _
							= false) Then
					Me.OnCausacionChanging(value)
					Me.SendPropertyChanging
					Me._Causacion = value
					Me.SendPropertyChanged("Causacion")
					Me.OnCausacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmInicioPago", Storage:="_InicioPago", DbType:="Datetime NOT NULL")>  _
		Public Property InicioPago() As Date
			Get
				Return Me._InicioPago
			End Get
			Set
				If ((Me._InicioPago = value)  _
							= false) Then
					Me.OnInicioPagoChanging(value)
					Me.SendPropertyChanging
					Me._InicioPago = value
					Me.SendPropertyChanged("InicioPago")
					Me.OnInicioPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFinPago", Storage:="_FinPago", DbType:="Datetime NOT NULL")>  _
		Public Property FinPago() As Date
			Get
				Return Me._FinPago
			End Get
			Set
				If ((Me._FinPago = value)  _
							= false) Then
					Me.OnFinPagoChanging(value)
					Me.SendPropertyChanging
					Me._FinPago = value
					Me.SendPropertyChanged("FinPago")
					Me.OnFinPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngCantidadAcciones", Storage:="_CantidadAcciones", DbType:="Float")>  _
		Public Property CantidadAcciones() As System.Nullable(Of Double)
			Get
				Return Me._CantidadAcciones
			End Get
			Set
				If (Me._CantidadAcciones.Equals(value) = false) Then
					Me.OnCantidadAccionesChanging(value)
					Me.SendPropertyChanging
					Me._CantidadAcciones = value
					Me.SendPropertyChanged("CantidadAcciones")
					Me.OnCantidadAccionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curCantidadPesos", Storage:="_CantidadPesos", DbType:="Numeric")>  _
		Public Property CantidadPesos() As System.Nullable(Of Decimal)
			Get
				Return Me._CantidadPesos
			End Get
			Set
				If (Me._CantidadPesos.Equals(value) = false) Then
					Me.OnCantidadPesosChanging(value)
					Me.SendPropertyChanging
					Me._CantidadPesos = value
					Me.SendPropertyChanged("CantidadPesos")
					Me.OnCantidadPesosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDCtrlDividendo", Storage:="_IDCtrlDividendo", DbType:="Varchar(2) NOT NULL", CanBeNull:=false)>  _
		Public Property IDCtrlDividendo() As String
			Get
				Return Me._IDCtrlDividendo
			End Get
			Set
				If (String.Equals(Me._IDCtrlDividendo, value) = false) Then
					Me.OnIDCtrlDividendoChanging(value)
					Me.SendPropertyChanging
					Me._IDCtrlDividendo = value
					Me.SendPropertyChanged("IDCtrlDividendo")
					Me.OnIDCtrlDividendoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", AutoSync:=AutoSync.OnInsert, DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDDividendos", Storage:="_IDDividendos", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property IDDividendos() As Integer
			Get
				Return Me._IDDividendos
			End Get
			Set
				If ((Me._IDDividendos = value)  _
							= false) Then
					Me.OnIDDividendosChanging(value)
					Me.SendPropertyChanging
					Me._IDDividendos = value
					Me.SendPropertyChanged("IDDividendos")
					Me.OnIDDividendosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeRteFteDeclarante", Storage:="_PorcentajeRteFteDeclarante", DbType:="Float NULL")>  _
		Public Property PorcentajeRteFteDeclarante() As System.Nullable(Of Double)
			Get
				Return Me._PorcentajeRteFteDeclarante
			End Get
			Set
				If (Me._PorcentajeRteFteDeclarante.Equals(value) = false) Then
					Me.OnPorcentajeRteFteDeclaranteChanging(value)
					Me.SendPropertyChanging
					Me._PorcentajeRteFteDeclarante = value
					Me.SendPropertyChanged("PorcentajeRteFteDeclarante")
					Me.OnPorcentajeRteFteDeclaranteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeRteFteNODeclarante", Storage:="_PorcentajeRteFteNODeclarante", DbType:="Float NULL")>  _
		Public Property PorcentajeRteFteNODeclarante() As System.Nullable(Of Double)
			Get
				Return Me._PorcentajeRteFteNODeclarante
			End Get
			Set
				If (Me._PorcentajeRteFteNODeclarante.Equals(value) = false) Then
					Me.OnPorcentajeRteFteNODeclaranteChanging(value)
					Me.SendPropertyChanging
					Me._PorcentajeRteFteNODeclarante = value
					Me.SendPropertyChanged("PorcentajeRteFteNODeclarante")
					Me.OnPorcentajeRteFteNODeclaranteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblGravado", Storage:="_Gravado", DbType:="Float NULL")>  _
		Public Property Gravado() As System.Nullable(Of Double)
			Get
				Return Me._Gravado
			End Get
			Set
				If (Me._Gravado.Equals(value) = false) Then
					Me.OnGravadoChanging(value)
					Me.SendPropertyChanging
					Me._Gravado = value
					Me.SendPropertyChanged("Gravado")
					Me.OnGravadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConceptoRetencionGravados", DbType:="Int NULL")>  _
		Public Property intIDConceptoRetencionGravados() As System.Nullable(Of Integer)
			Get
				Return Me._intIDConceptoRetencionGravados
			End Get
			Set
				If (Me._intIDConceptoRetencionGravados.Equals(value) = false) Then
					Me.OnintIDConceptoRetencionGravadosChanging(value)
					Me.SendPropertyChanging
					Me._intIDConceptoRetencionGravados = value
					Me.SendPropertyChanged("intIDConceptoRetencionGravados")
					Me.OnintIDConceptoRetencionGravadosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeRetencionGravados", DbType:="Float NULL")>  _
		Public Property dblPorcentajeRetencionGravados() As System.Nullable(Of Double)
			Get
				Return Me._dblPorcentajeRetencionGravados
			End Get
			Set
				If (Me._dblPorcentajeRetencionGravados.Equals(value) = false) Then
					Me.OndblPorcentajeRetencionGravadosChanging(value)
					Me.SendPropertyChanging
					Me._dblPorcentajeRetencionGravados = value
					Me.SendPropertyChanged("dblPorcentajeRetencionGravados")
					Me.OndblPorcentajeRetencionGravadosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConceptoRetencionNoGravados", DbType:="Int NULL")>  _
		Public Property intIDConceptoRetencionNoGravados() As System.Nullable(Of Integer)
			Get
				Return Me._intIDConceptoRetencionNoGravados
			End Get
			Set
				If (Me._intIDConceptoRetencionNoGravados.Equals(value) = false) Then
					Me.OnintIDConceptoRetencionNoGravadosChanging(value)
					Me.SendPropertyChanging
					Me._intIDConceptoRetencionNoGravados = value
					Me.SendPropertyChanged("intIDConceptoRetencionNoGravados")
					Me.OnintIDConceptoRetencionNoGravadosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeRetencionNoGravados", DbType:="Float NULL")>  _
		Public Property dblPorcentajeRetencionNoGravados() As System.Nullable(Of Double)
			Get
				Return Me._dblPorcentajeRetencionNoGravados
			End Get
			Set
				If (Me._dblPorcentajeRetencionNoGravados.Equals(value) = false) Then
					Me.OndblPorcentajeRetencionNoGravadosChanging(value)
					Me.SendPropertyChanging
					Me._dblPorcentajeRetencionNoGravados = value
					Me.SendPropertyChanged("dblPorcentajeRetencionNoGravados")
					Me.OndblPorcentajeRetencionNoGravadosChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMovPreciosEspecie")>  _
	Partial Public Class EspeciesPrecios
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdBolsa As Integer
		
		Private _Cierre As Date
		
		Private _Precio As Decimal
		
		Private _IdEspecie As String
		
		Private _IDPreciosEspecie As Integer
		
		Private _Usuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdBolsaChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As Date)
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnIdEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIdEspecieChanged()
    End Sub
    Partial Private Sub OnIDPreciosEspecieChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPreciosEspecieChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdBolsa", Storage:="_IdBolsa", DbType:="INT NOT NULL")>  _
		Public Property IdBolsa() As Integer
			Get
				Return Me._IdBolsa
			End Get
			Set
				If ((Me._IdBolsa = value)  _
							= false) Then
					Me.OnIdBolsaChanging(value)
					Me.SendPropertyChanging
					Me._IdBolsa = value
					Me.SendPropertyChanged("IdBolsa")
					Me.OnIdBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmCierre", Storage:="_Cierre", DbType:="Datetime NOT NULL")>  _
		Public Property Cierre() As Date
			Get
				Return Me._Cierre
			End Get
			Set
				If ((Me._Cierre = value)  _
							= false) Then
					Me.OnCierreChanging(value)
					Me.SendPropertyChanging
					Me._Cierre = value
					Me.SendPropertyChanged("Cierre")
					Me.OnCierreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="curPrecio", Storage:="_Precio", DbType:="MONEY NOT NULL")>  _
		Public Property Precio() As Decimal
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdEspecie", Storage:="_IdEspecie", DbType:="VARCHAR(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IdEspecie() As String
			Get
				Return Me._IdEspecie
			End Get
			Set
				If (String.Equals(Me._IdEspecie, value) = false) Then
					Me.OnIdEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IdEspecie = value
					Me.SendPropertyChanged("IdEspecie")
					Me.OnIdEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDPreciosEspecie", Storage:="_IDPreciosEspecie", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property IDPreciosEspecie() As Integer
			Get
				Return Me._IDPreciosEspecie
			End Get
			Set
				If ((Me._IDPreciosEspecie = value)  _
							= false) Then
					Me.OnIDPreciosEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDPreciosEspecie = value
					Me.SendPropertyChanged("IDPreciosEspecie")
					Me.OnIDPreciosEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblAmortizacionesEspecies")>  _
	Partial Public Class AmortizacionesEspeci
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdAmortizacion As Integer
		
		Private _FechaAmortizacion As System.Nullable(Of Date)
		
		Private _PorcentajeAmortizacion As Decimal
		
		Private _IdIsinFungible As Integer
		
		Private _FechaInicioVigencia As System.Nullable(Of Date)
		
		Private _logRegistroImportado As System.Nullable(of System.Boolean)
		
		Private _strUsuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdAmortizacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAmortizacionChanged()
    End Sub
    Partial Private Sub OnFechaAmortizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaAmortizacionChanged()
    End Sub
    Partial Private Sub OnPorcentajeAmortizacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPorcentajeAmortizacionChanged()
    End Sub
    Partial Private Sub OnIdIsinFungibleChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdIsinFungibleChanged()
    End Sub
    Partial Private Sub OnFechaInicioVigenciaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaInicioVigenciaChanged()
    End Sub
    Partial Private Sub OnlogRegistroImportadoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogRegistroImportadoChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdAmortizacionEspecie", Storage:="_IdAmortizacion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IdAmortizacion() As Integer
			Get
				Return Me._IdAmortizacion
			End Get
			Set
				If ((Me._IdAmortizacion = value)  _
							= false) Then
					Me.OnIdAmortizacionChanging(value)
					Me.SendPropertyChanging
					Me._IdAmortizacion = value
					Me.SendPropertyChanged("IdAmortizacion")
					Me.OnIdAmortizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaAmortizacionEspecie", Storage:="_FechaAmortizacion", DbType:="DateTime NULL")>  _
		Public Property FechaAmortizacion() As System.Nullable(Of Date)
			Get
				Return Me._FechaAmortizacion
			End Get
			Set
				If (Me._FechaAmortizacion.Equals(value) = false) Then
					Me.OnFechaAmortizacionChanging(value)
					Me.SendPropertyChanging
					Me._FechaAmortizacion = value
					Me.SendPropertyChanged("FechaAmortizacion")
					Me.OnFechaAmortizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblPorcentajeAmortizacionEspecie", Storage:="_PorcentajeAmortizacion", DbType:="Numeric NOT NULL")>  _
		Public Property PorcentajeAmortizacion() As Decimal
			Get
				Return Me._PorcentajeAmortizacion
			End Get
			Set
				If ((Me._PorcentajeAmortizacion = value)  _
							= false) Then
					Me.OnPorcentajeAmortizacionChanging(value)
					Me.SendPropertyChanging
					Me._PorcentajeAmortizacion = value
					Me.SendPropertyChanged("PorcentajeAmortizacion")
					Me.OnPorcentajeAmortizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdIsinFungible", Storage:="_IdIsinFungible", DbType:="Int NOT NULL")>  _
		Public Property IdIsinFungible() As Integer
			Get
				Return Me._IdIsinFungible
			End Get
			Set
				If ((Me._IdIsinFungible = value)  _
							= false) Then
					Me.OnIdIsinFungibleChanging(value)
					Me.SendPropertyChanging
					Me._IdIsinFungible = value
					Me.SendPropertyChanged("IdIsinFungible")
					Me.OnIdIsinFungibleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmInicioVigencia", Storage:="_FechaInicioVigencia", DbType:="DateTime NULL")>  _
		Public Property FechaInicioVigencia() As System.Nullable(Of Date)
			Get
				Return Me._FechaInicioVigencia
			End Get
			Set
				If (Me._FechaInicioVigencia.Equals(value) = false) Then
					Me.OnFechaInicioVigenciaChanging(value)
					Me.SendPropertyChanging
					Me._FechaInicioVigencia = value
					Me.SendPropertyChanged("FechaInicioVigencia")
					Me.OnFechaInicioVigenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logRegistroImportado", DbType:="BIT NOT NULL", CanBeNull:=true)>  _
		Public Property logRegistroImportado() As System.Nullable(of System.Boolean)
			Get
				Return Me._logRegistroImportado
			End Get
			Set
				If (Object.Equals(Me._logRegistroImportado, value) = false) Then
					Me.OnlogRegistroImportadoChanging(value)
					Me.SendPropertyChanging
					Me._logRegistroImportado = value
					Me.SendPropertyChanged("logRegistroImportado")
					Me.OnlogRegistroImportadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblFlujosDiariosValoracion")>  _
	Partial Public Class FlujosDiariosValoracion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IdFlujo As Integer
		
		Private _CodPortafolio As Integer
		
		Private _NumTituloPortafolio As String
		
		Private _FechaFlujo As Date
		
		Private _ValorFlujo As Double
		
		Private _DiasCumplimiento As Integer
		
		Private _CapitalFlujo As Double
		
		Private _TipoFlujo As Char
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdFlujoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdFlujoChanged()
    End Sub
    Partial Private Sub OnCodPortafolioChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodPortafolioChanged()
    End Sub
    Partial Private Sub OnNumTituloPortafolioChanging(value As String)
    End Sub
    Partial Private Sub OnNumTituloPortafolioChanged()
    End Sub
    Partial Private Sub OnFechaFlujoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaFlujoChanged()
    End Sub
    Partial Private Sub OnValorFlujoChanging(value As Double)
    End Sub
    Partial Private Sub OnValorFlujoChanged()
    End Sub
    Partial Private Sub OnDiasCumplimientoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDiasCumplimientoChanged()
    End Sub
    Partial Private Sub OnCapitalFlujoChanging(value As Double)
    End Sub
    Partial Private Sub OnCapitalFlujoChanged()
    End Sub
    Partial Private Sub OnTipoFlujoChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoFlujoChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIdFlujoDiario", Storage:="_IdFlujo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IdFlujo() As Integer
			Get
				Return Me._IdFlujo
			End Get
			Set
				If ((Me._IdFlujo = value)  _
							= false) Then
					Me.OnIdFlujoChanging(value)
					Me.SendPropertyChanging
					Me._IdFlujo = value
					Me.SendPropertyChanged("IdFlujo")
					Me.OnIdFlujoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intCodPortafolio", Storage:="_CodPortafolio", DbType:="Int NOT NULL")>  _
		Public Property CodPortafolio() As Integer
			Get
				Return Me._CodPortafolio
			End Get
			Set
				If ((Me._CodPortafolio = value)  _
							= false) Then
					Me.OnCodPortafolioChanging(value)
					Me.SendPropertyChanging
					Me._CodPortafolio = value
					Me.SendPropertyChanged("CodPortafolio")
					Me.OnCodPortafolioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNumTituloPortafolio", Storage:="_NumTituloPortafolio", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property NumTituloPortafolio() As String
			Get
				Return Me._NumTituloPortafolio
			End Get
			Set
				If (String.Equals(Me._NumTituloPortafolio, value) = false) Then
					Me.OnNumTituloPortafolioChanging(value)
					Me.SendPropertyChanging
					Me._NumTituloPortafolio = value
					Me.SendPropertyChanged("NumTituloPortafolio")
					Me.OnNumTituloPortafolioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmFechaFlujoDiario", Storage:="_FechaFlujo", DbType:="Date NOT NULL")>  _
		Public Property FechaFlujo() As Date
			Get
				Return Me._FechaFlujo
			End Get
			Set
				If ((Me._FechaFlujo = value)  _
							= false) Then
					Me.OnFechaFlujoChanging(value)
					Me.SendPropertyChanging
					Me._FechaFlujo = value
					Me.SendPropertyChanged("FechaFlujo")
					Me.OnFechaFlujoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorFlujoDiario", Storage:="_ValorFlujo", DbType:="Float NOT NULL")>  _
		Public Property ValorFlujo() As Double
			Get
				Return Me._ValorFlujo
			End Get
			Set
				If ((Me._ValorFlujo = value)  _
							= false) Then
					Me.OnValorFlujoChanging(value)
					Me.SendPropertyChanging
					Me._ValorFlujo = value
					Me.SendPropertyChanged("ValorFlujo")
					Me.OnValorFlujoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intDiasCumplimientoFlujoDiario", Storage:="_DiasCumplimiento", DbType:="Int NOT NULL")>  _
		Public Property DiasCumplimiento() As Integer
			Get
				Return Me._DiasCumplimiento
			End Get
			Set
				If ((Me._DiasCumplimiento = value)  _
							= false) Then
					Me.OnDiasCumplimientoChanging(value)
					Me.SendPropertyChanging
					Me._DiasCumplimiento = value
					Me.SendPropertyChanged("DiasCumplimiento")
					Me.OnDiasCumplimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblCapitalFlujoDiario", Storage:="_CapitalFlujo", DbType:="Float NOT NULL")>  _
		Public Property CapitalFlujo() As Double
			Get
				Return Me._CapitalFlujo
			End Get
			Set
				If ((Me._CapitalFlujo = value)  _
							= false) Then
					Me.OnCapitalFlujoChanging(value)
					Me.SendPropertyChanging
					Me._CapitalFlujo = value
					Me.SendPropertyChanged("CapitalFlujo")
					Me.OnCapitalFlujoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strTipoFlujoDiario", Storage:="_TipoFlujo", DbType:="Char(1) NOT NULL")>  _
		Public Property TipoFlujo() As Char
			Get
				Return Me._TipoFlujo
			End Get
			Set
				If ((Me._TipoFlujo = value)  _
							= false) Then
					Me.OnTipoFlujoChanging(value)
					Me.SendPropertyChanging
					Me._TipoFlujo = value
					Me.SendPropertyChanged("TipoFlujo")
					Me.OnTipoFlujoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspecies")>  _
	Partial Public Class Especie
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Id As String
		
		Private _Nombre As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As String)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strId", Storage:="_Id", DbType:="Varchar(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Id() As String
			Get
				Return Me._Id
			End Get
			Set
				If (String.Equals(Me._Id, value) = false) Then
					Me.OnIdChanging(value)
					Me.SendPropertyChanging
					Me._Id = value
					Me.SendPropertyChanged("Id")
					Me.OnIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClasesEspecies")>  _
	Partial Public Class ClasesEspecie
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDClasesEspecies As Integer
		
		Private _IDComisionista As Integer
		
		Private _IDSucComisionista As Integer
		
		Private _IDClaseEspecie As Integer
		
		Private _AplicaAccion As Boolean
		
		Private _Nombre As String
		
		Private _strCodInversionSuper As String
		
		Private _Actualizacion As Date
		
		Private _Usuario As String
		
		Private _IdProducto As Integer
		
		Private _Msg As String
		
		Private _InfoSesion As String
		
		Private _TituloCarteraColectiva As System.Nullable(Of Boolean)
		
		Private _ClaseContableTitulo As String
		
		Private _Descripcion As String
		
		Private _CodigoClaseDeceval As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDClasesEspeciesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClasesEspeciesChanged()
    End Sub
    Partial Private Sub OnIDComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDComisionistaChanged()
    End Sub
    Partial Private Sub OnIDSucComisionistaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSucComisionistaChanged()
    End Sub
    Partial Private Sub OnIDClaseEspecieChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDClaseEspecieChanged()
    End Sub
    Partial Private Sub OnAplicaAccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplicaAccionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnstrCodInversionSuperChanging(value As String)
    End Sub
    Partial Private Sub OnstrCodInversionSuperChanged()
    End Sub
    Partial Private Sub OnActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnActualizacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnIdProductoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProductoChanged()
    End Sub
    Partial Private Sub OnMsgChanging(value As String)
    End Sub
    Partial Private Sub OnMsgChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnTituloCarteraColectivaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTituloCarteraColectivaChanged()
    End Sub
    Partial Private Sub OnClaseContableTituloChanging(value As String)
    End Sub
    Partial Private Sub OnClaseContableTituloChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnCodigoClaseDecevalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoClaseDecevalChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDClasesEspecies", Storage:="_IDClasesEspecies", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", CanBeNull:=false, IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property IDClasesEspecies() As Integer
			Get
				Return Me._IDClasesEspecies
			End Get
			Set
				If (Object.Equals(Me._IDClasesEspecies, value) = false) Then
					Me.OnIDClasesEspeciesChanging(value)
					Me.SendPropertyChanging
					Me._IDClasesEspecies = value
					Me.SendPropertyChanged("IDClasesEspecies")
					Me.OnIDClasesEspeciesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDComisionista", Storage:="_IDComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDComisionista() As Integer
			Get
				Return Me._IDComisionista
			End Get
			Set
				If (Object.Equals(Me._IDComisionista, value) = false) Then
					Me.OnIDComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDComisionista = value
					Me.SendPropertyChanged("IDComisionista")
					Me.OnIDComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDSucComisionista", Storage:="_IDSucComisionista", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDSucComisionista() As Integer
			Get
				Return Me._IDSucComisionista
			End Get
			Set
				If (Object.Equals(Me._IDSucComisionista, value) = false) Then
					Me.OnIDSucComisionistaChanging(value)
					Me.SendPropertyChanging
					Me._IDSucComisionista = value
					Me.SendPropertyChanged("IDSucComisionista")
					Me.OnIDSucComisionistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngID", Storage:="_IDClaseEspecie", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDClaseEspecie() As Integer
			Get
				Return Me._IDClaseEspecie
			End Get
			Set
				If (Object.Equals(Me._IDClaseEspecie, value) = false) Then
					Me.OnIDClaseEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDClaseEspecie = value
					Me.SendPropertyChanged("IDClaseEspecie")
					Me.OnIDClaseEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logAplicaAccion", Storage:="_AplicaAccion", DbType:="Bit NOT NULL")>  _
		Public Property AplicaAccion() As Boolean
			Get
				Return Me._AplicaAccion
			End Get
			Set
				If ((Me._AplicaAccion = value)  _
							= false) Then
					Me.OnAplicaAccionChanging(value)
					Me.SendPropertyChanging
					Me._AplicaAccion = value
					Me.SendPropertyChanged("AplicaAccion")
					Me.OnAplicaAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodInversionSuper", DbType:="Varchar(15) NULL")>  _
		Public Property strCodInversionSuper() As String
			Get
				Return Me._strCodInversionSuper
			End Get
			Set
				If (String.Equals(Me._strCodInversionSuper, value) = false) Then
					Me.OnstrCodInversionSuperChanging(value)
					Me.SendPropertyChanging
					Me._strCodInversionSuper = value
					Me.SendPropertyChanged("strCodInversionSuper")
					Me.OnstrCodInversionSuperChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dtmActualizacion", Storage:="_Actualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property Actualizacion() As Date
			Get
				Return Me._Actualizacion
			End Get
			Set
				If ((Me._Actualizacion = value)  _
							= false) Then
					Me.OnActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._Actualizacion = value
					Me.SendPropertyChanged("Actualizacion")
					Me.OnActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIdProducto", Storage:="_IdProducto", DbType:="Int", CanBeNull:=true)>  _
		Public Property IdProducto() As Integer
			Get
				Return Me._IdProducto
			End Get
			Set
				If (Object.Equals(Me._IdProducto, value) = false) Then
					Me.OnIdProductoChanging(value)
					Me.SendPropertyChanging
					Me._IdProducto = value
					Me.SendPropertyChanged("IdProducto")
					Me.OnIdProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMsg", Storage:="_Msg", DbType:="Varchar(2000)")>  _
		Public Property Msg() As String
			Get
				Return Me._Msg
			End Get
			Set
				If (String.Equals(Me._Msg, value) = false) Then
					Me.OnMsgChanging(value)
					Me.SendPropertyChanging
					Me._Msg = value
					Me.SendPropertyChanged("Msg")
					Me.OnMsgChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logTituloCarteraColectiva", Storage:="_TituloCarteraColectiva", DbType:="Bit NULL")>  _
		Public Property TituloCarteraColectiva() As System.Nullable(Of Boolean)
			Get
				Return Me._TituloCarteraColectiva
			End Get
			Set
				If (Me._TituloCarteraColectiva.Equals(value) = false) Then
					Me.OnTituloCarteraColectivaChanging(value)
					Me.SendPropertyChanging
					Me._TituloCarteraColectiva = value
					Me.SendPropertyChanged("TituloCarteraColectiva")
					Me.OnTituloCarteraColectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strClaseContableTitulo", Storage:="_ClaseContableTitulo", DbType:="Varchar(2)  NULL")>  _
		Public Property ClaseContableTitulo() As String
			Get
				Return Me._ClaseContableTitulo
			End Get
			Set
				If (String.Equals(Me._ClaseContableTitulo, value) = false) Then
					Me.OnClaseContableTituloChanging(value)
					Me.SendPropertyChanging
					Me._ClaseContableTitulo = value
					Me.SendPropertyChanged("ClaseContableTitulo")
					Me.OnClaseContableTituloChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strDescripcion", Storage:="_Descripcion", DbType:="Varchar(50)  NULL")>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strCodigoClaseDeceval", Storage:="_CodigoClaseDeceval", DbType:="Varchar(2)  NULL")>  _
		Public Property CodigoClaseDeceval() As String
			Get
				Return Me._CodigoClaseDeceval
			End Get
			Set
				If (String.Equals(Me._CodigoClaseDeceval, value) = false) Then
					Me.OnCodigoClaseDecevalChanging(value)
					Me.SendPropertyChanging
					Me._CodigoClaseDeceval = value
					Me.SendPropertyChanged("CodigoClaseDeceval")
					Me.OnCodigoClaseDecevalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblTiposEmisores")>  _
	Partial Public Class TiposEmisores
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdTipoEmisor As Integer
		
		Private _intCodTipoEmisor As System.Nullable(of System.Int32)
		
		Private _intIdEmisor As System.Nullable(of System.Int32)
		
		Private _strDescripcionTipoEmisor As String
		
		Private _DescripcionEmisor As String
		
		Private _dtmActualizacion As Date
		
		Private _strUsuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdTipoEmisorChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdTipoEmisorChanged()
    End Sub
    Partial Private Sub OnintCodTipoEmisorChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnintCodTipoEmisorChanged()
    End Sub
    Partial Private Sub OnintIdEmisorChanging(value As System.Nullable(of System.Int32))
    End Sub
    Partial Private Sub OnintIdEmisorChanged()
    End Sub
    Partial Private Sub OnstrDescripcionTipoEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionTipoEmisorChanged()
    End Sub
    Partial Private Sub OnDescripcionEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionEmisorChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As Date)
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdTipoEmisor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdTipoEmisor() As Integer
			Get
				Return Me._intIdTipoEmisor
			End Get
			Set
				If ((Me._intIdTipoEmisor = value)  _
							= false) Then
					Me.OnintIdTipoEmisorChanging(value)
					Me.SendPropertyChanging
					Me._intIdTipoEmisor = value
					Me.SendPropertyChanged("intIdTipoEmisor")
					Me.OnintIdTipoEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCodTipoEmisor", DbType:="int NOT NULL", CanBeNull:=false)>  _
		Public Property intCodTipoEmisor() As System.Nullable(of System.Int32)
			Get
				Return Me._intCodTipoEmisor
			End Get
			Set
				If (Object.Equals(Me._intCodTipoEmisor, value) = false) Then
					Me.OnintCodTipoEmisorChanging(value)
					Me.SendPropertyChanging
					Me._intCodTipoEmisor = value
					Me.SendPropertyChanged("intCodTipoEmisor")
					Me.OnintCodTipoEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdEmisor", DbType:="int not NULL", CanBeNull:=false)>  _
		Public Property intIdEmisor() As System.Nullable(of System.Int32)
			Get
				Return Me._intIdEmisor
			End Get
			Set
				If (Object.Equals(Me._intIdEmisor, value) = false) Then
					Me.OnintIdEmisorChanging(value)
					Me.SendPropertyChanging
					Me._intIdEmisor = value
					Me.SendPropertyChanged("intIdEmisor")
					Me.OnintIdEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionTipoEmisor", DbType:="Varchar(255)NOT NULL", CanBeNull:=false)>  _
		Public Property strDescripcionTipoEmisor() As String
			Get
				Return Me._strDescripcionTipoEmisor
			End Get
			Set
				If (String.Equals(Me._strDescripcionTipoEmisor, value) = false) Then
					Me.OnstrDescripcionTipoEmisorChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionTipoEmisor = value
					Me.SendPropertyChanged("strDescripcionTipoEmisor")
					Me.OnstrDescripcionTipoEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionEmisor", DbType:="Varchar(60)NULL")>  _
		Public Property DescripcionEmisor() As String
			Get
				Return Me._DescripcionEmisor
			End Get
			Set
				If (String.Equals(Me._DescripcionEmisor, value) = false) Then
					Me.OnDescripcionEmisorChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionEmisor = value
					Me.SendPropertyChanged("DescripcionEmisor")
					Me.OnDescripcionEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="datetime", CanBeNull:=true)>  _
		Public Property dtmActualizacion() As Date
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Object.Equals(Me._dtmActualizacion, value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60)NOT NULL", CanBeNull:=false)>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLiquidaciones")>  _
	Partial Public Class EspeciesTotales
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Y As System.Nullable(Of Integer)
		
		Private _M As System.Nullable(Of Integer)
		
		Private _Tipo As String
		
		Private _Cantidad As System.Nullable(Of Double)
		
		Private _TotalLiq As System.Nullable(Of Double)
		
		Private _Comision As System.Nullable(Of Double)
		
		Private _IDLiquidaciones As Integer
		
		Private _IDEspecie As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYChanged()
    End Sub
    Partial Private Sub OnMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnTotalLiqChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalLiqChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnIDLiquidacionesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLiquidacionesChanged()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Y", DbType:="Int")>  _
		Public Property Y() As System.Nullable(Of Integer)
			Get
				Return Me._Y
			End Get
			Set
				If (Me._Y.Equals(value) = false) Then
					Me.OnYChanging(value)
					Me.SendPropertyChanging
					Me._Y = value
					Me.SendPropertyChanged("Y")
					Me.OnYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_M", DbType:="Int")>  _
		Public Property M() As System.Nullable(Of Integer)
			Get
				Return Me._M
			End Get
			Set
				If (Me._M.Equals(value) = false) Then
					Me.OnMChanging(value)
					Me.SendPropertyChanging
					Me._M = value
					Me.SendPropertyChanged("M")
					Me.OnMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Varchar(1)")>  _
		Public Property Tipo() As String
			Get
				Return Me._Tipo
			End Get
			Set
				If (String.Equals(Me._Tipo, value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="float")>  _
		Public Property Cantidad() As System.Nullable(Of Double)
			Get
				Return Me._Cantidad
			End Get
			Set
				If (Me._Cantidad.Equals(value) = false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Operaciones", Storage:="_TotalLiq", DbType:="Float")>  _
		Public Property TotalLiq() As System.Nullable(Of Double)
			Get
				Return Me._TotalLiq
			End Get
			Set
				If (Me._TotalLiq.Equals(value) = false) Then
					Me.OnTotalLiqChanging(value)
					Me.SendPropertyChanging
					Me._TotalLiq = value
					Me.SendPropertyChanged("TotalLiq")
					Me.OnTotalLiqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Comisiones", Storage:="_Comision", DbType:="Float")>  _
		Public Property Comision() As System.Nullable(Of Double)
			Get
				Return Me._Comision
			End Get
			Set
				If (Me._Comision.Equals(value) = false) Then
					Me.OnComisionChanging(value)
					Me.SendPropertyChanging
					Me._Comision = value
					Me.SendPropertyChanged("Comision")
					Me.OnComisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDLiquidaciones", Storage:="_IDLiquidaciones", DbType:="INT NOT NULL", IsPrimaryKey:=true)>  _
		Public Property IDLiquidaciones() As Integer
			Get
				Return Me._IDLiquidaciones
			End Get
			Set
				If ((Me._IDLiquidaciones = value)  _
							= false) Then
					Me.OnIDLiquidacionesChanging(value)
					Me.SendPropertyChanging
					Me._IDLiquidaciones = value
					Me.SendPropertyChanged("IDLiquidaciones")
					Me.OnIDLiquidacionesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="VARCHAR(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesBolsa")>  _
	Partial Public Class EspeciesNemotecnicos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _IDEspecie As String
		
		Private _IDBolsa As Integer
		
		Private _Nemotecnico As String
		
		Private _IDEspeciesBolsa As Integer
		
		Private _Usuario As String
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnIDEspecieChanged()
    End Sub
    Partial Private Sub OnIDBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBolsaChanged()
    End Sub
    Partial Private Sub OnNemotecnicoChanging(value As String)
    End Sub
    Partial Private Sub OnNemotecnicoChanged()
    End Sub
    Partial Private Sub OnIDEspeciesBolsaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDEspeciesBolsaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIDEspecie", Storage:="_IDEspecie", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property IDEspecie() As String
			Get
				Return Me._IDEspecie
			End Get
			Set
				If (String.Equals(Me._IDEspecie, value) = false) Then
					Me.OnIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._IDEspecie = value
					Me.SendPropertyChanged("IDEspecie")
					Me.OnIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="lngIDBolsa", Storage:="_IDBolsa", DbType:="Int NOT NULL", CanBeNull:=false)>  _
		Public Property IDBolsa() As Integer
			Get
				Return Me._IDBolsa
			End Get
			Set
				If (Object.Equals(Me._IDBolsa, value) = false) Then
					Me.OnIDBolsaChanging(value)
					Me.SendPropertyChanging
					Me._IDBolsa = value
					Me.SendPropertyChanged("IDBolsa")
					Me.OnIDBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNemotecnico", Storage:="_Nemotecnico", DbType:="Varchar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property Nemotecnico() As String
			Get
				Return Me._Nemotecnico
			End Get
			Set
				If (String.Equals(Me._Nemotecnico, value) = false) Then
					Me.OnNemotecnicoChanging(value)
					Me.SendPropertyChanging
					Me._Nemotecnico = value
					Me.SendPropertyChanged("Nemotecnico")
					Me.OnNemotecnicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDEspeciesBolsa", Storage:="_IDEspeciesBolsa", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property IDEspeciesBolsa() As Integer
			Get
				Return Me._IDEspeciesBolsa
			End Get
			Set
				If ((Me._IDEspeciesBolsa = value)  _
							= false) Then
					Me.OnIDEspeciesBolsaChanging(value)
					Me.SendPropertyChanging
					Me._IDEspeciesBolsa = value
					Me.SendPropertyChanged("IDEspeciesBolsa")
					Me.OnIDEspeciesBolsaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strUsuario", Storage:="_Usuario", DbType:="Varchar(60) NOT NULL", CanBeNull:=false)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)")>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class ConsultaNombreEspecie
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Nombre As String
		
		Private _IDRetira As String
		
		Private _Accion As Char
		
		Private _IDUnifica As String
		
		Private _Clase As Boolean
		
		Private _InfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIDRetiraChanging(value As String)
    End Sub
    Partial Private Sub OnIDRetiraChanged()
    End Sub
    Partial Private Sub OnAccionChanging(value As Char)
    End Sub
    Partial Private Sub OnAccionChanged()
    End Sub
    Partial Private Sub OnIDUnificaChanging(value As String)
    End Sub
    Partial Private Sub OnIDUnificaChanged()
    End Sub
    Partial Private Sub OnClaseChanging(value As Boolean)
    End Sub
    Partial Private Sub OnClaseChanged()
    End Sub
    Partial Private Sub OnInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombre", Storage:="_Nombre", DbType:="Varchar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdRetira", Storage:="_IDRetira", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IDRetira() As String
			Get
				Return Me._IDRetira
			End Get
			Set
				If (String.Equals(Me._IDRetira, value) = false) Then
					Me.OnIDRetiraChanging(value)
					Me.SendPropertyChanging
					Me._IDRetira = value
					Me.SendPropertyChanged("IDRetira")
					Me.OnIDRetiraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strAccion", Storage:="_Accion", DbType:="Char")>  _
		Public Property Accion() As Char
			Get
				Return Me._Accion
			End Get
			Set
				If ((Me._Accion = value)  _
							= false) Then
					Me.OnAccionChanging(value)
					Me.SendPropertyChanging
					Me._Accion = value
					Me.SendPropertyChanged("Accion")
					Me.OnAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strIdUnifica", Storage:="_IDUnifica", DbType:="Varchar(15)", CanBeNull:=false)>  _
		Public Property IDUnifica() As String
			Get
				Return Me._IDUnifica
			End Get
			Set
				If (String.Equals(Me._IDUnifica, value) = false) Then
					Me.OnIDUnificaChanging(value)
					Me.SendPropertyChanging
					Me._IDUnifica = value
					Me.SendPropertyChanged("IDUnifica")
					Me.OnIDUnificaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logClase", Storage:="_Clase", DbType:="bit")>  _
		Public Property Clase() As Boolean
			Get
				Return Me._Clase
			End Get
			Set
				If ((Me._Clase = value)  _
							= false) Then
					Me.OnClaseChanging(value)
					Me.SendPropertyChanging
					Me._Clase = value
					Me.SendPropertyChanged("Clase")
					Me.OnClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(1000)", CanBeNull:=false)>  _
		Public Property InfoSesion() As String
			Get
				Return Me._InfoSesion
			End Get
			Set
				If (String.Equals(Me._InfoSesion, value) = false) Then
					Me.OnInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._InfoSesion = value
					Me.SendPropertyChanged("InfoSesion")
					Me.OnInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="tblPreEspecies")>  _
	Partial Public Class PreEspecies
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDPreEspecies As Integer
		
		Private _strIDEspecie As String
		
		Private _logEsAccion As System.Nullable(Of Boolean)
		
		Private _strDescripcionEsAccion As String
		
		Private _lngIDClase As System.Nullable(Of Integer)
		
		Private _strDescripcionClase As String
		
		Private _lngIdEmisor As System.Nullable(Of Integer)
		
		Private _strDescripcionEmisor As String
		
		Private _dtmActualizacion As System.Nullable(Of Date)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDPreEspeciesChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDPreEspeciesChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieChanged()
    End Sub
    Partial Private Sub OnlogEsAccionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogEsAccionChanged()
    End Sub
    Partial Private Sub OnstrDescripcionEsAccionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionEsAccionChanged()
    End Sub
    Partial Private Sub OnlngIDClaseChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIDClaseChanged()
    End Sub
    Partial Private Sub OnstrDescripcionClaseChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionClaseChanged()
    End Sub
    Partial Private Sub OnlngIdEmisorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlngIdEmisorChanged()
    End Sub
    Partial Private Sub OnstrDescripcionEmisorChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionEmisorChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDPreEspecies", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDPreEspecies() As Integer
			Get
				Return Me._intIDPreEspecies
			End Get
			Set
				If ((Me._intIDPreEspecies = value)  _
							= false) Then
					Me.OnintIDPreEspeciesChanging(value)
					Me.SendPropertyChanging
					Me._intIDPreEspecies = value
					Me.SendPropertyChanged("intIDPreEspecies")
					Me.OnintIDPreEspeciesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(15) NOT NULL")>  _
		Public Property strIDEspecie() As String
			Get
				Return Me._strIDEspecie
			End Get
			Set
				If (String.Equals(Me._strIDEspecie, value) = false) Then
					Me.OnstrIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strIDEspecie = value
					Me.SendPropertyChanged("strIDEspecie")
					Me.OnstrIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEsAccion", DbType:="BIT NOT NULL")>  _
		Public Property logEsAccion() As System.Nullable(Of Boolean)
			Get
				Return Me._logEsAccion
			End Get
			Set
				If (Me._logEsAccion.Equals(value) = false) Then
					Me.OnlogEsAccionChanging(value)
					Me.SendPropertyChanging
					Me._logEsAccion = value
					Me.SendPropertyChanged("logEsAccion")
					Me.OnlogEsAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionEsAccion", DbType:="Varchar(10) NOT NULL")>  _
		Public Property strDescripcionEsAccion() As String
			Get
				Return Me._strDescripcionEsAccion
			End Get
			Set
				If (String.Equals(Me._strDescripcionEsAccion, value) = false) Then
					Me.OnstrDescripcionEsAccionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionEsAccion = value
					Me.SendPropertyChanged("strDescripcionEsAccion")
					Me.OnstrDescripcionEsAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDClase", DbType:="INT NOT NULL")>  _
		Public Property lngIDClase() As System.Nullable(Of Integer)
			Get
				Return Me._lngIDClase
			End Get
			Set
				If (Me._lngIDClase.Equals(value) = false) Then
					Me.OnlngIDClaseChanging(value)
					Me.SendPropertyChanging
					Me._lngIDClase = value
					Me.SendPropertyChanged("lngIDClase")
					Me.OnlngIDClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionClase", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionClase() As String
			Get
				Return Me._strDescripcionClase
			End Get
			Set
				If (String.Equals(Me._strDescripcionClase, value) = false) Then
					Me.OnstrDescripcionClaseChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionClase = value
					Me.SendPropertyChanged("strDescripcionClase")
					Me.OnstrDescripcionClaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdEmisor", DbType:="INT NOT NULL")>  _
		Public Property lngIdEmisor() As System.Nullable(Of Integer)
			Get
				Return Me._lngIdEmisor
			End Get
			Set
				If (Me._lngIdEmisor.Equals(value) = false) Then
					Me.OnlngIdEmisorChanging(value)
					Me.SendPropertyChanging
					Me._lngIdEmisor = value
					Me.SendPropertyChanged("lngIdEmisor")
					Me.OnlngIdEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionEmisor", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionEmisor() As String
			Get
				Return Me._strDescripcionEmisor
			End Get
			Set
				If (String.Equals(Me._strDescripcionEmisor, value) = false) Then
					Me.OnstrDescripcionEmisorChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionEmisor = value
					Me.SendPropertyChanged("strDescripcionEmisor")
					Me.OnstrDescripcionEmisorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property dtmActualizacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Me._dtmActualizacion.Equals(value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEspeciesDeposito")>  _
	Partial Public Class EspeciesDeposito
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDEspeciesDeposito As Integer
		
		Private _strIDEspecie As String
		
		Private _strDeposito As String
		
		Private _strDescripcionDeposito As String
		
		Private _logSeleccionado As System.Nullable(Of Boolean)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDEspeciesDepositoChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEspeciesDepositoChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieChanged()
    End Sub
    Partial Private Sub OnstrDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDepositoChanged()
    End Sub
    Partial Private Sub OnstrDescripcionDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionDepositoChanged()
    End Sub
    Partial Private Sub OnlogSeleccionadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogSeleccionadoChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEspeciesDeposito", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property intIDEspeciesDeposito() As Integer
			Get
				Return Me._intIDEspeciesDeposito
			End Get
			Set
				If ((Me._intIDEspeciesDeposito = value)  _
							= false) Then
					Me.OnintIDEspeciesDepositoChanging(value)
					Me.SendPropertyChanging
					Me._intIDEspeciesDeposito = value
					Me.SendPropertyChanged("intIDEspeciesDeposito")
					Me.OnintIDEspeciesDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strIDEspecie() As String
			Get
				Return Me._strIDEspecie
			End Get
			Set
				If (String.Equals(Me._strIDEspecie, value) = false) Then
					Me.OnstrIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strIDEspecie = value
					Me.SendPropertyChanged("strIDEspecie")
					Me.OnstrIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDeposito", DbType:="Varchar(15) NOT NULL")>  _
		Public Property strDeposito() As String
			Get
				Return Me._strDeposito
			End Get
			Set
				If (String.Equals(Me._strDeposito, value) = false) Then
					Me.OnstrDepositoChanging(value)
					Me.SendPropertyChanging
					Me._strDeposito = value
					Me.SendPropertyChanged("strDeposito")
					Me.OnstrDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionDeposito", DbType:="Varchar(50) NOT NULL")>  _
		Public Property strDescripcionDeposito() As String
			Get
				Return Me._strDescripcionDeposito
			End Get
			Set
				If (String.Equals(Me._strDescripcionDeposito, value) = false) Then
					Me.OnstrDescripcionDepositoChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcionDeposito = value
					Me.SendPropertyChanged("strDescripcionDeposito")
					Me.OnstrDescripcionDepositoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logSeleccionado", DbType:="Bit NOT NULL")>  _
		Public Property logSeleccionado() As System.Nullable(Of Boolean)
			Get
				Return Me._logSeleccionado
			End Get
			Set
				If (Me._logSeleccionado.Equals(value) = false) Then
					Me.OnlogSeleccionadoChanging(value)
					Me.SendPropertyChanging
					Me._logSeleccionado = value
					Me.SendPropertyChanged("logSeleccionado")
					Me.OnlogSeleccionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(1000)")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>  _
	Partial Public Class Operaciones_CalculosTasaFacial_Calcular
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Exitoso As System.Nullable(Of Boolean)
		
		Private _Mensaje As String
		
		Private _ValorSalidaNominal As System.Nullable(Of System.Double)
		
		Private _ValorSalidaEfectiva As System.Nullable(Of System.Double)
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExitosoChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnValorSalidaNominalChanging(value As System.Nullable(Of System.Double))
    End Sub
    Partial Private Sub OnValorSalidaNominalChanged()
    End Sub
    Partial Private Sub OnValorSalidaEfectivaChanging(value As System.Nullable(Of System.Double))
    End Sub
    Partial Private Sub OnValorSalidaEfectivaChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", DbType:="Int NULL", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logExitoso", Storage:="_Exitoso", DbType:="Bit")>  _
		Public Property Exitoso() As System.Nullable(Of Boolean)
			Get
				Return Me._Exitoso
			End Get
			Set
				If (Me._Exitoso.Equals(value) = false) Then
					Me.OnExitosoChanging(value)
					Me.SendPropertyChanging
					Me._Exitoso = value
					Me.SendPropertyChanged("Exitoso")
					Me.OnExitosoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="Varchar(1000)")>  _
		Public Property Mensaje() As String
			Get
				Return Me._Mensaje
			End Get
			Set
				If (String.Equals(Me._Mensaje, value) = false) Then
					Me.OnMensajeChanging(value)
					Me.SendPropertyChanging
					Me._Mensaje = value
					Me.SendPropertyChanged("Mensaje")
					Me.OnMensajeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorSalidaNominal", Storage:="_ValorSalidaNominal", DbType:="Float", CanBeNull:=true)>  _
		Public Property ValorSalidaNominal() As System.Nullable(Of System.Double)
			Get
				Return Me._ValorSalidaNominal
			End Get
			Set
				If (Object.Equals(Me._ValorSalidaNominal, value) = false) Then
					Me.OnValorSalidaNominalChanging(value)
					Me.SendPropertyChanging
					Me._ValorSalidaNominal = value
					Me.SendPropertyChanged("ValorSalidaNominal")
					Me.OnValorSalidaNominalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="dblValorSalidaEfectiva", Storage:="_ValorSalidaEfectiva", DbType:="Float", CanBeNull:=true)>  _
		Public Property ValorSalidaEfectiva() As System.Nullable(Of System.Double)
			Get
				Return Me._ValorSalidaEfectiva
			End Get
			Set
				If (Object.Equals(Me._ValorSalidaEfectiva, value) = false) Then
					Me.OnValorSalidaEfectivaChanging(value)
					Me.SendPropertyChanging
					Me._ValorSalidaEfectiva = value
					Me.SendPropertyChanged("ValorSalidaEfectiva")
					Me.OnValorSalidaEfectivaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblConfiguracionBursatilidad")>  _
	Partial Public Class ConfiguracionBursatilidad
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIdConfiguracionBursatilidad As Integer
		
		Private _strBursatilidad As String
		
		Private _strBursatilidadDescripcion As String
		
		Private _logEntidadVigilada As System.Nullable(Of Boolean)
		
		Private _strClaseInversionDescripcion As String
		
		Private _strClaseInversion As String
		
		Private _strClaseContable As String
		
		Private _strClaseContableDescripcion As String
		
		Private _dtmActualizacion As System.Nullable(Of Date)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
		Private _pstrUsuarioConexion As String
		
		Private _pstrInfoConexion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIdConfiguracionBursatilidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIdConfiguracionBursatilidadChanged()
    End Sub
    Partial Private Sub OnstrBursatilidadChanging(value As String)
    End Sub
    Partial Private Sub OnstrBursatilidadChanged()
    End Sub
    Partial Private Sub OnstrBursatilidadDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrBursatilidadDescripcionChanged()
    End Sub
    Partial Private Sub OnlogEntidadVigiladaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnlogEntidadVigiladaChanged()
    End Sub
    Partial Private Sub OnstrClaseInversionDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseInversionDescripcionChanged()
    End Sub
    Partial Private Sub OnstrClaseInversionChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseInversionChanged()
    End Sub
    Partial Private Sub OnstrClaseContableChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseContableChanged()
    End Sub
    Partial Private Sub OnstrClaseContableDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrClaseContableDescripcionChanged()
    End Sub
    Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndtmActualizacionChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrUsuarioConexionChanged()
    End Sub
    Partial Private Sub OnpstrInfoConexionChanging(value As String)
    End Sub
    Partial Private Sub OnpstrInfoConexionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIdConfiguracionBursatilidad", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIdConfiguracionBursatilidad() As Integer
			Get
				Return Me._intIdConfiguracionBursatilidad
			End Get
			Set
				If ((Me._intIdConfiguracionBursatilidad = value)  _
							= false) Then
					Me.OnintIdConfiguracionBursatilidadChanging(value)
					Me.SendPropertyChanging
					Me._intIdConfiguracionBursatilidad = value
					Me.SendPropertyChanged("intIdConfiguracionBursatilidad")
					Me.OnintIdConfiguracionBursatilidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strBursatilidad", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strBursatilidad() As String
			Get
				Return Me._strBursatilidad
			End Get
			Set
				If (String.Equals(Me._strBursatilidad, value) = false) Then
					Me.OnstrBursatilidadChanging(value)
					Me.SendPropertyChanging
					Me._strBursatilidad = value
					Me.SendPropertyChanged("strBursatilidad")
					Me.OnstrBursatilidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strBursatilidadDescripcion", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strBursatilidadDescripcion() As String
			Get
				Return Me._strBursatilidadDescripcion
			End Get
			Set
				If (String.Equals(Me._strBursatilidadDescripcion, value) = false) Then
					Me.OnstrBursatilidadDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strBursatilidadDescripcion = value
					Me.SendPropertyChanged("strBursatilidadDescripcion")
					Me.OnstrBursatilidadDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logEntidadVigilada", DbType:="BIT NOT NULL")>  _
		Public Property logEntidadVigilada() As System.Nullable(Of Boolean)
			Get
				Return Me._logEntidadVigilada
			End Get
			Set
				If (Me._logEntidadVigilada.Equals(value) = false) Then
					Me.OnlogEntidadVigiladaChanging(value)
					Me.SendPropertyChanging
					Me._logEntidadVigilada = value
					Me.SendPropertyChanged("logEntidadVigilada")
					Me.OnlogEntidadVigiladaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseInversionDescripcion", DbType:="Varchar(600) NOT NULL")>  _
		Public Property strClaseInversionDescripcion() As String
			Get
				Return Me._strClaseInversionDescripcion
			End Get
			Set
				If (String.Equals(Me._strClaseInversionDescripcion, value) = false) Then
					Me.OnstrClaseInversionDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strClaseInversionDescripcion = value
					Me.SendPropertyChanged("strClaseInversionDescripcion")
					Me.OnstrClaseInversionDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseInversion", DbType:="Varchar(15) NOT NULL")>  _
		Public Property strClaseInversion() As String
			Get
				Return Me._strClaseInversion
			End Get
			Set
				If (String.Equals(Me._strClaseInversion, value) = false) Then
					Me.OnstrClaseInversionChanging(value)
					Me.SendPropertyChanging
					Me._strClaseInversion = value
					Me.SendPropertyChanged("strClaseInversion")
					Me.OnstrClaseInversionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseContable", DbType:="Varchar(80) NOT NULL")>  _
		Public Property strClaseContable() As String
			Get
				Return Me._strClaseContable
			End Get
			Set
				If (String.Equals(Me._strClaseContable, value) = false) Then
					Me.OnstrClaseContableChanging(value)
					Me.SendPropertyChanging
					Me._strClaseContable = value
					Me.SendPropertyChanged("strClaseContable")
					Me.OnstrClaseContableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseContableDescripcion", DbType:="Varchar(200) NOT NULL")>  _
		Public Property strClaseContableDescripcion() As String
			Get
				Return Me._strClaseContableDescripcion
			End Get
			Set
				If (String.Equals(Me._strClaseContableDescripcion, value) = false) Then
					Me.OnstrClaseContableDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strClaseContableDescripcion = value
					Me.SendPropertyChanged("strClaseContableDescripcion")
					Me.OnstrClaseContableDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NOT NULL")>  _
		Public Property dtmActualizacion() As System.Nullable(Of Date)
			Get
				Return Me._dtmActualizacion
			End Get
			Set
				If (Me._dtmActualizacion.Equals(value) = false) Then
					Me.OndtmActualizacionChanging(value)
					Me.SendPropertyChanging
					Me._dtmActualizacion = value
					Me.SendPropertyChanged("dtmActualizacion")
					Me.OndtmActualizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>  _
		Public Property pstrUsuarioConexion() As String
			Get
				Return Me._pstrUsuarioConexion
			End Get
			Set
				If (String.Equals(Me._pstrUsuarioConexion, value) = false) Then
					Me.OnpstrUsuarioConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrUsuarioConexion = value
					Me.SendPropertyChanged("pstrUsuarioConexion")
					Me.OnpstrUsuarioConexionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>  _
		Public Property pstrInfoConexion() As String
			Get
				Return Me._pstrInfoConexion
			End Get
			Set
				If (String.Equals(Me._pstrInfoConexion, value) = false) Then
					Me.OnpstrInfoConexionChanging(value)
					Me.SendPropertyChanging
					Me._pstrInfoConexion = value
					Me.SendPropertyChanged("pstrInfoConexion")
					Me.OnpstrInfoConexionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblConceptoRetencion")>  _
	Partial Public Class ConceptoRetencion
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDConceptoRetencion As Integer
		
		Private _strDescripcion As String
		
		Private _dblPorcentajeRetencion As System.Nullable(Of Double)
		
		Private _logGravado As System.Nullable(of System.Boolean)
		
		Private _strUsuario As String
		
		Private _strInfoSesion As String
		
		Private _strMsgValidacion As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDConceptoRetencionChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDConceptoRetencionChanged()
    End Sub
    Partial Private Sub OnstrDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnstrDescripcionChanged()
    End Sub
    Partial Private Sub OndblPorcentajeRetencionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblPorcentajeRetencionChanged()
    End Sub
    Partial Private Sub OnlogGravadoChanging(value As System.Nullable(of System.Boolean))
    End Sub
    Partial Private Sub OnlogGravadoChanged()
    End Sub
    Partial Private Sub OnstrUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnstrUsuarioChanged()
    End Sub
    Partial Private Sub OnstrInfoSesionChanging(value As String)
    End Sub
    Partial Private Sub OnstrInfoSesionChanged()
    End Sub
    Partial Private Sub OnstrMsgValidacionChanging(value As String)
    End Sub
    Partial Private Sub OnstrMsgValidacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConceptoRetencion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property intIDConceptoRetencion() As Integer
			Get
				Return Me._intIDConceptoRetencion
			End Get
			Set
				If ((Me._intIDConceptoRetencion = value)  _
							= false) Then
					Me.OnintIDConceptoRetencionChanging(value)
					Me.SendPropertyChanging
					Me._intIDConceptoRetencion = value
					Me.SendPropertyChanged("intIDConceptoRetencion")
					Me.OnintIDConceptoRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="Varchar(100) NULL")>  _
		Public Property strDescripcion() As String
			Get
				Return Me._strDescripcion
			End Get
			Set
				If (String.Equals(Me._strDescripcion, value) = false) Then
					Me.OnstrDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._strDescripcion = value
					Me.SendPropertyChanged("strDescripcion")
					Me.OnstrDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeRetencion", DbType:="Float NULL")>  _
		Public Property dblPorcentajeRetencion() As System.Nullable(Of Double)
			Get
				Return Me._dblPorcentajeRetencion
			End Get
			Set
				If (Me._dblPorcentajeRetencion.Equals(value) = false) Then
					Me.OndblPorcentajeRetencionChanging(value)
					Me.SendPropertyChanging
					Me._dblPorcentajeRetencion = value
					Me.SendPropertyChanged("dblPorcentajeRetencion")
					Me.OndblPorcentajeRetencionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logGravado", DbType:="Bit NOT NULL", CanBeNull:=false)>  _
		Public Property logGravado() As System.Nullable(of System.Boolean)
			Get
				Return Me._logGravado
			End Get
			Set
				If (Object.Equals(Me._logGravado, value) = false) Then
					Me.OnlogGravadoChanging(value)
					Me.SendPropertyChanging
					Me._logGravado = value
					Me.SendPropertyChanged("logGravado")
					Me.OnlogGravadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>  _
		Public Property strUsuario() As String
			Get
				Return Me._strUsuario
			End Get
			Set
				If (String.Equals(Me._strUsuario, value) = false) Then
					Me.OnstrUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._strUsuario = value
					Me.SendPropertyChanged("strUsuario")
					Me.OnstrUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>  _
		Public Property strInfoSesion() As String
			Get
				Return Me._strInfoSesion
			End Get
			Set
				If (String.Equals(Me._strInfoSesion, value) = false) Then
					Me.OnstrInfoSesionChanging(value)
					Me.SendPropertyChanging
					Me._strInfoSesion = value
					Me.SendPropertyChanged("strInfoSesion")
					Me.OnstrInfoSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>  _
		Public Property strMsgValidacion() As String
			Get
				Return Me._strMsgValidacion
			End Get
			Set
				If (String.Equals(Me._strMsgValidacion, value) = false) Then
					Me.OnstrMsgValidacionChanging(value)
					Me.SendPropertyChanging
					Me._strMsgValidacion = value
					Me.SendPropertyChanged("strMsgValidacion")
					Me.OnstrMsgValidacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblArbitrajeADR")>  _
	Partial Public Class ArbitrajeADR
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _intIDEntidad As Integer
		
		Private _strAccion As String
		
		Private _strIDEspecieADR As String
		
		Private _intIDArbitrajeADR As System.Nullable(Of Integer)
		
		Private _dtmVigencia As System.Nullable(of System.DateTime)
		
		Private _strIDEspecie As String
		
		Private _dblValor As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnintIDEntidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnintIDEntidadChanged()
    End Sub
    Partial Private Sub OnstrAccionChanging(value As String)
    End Sub
    Partial Private Sub OnstrAccionChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieADRChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieADRChanged()
    End Sub
    Partial Private Sub OnintIDArbitrajeADRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintIDArbitrajeADRChanged()
    End Sub
    Partial Private Sub OndtmVigenciaChanging(value As System.Nullable(of System.DateTime))
    End Sub
    Partial Private Sub OndtmVigenciaChanged()
    End Sub
    Partial Private Sub OnstrIDEspecieChanging(value As String)
    End Sub
    Partial Private Sub OnstrIDEspecieChanged()
    End Sub
    Partial Private Sub OndblValorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OndblValorChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDEntidad", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property intIDEntidad() As Integer
			Get
				Return Me._intIDEntidad
			End Get
			Set
				If ((Me._intIDEntidad = value)  _
							= false) Then
					Me.OnintIDEntidadChanging(value)
					Me.SendPropertyChanging
					Me._intIDEntidad = value
					Me.SendPropertyChanged("intIDEntidad")
					Me.OnintIDEntidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strAccion", DbType:="VARCHAR(15) NOT NULL", CanBeNull:=false)>  _
		Public Property strAccion() As String
			Get
				Return Me._strAccion
			End Get
			Set
				If (String.Equals(Me._strAccion, value) = false) Then
					Me.OnstrAccionChanging(value)
					Me.SendPropertyChanging
					Me._strAccion = value
					Me.SendPropertyChanged("strAccion")
					Me.OnstrAccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecieADR", DbType:="VARCHAR(15) NOT NULL", CanBeNull:=false)>  _
		Public Property strIDEspecieADR() As String
			Get
				Return Me._strIDEspecieADR
			End Get
			Set
				If (String.Equals(Me._strIDEspecieADR, value) = false) Then
					Me.OnstrIDEspecieADRChanging(value)
					Me.SendPropertyChanging
					Me._strIDEspecieADR = value
					Me.SendPropertyChanged("strIDEspecieADR")
					Me.OnstrIDEspecieADRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDArbitrajeADR", DbType:="Int NULL")>  _
		Public Property intIDArbitrajeADR() As System.Nullable(Of Integer)
			Get
				Return Me._intIDArbitrajeADR
			End Get
			Set
				If (Me._intIDArbitrajeADR.Equals(value) = false) Then
					Me.OnintIDArbitrajeADRChanging(value)
					Me.SendPropertyChanging
					Me._intIDArbitrajeADR = value
					Me.SendPropertyChanged("intIDArbitrajeADR")
					Me.OnintIDArbitrajeADRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVigencia", DbType:="Datetime NULL", CanBeNull:=true)>  _
		Public Property dtmVigencia() As System.Nullable(of System.DateTime)
			Get
				Return Me._dtmVigencia
			End Get
			Set
				If (Object.Equals(Me._dtmVigencia, value) = false) Then
					Me.OndtmVigenciaChanging(value)
					Me.SendPropertyChanging
					Me._dtmVigencia = value
					Me.SendPropertyChanged("dtmVigencia")
					Me.OndtmVigenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="VARCHAR(15) NULL")>  _
		Public Property strIDEspecie() As String
			Get
				Return Me._strIDEspecie
			End Get
			Set
				If (String.Equals(Me._strIDEspecie, value) = false) Then
					Me.OnstrIDEspecieChanging(value)
					Me.SendPropertyChanging
					Me._strIDEspecie = value
					Me.SendPropertyChanged("strIDEspecie")
					Me.OnstrIDEspecieChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblValor", DbType:="Float NULL")>  _
		Public Property dblValor() As System.Nullable(Of Double)
			Get
				Return Me._dblValor
			End Get
			Set
				If (Me._dblValor.Equals(value) = false) Then
					Me.OndblValorChanging(value)
					Me.SendPropertyChanging
					Me._dblValor = value
					Me.SendPropertyChanged("dblValor")
					Me.OndblValorChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace

'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


Partial Public Class CF_TitulosNetDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertTitulosCompras(instance As CFTitulosNet.TitulosCompras)
    End Sub
    Partial Private Sub UpdateTitulosCompras(instance As CFTitulosNet.TitulosCompras)
    End Sub
    Partial Private Sub DeleteTitulosCompras(instance As CFTitulosNet.TitulosCompras)
    End Sub
    Partial Private Sub DeleteTitulosVentas(instance As CFTitulosNet.TitulosVentas)
    End Sub
    Partial Private Sub InsertTitulosCruce(instance As CFTitulosNet.TitulosCruce)
    End Sub
    Partial Private Sub UpdateTitulosCruce(instance As CFTitulosNet.TitulosCruce)
    End Sub
    Partial Private Sub DeleteTitulosCruce(instance As CFTitulosNet.TitulosCruce)
    End Sub
    Partial Private Sub InsertTitulosPortafolio(instance As CFTitulosNet.TitulosPortafolio)
    End Sub
    Partial Private Sub DeleteTitulosPortafolio(instance As CFTitulosNet.TitulosPortafolio)
    End Sub
    Partial Private Sub InsertRespuestaArchivoImportacion(instance As CFTitulosNet.RespuestaArchivoImportacion)
    End Sub
    Partial Private Sub UpdateRespuestaArchivoImportacion(instance As CFTitulosNet.RespuestaArchivoImportacion)
    End Sub
    Partial Private Sub DeleteRespuestaArchivoImportacion(instance As CFTitulosNet.RespuestaArchivoImportacion)
    End Sub
    Partial Private Sub InserttblResultadoEnvioArchivo(instance As CFTitulosNet.tblResultadoEnvioArchivo)
    End Sub
    Partial Private Sub UpdatetblResultadoEnvioArchivo(instance As CFTitulosNet.tblResultadoEnvioArchivo)
    End Sub
    Partial Private Sub DeletetblResultadoEnvioArchivo(instance As CFTitulosNet.tblResultadoEnvioArchivo)
    End Sub
#End Region

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property TitulosCompras() As System.Data.Linq.Table(Of CFTitulosNet.TitulosCompras)
        Get
            Return Me.GetTable(Of CFTitulosNet.TitulosCompras)
        End Get
    End Property

    Public ReadOnly Property TitulosVentas() As System.Data.Linq.Table(Of CFTitulosNet.TitulosVentas)
        Get
            Return Me.GetTable(Of CFTitulosNet.TitulosVentas)
        End Get
    End Property

    Public ReadOnly Property TitulosCruce() As System.Data.Linq.Table(Of CFTitulosNet.TitulosCruce)
        Get
            Return Me.GetTable(Of CFTitulosNet.TitulosCruce)
        End Get
    End Property

    Public ReadOnly Property TitulosPortafolio() As System.Data.Linq.Table(Of CFTitulosNet.TitulosPortafolio)
        Get
            Return Me.GetTable(Of CFTitulosNet.TitulosPortafolio)
        End Get
    End Property

    Public ReadOnly Property RespuestaArchivoImportacion() As System.Data.Linq.Table(Of CFTitulosNet.RespuestaArchivoImportacion)
        Get
            Return Me.GetTable(Of CFTitulosNet.RespuestaArchivoImportacion)
        End Get
    End Property

    Public ReadOnly Property tblResultadoEnvioArchivo() As System.Data.Linq.Table(Of CFTitulosNet.tblResultadoEnvioArchivo)
        Get
            Return Me.GetTable(Of CFTitulosNet.tblResultadoEnvioArchivo)
        End Get
    End Property

    Public ReadOnly Property ConceptoRetencion() As System.Data.Linq.Table(Of CFTitulosNet.ConceptoRetencion)
        Get
            Return Me.GetTable(Of CFTitulosNet.ConceptoRetencion)
        End Get
    End Property

    Private Sub InsertTitulosVentas(ByVal obj As CFTitulosNet.TitulosVentas)
        Me.PorDefinir1()
    End Sub

    Private Sub UpdateTitulosVentas(ByVal obj As CFTitulosNet.TitulosVentas)
        Me.PorDefinir1()
    End Sub

    Private Sub UpdateTitulosPortafolio(ByVal obj As CFTitulosNet.TitulosPortafolio)
        Me.PorDefinir2()
    End Sub

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_Consecutivo")>
    Public Function uspOyDNet_Titulos_Consecutivo(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrNombreConsecutivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByRef pintConsecutivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrNombreConsecutivo, pintConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pintConsecutivo = CType(result.GetParameterValue(1), System.Nullable(Of Integer))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_ControlUsuarios")>
    Public Function uspOyDNet_Titulos_ControlUsuarios(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrTipoProceso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintConsecutivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(MAX) NULL")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrTipoProceso, pintConsecutivo, pstrMsgValidacion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pstrMsgValidacion = CType(result.GetParameterValue(2), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_CompradosSinCargar_Consultar")>
    Public Function uspOyDNet_Titulos_CompradosSinCargar_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogFiltrarTodo As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaLimite As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaCorte As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintConsecutivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.TitulosCompras)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, plogFiltrarTodo, pdtmFechaLimite, plngComitente, pstrIDEspecie, pdtmFechaCorte, pstrClase, pintConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.TitulosCompras))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_VendidosSinDescargar_Consultar")>
    Public Function uspOyDNet_Titulos_VendidosSinDescargar_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogFiltrarTodo As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaLimite As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaCorte As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintConsecutivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.TitulosVentas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, plogFiltrarTodo, pdtmFechaLimite, plngComitente, pstrIDEspecie, pdtmFechaCorte, pstrClase, pintConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.TitulosVentas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_ComprasXCargar_Consultar")>
    Public Function uspOyDNet_Titulos_ComprasXCargar_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintConsecutivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogFiltradoDesdePantalla As System.Nullable(Of System.Boolean)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), plngComitente, pstrIDEspecie, pstrClase, pintConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, plogFiltradoDesdePantalla)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_CruceTitulosPortafolio_Consultar")>
    Public Function uspOyDNet_Titulos_CruceTitulosPortafolio_Consultar(
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NULL")> ByVal pdtmFechaEmision As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NULL")> ByVal pdtmFechaLimite As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NULL")> ByVal pdtmFechaVencimiento As System.Nullable(Of System.DateTime),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblTasa As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20) NULL")> ByVal pstrIndicador As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblPuntos As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(20) NULL")> ByVal pstrModalidad As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal pdblCantidad As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal plngCustodia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal plngSecuencia As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrTipoDeOferta As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal plngIdLiqVenta As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float NULL")> ByVal plngIdParcialVenta As System.Nullable(Of Double),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintConsecutivo As System.Nullable(Of Integer),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String,
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte),
                <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogFiltradoDesdePantalla As System.Nullable(Of System.Boolean)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrIDEspecie, plngComitente, pdtmFechaEmision, pdtmFechaLimite, pdtmFechaVencimiento, pdblTasa, pstrIndicador, pdblPuntos, pstrModalidad, pdblCantidad, pstrClase, plngCustodia, plngSecuencia, pstrTipoDeOferta, plngIdLiqVenta, plngIdParcialVenta, pintConsecutivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, plogFiltradoDesdePantalla)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_ConsultarCruce")>
    Public Function uspOyDNet_Titulos_ConsultarCruce(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.TitulosCruce)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.TitulosCruce))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_PortafolioCliente_Consultar")>
    Public Function uspOyDNet_Titulos_PortafolioCliente_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NULL")> ByVal pdtmFechaLimite As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.TitulosPortafolio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaLimite, plngComitente, pstrIDEspecie, pstrClase, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.TitulosPortafolio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir1() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute()>
    Public Function PorDefinir2() As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_Titulos_MovimientosDeceval_Importar")>
    Public Function uspOyDNet_Titulos_MovimientosDeceval_Importar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaProceso As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(500)")> ByVal pstrRutaArchivoAImportar As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrUsuario As String) As ISingleResult(Of CFTitulosNet.RespuestaArchivoImportacion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pdtmFechaProceso, pstrRutaArchivoAImportar, pstrUsuario)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.RespuestaArchivoImportacion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CruceOperacionesManual_VendidosSinDescargar_Consultar")>
    Public Function uspOyDNet_CruceOperacionesManual_VendidosSinDescargar_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogFiltrarTodo As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaLimite As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NOT NULL")> ByVal pdtmFechaCorte As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.TitulosVentas)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, plogFiltrarTodo, pdtmFechaLimite, plngComitente, pstrIDEspecie, pdtmFechaCorte, pstrClase, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.TitulosVentas))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CruceOperacionesManual_PortafolioCliente_Consultar")>
    Public Function uspOyDNet_CruceOperacionesManual_PortafolioCliente_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BIT NOT NULL")> ByVal plogFiltrarTodo As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Datetime NULL")> ByVal pdtmFechaLimite As System.Nullable(Of System.DateTime), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(17) NULL")> ByVal plngComitente As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(15) NULL")> ByVal pstrIDEspecie As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1) NULL")> ByVal pstrClase As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NULL")> ByVal pintIDLiquidaciones As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NOT NULL")> ByVal pstrOrigen As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.TitulosPortafolio)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, plogFiltrarTodo, pdtmFechaLimite, plngComitente, pstrIDEspecie, pstrClase, pintIDLiquidaciones, pstrOrigen, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.TitulosPortafolio))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.uspOyDNet_CruceOperacionesManual_Actualizar")>
    Public Function uspOyDNet_CruceOperacionesManual_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int NOT NULL")> ByVal pintIDLiquidaciones As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Text NOT NULL")> ByVal pxmlDetalleGrid As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(50) NOT NULL")> ByVal pstrOrigen As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(8000) NULL")> ByRef pstrMsgValidacion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NOT NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDLiquidaciones, pxmlDetalleGrid, pstrOrigen, pstrMsgValidacion, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        pstrMsgValidacion = CType(result.GetParameterValue(3), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="DECEVAL.uspOyDNet_DecevalArchivos_Solicitar")>
    Public Function uspOyDNet_DecevalArchivos_Solicitar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="varchar (80) NOT NULL")> ByVal pstrArchivo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT NOT NULL")> ByVal pintTipoArchivo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(60) NULL")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar(80) NOT NULL")> ByVal pstrCodigoISIN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="INT NOT NULL")> ByVal pintCuentaInversionista As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Varchar (20) NOT NULL")> ByVal pstrCodigoDeposito As String) As ISingleResult(Of CFTitulosNet.tblResultadoEnvioArchivo)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrArchivo, pintTipoArchivo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrCodigoISIN, pintCuentaInversionista, pstrCodigoDeposito)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.tblResultadoEnvioArchivo))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConceptosRetencion_Actualizar")>
    Public Function uspCalculosFinancieros_ConceptosRetencion_Actualizar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDConceptoRetencion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal pdblPorcentajeRetencion As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogGravado As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDConceptoRetencion, pstrCodigo, pstrDescripcion, pdblPorcentajeRetencion, plogGravado, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(8), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConceptosRetencion_Eliminar")>
    Public Function uspCalculosFinancieros_ConceptosRetencion_Eliminar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDConceptoRetencion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(8000)")> ByRef pstrMsgValidacion As String) As Integer
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pintIDConceptoRetencion, pstrCodigo, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado, pstrMsgValidacion)
        pstrMsgValidacion = CType(result.GetParameterValue(5), String)
        Return CType(result.ReturnValue, Integer)
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConceptosRetencion_Filtrar")>
    Public Function uspCalculosFinancieros_ConceptosRetencion_Filtrar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(30)")> ByVal pstrFiltro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.ConceptoRetencion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrFiltro, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.ConceptoRetencion))
    End Function

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="CF.uspCalculosFinancieros_ConceptosRetencion_Consultar")>
    Public Function uspCalculosFinancieros_ConceptosRetencion_Consultar(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pstrAccion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintIDConceptoRetencion As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal pstrCodigo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal pstrDescripcion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit NOT NULL")> ByVal plogGravado As System.Nullable(Of System.Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(60)")> ByVal pstrUsuario As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(1000)")> ByVal pstrInfoSesion As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal pintErrorPersonalizado As System.Nullable(Of Byte)) As ISingleResult(Of CFTitulosNet.ConceptoRetencion)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), pstrAccion, pintIDConceptoRetencion, pstrCodigo, pstrDescripcion, plogGravado, pstrUsuario, pstrInfoSesion, pintErrorPersonalizado)
        Return CType(result.ReturnValue, ISingleResult(Of CFTitulosNet.ConceptoRetencion))
    End Function
End Class

Namespace CFTitulosNet

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class TitulosCompras
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDComprasXDescargar As Integer

        Private _strLiq_Parcial As String

        Private _strClaseOrden As String

        Private _strTipo As String

        Private _lngIDComitente As String

        Private _lngIDCuentaDeceval As System.Nullable(Of Integer)

        Private _strFondo_Descripcion As String

        Private _strIDEspecie As String

        Private _dtmLiquidacion As System.Nullable(Of System.DateTime)

        Private _dtmCumplimientoTitulo As System.Nullable(Of System.DateTime)

        Private _dblCantidad As System.Nullable(Of Double)

        Private _dtmEmision As System.Nullable(Of System.DateTime)

        Private _dtmVencimiento As System.Nullable(Of System.DateTime)

        Private _dblTasaDescuento As System.Nullable(Of Double)

        Private _strTipoTasaFija As String

        Private _strIndicadorEconomico As String

        Private _dblPuntosIndicador As System.Nullable(Of Double)

        Private _strModalidad As String

        Private _curPrecio As System.Nullable(Of Double)

        Private _curTotalLiq As System.Nullable(Of Double)

        Private _lngPlazo As System.Nullable(Of Integer)

        Private _strTipoDeOferta_Descripcion As String

        Private _strClase_Descripcion As String

        Private _intCantidadRegistros As System.Nullable(Of Integer)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDComprasXDescargarChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDComprasXDescargarChanged()
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanging(value As String)
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanged()
        End Sub
        Partial Private Sub OnstrClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnstrClaseOrdenChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnlngIDCuentaDecevalChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDCuentaDecevalChanged()
        End Sub
        Partial Private Sub OnstrFondo_DescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrFondo_DescripcionChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OndtmLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmLiquidacionChanged()
        End Sub
        Partial Private Sub OndtmCumplimientoTituloChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmCumplimientoTituloChanged()
        End Sub
        Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblCantidadChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OndblTasaDescuentoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaDescuentoChanged()
        End Sub
        Partial Private Sub OnstrTipoTasaFijaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoTasaFijaChanged()
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanged()
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnstrModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrModalidadChanged()
        End Sub
        Partial Private Sub OncurPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurPrecioChanged()
        End Sub
        Partial Private Sub OncurTotalLiqChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurTotalLiqChanged()
        End Sub
        Partial Private Sub OnlngPlazoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngPlazoChanged()
        End Sub
        Partial Private Sub OnstrTipoDeOferta_DescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoDeOferta_DescripcionChanged()
        End Sub
        Partial Private Sub OnstrClase_DescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrClase_DescripcionChanged()
        End Sub
        Partial Private Sub OnintCantidadRegistrosChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintCantidadRegistrosChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDComprasXDescargar", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDComprasXDescargar() As Integer
            Get
                Return Me._intIDComprasXDescargar
            End Get
            Set
                If ((Me._intIDComprasXDescargar = Value) _
                            = False) Then
                    Me.OnintIDComprasXDescargarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDComprasXDescargar = Value
                    Me.SendPropertyChanged("intIDComprasXDescargar")
                    Me.OnintIDComprasXDescargarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strLiq_Parcial", DbType:="Varchar(50) NULL")>
        Public Property strLiq_Parcial() As String
            Get
                Return Me._strLiq_Parcial
            End Get
            Set
                If (String.Equals(Me._strLiq_Parcial, Value) = False) Then
                    Me.OnstrLiq_ParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strLiq_Parcial = Value
                    Me.SendPropertyChanged("strLiq_Parcial")
                    Me.OnstrLiq_ParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseOrden", DbType:="Varchar(50) NULL")>
        Public Property strClaseOrden() As String
            Get
                Return Me._strClaseOrden
            End Get
            Set
                If (String.Equals(Me._strClaseOrden, Value) = False) Then
                    Me.OnstrClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClaseOrden = Value
                    Me.SendPropertyChanged("strClaseOrden")
                    Me.OnstrClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="Varchar(50) NULL")>
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set
                If (String.Equals(Me._strTipo, Value) = False) Then
                    Me.OnstrTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipo = Value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Varchar(17) NULL")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDCuentaDeceval", DbType:="int NOT NULL")>
        Public Property lngIDCuentaDeceval() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDCuentaDeceval
            End Get
            Set
                If (Me._lngIDCuentaDeceval.Equals(Value) = False) Then
                    Me.OnlngIDCuentaDecevalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDCuentaDeceval = Value
                    Me.SendPropertyChanged("lngIDCuentaDeceval")
                    Me.OnlngIDCuentaDecevalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFondo_Descripcion", DbType:="Varchar(50) NULL")>
        Public Property strFondo_Descripcion() As String
            Get
                Return Me._strFondo_Descripcion
            End Get
            Set
                If (String.Equals(Me._strFondo_Descripcion, Value) = False) Then
                    Me.OnstrFondo_DescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strFondo_Descripcion = Value
                    Me.SendPropertyChanged("strFondo_Descripcion")
                    Me.OnstrFondo_DescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(15) NULL")>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmLiquidacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmLiquidacion
            End Get
            Set
                If (Object.Equals(Me._dtmLiquidacion, Value) = False) Then
                    Me.OndtmLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmLiquidacion = Value
                    Me.SendPropertyChanged("dtmLiquidacion")
                    Me.OndtmLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmCumplimientoTitulo", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmCumplimientoTitulo() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmCumplimientoTitulo
            End Get
            Set
                If (Object.Equals(Me._dtmCumplimientoTitulo, Value) = False) Then
                    Me.OndtmCumplimientoTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmCumplimientoTitulo = Value
                    Me.SendPropertyChanged("dtmCumplimientoTitulo")
                    Me.OndtmCumplimientoTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float NULL")>
        Public Property dblCantidad() As System.Nullable(Of Double)
            Get
                Return Me._dblCantidad
            End Get
            Set
                If (Me._dblCantidad.Equals(Value) = False) Then
                    Me.OndblCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblCantidad = Value
                    Me.SendPropertyChanged("dblCantidad")
                    Me.OndblCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmEmision
            End Get
            Set
                If (Object.Equals(Me._dtmEmision, Value) = False) Then
                    Me.OndtmEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = Value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmVencimiento
            End Get
            Set
                If (Object.Equals(Me._dtmVencimiento, Value) = False) Then
                    Me.OndtmVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = Value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaDescuento", DbType:="Float NULL")>
        Public Property dblTasaDescuento() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaDescuento
            End Get
            Set
                If (Me._dblTasaDescuento.Equals(Value) = False) Then
                    Me.OndblTasaDescuentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaDescuento = Value
                    Me.SendPropertyChanged("dblTasaDescuento")
                    Me.OndblTasaDescuentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTasaFija", DbType:="Varchar(1) NULL")>
        Public Property strTipoTasaFija() As String
            Get
                Return Me._strTipoTasaFija
            End Get
            Set
                If (String.Equals(Me._strTipoTasaFija, Value) = False) Then
                    Me.OnstrTipoTasaFijaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoTasaFija = Value
                    Me.SendPropertyChanged("strTipoTasaFija")
                    Me.OnstrTipoTasaFijaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIndicadorEconomico", DbType:="Varchar(2) NULL")>
        Public Property strIndicadorEconomico() As String
            Get
                Return Me._strIndicadorEconomico
            End Get
            Set
                If (String.Equals(Me._strIndicadorEconomico, Value) = False) Then
                    Me.OnstrIndicadorEconomicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIndicadorEconomico = Value
                    Me.SendPropertyChanged("strIndicadorEconomico")
                    Me.OnstrIndicadorEconomicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPuntosIndicador", DbType:="Float NULL")>
        Public Property dblPuntosIndicador() As System.Nullable(Of Double)
            Get
                Return Me._dblPuntosIndicador
            End Get
            Set
                If (Me._dblPuntosIndicador.Equals(Value) = False) Then
                    Me.OndblPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPuntosIndicador = Value
                    Me.SendPropertyChanged("dblPuntosIndicador")
                    Me.OndblPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModalidad", DbType:="Varchar(2) NULL")>
        Public Property strModalidad() As String
            Get
                Return Me._strModalidad
            End Get
            Set
                If (String.Equals(Me._strModalidad, Value) = False) Then
                    Me.OnstrModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModalidad = Value
                    Me.SendPropertyChanged("strModalidad")
                    Me.OnstrModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curPrecio", DbType:="Float NULL")>
        Public Property curPrecio() As System.Nullable(Of Double)
            Get
                Return Me._curPrecio
            End Get
            Set
                If (Me._curPrecio.Equals(Value) = False) Then
                    Me.OncurPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curPrecio = Value
                    Me.SendPropertyChanged("curPrecio")
                    Me.OncurPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curTotalLiq", DbType:="Float NULL")>
        Public Property curTotalLiq() As System.Nullable(Of Double)
            Get
                Return Me._curTotalLiq
            End Get
            Set
                If (Me._curTotalLiq.Equals(Value) = False) Then
                    Me.OncurTotalLiqChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curTotalLiq = Value
                    Me.SendPropertyChanged("curTotalLiq")
                    Me.OncurTotalLiqChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngPlazo", DbType:="int NOT NULL")>
        Public Property lngPlazo() As System.Nullable(Of Integer)
            Get
                Return Me._lngPlazo
            End Get
            Set
                If (Me._lngPlazo.Equals(Value) = False) Then
                    Me.OnlngPlazoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngPlazo = Value
                    Me.SendPropertyChanged("lngPlazo")
                    Me.OnlngPlazoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoDeOferta_Descripcion", DbType:="Varchar(50) NULL")>
        Public Property strTipoDeOferta_Descripcion() As String
            Get
                Return Me._strTipoDeOferta_Descripcion
            End Get
            Set
                If (String.Equals(Me._strTipoDeOferta_Descripcion, Value) = False) Then
                    Me.OnstrTipoDeOferta_DescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoDeOferta_Descripcion = Value
                    Me.SendPropertyChanged("strTipoDeOferta_Descripcion")
                    Me.OnstrTipoDeOferta_DescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClase_Descripcion", DbType:="Varchar(50) NULL")>
        Public Property strClase_Descripcion() As String
            Get
                Return Me._strClase_Descripcion
            End Get
            Set
                If (String.Equals(Me._strClase_Descripcion, Value) = False) Then
                    Me.OnstrClase_DescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClase_Descripcion = Value
                    Me.SendPropertyChanged("strClase_Descripcion")
                    Me.OnstrClase_DescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCantidadRegistros", DbType:="int NULL")>
        Public Property intCantidadRegistros() As System.Nullable(Of Integer)
            Get
                Return Me._intCantidadRegistros
            End Get
            Set
                If (Me._intCantidadRegistros.Equals(Value) = False) Then
                    Me.OnintCantidadRegistrosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intCantidadRegistros = Value
                    Me.SendPropertyChanged("intCantidadRegistros")
                    Me.OnintCantidadRegistrosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class TitulosVentas
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDVentasXDescargar As Integer

        Private _strLiq_Parcial As String

        Private _strClaseOrden As String

        Private _strTipo As String

        Private _lngIDComitente As String

        Private _lngIDCuentaDeceval As System.Nullable(Of Integer)

        Private _strFondo_Descripcion As String

        Private _strIDEspecie As String

        Private _dtmLiquidacion As System.Nullable(Of System.DateTime)

        Private _dtmCumplimientoTitulo As System.Nullable(Of System.DateTime)

        Private _dblCantidad As System.Nullable(Of Double)

        Private _dtmEmision As System.Nullable(Of System.DateTime)

        Private _dtmVencimiento As System.Nullable(Of System.DateTime)

        Private _dblTasaDescuento As System.Nullable(Of Double)

        Private _strTipoTasaFija As String

        Private _strIndicadorEconomico As String

        Private _dblPuntosIndicador As System.Nullable(Of Double)

        Private _strModalidad As String

        Private _curPrecio As System.Nullable(Of Double)

        Private _curTotalLiq As System.Nullable(Of Double)

        Private _lngPlazo As System.Nullable(Of Integer)

        Private _strTipoDeOferta_Descripcion As String

        Private _strClase_Descripcion As String

        Private _intCantidadRegistros As System.Nullable(Of Integer)

        Private _logCruzarLiquidacionVenta As System.Nullable(Of System.Boolean)

        Private _intIDLiquidaciones As System.Nullable(Of Integer)

        Private _strOrigen As String

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDVentasXDescargarChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDVentasXDescargarChanged()
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanging(value As String)
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanged()
        End Sub
        Partial Private Sub OnstrClaseOrdenChanging(value As String)
        End Sub
        Partial Private Sub OnstrClaseOrdenChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnlngIDCuentaDecevalChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIDCuentaDecevalChanged()
        End Sub
        Partial Private Sub OnstrFondo_DescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrFondo_DescripcionChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OndtmLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmLiquidacionChanged()
        End Sub
        Partial Private Sub OndtmCumplimientoTituloChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmCumplimientoTituloChanged()
        End Sub
        Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblCantidadChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OndblTasaDescuentoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaDescuentoChanged()
        End Sub
        Partial Private Sub OnstrTipoTasaFijaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoTasaFijaChanged()
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanged()
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnstrModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrModalidadChanged()
        End Sub
        Partial Private Sub OncurPrecioChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurPrecioChanged()
        End Sub
        Partial Private Sub OncurTotalLiqChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurTotalLiqChanged()
        End Sub
        Partial Private Sub OnlngPlazoChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngPlazoChanged()
        End Sub
        Partial Private Sub OnstrTipoDeOferta_DescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoDeOferta_DescripcionChanged()
        End Sub
        Partial Private Sub OnstrClase_DescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrClase_DescripcionChanged()
        End Sub
        Partial Private Sub OnintCantidadRegistrosChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintCantidadRegistrosChanged()
        End Sub
        Partial Private Sub OnlogCruzarLiquidacionVentaChanging(value As System.Nullable(Of System.Boolean))
        End Sub
        Partial Private Sub OnlogCruzarLiquidacionVentaChanged()
        End Sub
        Partial Private Sub OnintIDLiquidacionesChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintIDLiquidacionesChanged()
        End Sub
        Partial Private Sub OnstrOrigenChanging(value As String)
        End Sub
        Partial Private Sub OnstrOrigenChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDVentasXDescargar", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDVentasXDescargar() As Integer
            Get
                Return Me._intIDVentasXDescargar
            End Get
            Set
                If ((Me._intIDVentasXDescargar = Value) _
                            = False) Then
                    Me.OnintIDVentasXDescargarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDVentasXDescargar = Value
                    Me.SendPropertyChanged("intIDVentasXDescargar")
                    Me.OnintIDVentasXDescargarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strLiq_Parcial", DbType:="Varchar(50) NULL")>
        Public Property strLiq_Parcial() As String
            Get
                Return Me._strLiq_Parcial
            End Get
            Set
                If (String.Equals(Me._strLiq_Parcial, Value) = False) Then
                    Me.OnstrLiq_ParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strLiq_Parcial = Value
                    Me.SendPropertyChanged("strLiq_Parcial")
                    Me.OnstrLiq_ParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClaseOrden", DbType:="Varchar(50) NULL")>
        Public Property strClaseOrden() As String
            Get
                Return Me._strClaseOrden
            End Get
            Set
                If (String.Equals(Me._strClaseOrden, Value) = False) Then
                    Me.OnstrClaseOrdenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClaseOrden = Value
                    Me.SendPropertyChanged("strClaseOrden")
                    Me.OnstrClaseOrdenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="Varchar(50) NULL")>
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set
                If (String.Equals(Me._strTipo, Value) = False) Then
                    Me.OnstrTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipo = Value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Varchar(17) NULL")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDCuentaDeceval", DbType:="int NOT NULL")>
        Public Property lngIDCuentaDeceval() As System.Nullable(Of Integer)
            Get
                Return Me._lngIDCuentaDeceval
            End Get
            Set
                If (Me._lngIDCuentaDeceval.Equals(Value) = False) Then
                    Me.OnlngIDCuentaDecevalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDCuentaDeceval = Value
                    Me.SendPropertyChanged("lngIDCuentaDeceval")
                    Me.OnlngIDCuentaDecevalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strFondo_Descripcion", DbType:="Varchar(50) NULL")>
        Public Property strFondo_Descripcion() As String
            Get
                Return Me._strFondo_Descripcion
            End Get
            Set
                If (String.Equals(Me._strFondo_Descripcion, Value) = False) Then
                    Me.OnstrFondo_DescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strFondo_Descripcion = Value
                    Me.SendPropertyChanged("strFondo_Descripcion")
                    Me.OnstrFondo_DescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(15) NULL")>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmLiquidacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmLiquidacion
            End Get
            Set
                If (Object.Equals(Me._dtmLiquidacion, Value) = False) Then
                    Me.OndtmLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmLiquidacion = Value
                    Me.SendPropertyChanged("dtmLiquidacion")
                    Me.OndtmLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmCumplimientoTitulo", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmCumplimientoTitulo() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmCumplimientoTitulo
            End Get
            Set
                If (Object.Equals(Me._dtmCumplimientoTitulo, Value) = False) Then
                    Me.OndtmCumplimientoTituloChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmCumplimientoTitulo = Value
                    Me.SendPropertyChanged("dtmCumplimientoTitulo")
                    Me.OndtmCumplimientoTituloChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float NULL")>
        Public Property dblCantidad() As System.Nullable(Of Double)
            Get
                Return Me._dblCantidad
            End Get
            Set
                If (Me._dblCantidad.Equals(Value) = False) Then
                    Me.OndblCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblCantidad = Value
                    Me.SendPropertyChanged("dblCantidad")
                    Me.OndblCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmEmision
            End Get
            Set
                If (Object.Equals(Me._dtmEmision, Value) = False) Then
                    Me.OndtmEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = Value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmVencimiento
            End Get
            Set
                If (Object.Equals(Me._dtmVencimiento, Value) = False) Then
                    Me.OndtmVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = Value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaDescuento", DbType:="Float NULL")>
        Public Property dblTasaDescuento() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaDescuento
            End Get
            Set
                If (Me._dblTasaDescuento.Equals(Value) = False) Then
                    Me.OndblTasaDescuentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaDescuento = Value
                    Me.SendPropertyChanged("dblTasaDescuento")
                    Me.OndblTasaDescuentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTasaFija", DbType:="Varchar(1) NULL")>
        Public Property strTipoTasaFija() As String
            Get
                Return Me._strTipoTasaFija
            End Get
            Set
                If (String.Equals(Me._strTipoTasaFija, Value) = False) Then
                    Me.OnstrTipoTasaFijaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoTasaFija = Value
                    Me.SendPropertyChanged("strTipoTasaFija")
                    Me.OnstrTipoTasaFijaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIndicadorEconomico", DbType:="Varchar(2) NULL")>
        Public Property strIndicadorEconomico() As String
            Get
                Return Me._strIndicadorEconomico
            End Get
            Set
                If (String.Equals(Me._strIndicadorEconomico, Value) = False) Then
                    Me.OnstrIndicadorEconomicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIndicadorEconomico = Value
                    Me.SendPropertyChanged("strIndicadorEconomico")
                    Me.OnstrIndicadorEconomicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPuntosIndicador", DbType:="Float NULL")>
        Public Property dblPuntosIndicador() As System.Nullable(Of Double)
            Get
                Return Me._dblPuntosIndicador
            End Get
            Set
                If (Me._dblPuntosIndicador.Equals(Value) = False) Then
                    Me.OndblPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPuntosIndicador = Value
                    Me.SendPropertyChanged("dblPuntosIndicador")
                    Me.OndblPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModalidad", DbType:="Varchar(2) NULL")>
        Public Property strModalidad() As String
            Get
                Return Me._strModalidad
            End Get
            Set
                If (String.Equals(Me._strModalidad, Value) = False) Then
                    Me.OnstrModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModalidad = Value
                    Me.SendPropertyChanged("strModalidad")
                    Me.OnstrModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curPrecio", DbType:="Float NULL")>
        Public Property curPrecio() As System.Nullable(Of Double)
            Get
                Return Me._curPrecio
            End Get
            Set
                If (Me._curPrecio.Equals(Value) = False) Then
                    Me.OncurPrecioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curPrecio = Value
                    Me.SendPropertyChanged("curPrecio")
                    Me.OncurPrecioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curTotalLiq", DbType:="Float NULL")>
        Public Property curTotalLiq() As System.Nullable(Of Double)
            Get
                Return Me._curTotalLiq
            End Get
            Set
                If (Me._curTotalLiq.Equals(Value) = False) Then
                    Me.OncurTotalLiqChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curTotalLiq = Value
                    Me.SendPropertyChanged("curTotalLiq")
                    Me.OncurTotalLiqChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngPlazo", DbType:="int NOT NULL")>
        Public Property lngPlazo() As System.Nullable(Of Integer)
            Get
                Return Me._lngPlazo
            End Get
            Set
                If (Me._lngPlazo.Equals(Value) = False) Then
                    Me.OnlngPlazoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngPlazo = Value
                    Me.SendPropertyChanged("lngPlazo")
                    Me.OnlngPlazoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoDeOferta_Descripcion", DbType:="Varchar(50) NULL")>
        Public Property strTipoDeOferta_Descripcion() As String
            Get
                Return Me._strTipoDeOferta_Descripcion
            End Get
            Set
                If (String.Equals(Me._strTipoDeOferta_Descripcion, Value) = False) Then
                    Me.OnstrTipoDeOferta_DescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoDeOferta_Descripcion = Value
                    Me.SendPropertyChanged("strTipoDeOferta_Descripcion")
                    Me.OnstrTipoDeOferta_DescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClase_Descripcion", DbType:="Varchar(50) NULL")>
        Public Property strClase_Descripcion() As String
            Get
                Return Me._strClase_Descripcion
            End Get
            Set
                If (String.Equals(Me._strClase_Descripcion, Value) = False) Then
                    Me.OnstrClase_DescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClase_Descripcion = Value
                    Me.SendPropertyChanged("strClase_Descripcion")
                    Me.OnstrClase_DescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCantidadRegistros", DbType:="int NULL")>
        Public Property intCantidadRegistros() As System.Nullable(Of Integer)
            Get
                Return Me._intCantidadRegistros
            End Get
            Set
                If (Me._intCantidadRegistros.Equals(Value) = False) Then
                    Me.OnintCantidadRegistrosChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intCantidadRegistros = Value
                    Me.SendPropertyChanged("intCantidadRegistros")
                    Me.OnintCantidadRegistrosChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logCruzarLiquidacionVenta", DbType:="Bit NULL", CanBeNull:=True)>
        Public Property logCruzarLiquidacionVenta() As System.Nullable(Of System.Boolean)
            Get
                Return Me._logCruzarLiquidacionVenta
            End Get
            Set
                If (Object.Equals(Me._logCruzarLiquidacionVenta, Value) = False) Then
                    Me.OnlogCruzarLiquidacionVentaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logCruzarLiquidacionVenta = Value
                    Me.SendPropertyChanged("logCruzarLiquidacionVenta")
                    Me.OnlogCruzarLiquidacionVentaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDLiquidaciones", DbType:="int NULL")>
        Public Property intIDLiquidaciones() As System.Nullable(Of Integer)
            Get
                Return Me._intIDLiquidaciones
            End Get
            Set
                If (Me._intIDLiquidaciones.Equals(Value) = False) Then
                    Me.OnintIDLiquidacionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDLiquidaciones = Value
                    Me.SendPropertyChanged("intIDLiquidaciones")
                    Me.OnintIDLiquidacionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strOrigen", DbType:="Varchar(50) NULL")>
        Public Property strOrigen() As String
            Get
                Return Me._strOrigen
            End Get
            Set
                If (String.Equals(Me._strOrigen, Value) = False) Then
                    Me.OnstrOrigenChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strOrigen = Value
                    Me.SendPropertyChanged("strOrigen")
                    Me.OnstrOrigenChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class TitulosCruce
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDCruceTitulosPortafolio As Integer

        Private _lngIdRecibo As System.Nullable(Of Integer)

        Private _lngSecuencia As System.Nullable(Of Integer)

        Private _lngIDComitente As String

        Private _dblCantidad As System.Nullable(Of Double)

        Private _dblCantidadPedida As System.Nullable(Of Double)

        Private _strIDEspecie As String

        Private _strLiq_Parcial As String

        Private _strClase As String

        Private _strTipo As String

        Private _strTipoDeOferta As String

        Private _dtmLiquidacion As System.Nullable(Of System.DateTime)

        Private _dtmCumplimiento As System.Nullable(Of System.DateTime)

        Private _dtmEmision As System.Nullable(Of System.DateTime)

        Private _dtmVencimiento As System.Nullable(Of System.DateTime)

        Private _dblTasa As System.Nullable(Of Double)

        Private _strIndicadorEconomico As String

        Private _dblPuntosIndicador As System.Nullable(Of Double)

        Private _strModalidad As String

        Private _strObservaciones As String

        Private _dblLiq_Cantidad As System.Nullable(Of Double)

        Private _intCruzar As System.Nullable(Of Integer)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDCruceTitulosPortafolioChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDCruceTitulosPortafolioChanged()
        End Sub
        Partial Private Sub OnlngIdReciboChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIdReciboChanged()
        End Sub
        Partial Private Sub OnlngSecuenciaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngSecuenciaChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblCantidadChanged()
        End Sub
        Partial Private Sub OndblCantidadPedidaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblCantidadPedidaChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanging(value As String)
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanged()
        End Sub
        Partial Private Sub OnstrClaseChanging(value As String)
        End Sub
        Partial Private Sub OnstrClaseChanged()
        End Sub
        Partial Private Sub OnstrTipoChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoChanged()
        End Sub
        Partial Private Sub OnstrTipoDeOfertaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoDeOfertaChanged()
        End Sub
        Partial Private Sub OndtmLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmLiquidacionChanged()
        End Sub
        Partial Private Sub OndtmCumplimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmCumplimientoChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OndblTasaChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaChanged()
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanged()
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnstrModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrModalidadChanged()
        End Sub
        Partial Private Sub OnstrObservacionesChanging(value As String)
        End Sub
        Partial Private Sub OnstrObservacionesChanged()
        End Sub
        Partial Private Sub OndblLiq_CantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblLiq_CantidadChanged()
        End Sub
        Partial Private Sub OnintCruzarChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintCruzarChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDCruceTitulosPortafolio", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDCruceTitulosPortafolio() As Integer
            Get
                Return Me._intIDCruceTitulosPortafolio
            End Get
            Set
                If ((Me._intIDCruceTitulosPortafolio = Value) _
                            = False) Then
                    Me.OnintIDCruceTitulosPortafolioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDCruceTitulosPortafolio = Value
                    Me.SendPropertyChanged("intIDCruceTitulosPortafolio")
                    Me.OnintIDCruceTitulosPortafolioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdRecibo", DbType:="int NULL")>
        Public Property lngIdRecibo() As System.Nullable(Of Integer)
            Get
                Return Me._lngIdRecibo
            End Get
            Set
                If (Me._lngIdRecibo.Equals(Value) = False) Then
                    Me.OnlngIdReciboChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdRecibo = Value
                    Me.SendPropertyChanged("lngIdRecibo")
                    Me.OnlngIdReciboChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngSecuencia", DbType:="int NULL")>
        Public Property lngSecuencia() As System.Nullable(Of Integer)
            Get
                Return Me._lngSecuencia
            End Get
            Set
                If (Me._lngSecuencia.Equals(Value) = False) Then
                    Me.OnlngSecuenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngSecuencia = Value
                    Me.SendPropertyChanged("lngSecuencia")
                    Me.OnlngSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Varchar(17) NULL")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float NULL")>
        Public Property dblCantidad() As System.Nullable(Of Double)
            Get
                Return Me._dblCantidad
            End Get
            Set
                If (Me._dblCantidad.Equals(Value) = False) Then
                    Me.OndblCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblCantidad = Value
                    Me.SendPropertyChanged("dblCantidad")
                    Me.OndblCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidadPedida", DbType:="Float NULL")>
        Public Property dblCantidadPedida() As System.Nullable(Of Double)
            Get
                Return Me._dblCantidadPedida
            End Get
            Set
                If (Me._dblCantidadPedida.Equals(Value) = False) Then
                    Me.OndblCantidadPedidaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblCantidadPedida = Value
                    Me.SendPropertyChanged("dblCantidadPedida")
                    Me.OndblCantidadPedidaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(20) NULL")>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strLiq_Parcial", DbType:="Varchar(20) NULL")>
        Public Property strLiq_Parcial() As String
            Get
                Return Me._strLiq_Parcial
            End Get
            Set
                If (String.Equals(Me._strLiq_Parcial, Value) = False) Then
                    Me.OnstrLiq_ParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strLiq_Parcial = Value
                    Me.SendPropertyChanged("strLiq_Parcial")
                    Me.OnstrLiq_ParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClase", DbType:="Varchar(1) NULL")>
        Public Property strClase() As String
            Get
                Return Me._strClase
            End Get
            Set
                If (String.Equals(Me._strClase, Value) = False) Then
                    Me.OnstrClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClase = Value
                    Me.SendPropertyChanged("strClase")
                    Me.OnstrClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipo", DbType:="Varchar(1) NULL")>
        Public Property strTipo() As String
            Get
                Return Me._strTipo
            End Get
            Set
                If (String.Equals(Me._strTipo, Value) = False) Then
                    Me.OnstrTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipo = Value
                    Me.SendPropertyChanged("strTipo")
                    Me.OnstrTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoDeOferta", DbType:="Varchar(1) NULL")>
        Public Property strTipoDeOferta() As String
            Get
                Return Me._strTipoDeOferta
            End Get
            Set
                If (String.Equals(Me._strTipoDeOferta, Value) = False) Then
                    Me.OnstrTipoDeOfertaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoDeOferta = Value
                    Me.SendPropertyChanged("strTipoDeOferta")
                    Me.OnstrTipoDeOfertaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmLiquidacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmLiquidacion
            End Get
            Set
                If (Object.Equals(Me._dtmLiquidacion, Value) = False) Then
                    Me.OndtmLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmLiquidacion = Value
                    Me.SendPropertyChanged("dtmLiquidacion")
                    Me.OndtmLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmCumplimiento", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmCumplimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmCumplimiento
            End Get
            Set
                If (Object.Equals(Me._dtmCumplimiento, Value) = False) Then
                    Me.OndtmCumplimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmCumplimiento = Value
                    Me.SendPropertyChanged("dtmCumplimiento")
                    Me.OndtmCumplimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmEmision
            End Get
            Set
                If (Object.Equals(Me._dtmEmision, Value) = False) Then
                    Me.OndtmEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = Value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmVencimiento
            End Get
            Set
                If (Object.Equals(Me._dtmVencimiento, Value) = False) Then
                    Me.OndtmVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = Value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasa", DbType:="Float NULL")>
        Public Property dblTasa() As System.Nullable(Of Double)
            Get
                Return Me._dblTasa
            End Get
            Set
                If (Me._dblTasa.Equals(Value) = False) Then
                    Me.OndblTasaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasa = Value
                    Me.SendPropertyChanged("dblTasa")
                    Me.OndblTasaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIndicadorEconomico", DbType:="Varchar(2) NULL")>
        Public Property strIndicadorEconomico() As String
            Get
                Return Me._strIndicadorEconomico
            End Get
            Set
                If (String.Equals(Me._strIndicadorEconomico, Value) = False) Then
                    Me.OnstrIndicadorEconomicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIndicadorEconomico = Value
                    Me.SendPropertyChanged("strIndicadorEconomico")
                    Me.OnstrIndicadorEconomicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPuntosIndicador", DbType:="Float NULL")>
        Public Property dblPuntosIndicador() As System.Nullable(Of Double)
            Get
                Return Me._dblPuntosIndicador
            End Get
            Set
                If (Me._dblPuntosIndicador.Equals(Value) = False) Then
                    Me.OndblPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPuntosIndicador = Value
                    Me.SendPropertyChanged("dblPuntosIndicador")
                    Me.OndblPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strModalidad", DbType:="Varchar(2) NULL")>
        Public Property strModalidad() As String
            Get
                Return Me._strModalidad
            End Get
            Set
                If (String.Equals(Me._strModalidad, Value) = False) Then
                    Me.OnstrModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strModalidad = Value
                    Me.SendPropertyChanged("strModalidad")
                    Me.OnstrModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strObservaciones", DbType:="Varchar(15) NULL")>
        Public Property strObservaciones() As String
            Get
                Return Me._strObservaciones
            End Get
            Set
                If (String.Equals(Me._strObservaciones, Value) = False) Then
                    Me.OnstrObservacionesChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strObservaciones = Value
                    Me.SendPropertyChanged("strObservaciones")
                    Me.OnstrObservacionesChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblLiq_Cantidad", DbType:="Float NULL")>
        Public Property dblLiq_Cantidad() As System.Nullable(Of Double)
            Get
                Return Me._dblLiq_Cantidad
            End Get
            Set
                If (Me._dblLiq_Cantidad.Equals(Value) = False) Then
                    Me.OndblLiq_CantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblLiq_Cantidad = Value
                    Me.SendPropertyChanged("dblLiq_Cantidad")
                    Me.OndblLiq_CantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intCruzar", DbType:="int NULL")>
        Public Property intCruzar() As System.Nullable(Of Integer)
            Get
                Return Me._intCruzar
            End Get
            Set
                If (Me._intCruzar.Equals(Value) = False) Then
                    Me.OnintCruzarChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intCruzar = Value
                    Me.SendPropertyChanged("intCruzar")
                    Me.OnintCruzarChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class TitulosPortafolio
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDPortafolioCliente As Integer

        Private _lngIdRecibo As System.Nullable(Of Integer)

        Private _lngSecuencia As System.Nullable(Of Integer)

        Private _lngIDComitente As String

        Private _strNombre As String

        Private _strNroDocumento As String

        Private _lngIdCuentaDeceval As System.Nullable(Of Integer)

        Private _strDescripcionFondo As String

        Private _dblCantidad As System.Nullable(Of Double)

        Private _strIDEspecie As String

        Private _strDescripcionEstadoActual As String

        Private _strLiq_Parcial As String

        Private _dtmLiquidacion As System.Nullable(Of System.DateTime)

        Private _strTipoLiquidacion As String

        Private _dtmEmision As System.Nullable(Of System.DateTime)

        Private _dtmVencimiento As System.Nullable(Of System.DateTime)

        Private _dblTasaDescuento As System.Nullable(Of Double)

        Private _strTipoTasaFija As String

        Private _strIndicadorEconomico As String

        Private _dblPuntosIndicador As System.Nullable(Of Double)

        Private _strTipoDeOferta As String

        Private _strClase As String

        Private _curTotalLiq As System.Nullable(Of Double)

        Private _strDescripcionModalidad As String

        Private _strCruce As String

        Private _strEstadoActual As String

        Private _strMotivoBloqueo As String

        Private _logCruzarPortafolio As System.Nullable(Of System.Boolean)

        Private _intIDDetalleCustodias As System.Nullable(Of Integer)

        Private _strUsuario As String

        Private _InfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDPortafolioClienteChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDPortafolioClienteChanged()
        End Sub
        Partial Private Sub OnlngIdReciboChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIdReciboChanged()
        End Sub
        Partial Private Sub OnlngSecuenciaChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngSecuenciaChanged()
        End Sub
        Partial Private Sub OnlngIDComitenteChanging(value As String)
        End Sub
        Partial Private Sub OnlngIDComitenteChanged()
        End Sub
        Partial Private Sub OnstrNombreChanging(value As String)
        End Sub
        Partial Private Sub OnstrNombreChanged()
        End Sub
        Partial Private Sub OnstrNroDocumentoChanging(value As String)
        End Sub
        Partial Private Sub OnstrNroDocumentoChanged()
        End Sub
        Partial Private Sub OnlngIdCuentaDecevalChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngIdCuentaDecevalChanged()
        End Sub
        Partial Private Sub OnstrDescripcionFondoChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionFondoChanged()
        End Sub
        Partial Private Sub OndblCantidadChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblCantidadChanged()
        End Sub
        Partial Private Sub OnstrIDEspecieChanging(value As String)
        End Sub
        Partial Private Sub OnstrIDEspecieChanged()
        End Sub
        Partial Private Sub OnstrDescripcionEstadoActualChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionEstadoActualChanged()
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanging(value As String)
        End Sub
        Partial Private Sub OnstrLiq_ParcialChanged()
        End Sub
        Partial Private Sub OndtmLiquidacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmLiquidacionChanged()
        End Sub
        Partial Private Sub OnstrTipoLiquidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoLiquidacionChanged()
        End Sub
        Partial Private Sub OndtmEmisionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmEmisionChanged()
        End Sub
        Partial Private Sub OndtmVencimientoChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmVencimientoChanged()
        End Sub
        Partial Private Sub OndblTasaDescuentoChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblTasaDescuentoChanged()
        End Sub
        Partial Private Sub OnstrTipoTasaFijaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoTasaFijaChanged()
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanging(value As String)
        End Sub
        Partial Private Sub OnstrIndicadorEconomicoChanged()
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPuntosIndicadorChanged()
        End Sub
        Partial Private Sub OnstrTipoDeOfertaChanging(value As String)
        End Sub
        Partial Private Sub OnstrTipoDeOfertaChanged()
        End Sub
        Partial Private Sub OnstrClaseChanging(value As String)
        End Sub
        Partial Private Sub OnstrClaseChanged()
        End Sub
        Partial Private Sub OncurTotalLiqChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OncurTotalLiqChanged()
        End Sub
        Partial Private Sub OnstrDescripcionModalidadChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionModalidadChanged()
        End Sub
        Partial Private Sub OnstrCruceChanging(value As String)
        End Sub
        Partial Private Sub OnstrCruceChanged()
        End Sub
        Partial Private Sub OnstrEstadoActualChanging(value As String)
        End Sub
        Partial Private Sub OnstrEstadoActualChanged()
        End Sub
        Partial Private Sub OnstrMotivoBloqueoChanging(value As String)
        End Sub
        Partial Private Sub OnstrMotivoBloqueoChanged()
        End Sub
        Partial Private Sub OnlogCruzarPortafolioChanging(value As System.Nullable(Of System.Boolean))
        End Sub
        Partial Private Sub OnlogCruzarPortafolioChanged()
        End Sub
        Partial Private Sub OnintIDDetalleCustodiasChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnintIDDetalleCustodiasChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDPortafolioCliente", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDPortafolioCliente() As Integer
            Get
                Return Me._intIDPortafolioCliente
            End Get
            Set
                If ((Me._intIDPortafolioCliente = Value) _
                            = False) Then
                    Me.OnintIDPortafolioClienteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDPortafolioCliente = Value
                    Me.SendPropertyChanged("intIDPortafolioCliente")
                    Me.OnintIDPortafolioClienteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdRecibo", DbType:="int NULL")>
        Public Property lngIdRecibo() As System.Nullable(Of Integer)
            Get
                Return Me._lngIdRecibo
            End Get
            Set
                If (Me._lngIdRecibo.Equals(Value) = False) Then
                    Me.OnlngIdReciboChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdRecibo = Value
                    Me.SendPropertyChanged("lngIdRecibo")
                    Me.OnlngIdReciboChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngSecuencia", DbType:="int NULL")>
        Public Property lngSecuencia() As System.Nullable(Of Integer)
            Get
                Return Me._lngSecuencia
            End Get
            Set
                If (Me._lngSecuencia.Equals(Value) = False) Then
                    Me.OnlngSecuenciaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngSecuencia = Value
                    Me.SendPropertyChanged("lngSecuencia")
                    Me.OnlngSecuenciaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIDComitente", DbType:="Varchar(17) NULL")>
        Public Property lngIDComitente() As String
            Get
                Return Me._lngIDComitente
            End Get
            Set
                If (String.Equals(Me._lngIDComitente, Value) = False) Then
                    Me.OnlngIDComitenteChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIDComitente = Value
                    Me.SendPropertyChanged("lngIDComitente")
                    Me.OnlngIDComitenteChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNombre", DbType:="Varchar(50) NULL")>
        Public Property strNombre() As String
            Get
                Return Me._strNombre
            End Get
            Set
                If (String.Equals(Me._strNombre, Value) = False) Then
                    Me.OnstrNombreChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNombre = Value
                    Me.SendPropertyChanged("strNombre")
                    Me.OnstrNombreChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strNroDocumento", DbType:="Varchar(15) NULL")>
        Public Property strNroDocumento() As String
            Get
                Return Me._strNroDocumento
            End Get
            Set
                If (String.Equals(Me._strNroDocumento, Value) = False) Then
                    Me.OnstrNroDocumentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strNroDocumento = Value
                    Me.SendPropertyChanged("strNroDocumento")
                    Me.OnstrNroDocumentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngIdCuentaDeceval", DbType:="int NULL")>
        Public Property lngIdCuentaDeceval() As System.Nullable(Of Integer)
            Get
                Return Me._lngIdCuentaDeceval
            End Get
            Set
                If (Me._lngIdCuentaDeceval.Equals(Value) = False) Then
                    Me.OnlngIdCuentaDecevalChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngIdCuentaDeceval = Value
                    Me.SendPropertyChanged("lngIdCuentaDeceval")
                    Me.OnlngIdCuentaDecevalChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionFondo", DbType:="Varchar(50) NULL")>
        Public Property strDescripcionFondo() As String
            Get
                Return Me._strDescripcionFondo
            End Get
            Set
                If (String.Equals(Me._strDescripcionFondo, Value) = False) Then
                    Me.OnstrDescripcionFondoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionFondo = Value
                    Me.SendPropertyChanged("strDescripcionFondo")
                    Me.OnstrDescripcionFondoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblCantidad", DbType:="Float NULL")>
        Public Property dblCantidad() As System.Nullable(Of Double)
            Get
                Return Me._dblCantidad
            End Get
            Set
                If (Me._dblCantidad.Equals(Value) = False) Then
                    Me.OndblCantidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblCantidad = Value
                    Me.SendPropertyChanged("dblCantidad")
                    Me.OndblCantidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIDEspecie", DbType:="Varchar(20) NULL")>
        Public Property strIDEspecie() As String
            Get
                Return Me._strIDEspecie
            End Get
            Set
                If (String.Equals(Me._strIDEspecie, Value) = False) Then
                    Me.OnstrIDEspecieChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIDEspecie = Value
                    Me.SendPropertyChanged("strIDEspecie")
                    Me.OnstrIDEspecieChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionEstadoActual", DbType:="Varchar(100) NULL")>
        Public Property strDescripcionEstadoActual() As String
            Get
                Return Me._strDescripcionEstadoActual
            End Get
            Set
                If (String.Equals(Me._strDescripcionEstadoActual, Value) = False) Then
                    Me.OnstrDescripcionEstadoActualChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionEstadoActual = Value
                    Me.SendPropertyChanged("strDescripcionEstadoActual")
                    Me.OnstrDescripcionEstadoActualChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strLiq_Parcial", DbType:="Varchar(50) NULL")>
        Public Property strLiq_Parcial() As String
            Get
                Return Me._strLiq_Parcial
            End Get
            Set
                If (String.Equals(Me._strLiq_Parcial, Value) = False) Then
                    Me.OnstrLiq_ParcialChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strLiq_Parcial = Value
                    Me.SendPropertyChanged("strLiq_Parcial")
                    Me.OnstrLiq_ParcialChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmLiquidacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmLiquidacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmLiquidacion
            End Get
            Set
                If (Object.Equals(Me._dtmLiquidacion, Value) = False) Then
                    Me.OndtmLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmLiquidacion = Value
                    Me.SendPropertyChanged("dtmLiquidacion")
                    Me.OndtmLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoLiquidacion", DbType:="Varchar(1) NULL")>
        Public Property strTipoLiquidacion() As String
            Get
                Return Me._strTipoLiquidacion
            End Get
            Set
                If (String.Equals(Me._strTipoLiquidacion, Value) = False) Then
                    Me.OnstrTipoLiquidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoLiquidacion = Value
                    Me.SendPropertyChanged("strTipoLiquidacion")
                    Me.OnstrTipoLiquidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmEmision", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmEmision() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmEmision
            End Get
            Set
                If (Object.Equals(Me._dtmEmision, Value) = False) Then
                    Me.OndtmEmisionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmEmision = Value
                    Me.SendPropertyChanged("dtmEmision")
                    Me.OndtmEmisionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmVencimiento", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmVencimiento() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmVencimiento
            End Get
            Set
                If (Object.Equals(Me._dtmVencimiento, Value) = False) Then
                    Me.OndtmVencimientoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmVencimiento = Value
                    Me.SendPropertyChanged("dtmVencimiento")
                    Me.OndtmVencimientoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblTasaDescuento", DbType:="Float NULL")>
        Public Property dblTasaDescuento() As System.Nullable(Of Double)
            Get
                Return Me._dblTasaDescuento
            End Get
            Set
                If (Me._dblTasaDescuento.Equals(Value) = False) Then
                    Me.OndblTasaDescuentoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblTasaDescuento = Value
                    Me.SendPropertyChanged("dblTasaDescuento")
                    Me.OndblTasaDescuentoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoTasaFija", DbType:="Varchar(1) NULL")>
        Public Property strTipoTasaFija() As String
            Get
                Return Me._strTipoTasaFija
            End Get
            Set
                If (String.Equals(Me._strTipoTasaFija, Value) = False) Then
                    Me.OnstrTipoTasaFijaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoTasaFija = Value
                    Me.SendPropertyChanged("strTipoTasaFija")
                    Me.OnstrTipoTasaFijaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strIndicadorEconomico", DbType:="Varchar(2) NULL")>
        Public Property strIndicadorEconomico() As String
            Get
                Return Me._strIndicadorEconomico
            End Get
            Set
                If (String.Equals(Me._strIndicadorEconomico, Value) = False) Then
                    Me.OnstrIndicadorEconomicoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strIndicadorEconomico = Value
                    Me.SendPropertyChanged("strIndicadorEconomico")
                    Me.OnstrIndicadorEconomicoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPuntosIndicador", DbType:="Float NULL")>
        Public Property dblPuntosIndicador() As System.Nullable(Of Double)
            Get
                Return Me._dblPuntosIndicador
            End Get
            Set
                If (Me._dblPuntosIndicador.Equals(Value) = False) Then
                    Me.OndblPuntosIndicadorChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPuntosIndicador = Value
                    Me.SendPropertyChanged("dblPuntosIndicador")
                    Me.OndblPuntosIndicadorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strTipoDeOferta", DbType:="Varchar(1) NULL")>
        Public Property strTipoDeOferta() As String
            Get
                Return Me._strTipoDeOferta
            End Get
            Set
                If (String.Equals(Me._strTipoDeOferta, Value) = False) Then
                    Me.OnstrTipoDeOfertaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strTipoDeOferta = Value
                    Me.SendPropertyChanged("strTipoDeOferta")
                    Me.OnstrTipoDeOfertaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strClase", DbType:="Varchar(1) NULL")>
        Public Property strClase() As String
            Get
                Return Me._strClase
            End Get
            Set
                If (String.Equals(Me._strClase, Value) = False) Then
                    Me.OnstrClaseChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strClase = Value
                    Me.SendPropertyChanged("strClase")
                    Me.OnstrClaseChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curTotalLiq", DbType:="Float NULL")>
        Public Property curTotalLiq() As System.Nullable(Of Double)
            Get
                Return Me._curTotalLiq
            End Get
            Set
                If (Me._curTotalLiq.Equals(Value) = False) Then
                    Me.OncurTotalLiqChanging(Value)
                    Me.SendPropertyChanging()
                    Me._curTotalLiq = Value
                    Me.SendPropertyChanged("curTotalLiq")
                    Me.OncurTotalLiqChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcionModalidad", DbType:="Varchar(50) NULL")>
        Public Property strDescripcionModalidad() As String
            Get
                Return Me._strDescripcionModalidad
            End Get
            Set
                If (String.Equals(Me._strDescripcionModalidad, Value) = False) Then
                    Me.OnstrDescripcionModalidadChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcionModalidad = Value
                    Me.SendPropertyChanged("strDescripcionModalidad")
                    Me.OnstrDescripcionModalidadChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCruce", DbType:="Varchar(1) NULL")>
        Public Property strCruce() As String
            Get
                Return Me._strCruce
            End Get
            Set
                If (String.Equals(Me._strCruce, Value) = False) Then
                    Me.OnstrCruceChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCruce = Value
                    Me.SendPropertyChanged("strCruce")
                    Me.OnstrCruceChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strEstadoActual", DbType:="Varchar(1) NULL")>
        Public Property strEstadoActual() As String
            Get
                Return Me._strEstadoActual
            End Get
            Set
                If (String.Equals(Me._strEstadoActual, Value) = False) Then
                    Me.OnstrEstadoActualChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strEstadoActual = Value
                    Me.SendPropertyChanged("strEstadoActual")
                    Me.OnstrEstadoActualChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMotivoBloqueo", DbType:="Varchar(1) NULL")>
        Public Property strMotivoBloqueo() As String
            Get
                Return Me._strMotivoBloqueo
            End Get
            Set
                If (String.Equals(Me._strMotivoBloqueo, Value) = False) Then
                    Me.OnstrMotivoBloqueoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMotivoBloqueo = Value
                    Me.SendPropertyChanged("strMotivoBloqueo")
                    Me.OnstrMotivoBloqueoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logCruzarPortafolio", DbType:="Bit NULL", CanBeNull:=True)>
        Public Property logCruzarPortafolio() As System.Nullable(Of System.Boolean)
            Get
                Return Me._logCruzarPortafolio
            End Get
            Set
                If (Object.Equals(Me._logCruzarPortafolio, Value) = False) Then
                    Me.OnlogCruzarPortafolioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logCruzarPortafolio = Value
                    Me.SendPropertyChanged("logCruzarPortafolio")
                    Me.OnlogCruzarPortafolioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDDetalleCustodias", DbType:="int NULL")>
        Public Property intIDDetalleCustodias() As System.Nullable(Of Integer)
            Get
                Return Me._intIDDetalleCustodias
            End Get
            Set
                If (Me._intIDDetalleCustodias.Equals(Value) = False) Then
                    Me.OnintIDDetalleCustodiasChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDDetalleCustodias = Value
                    Me.SendPropertyChanged("intIDDetalleCustodias")
                    Me.OnintIDDetalleCustodiasChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="Varchar(60) NOT NULL")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InfoSesion", DbType:="Varchar(max) NULL")>
        Public Property InfoSesion() As String
            Get
                Return Me._InfoSesion
            End Get
            Set
                If (String.Equals(Me._InfoSesion, Value) = False) Then
                    Me.OnInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._InfoSesion = Value
                    Me.SendPropertyChanged("InfoSesion")
                    Me.OnInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class RespuestaArchivoImportacion
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As System.Nullable(Of Integer)

        Private _Mensaje As String

        Private _Exitoso As System.Nullable(Of Boolean)

        Private _Tipo As String

        Private _Fila As System.Nullable(Of System.Int32)

        Private _Columna As System.Nullable(Of System.Int32)

        Private _NroProceso As System.Nullable(Of System.Double)

        Private _Campo As String

        Private _lngOperacion As System.Nullable(Of Integer)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnExitosoChanged()
        End Sub
        Partial Private Sub OnTipoChanging(value As String)
        End Sub
        Partial Private Sub OnTipoChanged()
        End Sub
        Partial Private Sub OnFilaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnFilaChanged()
        End Sub
        Partial Private Sub OnColumnaChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnColumnaChanged()
        End Sub
        Partial Private Sub OnNroProcesoChanging(value As System.Nullable(Of System.Double))
        End Sub
        Partial Private Sub OnNroProcesoChanged()
        End Sub
        Partial Private Sub OnCampoChanging(value As String)
        End Sub
        Partial Private Sub OnCampoChanged()
        End Sub
        Partial Private Sub OnlngOperacionChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnlngOperacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int", IsPrimaryKey:=True)>
        Public Property ID() As System.Nullable(Of Integer)
            Get
                Return Me._ID
            End Get
            Set
                If (Me._ID.Equals(Value) = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mensaje", DbType:="Varchar(5000)")>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (String.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Exitoso", DbType:="Bit")>
        Public Property Exitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._Exitoso
            End Get
            Set
                If (Me._Exitoso.Equals(Value) = False) Then
                    Me.OnExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Exitoso = Value
                    Me.SendPropertyChanged("Exitoso")
                    Me.OnExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Varchar(100)")>
        Public Property Tipo() As String
            Get
                Return Me._Tipo
            End Get
            Set
                If (String.Equals(Me._Tipo, Value) = False) Then
                    Me.OnTipoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Tipo = Value
                    Me.SendPropertyChanged("Tipo")
                    Me.OnTipoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fila", DbType:="Int", CanBeNull:=True)>
        Public Property Fila() As System.Nullable(Of System.Int32)
            Get
                Return Me._Fila
            End Get
            Set
                If (Object.Equals(Me._Fila, Value) = False) Then
                    Me.OnFilaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Fila = Value
                    Me.SendPropertyChanged("Fila")
                    Me.OnFilaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Columna", DbType:="Int", CanBeNull:=True)>
        Public Property Columna() As System.Nullable(Of System.Int32)
            Get
                Return Me._Columna
            End Get
            Set
                If (Object.Equals(Me._Columna, Value) = False) Then
                    Me.OnColumnaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Columna = Value
                    Me.SendPropertyChanged("Columna")
                    Me.OnColumnaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NroProceso", DbType:="Float", CanBeNull:=True)>
        Public Property NroProceso() As System.Nullable(Of System.Double)
            Get
                Return Me._NroProceso
            End Get
            Set
                If (Object.Equals(Me._NroProceso, Value) = False) Then
                    Me.OnNroProcesoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NroProceso = Value
                    Me.SendPropertyChanged("NroProceso")
                    Me.OnNroProcesoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Campo", DbType:="Varchar(100)")>
        Public Property Campo() As String
            Get
                Return Me._Campo
            End Get
            Set
                If (String.Equals(Me._Campo, Value) = False) Then
                    Me.OnCampoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Campo = Value
                    Me.SendPropertyChanged("Campo")
                    Me.OnCampoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lngOperacion", DbType:="Int")>
        Public Property lngOperacion() As System.Nullable(Of Integer)
            Get
                Return Me._lngOperacion
            End Get
            Set
                If (Me._lngOperacion.Equals(Value) = False) Then
                    Me.OnlngOperacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._lngOperacion = Value
                    Me.SendPropertyChanged("lngOperacion")
                    Me.OnlngOperacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="")>
    Partial Public Class tblResultadoEnvioArchivo
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _ID As Integer

        Private _logExitoso As System.Nullable(Of Boolean)

        Private _Mensaje As String

        Private _IDArchivoInsertado As System.Nullable(Of System.Int32)

        Private _NombreArchivo As String

        Private _EjecucionAutomatica As System.Nullable(Of Boolean)

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Partial Private Sub OnlogExitosoChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnlogExitosoChanged()
        End Sub
        Partial Private Sub OnMensajeChanging(value As String)
        End Sub
        Partial Private Sub OnMensajeChanged()
        End Sub
        Partial Private Sub OnIDArchivoInsertadoChanging(value As System.Nullable(Of System.Int32))
        End Sub
        Partial Private Sub OnIDArchivoInsertadoChanged()
        End Sub
        Partial Private Sub OnNombreArchivoChanging(value As String)
        End Sub
        Partial Private Sub OnNombreArchivoChanged()
        End Sub
        Partial Private Sub OnEjecucionAutomaticaChanging(value As System.Nullable(Of Boolean))
        End Sub
        Partial Private Sub OnEjecucionAutomaticaChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intID", Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                If ((Me._ID = Value) _
                            = False) Then
                    Me.OnIDChanging(Value)
                    Me.SendPropertyChanging()
                    Me._ID = Value
                    Me.SendPropertyChanged("ID")
                    Me.OnIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logExitoso", DbType:="bit null")>
        Public Property logExitoso() As System.Nullable(Of Boolean)
            Get
                Return Me._logExitoso
            End Get
            Set
                If (Me._logExitoso.Equals(Value) = False) Then
                    Me.OnlogExitosoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logExitoso = Value
                    Me.SendPropertyChanged("logExitoso")
                    Me.OnlogExitosoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strMensaje", Storage:="_Mensaje", DbType:="varchar(500)", CanBeNull:=True)>
        Public Property Mensaje() As String
            Get
                Return Me._Mensaje
            End Get
            Set
                If (Object.Equals(Me._Mensaje, Value) = False) Then
                    Me.OnMensajeChanging(Value)
                    Me.SendPropertyChanging()
                    Me._Mensaje = Value
                    Me.SendPropertyChanged("Mensaje")
                    Me.OnMensajeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="intIDArchivoInsertado", Storage:="_IDArchivoInsertado", DbType:="int", CanBeNull:=True)>
        Public Property IDArchivoInsertado() As System.Nullable(Of System.Int32)
            Get
                Return Me._IDArchivoInsertado
            End Get
            Set
                If (Object.Equals(Me._IDArchivoInsertado, Value) = False) Then
                    Me.OnIDArchivoInsertadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._IDArchivoInsertado = Value
                    Me.SendPropertyChanged("IDArchivoInsertado")
                    Me.OnIDArchivoInsertadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="strNombreArchivo", Storage:="_NombreArchivo", DbType:="varchar(500)", CanBeNull:=True)>
        Public Property NombreArchivo() As String
            Get
                Return Me._NombreArchivo
            End Get
            Set
                If (Object.Equals(Me._NombreArchivo, Value) = False) Then
                    Me.OnNombreArchivoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._NombreArchivo = Value
                    Me.SendPropertyChanged("NombreArchivo")
                    Me.OnNombreArchivoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="logEjecucionAutomatica", Storage:="_EjecucionAutomatica", DbType:="bit")>
        Public Property EjecucionAutomatica() As System.Nullable(Of Boolean)
            Get
                Return Me._EjecucionAutomatica
            End Get
            Set
                If (Me._EjecucionAutomatica.Equals(Value) = False) Then
                    Me.OnEjecucionAutomaticaChanging(Value)
                    Me.SendPropertyChanging()
                    Me._EjecucionAutomatica = Value
                    Me.SendPropertyChanged("EjecucionAutomatica")
                    Me.OnEjecucionAutomaticaChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="CF.tblConceptoRetencion")>
    Partial Public Class ConceptoRetencion
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _intIDConceptoRetencion As Integer

        Private _strCodigo As String

        Private _strDescripcion As String

        Private _dblPorcentajeRetencion As System.Nullable(Of Double)

        Private _logGravado As System.Nullable(Of System.Boolean)

        Private _dtmActualizacion As System.Nullable(Of System.DateTime)

        Private _strUsuario As String

        Private _strInfoSesion As String

        Private _strMsgValidacion As String

        Private _pstrUsuarioConexion As String

        Private _pstrInfoConexion As String

#Region "Definiciones de métodos de extensibilidad"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnintIDConceptoRetencionChanging(value As Integer)
        End Sub
        Partial Private Sub OnintIDConceptoRetencionChanged()
        End Sub
        Partial Private Sub OnstrCodigoChanging(value As String)
        End Sub
        Partial Private Sub OnstrCodigoChanged()
        End Sub
        Partial Private Sub OnstrDescripcionChanging(value As String)
        End Sub
        Partial Private Sub OnstrDescripcionChanged()
        End Sub
        Partial Private Sub OndblPorcentajeRetencionChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OndblPorcentajeRetencionChanged()
        End Sub
        Partial Private Sub OnlogGravadoChanging(value As System.Nullable(Of System.Boolean))
        End Sub
        Partial Private Sub OnlogGravadoChanged()
        End Sub
        Partial Private Sub OndtmActualizacionChanging(value As System.Nullable(Of System.DateTime))
        End Sub
        Partial Private Sub OndtmActualizacionChanged()
        End Sub
        Partial Private Sub OnstrUsuarioChanging(value As String)
        End Sub
        Partial Private Sub OnstrUsuarioChanged()
        End Sub
        Partial Private Sub OnstrInfoSesionChanging(value As String)
        End Sub
        Partial Private Sub OnstrInfoSesionChanged()
        End Sub
        Partial Private Sub OnstrMsgValidacionChanging(value As String)
        End Sub
        Partial Private Sub OnstrMsgValidacionChanged()
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrUsuarioConexionChanged()
        End Sub
        Partial Private Sub OnpstrInfoConexionChanging(value As String)
        End Sub
        Partial Private Sub OnpstrInfoConexionChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intIDConceptoRetencion", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
        Public Property intIDConceptoRetencion() As Integer
            Get
                Return Me._intIDConceptoRetencion
            End Get
            Set
                If ((Me._intIDConceptoRetencion = Value) _
                            = False) Then
                    Me.OnintIDConceptoRetencionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._intIDConceptoRetencion = Value
                    Me.SendPropertyChanged("intIDConceptoRetencion")
                    Me.OnintIDConceptoRetencionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strCodigo", DbType:="VARCHAR(50) NOT NULL")>
        Public Property strCodigo() As String
            Get
                Return Me._strCodigo
            End Get
            Set
                If (String.Equals(Me._strCodigo, Value) = False) Then
                    Me.OnstrCodigoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strCodigo = Value
                    Me.SendPropertyChanged("strCodigo")
                    Me.OnstrCodigoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strDescripcion", DbType:="VARCHAR(100) NULL")>
        Public Property strDescripcion() As String
            Get
                Return Me._strDescripcion
            End Get
            Set
                If (String.Equals(Me._strDescripcion, Value) = False) Then
                    Me.OnstrDescripcionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strDescripcion = Value
                    Me.SendPropertyChanged("strDescripcion")
                    Me.OnstrDescripcionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dblPorcentajeRetencion", DbType:="FLOAT NULL")>
        Public Property dblPorcentajeRetencion() As System.Nullable(Of Double)
            Get
                Return Me._dblPorcentajeRetencion
            End Get
            Set
                If (Me._dblPorcentajeRetencion.Equals(Value) = False) Then
                    Me.OndblPorcentajeRetencionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dblPorcentajeRetencion = Value
                    Me.SendPropertyChanged("dblPorcentajeRetencion")
                    Me.OndblPorcentajeRetencionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_logGravado", DbType:="Bit NOT NULL", CanBeNull:=True)>
        Public Property logGravado() As System.Nullable(Of System.Boolean)
            Get
                Return Me._logGravado
            End Get
            Set
                If (Object.Equals(Me._logGravado, Value) = False) Then
                    Me.OnlogGravadoChanging(Value)
                    Me.SendPropertyChanging()
                    Me._logGravado = Value
                    Me.SendPropertyChanged("logGravado")
                    Me.OnlogGravadoChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtmActualizacion", DbType:="Datetime NULL", CanBeNull:=True)>
        Public Property dtmActualizacion() As System.Nullable(Of System.DateTime)
            Get
                Return Me._dtmActualizacion
            End Get
            Set
                If (Object.Equals(Me._dtmActualizacion, Value) = False) Then
                    Me.OndtmActualizacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._dtmActualizacion = Value
                    Me.SendPropertyChanged("dtmActualizacion")
                    Me.OndtmActualizacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strUsuario", DbType:="VARCHAR(60)")>
        Public Property strUsuario() As String
            Get
                Return Me._strUsuario
            End Get
            Set
                If (String.Equals(Me._strUsuario, Value) = False) Then
                    Me.OnstrUsuarioChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strUsuario = Value
                    Me.SendPropertyChanged("strUsuario")
                    Me.OnstrUsuarioChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strInfoSesion", DbType:="Varchar(max) NULL")>
        Public Property strInfoSesion() As String
            Get
                Return Me._strInfoSesion
            End Get
            Set
                If (String.Equals(Me._strInfoSesion, Value) = False) Then
                    Me.OnstrInfoSesionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strInfoSesion = Value
                    Me.SendPropertyChanged("strInfoSesion")
                    Me.OnstrInfoSesionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strMsgValidacion", DbType:="Varchar(8000)")>
        Public Property strMsgValidacion() As String
            Get
                Return Me._strMsgValidacion
            End Get
            Set
                If (String.Equals(Me._strMsgValidacion, Value) = False) Then
                    Me.OnstrMsgValidacionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._strMsgValidacion = Value
                    Me.SendPropertyChanged("strMsgValidacion")
                    Me.OnstrMsgValidacionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrUsuarioConexion", DbType:="Varchar(100)")>
        Public Property pstrUsuarioConexion() As String
            Get
                Return Me._pstrUsuarioConexion
            End Get
            Set
                If (String.Equals(Me._pstrUsuarioConexion, Value) = False) Then
                    Me.OnpstrUsuarioConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrUsuarioConexion = Value
                    Me.SendPropertyChanged("pstrUsuarioConexion")
                    Me.OnpstrUsuarioConexionChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pstrInfoConexion", DbType:="Varchar(8000)")>
        Public Property pstrInfoConexion() As String
            Get
                Return Me._pstrInfoConexion
            End Get
            Set
                If (String.Equals(Me._pstrInfoConexion, Value) = False) Then
                    Me.OnpstrInfoConexionChanging(Value)
                    Me.SendPropertyChanging()
                    Me._pstrInfoConexion = Value
                    Me.SendPropertyChanged("pstrInfoConexion")
                    Me.OnpstrInfoConexionChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace
